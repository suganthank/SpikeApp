// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("sdkmessageprocessingstep")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class SdkMessageProcessingStep : BaseProxyClass
    {
        public new const string LogicalName = "sdkmessageprocessingstep";
        public const int ObjectTypeCode = 4608;
        public const string PrimaryIdAttribute = "sdkmessageprocessingstepid";
        public const string PrimaryNameAttribute = "name";
        
        static SdkMessageProcessingStep()
        {
            BaseProxyClass.RegisterProxyType(typeof(SdkMessageProcessingStep), "sdkmessageprocessingstep");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public SdkMessageProcessingStep() : base(new Entity("sdkmessageprocessingstep")) { }
        public SdkMessageProcessingStep(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<SdkMessageProcessingStep>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: eventhandlertypecode</para>
///</summary>
[AttributeLogicalNameAttribute("eventhandlertypecode")]
public string EventHandlerTypeCode
{
	get { return this.GetPropertyValue<string>("eventhandlertypecode"); }
	set { this.SetPropertyValue<string>("eventhandlertypecode", value, "EventHandlerTypeCode"); }
}
///<summary>
///<para>Logical Name: eventhandlername</para>
///<para>Max Length: 256 characters</para>
///</summary>
[AttributeLogicalNameAttribute("eventhandlername")]
public string EventHandlerName
{
	get { return this.GetPropertyValue<string>("eventhandlername"); }
}
///<summary>
///<para>Logical Name: impersonatinguseridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("impersonatinguseridname")]
public string ImpersonatingUserIdName
{
	get { return this.GetPropertyValue<string>("impersonatinguseridname"); }
}
///<summary>
///<para>Logical Name: customizationlevel</para>
///<para>Minimum Value: -255</para>
///<para>Maximum Value: 255</para>
///</summary>
[AttributeLogicalNameAttribute("customizationlevel")]
public int? CustomizationLevel
{
	get { return this.GetPropertyValue<int?>("customizationlevel"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: sdkmessageprocessingstepid</para>
///</summary>
[AttributeLogicalNameAttribute("sdkmessageprocessingstepid")]
public Guid SdkMessageProcessingStepId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: sdkmessageidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("sdkmessageidname")]
public string SdkMessageIdName
{
	get { return this.GetPropertyValue<string>("sdkmessageidname"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: organizationid</para>
///</summary>
[AttributeLogicalNameAttribute("organizationid")]
public EntityReference OrganizationId
{
	get { return this.GetPropertyValue<EntityReference>("organizationid"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: sdkmessageprocessingstepidunique</para>
///</summary>
[AttributeLogicalNameAttribute("sdkmessageprocessingstepidunique")]
public Guid SdkMessageProcessingStepIdUnique
{
	get { return this.GetPropertyValue<Guid>("sdkmessageprocessingstepidunique"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: plugintypeidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("plugintypeidname")]
public string PluginTypeIdName
{
	get { return this.GetPropertyValue<string>("plugintypeidname"); }
}
///<summary>
///<para>Logical Name: asyncautodelete</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("asyncautodelete")]
public bool? AsynchronousAutomaticDelete
{
	get { return this.GetPropertyValue<bool?>("asyncautodelete"); }
	set { this.SetPropertyValue<bool?>("asyncautodelete", value, "AsynchronousAutomaticDelete"); }
}
/// <summary>
///Logical Name: componentstate
/// </summary>
[AttributeLogicalNameAttribute("componentstate")]
public eComponentState? ComponentState
{
	get
	{
		if (ComponentState_OptionSetValue != null) { return (eComponentState)ComponentState_OptionSetValue.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: componentstate</para>
///</summary>
[AttributeLogicalNameAttribute("componentstate")]
public OptionSetValue ComponentState_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("componentstate"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ComponentState_Text(IOrganizationService Service)
{
	return this.ComponentState_OptionSetValue.GetOptionSetText(Service, this, "componentstate");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ComponentState_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ComponentState_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: configuration</para>
///<para>Max Length: 1073741823 characters</para>
///</summary>
[AttributeLogicalNameAttribute("configuration")]
public string Configuration
{
	get { return this.GetPropertyValue<string>("configuration"); }
	set { this.SetPropertyValue("configuration", value, 1073741823, "Configuration"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: iscustomizable</para>
///</summary>
[AttributeLogicalNameAttribute("iscustomizable")]
public BooleanManagedProperty Customizable
{
	get { return this.GetPropertyValue<BooleanManagedProperty>("iscustomizable"); }
	set { this.SetPropertyValue<BooleanManagedProperty>("iscustomizable", value, "Customizable"); }
}
/// <summary>
///Logical Name: supporteddeployment
/// </summary>
[AttributeLogicalNameAttribute("supporteddeployment")]
public eSupportedDeployment? Deployment
{
	get
	{
		if (Deployment_OptionSetValue != null) { return (eSupportedDeployment)Deployment_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Deployment_OptionSetValue = new OptionSetValue((int)value); }
		else this.Deployment_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: supporteddeployment</para>
///</summary>
[AttributeLogicalNameAttribute("supporteddeployment")]
public OptionSetValue Deployment_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("supporteddeployment"); }
	set { this.SetPropertyValue<OptionSetValue>("supporteddeployment", value, "Deployment_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Deployment_Text(IOrganizationService Service)
{
	return this.Deployment_OptionSetValue.GetOptionSetText(Service, this, "supporteddeployment");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Deployment_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Deployment_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: description</para>
///<para>Max Length: 256 characters</para>
///</summary>
[AttributeLogicalNameAttribute("description")]
public string Description
{
	get { return this.GetPropertyValue<string>("description"); }
	set { this.SetPropertyValue("description", value, 256, "Description"); }
}
///<summary>
///<para>Logical Name: eventhandler</para>
///</summary>
[AttributeLogicalNameAttribute("eventhandler")]
public EntityReference EventHandler
{
	get { return this.GetPropertyValue<EntityReference>("eventhandler"); }
	set { this.SetPropertyValue<EntityReference>("eventhandler", value, "EventHandler"); }
}
/// <summary>
///Logical Name: mode
/// </summary>
[AttributeLogicalNameAttribute("mode")]
public eMode? ExecutionMode
{
	get
	{
		if (ExecutionMode_OptionSetValue != null) { return (eMode)ExecutionMode_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ExecutionMode_OptionSetValue = new OptionSetValue((int)value); }
		else this.ExecutionMode_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: mode</para>
///</summary>
[AttributeLogicalNameAttribute("mode")]
public OptionSetValue ExecutionMode_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("mode"); }
	set { this.SetPropertyValue<OptionSetValue>("mode", value, "ExecutionMode_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ExecutionMode_Text(IOrganizationService Service)
{
	return this.ExecutionMode_OptionSetValue.GetOptionSetText(Service, this, "mode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ExecutionMode_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ExecutionMode_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: rank</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("rank")]
public int? ExecutionOrder
{
	get { return this.GetPropertyValue<int?>("rank"); }
	set { this.SetPropertyValue("rank", (int?)value, (int)-2147483648, (int)2147483647, "ExecutionOrder"); }
}
/// <summary>
///Logical Name: stage
/// </summary>
[AttributeLogicalNameAttribute("stage")]
public eStage? ExecutionStage
{
	get
	{
		if (ExecutionStage_OptionSetValue != null) { return (eStage)ExecutionStage_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ExecutionStage_OptionSetValue = new OptionSetValue((int)value); }
		else this.ExecutionStage_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: stage</para>
///</summary>
[AttributeLogicalNameAttribute("stage")]
public OptionSetValue ExecutionStage_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("stage"); }
	set { this.SetPropertyValue<OptionSetValue>("stage", value, "ExecutionStage_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ExecutionStage_Text(IOrganizationService Service)
{
	return this.ExecutionStage_OptionSetValue.GetOptionSetText(Service, this, "stage");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ExecutionStage_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ExecutionStage_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: filteringattributes</para>
///<para>Max Length: 100000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("filteringattributes")]
public string FilteringAttributes
{
	get { return this.GetPropertyValue<string>("filteringattributes"); }
	set { this.SetPropertyValue("filteringattributes", value, 100000, "FilteringAttributes"); }
}
///<summary>
///<para>Logical Name: ishidden</para>
///</summary>
[AttributeLogicalNameAttribute("ishidden")]
public BooleanManagedProperty Hidden
{
	get { return this.GetPropertyValue<BooleanManagedProperty>("ishidden"); }
	set { this.SetPropertyValue<BooleanManagedProperty>("ishidden", value, "Hidden"); }
}
///<summary>
///<para>Logical Name: impersonatinguserid</para>
///</summary>
[AttributeLogicalNameAttribute("impersonatinguserid")]
public EntityReference ImpersonatingUser
{
	get { return this.GetPropertyValue<EntityReference>("impersonatinguserid"); }
	set { this.SetPropertyValue<EntityReference>("impersonatinguserid", value, "ImpersonatingUser"); }
}
///<summary>
///<para>Logical Name: canusereadonlyconnection</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("canusereadonlyconnection")]
public bool? Intent
{
	get { return this.GetPropertyValue<bool?>("canusereadonlyconnection"); }
	set { this.SetPropertyValue<bool?>("canusereadonlyconnection", value, "Intent"); }
}
///<summary>
///<para>Logical Name: introducedversion</para>
///<para>Max Length: 48 characters</para>
///</summary>
[AttributeLogicalNameAttribute("introducedversion")]
public string IntroducedVersion
{
	get { return this.GetPropertyValue<string>("introducedversion"); }
	set { this.SetPropertyValue("introducedversion", value, 48, "IntroducedVersion"); }
}
/// <summary>
///Logical Name: invocationsource
/// </summary>
[AttributeLogicalNameAttribute("invocationsource")]
public eInvocationSource? InvocationSource
{
	get
	{
		if (InvocationSource_OptionSetValue != null) { return (eInvocationSource)InvocationSource_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.InvocationSource_OptionSetValue = new OptionSetValue((int)value); }
		else this.InvocationSource_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: invocationsource</para>
///</summary>
[AttributeLogicalNameAttribute("invocationsource")]
public OptionSetValue InvocationSource_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("invocationsource"); }
	set { this.SetPropertyValue<OptionSetValue>("invocationsource", value, "InvocationSource_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string InvocationSource_Text(IOrganizationService Service)
{
	return this.InvocationSource_OptionSetValue.GetOptionSetText(Service, this, "invocationsource");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string InvocationSource_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.InvocationSource_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: name</para>
///<para>Max Length: 256 characters</para>
///</summary>
[AttributeLogicalNameAttribute("name")]
public string Name
{
	get { return this.GetPropertyValue<string>("name"); }
	set { this.SetPropertyValue("name", value, 256, "Name"); }
}
///<summary>
///<para>Logical Name: plugintypeid</para>
///</summary>
[AttributeLogicalNameAttribute("plugintypeid")]
public EntityReference Plug_InType
{
	get { return this.GetPropertyValue<EntityReference>("plugintypeid"); }
	set { this.SetPropertyValue<EntityReference>("plugintypeid", value, "Plug_InType"); }
}
///<summary>
///<para>Logical Name: overwritetime</para>
///</summary>
[AttributeLogicalNameAttribute("overwritetime")]
public DateTime? RecordOverwriteTime
{
	get { return this.GetPropertyValue<DateTime?>("overwritetime"); }
}
///<summary>
///<para>Logical Name: sdkmessageid</para>
///</summary>
[AttributeLogicalNameAttribute("sdkmessageid")]
public EntityReference SDKMessage
{
	get { return this.GetPropertyValue<EntityReference>("sdkmessageid"); }
	set { this.SetPropertyValue<EntityReference>("sdkmessageid", value, "SDKMessage"); }
}
///<summary>
///<para>Logical Name: sdkmessageprocessingstepsecureconfigid</para>
///</summary>
[AttributeLogicalNameAttribute("sdkmessageprocessingstepsecureconfigid")]
public EntityReference SDKMessageProcessingStepSecureConfiguration
{
	get { return this.GetPropertyValue<EntityReference>("sdkmessageprocessingstepsecureconfigid"); }
	set { this.SetPropertyValue<EntityReference>("sdkmessageprocessingstepsecureconfigid", value, "SDKMessageProcessingStepSecureConfiguration"); }
}
///<summary>
///<para>Logical Name: sdkmessagefilterid</para>
///</summary>
[AttributeLogicalNameAttribute("sdkmessagefilterid")]
public EntityReference SdkMessageFilter
{
	get { return this.GetPropertyValue<EntityReference>("sdkmessagefilterid"); }
	set { this.SetPropertyValue<EntityReference>("sdkmessagefilterid", value, "SdkMessageFilter"); }
}
///<summary>
///<para>Logical Name: supportingsolutionid</para>
///</summary>
[AttributeLogicalNameAttribute("supportingsolutionid")]
public Guid Solution
{
	get { return this.GetPropertyValue<Guid>("supportingsolutionid"); }
}
///<summary>
///<para>Logical Name: solutionid</para>
///</summary>
[AttributeLogicalNameAttribute("solutionid")]
public Guid Solution2
{
	get { return this.GetPropertyValue<Guid>("solutionid"); }
}
///<summary>
///<para>Logical Name: ismanaged</para>
///<para>True = Managed</para>
///<para>False = Unmanaged</para>
///</summary>
[AttributeLogicalNameAttribute("ismanaged")]
public bool? State
{
	get { return this.GetPropertyValue<bool?>("ismanaged"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eStatus? Status
{
	get
	{
		if (Status_OptionSetValue != null) { return (eStatus)Status_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Status_OptionSetValue = new OptionSetValue((int)value); }
		else this.Status_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue Status_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
	set { this.SetPropertyValue<OptionSetValue>("statecode", value, "Status_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Status_Text(IOrganizationService Service)
{
	return this.Status_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Status_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Status_OptionSetValue.Value);
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? StatusReason
{
	get
	{
		if (StatusReason_OptionSetValue != null) { return (eStatusReason)StatusReason_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StatusReason_OptionSetValue = new OptionSetValue((int)value); }
		else this.StatusReason_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue StatusReason_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "StatusReason_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string StatusReason_Text(IOrganizationService Service)
{
	return this.StatusReason_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string StatusReason_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.StatusReason_OptionSetValue.Value);
}


        /// <summary>
/// <para><b>SystemJob (Owning Extension)</b></para>
/// <para>Schema Name: SdkMessageProcessingStep_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_OwningExtension (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "owningextensionid", Columns); }
/// <summary>
/// <para><b>SystemJob (Owning Extension)</b></para>
/// <para>Schema Name: SdkMessageProcessingStep_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_OwningExtension (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "owningextensionid", Columns); }
/// <summary>
/// <para><b>SdkMessageProcessingStepImage (SDK Message Processing Step)</b></para>
/// <para>Schema Name: sdkmessageprocessingstepid_sdkmessageprocessingstepimage</para>
/// </summary>
public List<SdkMessageProcessingStepImage> GetSdkMessageProcessingStepImages_SDKMessageProcessingStep (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SdkMessageProcessingStepImage>(Service, this.Id, "sdkmessageprocessingstepimage", "sdkmessageprocessingstepid", Columns); }
/// <summary>
/// <para><b>SdkMessageProcessingStepImage (SDK Message Processing Step)</b></para>
/// <para>Schema Name: sdkmessageprocessingstepid_sdkmessageprocessingstepimage</para>
/// </summary>
public List<SdkMessageProcessingStepImage> GetSdkMessageProcessingStepImages_SDKMessageProcessingStep (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SdkMessageProcessingStepImage>(Service, this.Id, "sdkmessageprocessingstepimage", "sdkmessageprocessingstepid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_sdkmessageprocessingstep</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_sdkmessageprocessingstep</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        

        

        public enum eComponentState
{
	///<summary><para>Published</para>
	///<para>Value = 0</para></summary>
	[Description("Published")]
	Published = 0, 
	///<summary><para>Unpublished</para>
	///<para>Value = 1</para></summary>
	[Description("Unpublished")]
	Unpublished = 1, 
	///<summary><para>Deleted</para>
	///<para>Value = 2</para></summary>
	[Description("Deleted")]
	Deleted = 2, 
	///<summary><para>Deleted Unpublished</para>
	///<para>Value = 3</para></summary>
	[Description("Deleted Unpublished")]
	DeletedUnpublished = 3
}
public enum eSupportedDeployment
{
	///<summary><para>Server Only</para>
	///<para>Value = 0</para></summary>
	[Description("Server Only")]
	ServerOnly = 0, 
	///<summary><para>Microsoft Dynamics 365 Client for Outlook Only</para>
	///<para>Value = 1</para></summary>
	[Description("Microsoft Dynamics 365 Client for Outlook Only")]
	MicrosoftDynamics365ClientForOutlookOnly = 1, 
	///<summary><para>Both</para>
	///<para>Value = 2</para></summary>
	[Description("Both")]
	Both = 2
}
public enum eMode
{
	///<summary><para>Synchronous</para>
	///<para>Value = 0</para></summary>
	[Description("Synchronous")]
	Synchronous = 0, 
	///<summary><para>Asynchronous</para>
	///<para>Value = 1</para></summary>
	[Description("Asynchronous")]
	Asynchronous = 1
}
public enum eStage
{
	///<summary><para>Initial Pre-operation (For internal use only)</para>
	///<para>Value = 5</para></summary>
	[Description("Initial Pre-operation (For internal use only)")]
	InitialPre_operation_ForInternalUseOnly = 5, 
	///<summary><para>Pre-validation</para>
	///<para>Value = 10</para></summary>
	[Description("Pre-validation")]
	Pre_validation = 10, 
	///<summary><para>Internal Pre-operation Before External Plugins (For internal use only)</para>
	///<para>Value = 15</para></summary>
	[Description("Internal Pre-operation Before External Plugins (For internal use only)")]
	InternalPre_operationBeforeExternalPlugins_ForInternalUseOnly = 15, 
	///<summary><para>Pre-operation</para>
	///<para>Value = 20</para></summary>
	[Description("Pre-operation")]
	Pre_operation = 20, 
	///<summary><para>Internal Pre-operation After External Plugins (For internal use only)</para>
	///<para>Value = 25</para></summary>
	[Description("Internal Pre-operation After External Plugins (For internal use only)")]
	InternalPre_operationAfterExternalPlugins_ForInternalUseOnly = 25, 
	///<summary><para>Main Operation (For internal use only)</para>
	///<para>Value = 30</para></summary>
	[Description("Main Operation (For internal use only)")]
	MainOperation_ForInternalUseOnly = 30, 
	///<summary><para>Internal Post-operation Before External Plugins (For internal use only)</para>
	///<para>Value = 35</para></summary>
	[Description("Internal Post-operation Before External Plugins (For internal use only)")]
	InternalPost_operationBeforeExternalPlugins_ForInternalUseOnly = 35, 
	///<summary><para>Post-operation</para>
	///<para>Value = 40</para></summary>
	[Description("Post-operation")]
	Post_operation = 40, 
	///<summary><para>Internal Post-operation After External Plugins (For internal use only)</para>
	///<para>Value = 45</para></summary>
	[Description("Internal Post-operation After External Plugins (For internal use only)")]
	InternalPost_operationAfterExternalPlugins_ForInternalUseOnly = 45, 
	///<summary><para>Post-operation (Deprecated)</para>
	///<para>Value = 50</para></summary>
	[Description("Post-operation (Deprecated)")]
	Post_operation_Deprecated = 50, 
	///<summary><para>Final Post-operation (For internal use only)</para>
	///<para>Value = 55</para></summary>
	[Description("Final Post-operation (For internal use only)")]
	FinalPost_operation_ForInternalUseOnly = 55
}
public enum eInvocationSource
{
	///<summary><para>Internal</para>
	///<para>Value = -1</para></summary>
	[Description("Internal")]
	@Internal = -1, 
	///<summary><para>Parent</para>
	///<para>Value = 0</para></summary>
	[Description("Parent")]
	Parent = 0, 
	///<summary><para>Child</para>
	///<para>Value = 1</para></summary>
	[Description("Child")]
	Child = 1
}
public enum eStatus
{
	///<summary><para>Enabled</para>
	///<para>Value = 0</para></summary>
	[Description("Enabled")]
	Enabled = 0, 
	///<summary><para>Disabled</para>
	///<para>Value = 1</para></summary>
	[Description("Disabled")]
	Disabled = 1
}
public enum eStatusReason
{
	///<summary><para>Enabled</para>
	///<para>Value = 1</para></summary>
	[Description("Enabled")]
	Enabled_Enabled = 1, 
	///<summary><para>Disabled</para>
	///<para>Value = 2</para></summary>
	[Description("Disabled")]
	Disabled_Disabled = 2
}
public void SetState(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>eventhandlertypecode</para>
	/// <para>eventhandlertypecode</para></summary>
	public const string EventHandlerTypeCode = "eventhandlertypecode";
	/// <summary><para>eventhandlername</para>
	/// <para>eventhandlername</para></summary>
	public const string EventHandlerName = "eventhandlername";
	/// <summary><para>impersonatinguseridname</para>
	/// <para>impersonatinguseridname</para></summary>
	public const string ImpersonatingUserIdName = "impersonatinguseridname";
	/// <summary><para>customizationlevel</para>
	/// <para>customizationlevel</para></summary>
	public const string CustomizationLevel = "customizationlevel";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>versionnumber</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
	/// <summary><para>sdkmessageprocessingstepid</para>
	/// <para>sdkmessageprocessingstepid</para></summary>
	public const string SdkMessageProcessingStepId = "sdkmessageprocessingstepid";
	/// <summary><para>sdkmessageidname</para>
	/// <para>sdkmessageidname</para></summary>
	public const string SdkMessageIdName = "sdkmessageidname";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>organizationid</para>
	/// <para>organizationid</para></summary>
	public const string OrganizationId = "organizationid";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>sdkmessageprocessingstepidunique</para>
	/// <para>sdkmessageprocessingstepidunique</para></summary>
	public const string SdkMessageProcessingStepIdUnique = "sdkmessageprocessingstepidunique";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>plugintypeidname</para>
	/// <para>plugintypeidname</para></summary>
	public const string PluginTypeIdName = "plugintypeidname";
	/// <summary><para>Asynchronous Automatic Delete</para>
	/// <para>asyncautodelete</para></summary>
	public const string AsynchronousAutomaticDelete = "asyncautodelete";
	/// <summary><para>Component State</para>
	/// <para>componentstate</para></summary>
	public const string ComponentState = "componentstate";
	/// <summary><para>Configuration</para>
	/// <para>configuration</para></summary>
	public const string Configuration = "configuration";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Customizable</para>
	/// <para>iscustomizable</para></summary>
	public const string Customizable = "iscustomizable";
	/// <summary><para>Deployment</para>
	/// <para>supporteddeployment</para></summary>
	public const string Deployment = "supporteddeployment";
	/// <summary><para>Description</para>
	/// <para>description</para></summary>
	public const string Description = "description";
	/// <summary><para>Event Handler</para>
	/// <para>eventhandler</para></summary>
	public const string EventHandler = "eventhandler";
	/// <summary><para>Execution Mode</para>
	/// <para>mode</para></summary>
	public const string ExecutionMode = "mode";
	/// <summary><para>Execution Order</para>
	/// <para>rank</para></summary>
	public const string ExecutionOrder = "rank";
	/// <summary><para>Execution Stage</para>
	/// <para>stage</para></summary>
	public const string ExecutionStage = "stage";
	/// <summary><para>Filtering Attributes</para>
	/// <para>filteringattributes</para></summary>
	public const string FilteringAttributes = "filteringattributes";
	/// <summary><para>Hidden</para>
	/// <para>ishidden</para></summary>
	public const string Hidden = "ishidden";
	/// <summary><para>Impersonating User</para>
	/// <para>impersonatinguserid</para></summary>
	public const string ImpersonatingUser = "impersonatinguserid";
	/// <summary><para>Intent</para>
	/// <para>canusereadonlyconnection</para></summary>
	public const string Intent = "canusereadonlyconnection";
	/// <summary><para>Introduced Version</para>
	/// <para>introducedversion</para></summary>
	public const string IntroducedVersion = "introducedversion";
	/// <summary><para>Invocation Source</para>
	/// <para>invocationsource</para></summary>
	public const string InvocationSource = "invocationsource";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>Name</para>
	/// <para>name</para></summary>
	public const string Name = "name";
	/// <summary><para>Plug-In Type</para>
	/// <para>plugintypeid</para></summary>
	public const string Plug_InType = "plugintypeid";
	/// <summary><para>Record Overwrite Time</para>
	/// <para>overwritetime</para></summary>
	public const string RecordOverwriteTime = "overwritetime";
	/// <summary><para>SDK Message</para>
	/// <para>sdkmessageid</para></summary>
	public const string SDKMessage = "sdkmessageid";
	/// <summary><para>SDK Message Processing Step Secure Configuration</para>
	/// <para>sdkmessageprocessingstepsecureconfigid</para></summary>
	public const string SDKMessageProcessingStepSecureConfiguration = "sdkmessageprocessingstepsecureconfigid";
	/// <summary><para>SdkMessage Filter</para>
	/// <para>sdkmessagefilterid</para></summary>
	public const string SdkMessageFilter = "sdkmessagefilterid";
	/// <summary><para>Solution</para>
	/// <para>supportingsolutionid</para></summary>
	public const string Solution = "supportingsolutionid";
	/// <summary><para>Solution</para>
	/// <para>solutionid</para></summary>
	public const string Solution2 = "solutionid";
	/// <summary><para>State</para>
	/// <para>ismanaged</para></summary>
	public const string State = "ismanaged";
	/// <summary><para>Status</para>
	/// <para>statecode</para></summary>
	public const string Status = "statecode";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string StatusReason = "statuscode";
}

    }
}

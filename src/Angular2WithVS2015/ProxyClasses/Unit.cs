// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("uom")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class Unit : BaseProxyClass
    {
        public new const string LogicalName = "uom";
        public const int ObjectTypeCode = 1055;
        public const string PrimaryIdAttribute = "uomid";
        public const string PrimaryNameAttribute = "name";
        
        static Unit()
        {
            BaseProxyClass.RegisterProxyType(typeof(Unit), "uom");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public Unit() : base(new Entity("uom")) { }
        public Unit(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<Unit>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: baseuomname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("baseuomname")]
public string BaseUoMName
{
	get { return this.GetPropertyValue<string>("baseuomname"); }
}
///<summary>
///<para>Logical Name: modifiedbyexternalpartyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyexternalpartyname")]
public string ModifiedByExternalPartyName
{
	get { return this.GetPropertyValue<string>("modifiedbyexternalpartyname"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: createdbyexternalpartyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyexternalpartyname")]
public string CreatedByExternalPartyName
{
	get { return this.GetPropertyValue<string>("createdbyexternalpartyname"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: createdbyexternalpartyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyexternalpartyyominame")]
public string CreatedByExternalPartyYomiName
{
	get { return this.GetPropertyValue<string>("createdbyexternalpartyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedbyexternalpartyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyexternalpartyyominame")]
public string ModifiedByExternalPartyYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyexternalpartyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: baseuom</para>
///</summary>
[AttributeLogicalNameAttribute("baseuom")]
public EntityReference BaseUnit
{
	get { return this.GetPropertyValue<EntityReference>("baseuom"); }
	set { this.SetPropertyValue<EntityReference>("baseuom", value, "BaseUnit"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdbyexternalparty</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyexternalparty")]
public EntityReference CreatedBy_ExternalParty
{
	get { return this.GetPropertyValue<EntityReference>("createdbyexternalparty"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? ImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "ImportSequenceNumber"); }
}
///<summary>
///<para>Logical Name: isschedulebaseuom</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isschedulebaseuom")]
public bool? IsScheduleBaseUnit
{
	get { return this.GetPropertyValue<bool?>("isschedulebaseuom"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedbyexternalparty</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyexternalparty")]
public EntityReference ModifiedBy_ExternalParty
{
	get { return this.GetPropertyValue<EntityReference>("modifiedbyexternalparty"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: name</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("name")]
public string Name
{
	get { return this.GetPropertyValue<string>("name"); }
	set { this.SetPropertyValue("name", value, 100, "Name"); }
}
///<summary>
///<para>Logical Name: organizationid</para>
///</summary>
[AttributeLogicalNameAttribute("organizationid")]
public Guid Organization
{
	get { return this.GetPropertyValue<Guid>("organizationid"); }
}
///<summary>
///<para>Logical Name: quantity</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 10000000000</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("quantity")]
public decimal? Quantity
{
	get { return this.GetPropertyValue<decimal?>("quantity"); }
	set { this.SetPropertyValue("quantity", (decimal?)value, (decimal)0, (decimal)10000000000, "Quantity"); }
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? RecordCreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "RecordCreatedOn"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: uomid</para>
///</summary>
[AttributeLogicalNameAttribute("uomid")]
public Guid UnitId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: uomscheduleid</para>
///</summary>
[AttributeLogicalNameAttribute("uomscheduleid")]
public EntityReference UnitSchedule
{
	get { return this.GetPropertyValue<EntityReference>("uomscheduleid"); }
	set { this.SetPropertyValue<EntityReference>("uomscheduleid", value, "UnitSchedule"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}


        /// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: UoM_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: UoM_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: UoM_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: UoM_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ContractLine (Unit)</b></para>
/// <para>Schema Name: unit_of_measurement_contract_line_items</para>
/// </summary>
public List<ContractLine> GetContractLines_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ContractLine>(Service, this.Id, "contractdetail", "uomid", Columns); }
/// <summary>
/// <para><b>ContractLine (Unit)</b></para>
/// <para>Schema Name: unit_of_measurement_contract_line_items</para>
/// </summary>
public List<ContractLine> GetContractLines_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ContractLine>(Service, this.Id, "contractdetail", "uomid", Columns); }
/// <summary>
/// <para><b>InvoiceLine (Unit)</b></para>
/// <para>Schema Name: unit_of_measurement_invoice_details</para>
/// </summary>
public List<InvoiceLine> GetInvoiceLines_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceLine>(Service, this.Id, "invoicedetail", "uomid", Columns); }
/// <summary>
/// <para><b>InvoiceLine (Unit)</b></para>
/// <para>Schema Name: unit_of_measurement_invoice_details</para>
/// </summary>
public List<InvoiceLine> GetInvoiceLines_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceLine>(Service, this.Id, "invoicedetail", "uomid", Columns); }
/// <summary>
/// <para><b>Actual (Unit of measure)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_actual_Unit</para>
/// </summary>
public List<Actual> GetActuals_UnitOfMeasure (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Actual>(Service, this.Id, "msdyn_actual", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Actual (Unit of measure)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_actual_Unit</para>
/// </summary>
public List<Actual> GetActuals_UnitOfMeasure (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Actual>(Service, this.Id, "msdyn_actual", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>AgreementBookingProduct (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_agreementbookingproduct_Unit</para>
/// </summary>
public List<AgreementBookingProduct> GetAgreementBookingProducts_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingProduct>(Service, this.Id, "msdyn_agreementbookingproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>AgreementBookingProduct (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_agreementbookingproduct_Unit</para>
/// </summary>
public List<AgreementBookingProduct> GetAgreementBookingProducts_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingProduct>(Service, this.Id, "msdyn_agreementbookingproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>AgreementBookingService (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_agreementbookingservice_Unit</para>
/// </summary>
public List<AgreementBookingService> GetAgreementBookingServices_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingService>(Service, this.Id, "msdyn_agreementbookingservice", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>AgreementBookingService (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_agreementbookingservice_Unit</para>
/// </summary>
public List<AgreementBookingService> GetAgreementBookingServices_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingService>(Service, this.Id, "msdyn_agreementbookingservice", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>AgreementInvoiceProduct (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_agreementinvoiceproduct_Unit</para>
/// </summary>
public List<AgreementInvoiceProduct> GetAgreementInvoiceProducts_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementInvoiceProduct>(Service, this.Id, "msdyn_agreementinvoiceproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>AgreementInvoiceProduct (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_agreementinvoiceproduct_Unit</para>
/// </summary>
public List<AgreementInvoiceProduct> GetAgreementInvoiceProducts_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementInvoiceProduct>(Service, this.Id, "msdyn_agreementinvoiceproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>EstimateLine (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_estimateline_Unit</para>
/// </summary>
public List<EstimateLine> GetEstimateLines_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EstimateLine>(Service, this.Id, "msdyn_estimateline", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>EstimateLine (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_estimateline_Unit</para>
/// </summary>
public List<EstimateLine> GetEstimateLines_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EstimateLine>(Service, this.Id, "msdyn_estimateline", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>IncidentTypeProduct (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_incidenttypeproduct_Unit</para>
/// </summary>
public List<IncidentTypeProduct> GetIncidentTypeProducts_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IncidentTypeProduct>(Service, this.Id, "msdyn_incidenttypeproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>IncidentTypeProduct (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_incidenttypeproduct_Unit</para>
/// </summary>
public List<IncidentTypeProduct> GetIncidentTypeProducts_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IncidentTypeProduct>(Service, this.Id, "msdyn_incidenttypeproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>IncidentTypeService (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_incidenttypeservice_Unit</para>
/// </summary>
public List<IncidentTypeService> GetIncidentTypeServices_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IncidentTypeService>(Service, this.Id, "msdyn_incidenttypeservice", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>IncidentTypeService (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_incidenttypeservice_Unit</para>
/// </summary>
public List<IncidentTypeService> GetIncidentTypeServices_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IncidentTypeService>(Service, this.Id, "msdyn_incidenttypeservice", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>InventoryAdjustmentProduct (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_inventoryadjustmentproduct_Unit</para>
/// </summary>
public List<InventoryAdjustmentProduct> GetInventoryAdjustmentProducts_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InventoryAdjustmentProduct>(Service, this.Id, "msdyn_inventoryadjustmentproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>InventoryAdjustmentProduct (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_inventoryadjustmentproduct_Unit</para>
/// </summary>
public List<InventoryAdjustmentProduct> GetInventoryAdjustmentProducts_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InventoryAdjustmentProduct>(Service, this.Id, "msdyn_inventoryadjustmentproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>InventoryJournal (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_inventoryjournal_Unit</para>
/// </summary>
public List<InventoryJournal> GetInventoryJournals_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InventoryJournal>(Service, this.Id, "msdyn_inventoryjournal", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>InventoryJournal (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_inventoryjournal_Unit</para>
/// </summary>
public List<InventoryJournal> GetInventoryJournals_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InventoryJournal>(Service, this.Id, "msdyn_inventoryjournal", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>InvoiceLineDetail (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_invoicelinetransaction_Unit</para>
/// </summary>
public List<InvoiceLineDetail> GetInvoiceLineDetails_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceLineDetail>(Service, this.Id, "msdyn_invoicelinetransaction", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>InvoiceLineDetail (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_invoicelinetransaction_Unit</para>
/// </summary>
public List<InvoiceLineDetail> GetInvoiceLineDetails_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceLineDetail>(Service, this.Id, "msdyn_invoicelinetransaction", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>JournalLine (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_journalline_Unit</para>
/// </summary>
public List<JournalLine> GetJournalLines_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<JournalLine>(Service, this.Id, "msdyn_journalline", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>JournalLine (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_journalline_Unit</para>
/// </summary>
public List<JournalLine> GetJournalLines_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<JournalLine>(Service, this.Id, "msdyn_journalline", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>OpportunityLineDetail (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_opportunitylinetransaction_Unit</para>
/// </summary>
public List<OpportunityLineDetail> GetOpportunityLineDetails_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLineDetail>(Service, this.Id, "msdyn_opportunitylinetransaction", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>OpportunityLineDetail (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_opportunitylinetransaction_Unit</para>
/// </summary>
public List<OpportunityLineDetail> GetOpportunityLineDetails_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLineDetail>(Service, this.Id, "msdyn_opportunitylinetransaction", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>OrderInvoicingProduct (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_orderinvoicingproduct_Unit</para>
/// </summary>
public List<OrderInvoicingProduct> GetOrderInvoicingProducts_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderInvoicingProduct>(Service, this.Id, "msdyn_orderinvoicingproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>OrderInvoicingProduct (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_orderinvoicingproduct_Unit</para>
/// </summary>
public List<OrderInvoicingProduct> GetOrderInvoicingProducts_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderInvoicingProduct>(Service, this.Id, "msdyn_orderinvoicingproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>ProjectContractLineDetail (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_orderlinetransaction_Unit</para>
/// </summary>
public List<ProjectContractLineDetail> GetProjectContractLineDetails_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineDetail>(Service, this.Id, "msdyn_orderlinetransaction", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>ProjectContractLineDetail (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_orderlinetransaction_Unit</para>
/// </summary>
public List<ProjectContractLineDetail> GetProjectContractLineDetails_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineDetail>(Service, this.Id, "msdyn_orderlinetransaction", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>ProductInventory (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_productinventory_Unit</para>
/// </summary>
public List<ProductInventory> GetProductInventory_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProductInventory>(Service, this.Id, "msdyn_productinventory", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>ProductInventory (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_productinventory_Unit</para>
/// </summary>
public List<ProductInventory> GetProductInventory_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProductInventory>(Service, this.Id, "msdyn_productinventory", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>PurchaseOrderProduct (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_purchaseorderproduct_Unit</para>
/// </summary>
public List<PurchaseOrderProduct> GetPurchaseOrderProducts_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderProduct>(Service, this.Id, "msdyn_purchaseorderproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>PurchaseOrderProduct (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_purchaseorderproduct_Unit</para>
/// </summary>
public List<PurchaseOrderProduct> GetPurchaseOrderProducts_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderProduct>(Service, this.Id, "msdyn_purchaseorderproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>QuoteBookingProduct (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_quotebookingproduct_Unit</para>
/// </summary>
public List<QuoteBookingProduct> GetQuoteBookingProducts_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingProduct>(Service, this.Id, "msdyn_quotebookingproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>QuoteBookingProduct (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_quotebookingproduct_Unit</para>
/// </summary>
public List<QuoteBookingProduct> GetQuoteBookingProducts_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingProduct>(Service, this.Id, "msdyn_quotebookingproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>QuoteBookingService (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_quotebookingservice_Unit</para>
/// </summary>
public List<QuoteBookingService> GetQuoteBookingServices_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingService>(Service, this.Id, "msdyn_quotebookingservice", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>QuoteBookingService (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_quotebookingservice_Unit</para>
/// </summary>
public List<QuoteBookingService> GetQuoteBookingServices_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingService>(Service, this.Id, "msdyn_quotebookingservice", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>QuoteInvoicingProduct (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_quoteinvoicingproduct_Unit</para>
/// </summary>
public List<QuoteInvoicingProduct> GetQuoteInvoicingProducts_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteInvoicingProduct>(Service, this.Id, "msdyn_quoteinvoicingproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>QuoteInvoicingProduct (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_quoteinvoicingproduct_Unit</para>
/// </summary>
public List<QuoteInvoicingProduct> GetQuoteInvoicingProducts_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteInvoicingProduct>(Service, this.Id, "msdyn_quoteinvoicingproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>QuoteLineDetail (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_quotelinetransaction_Unit</para>
/// </summary>
public List<QuoteLineDetail> GetQuoteLineDetail_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineDetail>(Service, this.Id, "msdyn_quotelinetransaction", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>QuoteLineDetail (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_quotelinetransaction_Unit</para>
/// </summary>
public List<QuoteLineDetail> GetQuoteLineDetail_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineDetail>(Service, this.Id, "msdyn_quotelinetransaction", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>RolePrice (Primary Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_resourcecategorypricelevel_PrimaryUnit</para>
/// </summary>
public List<RolePrice> GetRolePrices_PrimaryUnit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RolePrice>(Service, this.Id, "msdyn_resourcecategorypricelevel", "msdyn_primaryunit", Columns); }
/// <summary>
/// <para><b>RolePrice (Primary Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_resourcecategorypricelevel_PrimaryUnit</para>
/// </summary>
public List<RolePrice> GetRolePrices_PrimaryUnit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RolePrice>(Service, this.Id, "msdyn_resourcecategorypricelevel", "msdyn_primaryunit", Columns); }
/// <summary>
/// <para><b>RolePrice (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_resourcecategorypricelevel_Unit</para>
/// </summary>
public List<RolePrice> GetRolePrices_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RolePrice>(Service, this.Id, "msdyn_resourcecategorypricelevel", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>RolePrice (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_resourcecategorypricelevel_Unit</para>
/// </summary>
public List<RolePrice> GetRolePrices_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RolePrice>(Service, this.Id, "msdyn_resourcecategorypricelevel", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>RMAProduct (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_rmaproduct_Unit</para>
/// </summary>
public List<RMAProduct> GetRMAProducts_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMAProduct>(Service, this.Id, "msdyn_rmaproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>RMAProduct (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_rmaproduct_Unit</para>
/// </summary>
public List<RMAProduct> GetRMAProducts_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMAProduct>(Service, this.Id, "msdyn_rmaproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>RTVProduct (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_rtvproduct_Unit</para>
/// </summary>
public List<RTVProduct> GetRTVProducts_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTVProduct>(Service, this.Id, "msdyn_rtvproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>RTVProduct (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_rtvproduct_Unit</para>
/// </summary>
public List<RTVProduct> GetRTVProducts_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTVProduct>(Service, this.Id, "msdyn_rtvproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>TransactionCategory (Default Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_transactioncategory_DefaultUnit</para>
/// </summary>
public List<TransactionCategory> GetTransactionCategories_DefaultUnit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TransactionCategory>(Service, this.Id, "msdyn_transactioncategory", "msdyn_defaultunit", Columns); }
/// <summary>
/// <para><b>TransactionCategory (Default Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_transactioncategory_DefaultUnit</para>
/// </summary>
public List<TransactionCategory> GetTransactionCategories_DefaultUnit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TransactionCategory>(Service, this.Id, "msdyn_transactioncategory", "msdyn_defaultunit", Columns); }
/// <summary>
/// <para><b>TransactionCategoryPrice (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_transactioncategorypricelevel_Unit</para>
/// </summary>
public List<TransactionCategoryPrice> GetTransactionCategoryPrices_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TransactionCategoryPrice>(Service, this.Id, "msdyn_transactioncategorypricelevel", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>TransactionCategoryPrice (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_transactioncategorypricelevel_Unit</para>
/// </summary>
public List<TransactionCategoryPrice> GetTransactionCategoryPrices_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TransactionCategoryPrice>(Service, this.Id, "msdyn_transactioncategorypricelevel", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>TransactionType (Default Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_transactiontype_DefaultUnit</para>
/// </summary>
public List<TransactionType> GetTransactionTypes_DefaultUnit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TransactionType>(Service, this.Id, "msdyn_transactiontype", "msdyn_defaultunit", Columns); }
/// <summary>
/// <para><b>TransactionType (Default Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_transactiontype_DefaultUnit</para>
/// </summary>
public List<TransactionType> GetTransactionTypes_DefaultUnit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TransactionType>(Service, this.Id, "msdyn_transactiontype", "msdyn_defaultunit", Columns); }
/// <summary>
/// <para><b>WorkOrderProduct (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_workorderproduct_Unit</para>
/// </summary>
public List<WorkOrderProduct> GetWorkOrderProducts_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderProduct>(Service, this.Id, "msdyn_workorderproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>WorkOrderProduct (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_workorderproduct_Unit</para>
/// </summary>
public List<WorkOrderProduct> GetWorkOrderProducts_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderProduct>(Service, this.Id, "msdyn_workorderproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>WorkOrderService (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_workorderservice_Unit</para>
/// </summary>
public List<WorkOrderService> GetWorkOrderServices_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderService>(Service, this.Id, "msdyn_workorderservice", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>WorkOrderService (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_workorderservice_Unit</para>
/// </summary>
public List<WorkOrderService> GetWorkOrderServices_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderService>(Service, this.Id, "msdyn_workorderservice", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>OpportunityLine (Unit)</b></para>
/// <para>Schema Name: unit_of_measurement_opportunity_products</para>
/// </summary>
public List<OpportunityLine> GetOpportunityLines_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLine>(Service, this.Id, "opportunityproduct", "uomid", Columns); }
/// <summary>
/// <para><b>OpportunityLine (Unit)</b></para>
/// <para>Schema Name: unit_of_measurement_opportunity_products</para>
/// </summary>
public List<OpportunityLine> GetOpportunityLines_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLine>(Service, this.Id, "opportunityproduct", "uomid", Columns); }
/// <summary>
/// <para><b>PriceList (Time Unit)</b></para>
/// <para>Schema Name: msdyn_uom_pricelevel_TimeUnit</para>
/// </summary>
public List<PriceList> GetPriceLists_TimeUnit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PriceList>(Service, this.Id, "pricelevel", "msdyn_timeunit", Columns); }
/// <summary>
/// <para><b>PriceList (Time Unit)</b></para>
/// <para>Schema Name: msdyn_uom_pricelevel_TimeUnit</para>
/// </summary>
public List<PriceList> GetPriceLists_TimeUnit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PriceList>(Service, this.Id, "pricelevel", "msdyn_timeunit", Columns); }
/// <summary>
/// <para><b>Product (Default Unit)</b></para>
/// <para>Schema Name: unit_of_measurement_products</para>
/// </summary>
public List<Product> GetProducts_DefaultUnit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Product>(Service, this.Id, "product", "defaultuomid", Columns); }
/// <summary>
/// <para><b>Product (Default Unit)</b></para>
/// <para>Schema Name: unit_of_measurement_products</para>
/// </summary>
public List<Product> GetProducts_DefaultUnit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Product>(Service, this.Id, "product", "defaultuomid", Columns); }
/// <summary>
/// <para><b>ProductAssociation (Unit)</b></para>
/// <para>Schema Name: unit_of_measurement_productassociation</para>
/// </summary>
public List<ProductAssociation> GetProductAssociations_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProductAssociation>(Service, this.Id, "productassociation", "uomid", Columns); }
/// <summary>
/// <para><b>ProductAssociation (Unit)</b></para>
/// <para>Schema Name: unit_of_measurement_productassociation</para>
/// </summary>
public List<ProductAssociation> GetProductAssociations_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProductAssociation>(Service, this.Id, "productassociation", "uomid", Columns); }
/// <summary>
/// <para><b>PriceListItem (Unit)</b></para>
/// <para>Schema Name: unit_of_measurement_product_price_levels</para>
/// </summary>
public List<PriceListItem> GetPriceListItems_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PriceListItem>(Service, this.Id, "productpricelevel", "uomid", Columns); }
/// <summary>
/// <para><b>PriceListItem (Unit)</b></para>
/// <para>Schema Name: unit_of_measurement_product_price_levels</para>
/// </summary>
public List<PriceListItem> GetPriceListItems_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PriceListItem>(Service, this.Id, "productpricelevel", "uomid", Columns); }
/// <summary>
/// <para><b>QuoteLine (Unit)</b></para>
/// <para>Schema Name: unit_of_measurement_quote_details</para>
/// </summary>
public List<QuoteLine> GetQuoteLines_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLine>(Service, this.Id, "quotedetail", "uomid", Columns); }
/// <summary>
/// <para><b>QuoteLine (Unit)</b></para>
/// <para>Schema Name: unit_of_measurement_quote_details</para>
/// </summary>
public List<QuoteLine> GetQuoteLines_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLine>(Service, this.Id, "quotedetail", "uomid", Columns); }
/// <summary>
/// <para><b>OrderLine (Unit)</b></para>
/// <para>Schema Name: unit_of_measurement_order_details</para>
/// </summary>
public List<OrderLine> GetOrderLines_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderLine>(Service, this.Id, "salesorderdetail", "uomid", Columns); }
/// <summary>
/// <para><b>OrderLine (Unit)</b></para>
/// <para>Schema Name: unit_of_measurement_order_details</para>
/// </summary>
public List<OrderLine> GetOrderLines_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderLine>(Service, this.Id, "salesorderdetail", "uomid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: UoM_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: UoM_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Unit (Base Unit)</b></para>
/// <para>Schema Name: unit_of_measurement_base_unit</para>
/// </summary>
public List<Unit> GetUnits_BaseUnit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Unit>(Service, this.Id, "uom", "baseuom", Columns); }
/// <summary>
/// <para><b>Unit (Base Unit)</b></para>
/// <para>Schema Name: unit_of_measurement_base_unit</para>
/// </summary>
public List<Unit> GetUnits_BaseUnit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Unit>(Service, this.Id, "uom", "baseuom", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_uom</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_uom</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        

        

        

        public static class Properties
{
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>baseuomname</para>
	/// <para>baseuomname</para></summary>
	public const string BaseUoMName = "baseuomname";
	/// <summary><para>modifiedbyexternalpartyname</para>
	/// <para>modifiedbyexternalpartyname</para></summary>
	public const string ModifiedByExternalPartyName = "modifiedbyexternalpartyname";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>createdbyexternalpartyname</para>
	/// <para>createdbyexternalpartyname</para></summary>
	public const string CreatedByExternalPartyName = "createdbyexternalpartyname";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>createdbyexternalpartyyominame</para>
	/// <para>createdbyexternalpartyyominame</para></summary>
	public const string CreatedByExternalPartyYomiName = "createdbyexternalpartyyominame";
	/// <summary><para>modifiedbyexternalpartyyominame</para>
	/// <para>modifiedbyexternalpartyyominame</para></summary>
	public const string ModifiedByExternalPartyYomiName = "modifiedbyexternalpartyyominame";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>Base Unit</para>
	/// <para>baseuom</para></summary>
	public const string BaseUnit = "baseuom";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created By (External Party)</para>
	/// <para>createdbyexternalparty</para></summary>
	public const string CreatedBy_ExternalParty = "createdbyexternalparty";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string ImportSequenceNumber = "importsequencenumber";
	/// <summary><para>Is Schedule Base Unit</para>
	/// <para>isschedulebaseuom</para></summary>
	public const string IsScheduleBaseUnit = "isschedulebaseuom";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified By (External Party)</para>
	/// <para>modifiedbyexternalparty</para></summary>
	public const string ModifiedBy_ExternalParty = "modifiedbyexternalparty";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>Name</para>
	/// <para>name</para></summary>
	public const string Name = "name";
	/// <summary><para>Organization </para>
	/// <para>organizationid</para></summary>
	public const string Organization = "organizationid";
	/// <summary><para>Quantity</para>
	/// <para>quantity</para></summary>
	public const string Quantity = "quantity";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string RecordCreatedOn = "overriddencreatedon";
	/// <summary><para>Unit</para>
	/// <para>uomid</para></summary>
	public const string UnitId = "uomid";
	/// <summary><para>Unit Schedule</para>
	/// <para>uomscheduleid</para></summary>
	public const string UnitSchedule = "uomscheduleid";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
}

    }
}

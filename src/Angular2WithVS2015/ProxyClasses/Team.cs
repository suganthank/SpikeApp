// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("team")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class Team : BaseProxyClass
    {
        public new const string LogicalName = "team";
        public const int ObjectTypeCode = 9;
        public const string PrimaryIdAttribute = "teamid";
        public const string PrimaryNameAttribute = "name";
        
        static Team()
        {
            BaseProxyClass.RegisterProxyType(typeof(Team), "team");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public Team() : base(new Entity("team")) { }
        public Team(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<Team>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: transactioncurrencyidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyidname")]
public string TransactionCurrencyIdName
{
	get { return this.GetPropertyValue<string>("transactioncurrencyidname"); }
}
///<summary>
///<para>Logical Name: queueidname</para>
///<para>Max Length: 400 characters</para>
///</summary>
[AttributeLogicalNameAttribute("queueidname")]
public string QueueIdName
{
	get { return this.GetPropertyValue<string>("queueidname"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: businessunitidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("businessunitidname")]
public string BusinessUnitIdName
{
	get { return this.GetPropertyValue<string>("businessunitidname"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: administratoridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("administratoridname")]
public string AdministratorIdName
{
	get { return this.GetPropertyValue<string>("administratoridname"); }
}
///<summary>
///<para>Logical Name: administratoridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("administratoridyominame")]
public string AdministratorIdYomiName
{
	get { return this.GetPropertyValue<string>("administratoridyominame"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: organizationidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("organizationidname")]
public string OrganizationIdName
{
	get { return this.GetPropertyValue<string>("organizationidname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: administratorid</para>
///</summary>
[AttributeLogicalNameAttribute("administratorid")]
public EntityReference Administrator
{
	get { return this.GetPropertyValue<EntityReference>("administratorid"); }
	set { this.SetPropertyValue<EntityReference>("administratorid", value, "Administrator"); }
}
///<summary>
///<para>Logical Name: businessunitid</para>
///</summary>
[AttributeLogicalNameAttribute("businessunitid")]
public EntityReference BusinessUnit
{
	get { return this.GetPropertyValue<EntityReference>("businessunitid"); }
	set { this.SetPropertyValue<EntityReference>("businessunitid", value, "BusinessUnit"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyid</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyid")]
public EntityReference Currency
{
	get { return this.GetPropertyValue<EntityReference>("transactioncurrencyid"); }
	set { this.SetPropertyValue<EntityReference>("transactioncurrencyid", value, "Currency"); }
}
///<summary>
///<para>Logical Name: queueid</para>
///</summary>
[AttributeLogicalNameAttribute("queueid")]
public EntityReference DefaultQueue
{
	get { return this.GetPropertyValue<EntityReference>("queueid"); }
	set { this.SetPropertyValue<EntityReference>("queueid", value, "DefaultQueue"); }
}
///<summary>
///<para>Logical Name: description</para>
///<para>Max Length: 2000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("description")]
public string Description
{
	get { return this.GetPropertyValue<string>("description"); }
	set { this.SetPropertyValue("description", value, 2000, "Description"); }
}
///<summary>
///<para>Logical Name: emailaddress</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("emailaddress")]
public string Email
{
	get { return this.GetPropertyValue<string>("emailaddress"); }
	set { this.SetPropertyValue("emailaddress", value, 100, "Email"); }
}
///<summary>
///<para>Logical Name: exchangerate</para>
///<para>Minimum Value: 0.0000000001</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 10</para>
///</summary>
[AttributeLogicalNameAttribute("exchangerate")]
public decimal? ExchangeRate
{
	get { return this.GetPropertyValue<decimal?>("exchangerate"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? ImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "ImportSequenceNumber"); }
}
///<summary>
///<para>Logical Name: isdefault</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isdefault")]
public bool? IsDefault
{
	get { return this.GetPropertyValue<bool?>("isdefault"); }
}
///<summary>
///<para>Logical Name: systemmanaged</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("systemmanaged")]
public bool? IsSystemManaged
{
	get { return this.GetPropertyValue<bool?>("systemmanaged"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: organizationid</para>
///</summary>
[AttributeLogicalNameAttribute("organizationid")]
public Guid Organization
{
	get { return this.GetPropertyValue<Guid>("organizationid"); }
}
///<summary>
///<para>Logical Name: processid</para>
///</summary>
[AttributeLogicalNameAttribute("processid")]
public Guid Process
{
	get { return this.GetPropertyValue<Guid>("processid"); }
	set { this.SetPropertyValue<Guid>("processid", value, "Process"); }
}
///<summary>
///<para>Logical Name: stageid</para>
///</summary>
[AttributeLogicalNameAttribute("stageid")]
public Guid ProcessStage
{
	get { return this.GetPropertyValue<Guid>("stageid"); }
	set { this.SetPropertyValue<Guid>("stageid", value, "ProcessStage"); }
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? RecordCreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "RecordCreatedOn"); }
}
///<summary>
///<para>Logical Name: regardingobjectid</para>
///</summary>
[AttributeLogicalNameAttribute("regardingobjectid")]
public EntityReference RegardingObjectId
{
	get { return this.GetPropertyValue<EntityReference>("regardingobjectid"); }
	set { this.SetPropertyValue<EntityReference>("regardingobjectid", value, "RegardingObjectId"); }
}
///<summary>
///<para>Logical Name: regardingobjecttypecode</para>
///</summary>
[AttributeLogicalNameAttribute("regardingobjecttypecode")]
public string RegardingObjectType
{
	get { return this.GetPropertyValue<string>("regardingobjecttypecode"); }
	set { this.SetPropertyValue<string>("regardingobjecttypecode", value, "RegardingObjectType"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: teamid</para>
///</summary>
[AttributeLogicalNameAttribute("teamid")]
public Guid TeamId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: name</para>
///<para>Max Length: 160 characters</para>
///</summary>
[AttributeLogicalNameAttribute("name")]
public string TeamName
{
	get { return this.GetPropertyValue<string>("name"); }
	set { this.SetPropertyValue("name", value, 160, "TeamName"); }
}
///<summary>
///<para>Logical Name: teamtemplateid</para>
///</summary>
[AttributeLogicalNameAttribute("teamtemplateid")]
public EntityReference TeamTemplateIdentifier
{
	get { return this.GetPropertyValue<EntityReference>("teamtemplateid"); }
	set { this.SetPropertyValue<EntityReference>("teamtemplateid", value, "TeamTemplateIdentifier"); }
}
/// <summary>
///Logical Name: teamtype
/// </summary>
[AttributeLogicalNameAttribute("teamtype")]
public eTeamType? TeamType
{
	get
	{
		if (TeamType_OptionSetValue != null) { return (eTeamType)TeamType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.TeamType_OptionSetValue = new OptionSetValue((int)value); }
		else this.TeamType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: teamtype</para>
///</summary>
[AttributeLogicalNameAttribute("teamtype")]
public OptionSetValue TeamType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("teamtype"); }
	set { this.SetPropertyValue<OptionSetValue>("teamtype", value, "TeamType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string TeamType_Text(IOrganizationService Service)
{
	return this.TeamType_OptionSetValue.GetOptionSetText(Service, this, "teamtype");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string TeamType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.TeamType_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: traversedpath</para>
///<para>Max Length: 1250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("traversedpath")]
public string TraversedPath
{
	get { return this.GetPropertyValue<string>("traversedpath"); }
	set { this.SetPropertyValue("traversedpath", value, 1250, "TraversedPath"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}
///<summary>
///<para>Logical Name: yominame</para>
///<para>Max Length: 160 characters</para>
///</summary>
[AttributeLogicalNameAttribute("yominame")]
public string YomiName
{
	get { return this.GetPropertyValue<string>("yominame"); }
	set { this.SetPropertyValue("yominame", value, 160, "YomiName"); }
}


        /// <summary>
/// <para><b>Account (Owning Team)</b></para>
/// <para>Schema Name: team_accounts</para>
/// </summary>
public List<Account> GetAccounts_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Account>(Service, this.Id, "account", "owningteam", Columns); }
/// <summary>
/// <para><b>Account (Owning Team)</b></para>
/// <para>Schema Name: team_accounts</para>
/// </summary>
public List<Account> GetAccounts_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Account>(Service, this.Id, "account", "owningteam", Columns); }
/// <summary>
/// <para><b>ActionCardUserSettings (Owning Team)</b></para>
/// <para>Schema Name: team_actioncardusersettings</para>
/// </summary>
public List<ActionCardUserSettings> GetActionCardUserSettings_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActionCardUserSettings>(Service, this.Id, "actioncardusersettings", "owningteam", Columns); }
/// <summary>
/// <para><b>ActionCardUserSettings (Owning Team)</b></para>
/// <para>Schema Name: team_actioncardusersettings</para>
/// </summary>
public List<ActionCardUserSettings> GetActionCardUserSettings_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActionCardUserSettings>(Service, this.Id, "actioncardusersettings", "owningteam", Columns); }
/// <summary>
/// <para><b>Activity (Owning Team)</b></para>
/// <para>Schema Name: team_activity</para>
/// </summary>
public List<Activity> GetActivities_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Activity>(Service, this.Id, "activitypointer", "owningteam", Columns); }
/// <summary>
/// <para><b>Activity (Owning Team)</b></para>
/// <para>Schema Name: team_activity</para>
/// </summary>
public List<Activity> GetActivities_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Activity>(Service, this.Id, "activitypointer", "owningteam", Columns); }
/// <summary>
/// <para><b>Note (Owning Team)</b></para>
/// <para>Schema Name: team_annotations</para>
/// </summary>
public List<Note> GetNotes_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "owningteam", Columns); }
/// <summary>
/// <para><b>Note (Owning Team)</b></para>
/// <para>Schema Name: team_annotations</para>
/// </summary>
public List<Note> GetNotes_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "owningteam", Columns); }
/// <summary>
/// <para><b>Appointment (Owning Team)</b></para>
/// <para>Schema Name: team_appointment</para>
/// </summary>
public List<Appointment> GetAppointments_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Appointment>(Service, this.Id, "appointment", "owningteam", Columns); }
/// <summary>
/// <para><b>Appointment (Owning Team)</b></para>
/// <para>Schema Name: team_appointment</para>
/// </summary>
public List<Appointment> GetAppointments_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Appointment>(Service, this.Id, "appointment", "owningteam", Columns); }
/// <summary>
/// <para><b>SystemJob (Owning Team)</b></para>
/// <para>Schema Name: team_asyncoperation</para>
/// </summary>
public List<SystemJob> GetSystemJobs_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "owningteam", Columns); }
/// <summary>
/// <para><b>SystemJob (Owning Team)</b></para>
/// <para>Schema Name: team_asyncoperation</para>
/// </summary>
public List<SystemJob> GetSystemJobs_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "owningteam", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: Team_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: Team_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BookableResource (Owning Team)</b></para>
/// <para>Schema Name: team_bookableresource</para>
/// </summary>
public List<BookableResource> GetBookableResources_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResource>(Service, this.Id, "bookableresource", "owningteam", Columns); }
/// <summary>
/// <para><b>BookableResource (Owning Team)</b></para>
/// <para>Schema Name: team_bookableresource</para>
/// </summary>
public List<BookableResource> GetBookableResources_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResource>(Service, this.Id, "bookableresource", "owningteam", Columns); }
/// <summary>
/// <para><b>BookableResourceBooking (Owning Team)</b></para>
/// <para>Schema Name: team_bookableresourcebooking</para>
/// </summary>
public List<BookableResourceBooking> GetBookableResourceBookings_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBooking>(Service, this.Id, "bookableresourcebooking", "owningteam", Columns); }
/// <summary>
/// <para><b>BookableResourceBooking (Owning Team)</b></para>
/// <para>Schema Name: team_bookableresourcebooking</para>
/// </summary>
public List<BookableResourceBooking> GetBookableResourceBookings_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBooking>(Service, this.Id, "bookableresourcebooking", "owningteam", Columns); }
/// <summary>
/// <para><b>BookableResourceBookingToExchangeIdMapping ()</b></para>
/// <para>Schema Name: team_bookableresourcebookingexchangesyncidmapping</para>
/// </summary>
public List<BookableResourceBookingToExchangeIdMapping> GetBookableResourceBookingToExchangeIdMappings (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBookingToExchangeIdMapping>(Service, this.Id, "bookableresourcebookingexchangesyncidmapping", "owningteam", Columns); }
/// <summary>
/// <para><b>BookableResourceBookingToExchangeIdMapping ()</b></para>
/// <para>Schema Name: team_bookableresourcebookingexchangesyncidmapping</para>
/// </summary>
public List<BookableResourceBookingToExchangeIdMapping> GetBookableResourceBookingToExchangeIdMappings (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBookingToExchangeIdMapping>(Service, this.Id, "bookableresourcebookingexchangesyncidmapping", "owningteam", Columns); }
/// <summary>
/// <para><b>BookableResourceBookingHeader (Owning Team)</b></para>
/// <para>Schema Name: team_bookableresourcebookingheader</para>
/// </summary>
public List<BookableResourceBookingHeader> GetBookableResourceBookingHeaders_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBookingHeader>(Service, this.Id, "bookableresourcebookingheader", "owningteam", Columns); }
/// <summary>
/// <para><b>BookableResourceBookingHeader (Owning Team)</b></para>
/// <para>Schema Name: team_bookableresourcebookingheader</para>
/// </summary>
public List<BookableResourceBookingHeader> GetBookableResourceBookingHeaders_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBookingHeader>(Service, this.Id, "bookableresourcebookingheader", "owningteam", Columns); }
/// <summary>
/// <para><b>BookableResourceCategory (Owning Team)</b></para>
/// <para>Schema Name: team_bookableresourcecategory</para>
/// </summary>
public List<BookableResourceCategory> GetBookableResourceCategories_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceCategory>(Service, this.Id, "bookableresourcecategory", "owningteam", Columns); }
/// <summary>
/// <para><b>BookableResourceCategory (Owning Team)</b></para>
/// <para>Schema Name: team_bookableresourcecategory</para>
/// </summary>
public List<BookableResourceCategory> GetBookableResourceCategories_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceCategory>(Service, this.Id, "bookableresourcecategory", "owningteam", Columns); }
/// <summary>
/// <para><b>BookableResourceCategoryAssn (Owning Team)</b></para>
/// <para>Schema Name: team_bookableresourcecategoryassn</para>
/// </summary>
public List<BookableResourceCategoryAssn> GetBookableResourceCategoryAssns_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceCategoryAssn>(Service, this.Id, "bookableresourcecategoryassn", "owningteam", Columns); }
/// <summary>
/// <para><b>BookableResourceCategoryAssn (Owning Team)</b></para>
/// <para>Schema Name: team_bookableresourcecategoryassn</para>
/// </summary>
public List<BookableResourceCategoryAssn> GetBookableResourceCategoryAssns_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceCategoryAssn>(Service, this.Id, "bookableresourcecategoryassn", "owningteam", Columns); }
/// <summary>
/// <para><b>BookableResourceCharacteristic (Owning Team)</b></para>
/// <para>Schema Name: team_bookableresourcecharacteristic</para>
/// </summary>
public List<BookableResourceCharacteristic> GetBookableResourceCharacteristics_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceCharacteristic>(Service, this.Id, "bookableresourcecharacteristic", "owningteam", Columns); }
/// <summary>
/// <para><b>BookableResourceCharacteristic (Owning Team)</b></para>
/// <para>Schema Name: team_bookableresourcecharacteristic</para>
/// </summary>
public List<BookableResourceCharacteristic> GetBookableResourceCharacteristics_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceCharacteristic>(Service, this.Id, "bookableresourcecharacteristic", "owningteam", Columns); }
/// <summary>
/// <para><b>BookableResourceGroup (Owning Team)</b></para>
/// <para>Schema Name: team_bookableresourcegroup</para>
/// </summary>
public List<BookableResourceGroup> GetBookableResourceGroups_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceGroup>(Service, this.Id, "bookableresourcegroup", "owningteam", Columns); }
/// <summary>
/// <para><b>BookableResourceGroup (Owning Team)</b></para>
/// <para>Schema Name: team_bookableresourcegroup</para>
/// </summary>
public List<BookableResourceGroup> GetBookableResourceGroups_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceGroup>(Service, this.Id, "bookableresourcegroup", "owningteam", Columns); }
/// <summary>
/// <para><b>BookingStatus (Owning Team)</b></para>
/// <para>Schema Name: team_bookingstatus</para>
/// </summary>
public List<BookingStatus> GetBookingStatuses_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingStatus>(Service, this.Id, "bookingstatus", "owningteam", Columns); }
/// <summary>
/// <para><b>BookingStatus (Owning Team)</b></para>
/// <para>Schema Name: team_bookingstatus</para>
/// </summary>
public List<BookingStatus> GetBookingStatuses_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingStatus>(Service, this.Id, "bookingstatus", "owningteam", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: Team_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: Team_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>QuickCampaign (Owning Team)</b></para>
/// <para>Schema Name: team_BulkOperation</para>
/// </summary>
public List<QuickCampaign> GetQuickCampaigns_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuickCampaign>(Service, this.Id, "bulkoperation", "owningteam", Columns); }
/// <summary>
/// <para><b>QuickCampaign (Owning Team)</b></para>
/// <para>Schema Name: team_BulkOperation</para>
/// </summary>
public List<QuickCampaign> GetQuickCampaigns_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuickCampaign>(Service, this.Id, "bulkoperation", "owningteam", Columns); }
/// <summary>
/// <para><b>Campaign (Owning Team)</b></para>
/// <para>Schema Name: team_Campaigns</para>
/// </summary>
public List<Campaign> GetCampaigns_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Campaign>(Service, this.Id, "campaign", "owningteam", Columns); }
/// <summary>
/// <para><b>Campaign (Owning Team)</b></para>
/// <para>Schema Name: team_Campaigns</para>
/// </summary>
public List<Campaign> GetCampaigns_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Campaign>(Service, this.Id, "campaign", "owningteam", Columns); }
/// <summary>
/// <para><b>CampaignActivity (Owning Team)</b></para>
/// <para>Schema Name: team_campaignactivity</para>
/// </summary>
public List<CampaignActivity> GetCampaignActivities_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CampaignActivity>(Service, this.Id, "campaignactivity", "owningteam", Columns); }
/// <summary>
/// <para><b>CampaignActivity (Owning Team)</b></para>
/// <para>Schema Name: team_campaignactivity</para>
/// </summary>
public List<CampaignActivity> GetCampaignActivities_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CampaignActivity>(Service, this.Id, "campaignactivity", "owningteam", Columns); }
/// <summary>
/// <para><b>CampaignResponse (Owning Team)</b></para>
/// <para>Schema Name: team_campaignresponse</para>
/// </summary>
public List<CampaignResponse> GetCampaignResponses_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CampaignResponse>(Service, this.Id, "campaignresponse", "owningteam", Columns); }
/// <summary>
/// <para><b>CampaignResponse (Owning Team)</b></para>
/// <para>Schema Name: team_campaignresponse</para>
/// </summary>
public List<CampaignResponse> GetCampaignResponses_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CampaignResponse>(Service, this.Id, "campaignresponse", "owningteam", Columns); }
/// <summary>
/// <para><b>ChannelAccessProfile (Owning Team)</b></para>
/// <para>Schema Name: team_channelaccessprofile</para>
/// </summary>
public List<ChannelAccessProfile> GetChannelAccessProfiles_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ChannelAccessProfile>(Service, this.Id, "channelaccessprofile", "owningteam", Columns); }
/// <summary>
/// <para><b>ChannelAccessProfile (Owning Team)</b></para>
/// <para>Schema Name: team_channelaccessprofile</para>
/// </summary>
public List<ChannelAccessProfile> GetChannelAccessProfiles_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ChannelAccessProfile>(Service, this.Id, "channelaccessprofile", "owningteam", Columns); }
/// <summary>
/// <para><b>ChannelAccessProfileRule (Owning Team)</b></para>
/// <para>Schema Name: team_profilerule</para>
/// </summary>
public List<ChannelAccessProfileRule> GetChannelAccessProfileRules_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ChannelAccessProfileRule>(Service, this.Id, "channelaccessprofilerule", "owningteam", Columns); }
/// <summary>
/// <para><b>ChannelAccessProfileRule (Owning Team)</b></para>
/// <para>Schema Name: team_profilerule</para>
/// </summary>
public List<ChannelAccessProfileRule> GetChannelAccessProfileRules_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ChannelAccessProfileRule>(Service, this.Id, "channelaccessprofilerule", "owningteam", Columns); }
/// <summary>
/// <para><b>Characteristic (Owning Team)</b></para>
/// <para>Schema Name: team_characteristic</para>
/// </summary>
public List<Characteristic> GetCharacteristics_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Characteristic>(Service, this.Id, "characteristic", "owningteam", Columns); }
/// <summary>
/// <para><b>Characteristic (Owning Team)</b></para>
/// <para>Schema Name: team_characteristic</para>
/// </summary>
public List<Characteristic> GetCharacteristics_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Characteristic>(Service, this.Id, "characteristic", "owningteam", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: team_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: team_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: team_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: team_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>Contact (Owning Team)</b></para>
/// <para>Schema Name: team_contacts</para>
/// </summary>
public List<Contact> GetContacts_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Contact>(Service, this.Id, "contact", "owningteam", Columns); }
/// <summary>
/// <para><b>Contact (Owning Team)</b></para>
/// <para>Schema Name: team_contacts</para>
/// </summary>
public List<Contact> GetContacts_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Contact>(Service, this.Id, "contact", "owningteam", Columns); }
/// <summary>
/// <para><b>Contract (Owning Team)</b></para>
/// <para>Schema Name: team_service_contracts</para>
/// </summary>
public List<Contract> GetContracts_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Contract>(Service, this.Id, "contract", "owningteam", Columns); }
/// <summary>
/// <para><b>Contract (Owning Team)</b></para>
/// <para>Schema Name: team_service_contracts</para>
/// </summary>
public List<Contract> GetContracts_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Contract>(Service, this.Id, "contract", "owningteam", Columns); }
/// <summary>
/// <para><b>RecordCreationAndUpdateRule (Owning Team)</b></para>
/// <para>Schema Name: team_convertrule</para>
/// </summary>
public List<RecordCreationAndUpdateRule> GetRecordCreationAndUpdateRules_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecordCreationAndUpdateRule>(Service, this.Id, "convertrule", "owningteam", Columns); }
/// <summary>
/// <para><b>RecordCreationAndUpdateRule (Owning Team)</b></para>
/// <para>Schema Name: team_convertrule</para>
/// </summary>
public List<RecordCreationAndUpdateRule> GetRecordCreationAndUpdateRules_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecordCreationAndUpdateRule>(Service, this.Id, "convertrule", "owningteam", Columns); }
/// <summary>
/// <para><b>OpportunityRelationship (Owning Team)</b></para>
/// <para>Schema Name: team_customer_opportunity_roles</para>
/// </summary>
public List<OpportunityRelationship> GetOpportunityRelationships_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityRelationship>(Service, this.Id, "customeropportunityrole", "owningteam", Columns); }
/// <summary>
/// <para><b>OpportunityRelationship (Owning Team)</b></para>
/// <para>Schema Name: team_customer_opportunity_roles</para>
/// </summary>
public List<OpportunityRelationship> GetOpportunityRelationships_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityRelationship>(Service, this.Id, "customeropportunityrole", "owningteam", Columns); }
/// <summary>
/// <para><b>CustomerRelationship (Owning Team)</b></para>
/// <para>Schema Name: team_customer_relationship</para>
/// </summary>
public List<CustomerRelationship> GetCustomerRelationships_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CustomerRelationship>(Service, this.Id, "customerrelationship", "owningteam", Columns); }
/// <summary>
/// <para><b>CustomerRelationship (Owning Team)</b></para>
/// <para>Schema Name: team_customer_relationship</para>
/// </summary>
public List<CustomerRelationship> GetCustomerRelationships_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CustomerRelationship>(Service, this.Id, "customerrelationship", "owningteam", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: Team_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: Team_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: Team_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: Team_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>DuplicateDetectionRule (Owning Team)</b></para>
/// <para>Schema Name: team_DuplicateRules</para>
/// </summary>
public List<DuplicateDetectionRule> GetDuplicateDetectionRules_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateDetectionRule>(Service, this.Id, "duplicaterule", "owningteam", Columns); }
/// <summary>
/// <para><b>DuplicateDetectionRule (Owning Team)</b></para>
/// <para>Schema Name: team_DuplicateRules</para>
/// </summary>
public List<DuplicateDetectionRule> GetDuplicateDetectionRules_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateDetectionRule>(Service, this.Id, "duplicaterule", "owningteam", Columns); }
/// <summary>
/// <para><b>PropertyInstance (Owning Team)</b></para>
/// <para>Schema Name: team_DynamicPropertyInstance</para>
/// </summary>
public List<PropertyInstance> GetPropertyInstances_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PropertyInstance>(Service, this.Id, "dynamicpropertyinstance", "owningteam", Columns); }
/// <summary>
/// <para><b>PropertyInstance (Owning Team)</b></para>
/// <para>Schema Name: team_DynamicPropertyInstance</para>
/// </summary>
public List<PropertyInstance> GetPropertyInstances_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PropertyInstance>(Service, this.Id, "dynamicpropertyinstance", "owningteam", Columns); }
/// <summary>
/// <para><b>Email (Owning Team)</b></para>
/// <para>Schema Name: team_email</para>
/// </summary>
public List<Email> GetEmailMessages_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "owningteam", Columns); }
/// <summary>
/// <para><b>Email (Owning Team)</b></para>
/// <para>Schema Name: team_email</para>
/// </summary>
public List<Email> GetEmailMessages_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "owningteam", Columns); }
/// <summary>
/// <para><b>EmailServerProfile (Owning Team)</b></para>
/// <para>Schema Name: team_emailserverprofile</para>
/// </summary>
public List<EmailServerProfile> GetEmailServerProfiles_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EmailServerProfile>(Service, this.Id, "emailserverprofile", "owningteam", Columns); }
/// <summary>
/// <para><b>EmailServerProfile (Owning Team)</b></para>
/// <para>Schema Name: team_emailserverprofile</para>
/// </summary>
public List<EmailServerProfile> GetEmailServerProfiles_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EmailServerProfile>(Service, this.Id, "emailserverprofile", "owningteam", Columns); }
/// <summary>
/// <para><b>Entitlement (Owning Team)</b></para>
/// <para>Schema Name: team_entitlement</para>
/// </summary>
public List<Entitlement> GetEntitlements_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Entitlement>(Service, this.Id, "entitlement", "owningteam", Columns); }
/// <summary>
/// <para><b>Entitlement (Owning Team)</b></para>
/// <para>Schema Name: team_entitlement</para>
/// </summary>
public List<Entitlement> GetEntitlements_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Entitlement>(Service, this.Id, "entitlement", "owningteam", Columns); }
/// <summary>
/// <para><b>ExchangeSyncIdMapping ()</b></para>
/// <para>Schema Name: team_exchangesyncidmapping</para>
/// </summary>
public List<ExchangeSyncIdMapping> GetExchangeSyncIdMappings (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ExchangeSyncIdMapping>(Service, this.Id, "exchangesyncidmapping", "owningteam", Columns); }
/// <summary>
/// <para><b>ExchangeSyncIdMapping ()</b></para>
/// <para>Schema Name: team_exchangesyncidmapping</para>
/// </summary>
public List<ExchangeSyncIdMapping> GetExchangeSyncIdMappings (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ExchangeSyncIdMapping>(Service, this.Id, "exchangesyncidmapping", "owningteam", Columns); }
/// <summary>
/// <para><b>ExternalParty (Owning Team)</b></para>
/// <para>Schema Name: team_externalparty</para>
/// </summary>
public List<ExternalParty> GetExternalParties_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ExternalParty>(Service, this.Id, "externalparty", "owningteam", Columns); }
/// <summary>
/// <para><b>ExternalParty (Owning Team)</b></para>
/// <para>Schema Name: team_externalparty</para>
/// </summary>
public List<ExternalParty> GetExternalParties_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ExternalParty>(Service, this.Id, "externalparty", "owningteam", Columns); }
/// <summary>
/// <para><b>Fax (Owning Team)</b></para>
/// <para>Schema Name: team_fax</para>
/// </summary>
public List<Fax> GetFaxes_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fax>(Service, this.Id, "fax", "owningteam", Columns); }
/// <summary>
/// <para><b>Fax (Owning Team)</b></para>
/// <para>Schema Name: team_fax</para>
/// </summary>
public List<Fax> GetFaxes_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fax>(Service, this.Id, "fax", "owningteam", Columns); }
/// <summary>
/// <para><b>BookingUpdateTrigger (Owning Team)</b></para>
/// <para>Schema Name: team_fpssa_bookingupdatetrigger</para>
/// </summary>
public List<BookingUpdateTrigger> GetBookingUpdateTriggers_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingUpdateTrigger>(Service, this.Id, "fpssa_bookingupdatetrigger", "owningteam", Columns); }
/// <summary>
/// <para><b>BookingUpdateTrigger (Owning Team)</b></para>
/// <para>Schema Name: team_fpssa_bookingupdatetrigger</para>
/// </summary>
public List<BookingUpdateTrigger> GetBookingUpdateTriggers_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingUpdateTrigger>(Service, this.Id, "fpssa_bookingupdatetrigger", "owningteam", Columns); }
/// <summary>
/// <para><b>Goal (Owning Team)</b></para>
/// <para>Schema Name: team_goal</para>
/// </summary>
public List<Goal> GetGoals_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Goal>(Service, this.Id, "goal", "owningteam", Columns); }
/// <summary>
/// <para><b>Goal (Owning Team)</b></para>
/// <para>Schema Name: team_goal</para>
/// </summary>
public List<Goal> GetGoals_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Goal>(Service, this.Id, "goal", "owningteam", Columns); }
/// <summary>
/// <para><b>Goal (Goal Owner)</b></para>
/// <para>Schema Name: team_goal_goalowner</para>
/// </summary>
public List<Goal> GetGoals_GoalOwner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Goal>(Service, this.Id, "goal", "goalownerid", Columns); }
/// <summary>
/// <para><b>Goal (Goal Owner)</b></para>
/// <para>Schema Name: team_goal_goalowner</para>
/// </summary>
public List<Goal> GetGoals_GoalOwner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Goal>(Service, this.Id, "goal", "goalownerid", Columns); }
/// <summary>
/// <para><b>RollupQuery (Owning Team)</b></para>
/// <para>Schema Name: team_goalrollupquery</para>
/// </summary>
public List<RollupQuery> GetRollupQueries_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RollupQuery>(Service, this.Id, "goalrollupquery", "owningteam", Columns); }
/// <summary>
/// <para><b>RollupQuery (Owning Team)</b></para>
/// <para>Schema Name: team_goalrollupquery</para>
/// </summary>
public List<RollupQuery> GetRollupQueries_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RollupQuery>(Service, this.Id, "goalrollupquery", "owningteam", Columns); }
/// <summary>
/// <para><b>DataImport (Owning Team)</b></para>
/// <para>Schema Name: team_Imports</para>
/// </summary>
public List<DataImport> GetDataImports_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DataImport>(Service, this.Id, "import", "owningteam", Columns); }
/// <summary>
/// <para><b>DataImport (Owning Team)</b></para>
/// <para>Schema Name: team_Imports</para>
/// </summary>
public List<DataImport> GetDataImports_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DataImport>(Service, this.Id, "import", "owningteam", Columns); }
/// <summary>
/// <para><b>ImportData (Owning Team)</b></para>
/// <para>Schema Name: team_ImportData</para>
/// </summary>
public List<ImportData> GetImportData_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ImportData>(Service, this.Id, "importdata", "owningteam", Columns); }
/// <summary>
/// <para><b>ImportData (Owning Team)</b></para>
/// <para>Schema Name: team_ImportData</para>
/// </summary>
public List<ImportData> GetImportData_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ImportData>(Service, this.Id, "importdata", "owningteam", Columns); }
/// <summary>
/// <para><b>ImportSourceFile (Records Owner)</b></para>
/// <para>Schema Name: ImportFile_Team</para>
/// </summary>
public List<ImportSourceFile> GetImports_RecordsOwner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ImportSourceFile>(Service, this.Id, "importfile", "recordsownerid", Columns); }
/// <summary>
/// <para><b>ImportSourceFile (Records Owner)</b></para>
/// <para>Schema Name: ImportFile_Team</para>
/// </summary>
public List<ImportSourceFile> GetImports_RecordsOwner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ImportSourceFile>(Service, this.Id, "importfile", "recordsownerid", Columns); }
/// <summary>
/// <para><b>ImportSourceFile (Owning Team)</b></para>
/// <para>Schema Name: team_ImportFiles</para>
/// </summary>
public List<ImportSourceFile> GetImports_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ImportSourceFile>(Service, this.Id, "importfile", "owningteam", Columns); }
/// <summary>
/// <para><b>ImportSourceFile (Owning Team)</b></para>
/// <para>Schema Name: team_ImportFiles</para>
/// </summary>
public List<ImportSourceFile> GetImports_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ImportSourceFile>(Service, this.Id, "importfile", "owningteam", Columns); }
/// <summary>
/// <para><b>ImportLog (Owning Team)</b></para>
/// <para>Schema Name: team_ImportLogs</para>
/// </summary>
public List<ImportLog> GetImportLogs_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ImportLog>(Service, this.Id, "importlog", "owningteam", Columns); }
/// <summary>
/// <para><b>ImportLog (Owning Team)</b></para>
/// <para>Schema Name: team_ImportLogs</para>
/// </summary>
public List<ImportLog> GetImportLogs_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ImportLog>(Service, this.Id, "importlog", "owningteam", Columns); }
/// <summary>
/// <para><b>DataMap (Owning Team)</b></para>
/// <para>Schema Name: team_ImportMaps</para>
/// </summary>
public List<DataMap> GetDataMaps_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DataMap>(Service, this.Id, "importmap", "owningteam", Columns); }
/// <summary>
/// <para><b>DataMap (Owning Team)</b></para>
/// <para>Schema Name: team_ImportMaps</para>
/// </summary>
public List<DataMap> GetDataMaps_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DataMap>(Service, this.Id, "importmap", "owningteam", Columns); }
/// <summary>
/// <para><b>@Case (Owning Team)</b></para>
/// <para>Schema Name: team_incidents</para>
/// </summary>
public List<@Case> GetCases_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<@Case>(Service, this.Id, "incident", "owningteam", Columns); }
/// <summary>
/// <para><b>@Case (Owning Team)</b></para>
/// <para>Schema Name: team_incidents</para>
/// </summary>
public List<@Case> GetCases_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<@Case>(Service, this.Id, "incident", "owningteam", Columns); }
/// <summary>
/// <para><b>CaseResolution (Owning Team)</b></para>
/// <para>Schema Name: team_incidentresolution</para>
/// </summary>
public List<CaseResolution> GetCaseResolutions_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CaseResolution>(Service, this.Id, "incidentresolution", "owningteam", Columns); }
/// <summary>
/// <para><b>CaseResolution (Owning Team)</b></para>
/// <para>Schema Name: team_incidentresolution</para>
/// </summary>
public List<CaseResolution> GetCaseResolutions_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CaseResolution>(Service, this.Id, "incidentresolution", "owningteam", Columns); }
/// <summary>
/// <para><b>InteractionForEmail (Owning Team)</b></para>
/// <para>Schema Name: team_interactionforemail</para>
/// </summary>
public List<InteractionForEmail> GetInteractionsForEmail_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InteractionForEmail>(Service, this.Id, "interactionforemail", "owningteam", Columns); }
/// <summary>
/// <para><b>InteractionForEmail (Owning Team)</b></para>
/// <para>Schema Name: team_interactionforemail</para>
/// </summary>
public List<InteractionForEmail> GetInteractionsForEmail_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InteractionForEmail>(Service, this.Id, "interactionforemail", "owningteam", Columns); }
/// <summary>
/// <para><b>Invoice (Owning Team)</b></para>
/// <para>Schema Name: team_invoices</para>
/// </summary>
public List<Invoice> GetInvoices_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Invoice>(Service, this.Id, "invoice", "owningteam", Columns); }
/// <summary>
/// <para><b>Invoice (Owning Team)</b></para>
/// <para>Schema Name: team_invoices</para>
/// </summary>
public List<Invoice> GetInvoices_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Invoice>(Service, this.Id, "invoice", "owningteam", Columns); }
/// <summary>
/// <para><b>KnowledgeArticle (Owning Team)</b></para>
/// <para>Schema Name: team_knowledgearticle</para>
/// </summary>
public List<KnowledgeArticle> GetKnowledgeArticles_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<KnowledgeArticle>(Service, this.Id, "knowledgearticle", "owningteam", Columns); }
/// <summary>
/// <para><b>KnowledgeArticle (Owning Team)</b></para>
/// <para>Schema Name: team_knowledgearticle</para>
/// </summary>
public List<KnowledgeArticle> GetKnowledgeArticles_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<KnowledgeArticle>(Service, this.Id, "knowledgearticle", "owningteam", Columns); }
/// <summary>
/// <para><b>Lead (Owning Team)</b></para>
/// <para>Schema Name: lead_owning_team</para>
/// </summary>
public List<Lead> GetLeads_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Lead>(Service, this.Id, "lead", "owningteam", Columns); }
/// <summary>
/// <para><b>Lead (Owning Team)</b></para>
/// <para>Schema Name: lead_owning_team</para>
/// </summary>
public List<Lead> GetLeads_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Lead>(Service, this.Id, "lead", "owningteam", Columns); }
/// <summary>
/// <para><b>Letter (Owning Team)</b></para>
/// <para>Schema Name: team_letter</para>
/// </summary>
public List<Letter> GetLetters_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Letter>(Service, this.Id, "letter", "owningteam", Columns); }
/// <summary>
/// <para><b>Letter (Owning Team)</b></para>
/// <para>Schema Name: team_letter</para>
/// </summary>
public List<Letter> GetLetters_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Letter>(Service, this.Id, "letter", "owningteam", Columns); }
/// <summary>
/// <para><b>MarketingList (Owning Team)</b></para>
/// <para>Schema Name: team_list</para>
/// </summary>
public List<MarketingList> GetMarketingLists_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MarketingList>(Service, this.Id, "list", "owningteam", Columns); }
/// <summary>
/// <para><b>MarketingList (Owning Team)</b></para>
/// <para>Schema Name: team_list</para>
/// </summary>
public List<MarketingList> GetMarketingLists_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MarketingList>(Service, this.Id, "list", "owningteam", Columns); }
/// <summary>
/// <para><b>Mailbox (Owning Team)</b></para>
/// <para>Schema Name: team_mailbox</para>
/// </summary>
public List<Mailbox> GetMailboxes_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Mailbox>(Service, this.Id, "mailbox", "owningteam", Columns); }
/// <summary>
/// <para><b>Mailbox (Owning Team)</b></para>
/// <para>Schema Name: team_mailbox</para>
/// </summary>
public List<Mailbox> GetMailboxes_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Mailbox>(Service, this.Id, "mailbox", "owningteam", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Owning Team)</b></para>
/// <para>Schema Name: team_mailboxtrackingfolder</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "owningteam", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Owning Team)</b></para>
/// <para>Schema Name: team_mailboxtrackingfolder</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "owningteam", Columns); }
/// <summary>
/// <para><b>AccountProjectPriceList (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_accountpricelist</para>
/// </summary>
public List<AccountProjectPriceList> GetProjectPriceLists_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AccountProjectPriceList>(Service, this.Id, "msdyn_accountpricelist", "owningteam", Columns); }
/// <summary>
/// <para><b>AccountProjectPriceList (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_accountpricelist</para>
/// </summary>
public List<AccountProjectPriceList> GetProjectPriceLists_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AccountProjectPriceList>(Service, this.Id, "msdyn_accountpricelist", "owningteam", Columns); }
/// <summary>
/// <para><b>Actual (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_actual</para>
/// </summary>
public List<Actual> GetActuals_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Actual>(Service, this.Id, "msdyn_actual", "owningteam", Columns); }
/// <summary>
/// <para><b>Actual (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_actual</para>
/// </summary>
public List<Actual> GetActuals_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Actual>(Service, this.Id, "msdyn_actual", "owningteam", Columns); }
/// <summary>
/// <para><b>Agreement (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_agreement</para>
/// </summary>
public List<Agreement> GetAgreements_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Agreement>(Service, this.Id, "msdyn_agreement", "owningteam", Columns); }
/// <summary>
/// <para><b>Agreement (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_agreement</para>
/// </summary>
public List<Agreement> GetAgreements_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Agreement>(Service, this.Id, "msdyn_agreement", "owningteam", Columns); }
/// <summary>
/// <para><b>AgreementBookingDate (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_agreementbookingdate</para>
/// </summary>
public List<AgreementBookingDate> GetAgreementBookingDates_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingDate>(Service, this.Id, "msdyn_agreementbookingdate", "owningteam", Columns); }
/// <summary>
/// <para><b>AgreementBookingDate (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_agreementbookingdate</para>
/// </summary>
public List<AgreementBookingDate> GetAgreementBookingDates_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingDate>(Service, this.Id, "msdyn_agreementbookingdate", "owningteam", Columns); }
/// <summary>
/// <para><b>AgreementBookingIncident (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_agreementbookingincident</para>
/// </summary>
public List<AgreementBookingIncident> GetAgreementBookingIncidents_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingIncident>(Service, this.Id, "msdyn_agreementbookingincident", "owningteam", Columns); }
/// <summary>
/// <para><b>AgreementBookingIncident (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_agreementbookingincident</para>
/// </summary>
public List<AgreementBookingIncident> GetAgreementBookingIncidents_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingIncident>(Service, this.Id, "msdyn_agreementbookingincident", "owningteam", Columns); }
/// <summary>
/// <para><b>AgreementBookingProduct (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_agreementbookingproduct</para>
/// </summary>
public List<AgreementBookingProduct> GetAgreementBookingProducts_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingProduct>(Service, this.Id, "msdyn_agreementbookingproduct", "owningteam", Columns); }
/// <summary>
/// <para><b>AgreementBookingProduct (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_agreementbookingproduct</para>
/// </summary>
public List<AgreementBookingProduct> GetAgreementBookingProducts_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingProduct>(Service, this.Id, "msdyn_agreementbookingproduct", "owningteam", Columns); }
/// <summary>
/// <para><b>AgreementBookingService (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_agreementbookingservice</para>
/// </summary>
public List<AgreementBookingService> GetAgreementBookingServices_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingService>(Service, this.Id, "msdyn_agreementbookingservice", "owningteam", Columns); }
/// <summary>
/// <para><b>AgreementBookingService (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_agreementbookingservice</para>
/// </summary>
public List<AgreementBookingService> GetAgreementBookingServices_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingService>(Service, this.Id, "msdyn_agreementbookingservice", "owningteam", Columns); }
/// <summary>
/// <para><b>AgreementBookingServiceTask (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_agreementbookingservicetask</para>
/// </summary>
public List<AgreementBookingServiceTask> GetAgreementBookingServiceTasks_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingServiceTask>(Service, this.Id, "msdyn_agreementbookingservicetask", "owningteam", Columns); }
/// <summary>
/// <para><b>AgreementBookingServiceTask (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_agreementbookingservicetask</para>
/// </summary>
public List<AgreementBookingServiceTask> GetAgreementBookingServiceTasks_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingServiceTask>(Service, this.Id, "msdyn_agreementbookingservicetask", "owningteam", Columns); }
/// <summary>
/// <para><b>AgreementBookingSetup (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_agreementbookingsetup</para>
/// </summary>
public List<AgreementBookingSetup> GetAgreementBookingSetups_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingSetup>(Service, this.Id, "msdyn_agreementbookingsetup", "owningteam", Columns); }
/// <summary>
/// <para><b>AgreementBookingSetup (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_agreementbookingsetup</para>
/// </summary>
public List<AgreementBookingSetup> GetAgreementBookingSetups_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingSetup>(Service, this.Id, "msdyn_agreementbookingsetup", "owningteam", Columns); }
/// <summary>
/// <para><b>AgreementInvoiceDate (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_agreementinvoicedate</para>
/// </summary>
public List<AgreementInvoiceDate> GetAgreementInvoiceDates_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementInvoiceDate>(Service, this.Id, "msdyn_agreementinvoicedate", "owningteam", Columns); }
/// <summary>
/// <para><b>AgreementInvoiceDate (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_agreementinvoicedate</para>
/// </summary>
public List<AgreementInvoiceDate> GetAgreementInvoiceDates_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementInvoiceDate>(Service, this.Id, "msdyn_agreementinvoicedate", "owningteam", Columns); }
/// <summary>
/// <para><b>AgreementInvoiceProduct (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_agreementinvoiceproduct</para>
/// </summary>
public List<AgreementInvoiceProduct> GetAgreementInvoiceProducts_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementInvoiceProduct>(Service, this.Id, "msdyn_agreementinvoiceproduct", "owningteam", Columns); }
/// <summary>
/// <para><b>AgreementInvoiceProduct (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_agreementinvoiceproduct</para>
/// </summary>
public List<AgreementInvoiceProduct> GetAgreementInvoiceProducts_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementInvoiceProduct>(Service, this.Id, "msdyn_agreementinvoiceproduct", "owningteam", Columns); }
/// <summary>
/// <para><b>AgreementInvoiceSetup (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_agreementinvoicesetup</para>
/// </summary>
public List<AgreementInvoiceSetup> GetAgreementInvoiceSetups_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementInvoiceSetup>(Service, this.Id, "msdyn_agreementinvoicesetup", "owningteam", Columns); }
/// <summary>
/// <para><b>AgreementInvoiceSetup (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_agreementinvoicesetup</para>
/// </summary>
public List<AgreementInvoiceSetup> GetAgreementInvoiceSetups_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementInvoiceSetup>(Service, this.Id, "msdyn_agreementinvoicesetup", "owningteam", Columns); }
/// <summary>
/// <para><b>AgreementSub_Status (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_agreementsubstatus</para>
/// </summary>
public List<AgreementSub_Status> GetAgreementSub_Statuses_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementSub_Status>(Service, this.Id, "msdyn_agreementsubstatus", "owningteam", Columns); }
/// <summary>
/// <para><b>AgreementSub_Status (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_agreementsubstatus</para>
/// </summary>
public List<AgreementSub_Status> GetAgreementSub_Statuses_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementSub_Status>(Service, this.Id, "msdyn_agreementsubstatus", "owningteam", Columns); }
/// <summary>
/// <para><b>Approval (Owning Team)</b></para>
/// <para>Schema Name: msdyn_approval_team_owningteam</para>
/// </summary>
public List<Approval> GetApprovals_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Approval>(Service, this.Id, "msdyn_approval", "owningteam", Columns); }
/// <summary>
/// <para><b>Approval (Owning Team)</b></para>
/// <para>Schema Name: msdyn_approval_team_owningteam</para>
/// </summary>
public List<Approval> GetApprovals_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Approval>(Service, this.Id, "msdyn_approval", "owningteam", Columns); }
/// <summary>
/// <para><b>BookingAlert (Owning Team)</b></para>
/// <para>Schema Name: msdyn_bookingalert_team_owningteam</para>
/// </summary>
public List<BookingAlert> GetBookingAlerts_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlert>(Service, this.Id, "msdyn_bookingalert", "owningteam", Columns); }
/// <summary>
/// <para><b>BookingAlert (Owning Team)</b></para>
/// <para>Schema Name: msdyn_bookingalert_team_owningteam</para>
/// </summary>
public List<BookingAlert> GetBookingAlerts_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlert>(Service, this.Id, "msdyn_bookingalert", "owningteam", Columns); }
/// <summary>
/// <para><b>BookingAlertStatus (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_bookingalertstatus</para>
/// </summary>
public List<BookingAlertStatus> GetBookingAlertStatuses_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlertStatus>(Service, this.Id, "msdyn_bookingalertstatus", "owningteam", Columns); }
/// <summary>
/// <para><b>BookingAlertStatus (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_bookingalertstatus</para>
/// </summary>
public List<BookingAlertStatus> GetBookingAlertStatuses_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlertStatus>(Service, this.Id, "msdyn_bookingalertstatus", "owningteam", Columns); }
/// <summary>
/// <para><b>BookingChange (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_bookingchange</para>
/// </summary>
public List<BookingChange> GetBookingChanges_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingChange>(Service, this.Id, "msdyn_bookingchange", "owningteam", Columns); }
/// <summary>
/// <para><b>BookingChange (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_bookingchange</para>
/// </summary>
public List<BookingChange> GetBookingChanges_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingChange>(Service, this.Id, "msdyn_bookingchange", "owningteam", Columns); }
/// <summary>
/// <para><b>BookingJournal (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_bookingjournal</para>
/// </summary>
public List<BookingJournal> GetBookingJournal_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingJournal>(Service, this.Id, "msdyn_bookingjournal", "owningteam", Columns); }
/// <summary>
/// <para><b>BookingJournal (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_bookingjournal</para>
/// </summary>
public List<BookingJournal> GetBookingJournal_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingJournal>(Service, this.Id, "msdyn_bookingjournal", "owningteam", Columns); }
/// <summary>
/// <para><b>BookingRule (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_bookingrule</para>
/// </summary>
public List<BookingRule> GetBookingRules_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingRule>(Service, this.Id, "msdyn_bookingrule", "owningteam", Columns); }
/// <summary>
/// <para><b>BookingRule (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_bookingrule</para>
/// </summary>
public List<BookingRule> GetBookingRules_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingRule>(Service, this.Id, "msdyn_bookingrule", "owningteam", Columns); }
/// <summary>
/// <para><b>BookingSetupMetadata (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_bookingsetupmetadata</para>
/// </summary>
public List<BookingSetupMetadata> GetBookingSetupMetadataRecords_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingSetupMetadata>(Service, this.Id, "msdyn_bookingsetupmetadata", "owningteam", Columns); }
/// <summary>
/// <para><b>BookingSetupMetadata (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_bookingsetupmetadata</para>
/// </summary>
public List<BookingSetupMetadata> GetBookingSetupMetadataRecords_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingSetupMetadata>(Service, this.Id, "msdyn_bookingsetupmetadata", "owningteam", Columns); }
/// <summary>
/// <para><b>BookingTimestamp (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_bookingtimestamp</para>
/// </summary>
public List<BookingTimestamp> GetBookingTimestamps_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingTimestamp>(Service, this.Id, "msdyn_bookingtimestamp", "owningteam", Columns); }
/// <summary>
/// <para><b>BookingTimestamp (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_bookingtimestamp</para>
/// </summary>
public List<BookingTimestamp> GetBookingTimestamps_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingTimestamp>(Service, this.Id, "msdyn_bookingtimestamp", "owningteam", Columns); }
/// <summary>
/// <para><b>CompetencyRequirement_Deprecated (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_characteristicreqforteammember</para>
/// </summary>
public List<CompetencyRequirement_Deprecated> GetCompetencyRequirements_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CompetencyRequirement_Deprecated>(Service, this.Id, "msdyn_characteristicreqforteammember", "owningteam", Columns); }
/// <summary>
/// <para><b>CompetencyRequirement_Deprecated (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_characteristicreqforteammember</para>
/// </summary>
public List<CompetencyRequirement_Deprecated> GetCompetencyRequirements_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CompetencyRequirement_Deprecated>(Service, this.Id, "msdyn_characteristicreqforteammember", "owningteam", Columns); }
/// <summary>
/// <para><b>ContactPriceList (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_contactpricelist</para>
/// </summary>
public List<ContactPriceList> GetContactPriceLists_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ContactPriceList>(Service, this.Id, "msdyn_contactpricelist", "owningteam", Columns); }
/// <summary>
/// <para><b>ContactPriceList (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_contactpricelist</para>
/// </summary>
public List<ContactPriceList> GetContactPriceLists_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ContactPriceList>(Service, this.Id, "msdyn_contactpricelist", "owningteam", Columns); }
/// <summary>
/// <para><b>ProjectContractLineMilestone (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_contractlinescheduleofvalue</para>
/// </summary>
public List<ProjectContractLineMilestone> GetProjectContractLineMilestones_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineMilestone>(Service, this.Id, "msdyn_contractlinescheduleofvalue", "owningteam", Columns); }
/// <summary>
/// <para><b>ProjectContractLineMilestone (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_contractlinescheduleofvalue</para>
/// </summary>
public List<ProjectContractLineMilestone> GetProjectContractLineMilestones_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineMilestone>(Service, this.Id, "msdyn_contractlinescheduleofvalue", "owningteam", Columns); }
/// <summary>
/// <para><b>CustomerAsset (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_customerasset</para>
/// </summary>
public List<CustomerAsset> GetCustomerAssets_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CustomerAsset>(Service, this.Id, "msdyn_customerasset", "owningteam", Columns); }
/// <summary>
/// <para><b>CustomerAsset (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_customerasset</para>
/// </summary>
public List<CustomerAsset> GetCustomerAssets_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CustomerAsset>(Service, this.Id, "msdyn_customerasset", "owningteam", Columns); }
/// <summary>
/// <para><b>ActualDataExport_Deprecated (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_dataexport</para>
/// </summary>
public List<ActualDataExport_Deprecated> GetActualDataExports_Deprecated__OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActualDataExport_Deprecated>(Service, this.Id, "msdyn_dataexport", "owningteam", Columns); }
/// <summary>
/// <para><b>ActualDataExport_Deprecated (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_dataexport</para>
/// </summary>
public List<ActualDataExport_Deprecated> GetActualDataExports_Deprecated__OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActualDataExport_Deprecated>(Service, this.Id, "msdyn_dataexport", "owningteam", Columns); }
/// <summary>
/// <para><b>Delegation (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_delegation</para>
/// </summary>
public List<Delegation> GetDelegations_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Delegation>(Service, this.Id, "msdyn_delegation", "owningteam", Columns); }
/// <summary>
/// <para><b>Delegation (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_delegation</para>
/// </summary>
public List<Delegation> GetDelegations_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Delegation>(Service, this.Id, "msdyn_delegation", "owningteam", Columns); }
/// <summary>
/// <para><b>Estimate (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_estimate</para>
/// </summary>
public List<Estimate> GetEstimates_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Estimate>(Service, this.Id, "msdyn_estimate", "owningteam", Columns); }
/// <summary>
/// <para><b>Estimate (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_estimate</para>
/// </summary>
public List<Estimate> GetEstimates_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Estimate>(Service, this.Id, "msdyn_estimate", "owningteam", Columns); }
/// <summary>
/// <para><b>EstimateLine (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_estimateline</para>
/// </summary>
public List<EstimateLine> GetEstimateLines_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EstimateLine>(Service, this.Id, "msdyn_estimateline", "owningteam", Columns); }
/// <summary>
/// <para><b>EstimateLine (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_estimateline</para>
/// </summary>
public List<EstimateLine> GetEstimateLines_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EstimateLine>(Service, this.Id, "msdyn_estimateline", "owningteam", Columns); }
/// <summary>
/// <para><b>Expense (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_expense</para>
/// </summary>
public List<Expense> GetExpenses_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Expense>(Service, this.Id, "msdyn_expense", "owningteam", Columns); }
/// <summary>
/// <para><b>Expense (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_expense</para>
/// </summary>
public List<Expense> GetExpenses_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Expense>(Service, this.Id, "msdyn_expense", "owningteam", Columns); }
/// <summary>
/// <para><b>ExpenseReceipt (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_expensereceipt</para>
/// </summary>
public List<ExpenseReceipt> GetExpenseReceipts_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ExpenseReceipt>(Service, this.Id, "msdyn_expensereceipt", "owningteam", Columns); }
/// <summary>
/// <para><b>ExpenseReceipt (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_expensereceipt</para>
/// </summary>
public List<ExpenseReceipt> GetExpenseReceipts_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ExpenseReceipt>(Service, this.Id, "msdyn_expensereceipt", "owningteam", Columns); }
/// <summary>
/// <para><b>Fact (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_fact</para>
/// </summary>
public List<Fact> GetFacts_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fact>(Service, this.Id, "msdyn_fact", "owningteam", Columns); }
/// <summary>
/// <para><b>Fact (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_fact</para>
/// </summary>
public List<Fact> GetFacts_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fact>(Service, this.Id, "msdyn_fact", "owningteam", Columns); }
/// <summary>
/// <para><b>FieldComputation (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_fieldcomputation</para>
/// </summary>
public List<FieldComputation> GetFieldComputations_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldComputation>(Service, this.Id, "msdyn_fieldcomputation", "owningteam", Columns); }
/// <summary>
/// <para><b>FieldComputation (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_fieldcomputation</para>
/// </summary>
public List<FieldComputation> GetFieldComputations_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldComputation>(Service, this.Id, "msdyn_fieldcomputation", "owningteam", Columns); }
/// <summary>
/// <para><b>FieldServiceSetting (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_fieldservicesetting</para>
/// </summary>
public List<FieldServiceSetting> GetFieldServiceSettings_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldServiceSetting>(Service, this.Id, "msdyn_fieldservicesetting", "owningteam", Columns); }
/// <summary>
/// <para><b>FieldServiceSetting (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_fieldservicesetting</para>
/// </summary>
public List<FieldServiceSetting> GetFieldServiceSettings_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldServiceSetting>(Service, this.Id, "msdyn_fieldservicesetting", "owningteam", Columns); }
/// <summary>
/// <para><b>FindWorkEvent (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_findworkevent</para>
/// </summary>
public List<FindWorkEvent> GetFindWorkEvents_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FindWorkEvent>(Service, this.Id, "msdyn_findworkevent", "owningteam", Columns); }
/// <summary>
/// <para><b>FindWorkEvent (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_findworkevent</para>
/// </summary>
public List<FindWorkEvent> GetFindWorkEvents_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FindWorkEvent>(Service, this.Id, "msdyn_findworkevent", "owningteam", Columns); }
/// <summary>
/// <para><b>IncidentType (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_incidenttype</para>
/// </summary>
public List<IncidentType> GetIncidentTypes_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IncidentType>(Service, this.Id, "msdyn_incidenttype", "owningteam", Columns); }
/// <summary>
/// <para><b>IncidentType (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_incidenttype</para>
/// </summary>
public List<IncidentType> GetIncidentTypes_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IncidentType>(Service, this.Id, "msdyn_incidenttype", "owningteam", Columns); }
/// <summary>
/// <para><b>IncidentTypeCharacteristic (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_incidenttypecharacteristic</para>
/// </summary>
public List<IncidentTypeCharacteristic> GetIncidentTypeCharacteristics_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IncidentTypeCharacteristic>(Service, this.Id, "msdyn_incidenttypecharacteristic", "owningteam", Columns); }
/// <summary>
/// <para><b>IncidentTypeCharacteristic (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_incidenttypecharacteristic</para>
/// </summary>
public List<IncidentTypeCharacteristic> GetIncidentTypeCharacteristics_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IncidentTypeCharacteristic>(Service, this.Id, "msdyn_incidenttypecharacteristic", "owningteam", Columns); }
/// <summary>
/// <para><b>IncidentTypeProduct (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_incidenttypeproduct</para>
/// </summary>
public List<IncidentTypeProduct> GetIncidentTypeProducts_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IncidentTypeProduct>(Service, this.Id, "msdyn_incidenttypeproduct", "owningteam", Columns); }
/// <summary>
/// <para><b>IncidentTypeProduct (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_incidenttypeproduct</para>
/// </summary>
public List<IncidentTypeProduct> GetIncidentTypeProducts_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IncidentTypeProduct>(Service, this.Id, "msdyn_incidenttypeproduct", "owningteam", Columns); }
/// <summary>
/// <para><b>IncidentTypeService (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_incidenttypeservice</para>
/// </summary>
public List<IncidentTypeService> GetIncidentTypeServices_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IncidentTypeService>(Service, this.Id, "msdyn_incidenttypeservice", "owningteam", Columns); }
/// <summary>
/// <para><b>IncidentTypeService (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_incidenttypeservice</para>
/// </summary>
public List<IncidentTypeService> GetIncidentTypeServices_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IncidentTypeService>(Service, this.Id, "msdyn_incidenttypeservice", "owningteam", Columns); }
/// <summary>
/// <para><b>IncidentTypeServiceTask (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_incidenttypeservicetask</para>
/// </summary>
public List<IncidentTypeServiceTask> GetIncidentTypeServiceTasks_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IncidentTypeServiceTask>(Service, this.Id, "msdyn_incidenttypeservicetask", "owningteam", Columns); }
/// <summary>
/// <para><b>IncidentTypeServiceTask (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_incidenttypeservicetask</para>
/// </summary>
public List<IncidentTypeServiceTask> GetIncidentTypeServiceTasks_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IncidentTypeServiceTask>(Service, this.Id, "msdyn_incidenttypeservicetask", "owningteam", Columns); }
/// <summary>
/// <para><b>IntegrationJob (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_integrationjob</para>
/// </summary>
public List<IntegrationJob> GetIntegrationJobs_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IntegrationJob>(Service, this.Id, "msdyn_integrationjob", "owningteam", Columns); }
/// <summary>
/// <para><b>IntegrationJob (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_integrationjob</para>
/// </summary>
public List<IntegrationJob> GetIntegrationJobs_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IntegrationJob>(Service, this.Id, "msdyn_integrationjob", "owningteam", Columns); }
/// <summary>
/// <para><b>IntegrationJobDetail (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_integrationjobdetail</para>
/// </summary>
public List<IntegrationJobDetail> GetIntegrationJobDetails_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IntegrationJobDetail>(Service, this.Id, "msdyn_integrationjobdetail", "owningteam", Columns); }
/// <summary>
/// <para><b>IntegrationJobDetail (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_integrationjobdetail</para>
/// </summary>
public List<IntegrationJobDetail> GetIntegrationJobDetails_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IntegrationJobDetail>(Service, this.Id, "msdyn_integrationjobdetail", "owningteam", Columns); }
/// <summary>
/// <para><b>InventoryAdjustment (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_inventoryadjustment</para>
/// </summary>
public List<InventoryAdjustment> GetInventoryAdjustments_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InventoryAdjustment>(Service, this.Id, "msdyn_inventoryadjustment", "owningteam", Columns); }
/// <summary>
/// <para><b>InventoryAdjustment (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_inventoryadjustment</para>
/// </summary>
public List<InventoryAdjustment> GetInventoryAdjustments_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InventoryAdjustment>(Service, this.Id, "msdyn_inventoryadjustment", "owningteam", Columns); }
/// <summary>
/// <para><b>InventoryAdjustmentProduct (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_inventoryadjustmentproduct</para>
/// </summary>
public List<InventoryAdjustmentProduct> GetInventoryAdjustmentProducts_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InventoryAdjustmentProduct>(Service, this.Id, "msdyn_inventoryadjustmentproduct", "owningteam", Columns); }
/// <summary>
/// <para><b>InventoryAdjustmentProduct (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_inventoryadjustmentproduct</para>
/// </summary>
public List<InventoryAdjustmentProduct> GetInventoryAdjustmentProducts_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InventoryAdjustmentProduct>(Service, this.Id, "msdyn_inventoryadjustmentproduct", "owningteam", Columns); }
/// <summary>
/// <para><b>InventoryJournal (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_inventoryjournal</para>
/// </summary>
public List<InventoryJournal> GetInventoryJournals_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InventoryJournal>(Service, this.Id, "msdyn_inventoryjournal", "owningteam", Columns); }
/// <summary>
/// <para><b>InventoryJournal (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_inventoryjournal</para>
/// </summary>
public List<InventoryJournal> GetInventoryJournals_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InventoryJournal>(Service, this.Id, "msdyn_inventoryjournal", "owningteam", Columns); }
/// <summary>
/// <para><b>InventoryTransfer (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_inventorytransfer</para>
/// </summary>
public List<InventoryTransfer> GetInventoryTransfers_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InventoryTransfer>(Service, this.Id, "msdyn_inventorytransfer", "owningteam", Columns); }
/// <summary>
/// <para><b>InventoryTransfer (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_inventorytransfer</para>
/// </summary>
public List<InventoryTransfer> GetInventoryTransfers_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InventoryTransfer>(Service, this.Id, "msdyn_inventorytransfer", "owningteam", Columns); }
/// <summary>
/// <para><b>InvoiceLineDetail (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_invoicelinetransaction</para>
/// </summary>
public List<InvoiceLineDetail> GetInvoiceLineDetails_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceLineDetail>(Service, this.Id, "msdyn_invoicelinetransaction", "owningteam", Columns); }
/// <summary>
/// <para><b>InvoiceLineDetail (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_invoicelinetransaction</para>
/// </summary>
public List<InvoiceLineDetail> GetInvoiceLineDetails_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceLineDetail>(Service, this.Id, "msdyn_invoicelinetransaction", "owningteam", Columns); }
/// <summary>
/// <para><b>Journal (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_journal</para>
/// </summary>
public List<Journal> GetJournals_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Journal>(Service, this.Id, "msdyn_journal", "owningteam", Columns); }
/// <summary>
/// <para><b>Journal (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_journal</para>
/// </summary>
public List<Journal> GetJournals_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Journal>(Service, this.Id, "msdyn_journal", "owningteam", Columns); }
/// <summary>
/// <para><b>JournalLine (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_journalline</para>
/// </summary>
public List<JournalLine> GetJournalLines_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<JournalLine>(Service, this.Id, "msdyn_journalline", "owningteam", Columns); }
/// <summary>
/// <para><b>JournalLine (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_journalline</para>
/// </summary>
public List<JournalLine> GetJournalLines_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<JournalLine>(Service, this.Id, "msdyn_journalline", "owningteam", Columns); }
/// <summary>
/// <para><b>OpportunityLineResourceCategory (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_opportunitylineresourcecategory</para>
/// </summary>
public List<OpportunityLineResourceCategory> GetOpportunityLineResourceCategories_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLineResourceCategory>(Service, this.Id, "msdyn_opportunitylineresourcecategory", "owningteam", Columns); }
/// <summary>
/// <para><b>OpportunityLineResourceCategory (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_opportunitylineresourcecategory</para>
/// </summary>
public List<OpportunityLineResourceCategory> GetOpportunityLineResourceCategories_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLineResourceCategory>(Service, this.Id, "msdyn_opportunitylineresourcecategory", "owningteam", Columns); }
/// <summary>
/// <para><b>OpportunityLineDetail (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_opportunitylinetransaction</para>
/// </summary>
public List<OpportunityLineDetail> GetOpportunityLineDetails_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLineDetail>(Service, this.Id, "msdyn_opportunitylinetransaction", "owningteam", Columns); }
/// <summary>
/// <para><b>OpportunityLineDetail (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_opportunitylinetransaction</para>
/// </summary>
public List<OpportunityLineDetail> GetOpportunityLineDetails_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLineDetail>(Service, this.Id, "msdyn_opportunitylinetransaction", "owningteam", Columns); }
/// <summary>
/// <para><b>OpportunityLineTransactionCategory (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_opportunitylinetransactioncategory</para>
/// </summary>
public List<OpportunityLineTransactionCategory> GetOpportunityLineTransactionCategories_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLineTransactionCategory>(Service, this.Id, "msdyn_opportunitylinetransactioncategory", "owningteam", Columns); }
/// <summary>
/// <para><b>OpportunityLineTransactionCategory (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_opportunitylinetransactioncategory</para>
/// </summary>
public List<OpportunityLineTransactionCategory> GetOpportunityLineTransactionCategories_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLineTransactionCategory>(Service, this.Id, "msdyn_opportunitylinetransactioncategory", "owningteam", Columns); }
/// <summary>
/// <para><b>OpportunityLineTransactionClassification (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_opportunitylinetransactionclassificatio</para>
/// </summary>
public List<OpportunityLineTransactionClassification> GetOpportunityLineTransactionClassifications_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLineTransactionClassification>(Service, this.Id, "msdyn_opportunitylinetransactionclassificatio", "owningteam", Columns); }
/// <summary>
/// <para><b>OpportunityLineTransactionClassification (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_opportunitylinetransactionclassificatio</para>
/// </summary>
public List<OpportunityLineTransactionClassification> GetOpportunityLineTransactionClassifications_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLineTransactionClassification>(Service, this.Id, "msdyn_opportunitylinetransactionclassificatio", "owningteam", Columns); }
/// <summary>
/// <para><b>OpportunityProjectPriceList (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_opportunitypricelist</para>
/// </summary>
public List<OpportunityProjectPriceList> GetProjectPriceLists_OwningTeam2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityProjectPriceList>(Service, this.Id, "msdyn_opportunitypricelist", "owningteam", Columns); }
/// <summary>
/// <para><b>OpportunityProjectPriceList (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_opportunitypricelist</para>
/// </summary>
public List<OpportunityProjectPriceList> GetProjectPriceLists_OwningTeam2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityProjectPriceList>(Service, this.Id, "msdyn_opportunitypricelist", "owningteam", Columns); }
/// <summary>
/// <para><b>OrderInvoicingDate (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_orderinvoicingdate</para>
/// </summary>
public List<OrderInvoicingDate> GetOrderInvoicingDates_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderInvoicingDate>(Service, this.Id, "msdyn_orderinvoicingdate", "owningteam", Columns); }
/// <summary>
/// <para><b>OrderInvoicingDate (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_orderinvoicingdate</para>
/// </summary>
public List<OrderInvoicingDate> GetOrderInvoicingDates_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderInvoicingDate>(Service, this.Id, "msdyn_orderinvoicingdate", "owningteam", Columns); }
/// <summary>
/// <para><b>OrderInvoicingProduct (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_orderinvoicingproduct</para>
/// </summary>
public List<OrderInvoicingProduct> GetOrderInvoicingProducts_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderInvoicingProduct>(Service, this.Id, "msdyn_orderinvoicingproduct", "owningteam", Columns); }
/// <summary>
/// <para><b>OrderInvoicingProduct (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_orderinvoicingproduct</para>
/// </summary>
public List<OrderInvoicingProduct> GetOrderInvoicingProducts_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderInvoicingProduct>(Service, this.Id, "msdyn_orderinvoicingproduct", "owningteam", Columns); }
/// <summary>
/// <para><b>OrderInvoicingSetup (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_orderinvoicingsetup</para>
/// </summary>
public List<OrderInvoicingSetup> GetOrderInvoicingSetups_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderInvoicingSetup>(Service, this.Id, "msdyn_orderinvoicingsetup", "owningteam", Columns); }
/// <summary>
/// <para><b>OrderInvoicingSetup (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_orderinvoicingsetup</para>
/// </summary>
public List<OrderInvoicingSetup> GetOrderInvoicingSetups_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderInvoicingSetup>(Service, this.Id, "msdyn_orderinvoicingsetup", "owningteam", Columns); }
/// <summary>
/// <para><b>OrderInvoicingSetupDate (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_orderinvoicingsetupdate</para>
/// </summary>
public List<OrderInvoicingSetupDate> GetOrderInvoicingSetupDates_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderInvoicingSetupDate>(Service, this.Id, "msdyn_orderinvoicingsetupdate", "owningteam", Columns); }
/// <summary>
/// <para><b>OrderInvoicingSetupDate (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_orderinvoicingsetupdate</para>
/// </summary>
public List<OrderInvoicingSetupDate> GetOrderInvoicingSetupDates_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderInvoicingSetupDate>(Service, this.Id, "msdyn_orderinvoicingsetupdate", "owningteam", Columns); }
/// <summary>
/// <para><b>ProjectContractLineResourceCategory (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_orderlineresourcecategory</para>
/// </summary>
public List<ProjectContractLineResourceCategory> GetProjectContractLineResourceCategories_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineResourceCategory>(Service, this.Id, "msdyn_orderlineresourcecategory", "owningteam", Columns); }
/// <summary>
/// <para><b>ProjectContractLineResourceCategory (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_orderlineresourcecategory</para>
/// </summary>
public List<ProjectContractLineResourceCategory> GetProjectContractLineResourceCategories_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineResourceCategory>(Service, this.Id, "msdyn_orderlineresourcecategory", "owningteam", Columns); }
/// <summary>
/// <para><b>ProjectContractLineDetail (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_orderlinetransaction</para>
/// </summary>
public List<ProjectContractLineDetail> GetProjectContractLineDetails_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineDetail>(Service, this.Id, "msdyn_orderlinetransaction", "owningteam", Columns); }
/// <summary>
/// <para><b>ProjectContractLineDetail (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_orderlinetransaction</para>
/// </summary>
public List<ProjectContractLineDetail> GetProjectContractLineDetails_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineDetail>(Service, this.Id, "msdyn_orderlinetransaction", "owningteam", Columns); }
/// <summary>
/// <para><b>ProjectContractLineTransactionCategory (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_orderlinetransactioncategory</para>
/// </summary>
public List<ProjectContractLineTransactionCategory> GetProjectContractLineTransactionCategories_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineTransactionCategory>(Service, this.Id, "msdyn_orderlinetransactioncategory", "owningteam", Columns); }
/// <summary>
/// <para><b>ProjectContractLineTransactionCategory (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_orderlinetransactioncategory</para>
/// </summary>
public List<ProjectContractLineTransactionCategory> GetProjectContractLineTransactionCategories_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineTransactionCategory>(Service, this.Id, "msdyn_orderlinetransactioncategory", "owningteam", Columns); }
/// <summary>
/// <para><b>ProjectContractLineTransactionClassification (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_orderlinetransactionclassification</para>
/// </summary>
public List<ProjectContractLineTransactionClassification> GetProjectContractLineTransactionClassifications_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineTransactionClassification>(Service, this.Id, "msdyn_orderlinetransactionclassification", "owningteam", Columns); }
/// <summary>
/// <para><b>ProjectContractLineTransactionClassification (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_orderlinetransactionclassification</para>
/// </summary>
public List<ProjectContractLineTransactionClassification> GetProjectContractLineTransactionClassifications_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineTransactionClassification>(Service, this.Id, "msdyn_orderlinetransactionclassification", "owningteam", Columns); }
/// <summary>
/// <para><b>ProjectContractProjectPriceList (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_orderpricelist</para>
/// </summary>
public List<ProjectContractProjectPriceList> GetProjectPriceLists_OwningTeam3 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractProjectPriceList>(Service, this.Id, "msdyn_orderpricelist", "owningteam", Columns); }
/// <summary>
/// <para><b>ProjectContractProjectPriceList (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_orderpricelist</para>
/// </summary>
public List<ProjectContractProjectPriceList> GetProjectPriceLists_OwningTeam3 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractProjectPriceList>(Service, this.Id, "msdyn_orderpricelist", "owningteam", Columns); }
/// <summary>
/// <para><b>Payment (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_payment</para>
/// </summary>
public List<Payment> GetPayments_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Payment>(Service, this.Id, "msdyn_payment", "owningteam", Columns); }
/// <summary>
/// <para><b>Payment (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_payment</para>
/// </summary>
public List<Payment> GetPayments_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Payment>(Service, this.Id, "msdyn_payment", "owningteam", Columns); }
/// <summary>
/// <para><b>PaymentDetail (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_paymentdetail</para>
/// </summary>
public List<PaymentDetail> GetPaymentDetail_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PaymentDetail>(Service, this.Id, "msdyn_paymentdetail", "owningteam", Columns); }
/// <summary>
/// <para><b>PaymentDetail (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_paymentdetail</para>
/// </summary>
public List<PaymentDetail> GetPaymentDetail_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PaymentDetail>(Service, this.Id, "msdyn_paymentdetail", "owningteam", Columns); }
/// <summary>
/// <para><b>PaymentMethod (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_paymentmethod</para>
/// </summary>
public List<PaymentMethod> GetPaymentMethods_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PaymentMethod>(Service, this.Id, "msdyn_paymentmethod", "owningteam", Columns); }
/// <summary>
/// <para><b>PaymentMethod (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_paymentmethod</para>
/// </summary>
public List<PaymentMethod> GetPaymentMethods_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PaymentMethod>(Service, this.Id, "msdyn_paymentmethod", "owningteam", Columns); }
/// <summary>
/// <para><b>PaymentTerm (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_paymentterm</para>
/// </summary>
public List<PaymentTerm> GetPaymentTerms_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PaymentTerm>(Service, this.Id, "msdyn_paymentterm", "owningteam", Columns); }
/// <summary>
/// <para><b>PaymentTerm (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_paymentterm</para>
/// </summary>
public List<PaymentTerm> GetPaymentTerms_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PaymentTerm>(Service, this.Id, "msdyn_paymentterm", "owningteam", Columns); }
/// <summary>
/// <para><b>ProfileAlbum (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_postalbum</para>
/// </summary>
public List<ProfileAlbum> GetProfileAlbums_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProfileAlbum>(Service, this.Id, "msdyn_postalbum", "owningteam", Columns); }
/// <summary>
/// <para><b>ProfileAlbum (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_postalbum</para>
/// </summary>
public List<ProfileAlbum> GetProfileAlbums_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProfileAlbum>(Service, this.Id, "msdyn_postalbum", "owningteam", Columns); }
/// <summary>
/// <para><b>PostalCode (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_postalcode</para>
/// </summary>
public List<PostalCode> GetPostalCodes_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostalCode>(Service, this.Id, "msdyn_postalcode", "owningteam", Columns); }
/// <summary>
/// <para><b>PostalCode (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_postalcode</para>
/// </summary>
public List<PostalCode> GetPostalCodes_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostalCode>(Service, this.Id, "msdyn_postalcode", "owningteam", Columns); }
/// <summary>
/// <para><b>Priority (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_priority</para>
/// </summary>
public List<Priority> GetPriorities_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Priority>(Service, this.Id, "msdyn_priority", "owningteam", Columns); }
/// <summary>
/// <para><b>Priority (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_priority</para>
/// </summary>
public List<Priority> GetPriorities_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Priority>(Service, this.Id, "msdyn_priority", "owningteam", Columns); }
/// <summary>
/// <para><b>Project (Project Team)</b></para>
/// <para>Schema Name: msdyn_team_msdyn_project_projectteamid</para>
/// </summary>
public List<Project> GetProjects_ProjectTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Project>(Service, this.Id, "msdyn_project", "msdyn_projectteamid", Columns); }
/// <summary>
/// <para><b>Project (Project Team)</b></para>
/// <para>Schema Name: msdyn_team_msdyn_project_projectteamid</para>
/// </summary>
public List<Project> GetProjects_ProjectTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Project>(Service, this.Id, "msdyn_project", "msdyn_projectteamid", Columns); }
/// <summary>
/// <para><b>Project (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_project</para>
/// </summary>
public List<Project> GetProjects_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Project>(Service, this.Id, "msdyn_project", "owningteam", Columns); }
/// <summary>
/// <para><b>Project (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_project</para>
/// </summary>
public List<Project> GetProjects_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Project>(Service, this.Id, "msdyn_project", "owningteam", Columns); }
/// <summary>
/// <para><b>ProjectApproval (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_projectapproval</para>
/// </summary>
public List<ProjectApproval> GetProjectApproval_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectApproval>(Service, this.Id, "msdyn_projectapproval", "owningteam", Columns); }
/// <summary>
/// <para><b>ProjectApproval (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_projectapproval</para>
/// </summary>
public List<ProjectApproval> GetProjectApproval_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectApproval>(Service, this.Id, "msdyn_projectapproval", "owningteam", Columns); }
/// <summary>
/// <para><b>ProjectPriceList (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_projectpricelist</para>
/// </summary>
public List<ProjectPriceList> GetProjectPriceLists_OwningTeam4 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectPriceList>(Service, this.Id, "msdyn_projectpricelist", "owningteam", Columns); }
/// <summary>
/// <para><b>ProjectPriceList (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_projectpricelist</para>
/// </summary>
public List<ProjectPriceList> GetProjectPriceLists_OwningTeam4 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectPriceList>(Service, this.Id, "msdyn_projectpricelist", "owningteam", Columns); }
/// <summary>
/// <para><b>ProjectTask (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_projecttask</para>
/// </summary>
public List<ProjectTask> GetProjectTasks_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTask>(Service, this.Id, "msdyn_projecttask", "owningteam", Columns); }
/// <summary>
/// <para><b>ProjectTask (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_projecttask</para>
/// </summary>
public List<ProjectTask> GetProjectTasks_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTask>(Service, this.Id, "msdyn_projecttask", "owningteam", Columns); }
/// <summary>
/// <para><b>ProjectTaskDependency (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_projecttaskdependency</para>
/// </summary>
public List<ProjectTaskDependency> GetProjectTaskDependencies_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTaskDependency>(Service, this.Id, "msdyn_projecttaskdependency", "owningteam", Columns); }
/// <summary>
/// <para><b>ProjectTaskDependency (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_projecttaskdependency</para>
/// </summary>
public List<ProjectTaskDependency> GetProjectTaskDependencies_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTaskDependency>(Service, this.Id, "msdyn_projecttaskdependency", "owningteam", Columns); }
/// <summary>
/// <para><b>ProjectTaskStatusUser (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_projecttaskstatususer</para>
/// </summary>
public List<ProjectTaskStatusUser> GetProjectTaskStatusUser_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTaskStatusUser>(Service, this.Id, "msdyn_projecttaskstatususer", "owningteam", Columns); }
/// <summary>
/// <para><b>ProjectTaskStatusUser (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_projecttaskstatususer</para>
/// </summary>
public List<ProjectTaskStatusUser> GetProjectTaskStatusUser_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTaskStatusUser>(Service, this.Id, "msdyn_projecttaskstatususer", "owningteam", Columns); }
/// <summary>
/// <para><b>ProjectTeamMember (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_projectteam</para>
/// </summary>
public List<ProjectTeamMember> GetProjectTeamMembers_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTeamMember>(Service, this.Id, "msdyn_projectteam", "owningteam", Columns); }
/// <summary>
/// <para><b>ProjectTeamMember (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_projectteam</para>
/// </summary>
public List<ProjectTeamMember> GetProjectTeamMembers_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTeamMember>(Service, this.Id, "msdyn_projectteam", "owningteam", Columns); }
/// <summary>
/// <para><b>ProjectTransactionCategory (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_projecttransactioncategory</para>
/// </summary>
public List<ProjectTransactionCategory> GetProjectTransactionCategories_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTransactionCategory>(Service, this.Id, "msdyn_projecttransactioncategory", "owningteam", Columns); }
/// <summary>
/// <para><b>ProjectTransactionCategory (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_projecttransactioncategory</para>
/// </summary>
public List<ProjectTransactionCategory> GetProjectTransactionCategories_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTransactionCategory>(Service, this.Id, "msdyn_projecttransactioncategory", "owningteam", Columns); }
/// <summary>
/// <para><b>PurchaseOrder (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_purchaseorder</para>
/// </summary>
public List<PurchaseOrder> GetPurchaseOrders_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrder>(Service, this.Id, "msdyn_purchaseorder", "owningteam", Columns); }
/// <summary>
/// <para><b>PurchaseOrder (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_purchaseorder</para>
/// </summary>
public List<PurchaseOrder> GetPurchaseOrders_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrder>(Service, this.Id, "msdyn_purchaseorder", "owningteam", Columns); }
/// <summary>
/// <para><b>PurchaseOrderBill (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_purchaseorderbill</para>
/// </summary>
public List<PurchaseOrderBill> GetPurchaseOrderBills_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderBill>(Service, this.Id, "msdyn_purchaseorderbill", "owningteam", Columns); }
/// <summary>
/// <para><b>PurchaseOrderBill (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_purchaseorderbill</para>
/// </summary>
public List<PurchaseOrderBill> GetPurchaseOrderBills_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderBill>(Service, this.Id, "msdyn_purchaseorderbill", "owningteam", Columns); }
/// <summary>
/// <para><b>PurchaseOrderProduct (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_purchaseorderproduct</para>
/// </summary>
public List<PurchaseOrderProduct> GetPurchaseOrderProducts_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderProduct>(Service, this.Id, "msdyn_purchaseorderproduct", "owningteam", Columns); }
/// <summary>
/// <para><b>PurchaseOrderProduct (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_purchaseorderproduct</para>
/// </summary>
public List<PurchaseOrderProduct> GetPurchaseOrderProducts_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderProduct>(Service, this.Id, "msdyn_purchaseorderproduct", "owningteam", Columns); }
/// <summary>
/// <para><b>PurchaseOrderReceipt (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_purchaseorderreceipt</para>
/// </summary>
public List<PurchaseOrderReceipt> GetPurchaseOrderReceipts_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderReceipt>(Service, this.Id, "msdyn_purchaseorderreceipt", "owningteam", Columns); }
/// <summary>
/// <para><b>PurchaseOrderReceipt (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_purchaseorderreceipt</para>
/// </summary>
public List<PurchaseOrderReceipt> GetPurchaseOrderReceipts_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderReceipt>(Service, this.Id, "msdyn_purchaseorderreceipt", "owningteam", Columns); }
/// <summary>
/// <para><b>PurchaseOrderReceiptProduct (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_purchaseorderreceiptproduct</para>
/// </summary>
public List<PurchaseOrderReceiptProduct> GetPurchaseOrderReceiptProducts_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderReceiptProduct>(Service, this.Id, "msdyn_purchaseorderreceiptproduct", "owningteam", Columns); }
/// <summary>
/// <para><b>PurchaseOrderReceiptProduct (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_purchaseorderreceiptproduct</para>
/// </summary>
public List<PurchaseOrderReceiptProduct> GetPurchaseOrderReceiptProducts_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderReceiptProduct>(Service, this.Id, "msdyn_purchaseorderreceiptproduct", "owningteam", Columns); }
/// <summary>
/// <para><b>PurchaseOrderSubStatus (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_purchaseordersubstatus</para>
/// </summary>
public List<PurchaseOrderSubStatus> GetPurchaseOrderSubStatuses_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderSubStatus>(Service, this.Id, "msdyn_purchaseordersubstatus", "owningteam", Columns); }
/// <summary>
/// <para><b>PurchaseOrderSubStatus (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_purchaseordersubstatus</para>
/// </summary>
public List<PurchaseOrderSubStatus> GetPurchaseOrderSubStatuses_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderSubStatus>(Service, this.Id, "msdyn_purchaseordersubstatus", "owningteam", Columns); }
/// <summary>
/// <para><b>QuoteBookingIncident (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_quotebookingincident</para>
/// </summary>
public List<QuoteBookingIncident> GetQuoteBookingIncidents_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingIncident>(Service, this.Id, "msdyn_quotebookingincident", "owningteam", Columns); }
/// <summary>
/// <para><b>QuoteBookingIncident (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_quotebookingincident</para>
/// </summary>
public List<QuoteBookingIncident> GetQuoteBookingIncidents_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingIncident>(Service, this.Id, "msdyn_quotebookingincident", "owningteam", Columns); }
/// <summary>
/// <para><b>QuoteBookingProduct (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_quotebookingproduct</para>
/// </summary>
public List<QuoteBookingProduct> GetQuoteBookingProducts_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingProduct>(Service, this.Id, "msdyn_quotebookingproduct", "owningteam", Columns); }
/// <summary>
/// <para><b>QuoteBookingProduct (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_quotebookingproduct</para>
/// </summary>
public List<QuoteBookingProduct> GetQuoteBookingProducts_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingProduct>(Service, this.Id, "msdyn_quotebookingproduct", "owningteam", Columns); }
/// <summary>
/// <para><b>QuoteBookingService (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_quotebookingservice</para>
/// </summary>
public List<QuoteBookingService> GetQuoteBookingServices_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingService>(Service, this.Id, "msdyn_quotebookingservice", "owningteam", Columns); }
/// <summary>
/// <para><b>QuoteBookingService (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_quotebookingservice</para>
/// </summary>
public List<QuoteBookingService> GetQuoteBookingServices_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingService>(Service, this.Id, "msdyn_quotebookingservice", "owningteam", Columns); }
/// <summary>
/// <para><b>QuoteBookingServiceTask (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_quotebookingservicetask</para>
/// </summary>
public List<QuoteBookingServiceTask> GetQuoteBookingServiceTasks_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingServiceTask>(Service, this.Id, "msdyn_quotebookingservicetask", "owningteam", Columns); }
/// <summary>
/// <para><b>QuoteBookingServiceTask (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_quotebookingservicetask</para>
/// </summary>
public List<QuoteBookingServiceTask> GetQuoteBookingServiceTasks_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingServiceTask>(Service, this.Id, "msdyn_quotebookingservicetask", "owningteam", Columns); }
/// <summary>
/// <para><b>QuoteBookingSetup (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_quotebookingsetup</para>
/// </summary>
public List<QuoteBookingSetup> GetQuoteBookingSetups_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingSetup>(Service, this.Id, "msdyn_quotebookingsetup", "owningteam", Columns); }
/// <summary>
/// <para><b>QuoteBookingSetup (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_quotebookingsetup</para>
/// </summary>
public List<QuoteBookingSetup> GetQuoteBookingSetups_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingSetup>(Service, this.Id, "msdyn_quotebookingsetup", "owningteam", Columns); }
/// <summary>
/// <para><b>QuoteInvoicingProduct (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_quoteinvoicingproduct</para>
/// </summary>
public List<QuoteInvoicingProduct> GetQuoteInvoicingProducts_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteInvoicingProduct>(Service, this.Id, "msdyn_quoteinvoicingproduct", "owningteam", Columns); }
/// <summary>
/// <para><b>QuoteInvoicingProduct (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_quoteinvoicingproduct</para>
/// </summary>
public List<QuoteInvoicingProduct> GetQuoteInvoicingProducts_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteInvoicingProduct>(Service, this.Id, "msdyn_quoteinvoicingproduct", "owningteam", Columns); }
/// <summary>
/// <para><b>QuoteInvoicingSetup (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_quoteinvoicingsetup</para>
/// </summary>
public List<QuoteInvoicingSetup> GetQuoteInvoicingSetups_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteInvoicingSetup>(Service, this.Id, "msdyn_quoteinvoicingsetup", "owningteam", Columns); }
/// <summary>
/// <para><b>QuoteInvoicingSetup (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_quoteinvoicingsetup</para>
/// </summary>
public List<QuoteInvoicingSetup> GetQuoteInvoicingSetups_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteInvoicingSetup>(Service, this.Id, "msdyn_quoteinvoicingsetup", "owningteam", Columns); }
/// <summary>
/// <para><b>QuoteLineAnalyticsBreakdown (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_quotelineanalyticsbreakdown</para>
/// </summary>
public List<QuoteLineAnalyticsBreakdown> GetQuoteLineAnalyticsBreakdown_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineAnalyticsBreakdown>(Service, this.Id, "msdyn_quotelineanalyticsbreakdown", "owningteam", Columns); }
/// <summary>
/// <para><b>QuoteLineAnalyticsBreakdown (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_quotelineanalyticsbreakdown</para>
/// </summary>
public List<QuoteLineAnalyticsBreakdown> GetQuoteLineAnalyticsBreakdown_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineAnalyticsBreakdown>(Service, this.Id, "msdyn_quotelineanalyticsbreakdown", "owningteam", Columns); }
/// <summary>
/// <para><b>QuoteLineResourceCategory (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_quotelineresourcecategory</para>
/// </summary>
public List<QuoteLineResourceCategory> GetQuoteLineResourceCategories_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineResourceCategory>(Service, this.Id, "msdyn_quotelineresourcecategory", "owningteam", Columns); }
/// <summary>
/// <para><b>QuoteLineResourceCategory (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_quotelineresourcecategory</para>
/// </summary>
public List<QuoteLineResourceCategory> GetQuoteLineResourceCategories_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineResourceCategory>(Service, this.Id, "msdyn_quotelineresourcecategory", "owningteam", Columns); }
/// <summary>
/// <para><b>QuoteLineMilestone (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_quotelinescheduleofvalue</para>
/// </summary>
public List<QuoteLineMilestone> GetQuoteLineMilestones_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineMilestone>(Service, this.Id, "msdyn_quotelinescheduleofvalue", "owningteam", Columns); }
/// <summary>
/// <para><b>QuoteLineMilestone (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_quotelinescheduleofvalue</para>
/// </summary>
public List<QuoteLineMilestone> GetQuoteLineMilestones_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineMilestone>(Service, this.Id, "msdyn_quotelinescheduleofvalue", "owningteam", Columns); }
/// <summary>
/// <para><b>QuoteLineDetail (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_quotelinetransaction</para>
/// </summary>
public List<QuoteLineDetail> GetQuoteLineDetail_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineDetail>(Service, this.Id, "msdyn_quotelinetransaction", "owningteam", Columns); }
/// <summary>
/// <para><b>QuoteLineDetail (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_quotelinetransaction</para>
/// </summary>
public List<QuoteLineDetail> GetQuoteLineDetail_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineDetail>(Service, this.Id, "msdyn_quotelinetransaction", "owningteam", Columns); }
/// <summary>
/// <para><b>QuoteLineTransactionCategory (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_quotelinetransactioncategory</para>
/// </summary>
public List<QuoteLineTransactionCategory> GetQuoteLineTransactionCategories_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineTransactionCategory>(Service, this.Id, "msdyn_quotelinetransactioncategory", "owningteam", Columns); }
/// <summary>
/// <para><b>QuoteLineTransactionCategory (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_quotelinetransactioncategory</para>
/// </summary>
public List<QuoteLineTransactionCategory> GetQuoteLineTransactionCategories_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineTransactionCategory>(Service, this.Id, "msdyn_quotelinetransactioncategory", "owningteam", Columns); }
/// <summary>
/// <para><b>QuoteLineTransactionClassification (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_quotelinetransactionclassification</para>
/// </summary>
public List<QuoteLineTransactionClassification> GetQuoteLineTransactionClassifications_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineTransactionClassification>(Service, this.Id, "msdyn_quotelinetransactionclassification", "owningteam", Columns); }
/// <summary>
/// <para><b>QuoteLineTransactionClassification (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_quotelinetransactionclassification</para>
/// </summary>
public List<QuoteLineTransactionClassification> GetQuoteLineTransactionClassifications_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineTransactionClassification>(Service, this.Id, "msdyn_quotelinetransactionclassification", "owningteam", Columns); }
/// <summary>
/// <para><b>QuoteProjectPriceList (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_quotepricelist</para>
/// </summary>
public List<QuoteProjectPriceList> GetProjectPriceLists_OwningTeam5 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteProjectPriceList>(Service, this.Id, "msdyn_quotepricelist", "owningteam", Columns); }
/// <summary>
/// <para><b>QuoteProjectPriceList (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_quotepricelist</para>
/// </summary>
public List<QuoteProjectPriceList> GetProjectPriceLists_OwningTeam5 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteProjectPriceList>(Service, this.Id, "msdyn_quotepricelist", "owningteam", Columns); }
/// <summary>
/// <para><b>RequirementCharacteristic (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_requirementcharacteristic</para>
/// </summary>
public List<RequirementCharacteristic> GetRequirementCharacteristics_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementCharacteristic>(Service, this.Id, "msdyn_requirementcharacteristic", "owningteam", Columns); }
/// <summary>
/// <para><b>RequirementCharacteristic (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_requirementcharacteristic</para>
/// </summary>
public List<RequirementCharacteristic> GetRequirementCharacteristics_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementCharacteristic>(Service, this.Id, "msdyn_requirementcharacteristic", "owningteam", Columns); }
/// <summary>
/// <para><b>RequirementOrganizationUnit (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_requirementorganizationunit</para>
/// </summary>
public List<RequirementOrganizationUnit> GetRequirementOrganizationUnits_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementOrganizationUnit>(Service, this.Id, "msdyn_requirementorganizationunit", "owningteam", Columns); }
/// <summary>
/// <para><b>RequirementOrganizationUnit (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_requirementorganizationunit</para>
/// </summary>
public List<RequirementOrganizationUnit> GetRequirementOrganizationUnits_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementOrganizationUnit>(Service, this.Id, "msdyn_requirementorganizationunit", "owningteam", Columns); }
/// <summary>
/// <para><b>RequirementResourceCategory (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_requirementresourcecategory</para>
/// </summary>
public List<RequirementResourceCategory> GetRequirementResourceCategory_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementResourceCategory>(Service, this.Id, "msdyn_requirementresourcecategory", "owningteam", Columns); }
/// <summary>
/// <para><b>RequirementResourceCategory (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_requirementresourcecategory</para>
/// </summary>
public List<RequirementResourceCategory> GetRequirementResourceCategory_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementResourceCategory>(Service, this.Id, "msdyn_requirementresourcecategory", "owningteam", Columns); }
/// <summary>
/// <para><b>RequirementResourcePreference (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_requirementresourcepreference</para>
/// </summary>
public List<RequirementResourcePreference> GetRequirementResourcePreferences_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementResourcePreference>(Service, this.Id, "msdyn_requirementresourcepreference", "owningteam", Columns); }
/// <summary>
/// <para><b>RequirementResourcePreference (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_requirementresourcepreference</para>
/// </summary>
public List<RequirementResourcePreference> GetRequirementResourcePreferences_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementResourcePreference>(Service, this.Id, "msdyn_requirementresourcepreference", "owningteam", Columns); }
/// <summary>
/// <para><b>RequirementStatus (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_requirementstatus</para>
/// </summary>
public List<RequirementStatus> GetRequirementStatuses_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementStatus>(Service, this.Id, "msdyn_requirementstatus", "owningteam", Columns); }
/// <summary>
/// <para><b>RequirementStatus (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_requirementstatus</para>
/// </summary>
public List<RequirementStatus> GetRequirementStatuses_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementStatus>(Service, this.Id, "msdyn_requirementstatus", "owningteam", Columns); }
/// <summary>
/// <para><b>ResourceAssignment (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_resourceassignment</para>
/// </summary>
public List<ResourceAssignment> GetResourceAssignments_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceAssignment>(Service, this.Id, "msdyn_resourceassignment", "owningteam", Columns); }
/// <summary>
/// <para><b>ResourceAssignment (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_resourceassignment</para>
/// </summary>
public List<ResourceAssignment> GetResourceAssignments_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceAssignment>(Service, this.Id, "msdyn_resourceassignment", "owningteam", Columns); }
/// <summary>
/// <para><b>ResourceAssignmentDetail (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_resourceassignmentdetail</para>
/// </summary>
public List<ResourceAssignmentDetail> GetResourceAssignmentDetails_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceAssignmentDetail>(Service, this.Id, "msdyn_resourceassignmentdetail", "owningteam", Columns); }
/// <summary>
/// <para><b>ResourceAssignmentDetail (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_resourceassignmentdetail</para>
/// </summary>
public List<ResourceAssignmentDetail> GetResourceAssignmentDetails_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceAssignmentDetail>(Service, this.Id, "msdyn_resourceassignmentdetail", "owningteam", Columns); }
/// <summary>
/// <para><b>ResourcePayType (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_resourcepaytype</para>
/// </summary>
public List<ResourcePayType> GetResourcePayTypes_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourcePayType>(Service, this.Id, "msdyn_resourcepaytype", "owningteam", Columns); }
/// <summary>
/// <para><b>ResourcePayType (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_resourcepaytype</para>
/// </summary>
public List<ResourcePayType> GetResourcePayTypes_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourcePayType>(Service, this.Id, "msdyn_resourcepaytype", "owningteam", Columns); }
/// <summary>
/// <para><b>ResourceRequest (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_resourcerequest</para>
/// </summary>
public List<ResourceRequest> GetResourceRequests_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceRequest>(Service, this.Id, "msdyn_resourcerequest", "owningteam", Columns); }
/// <summary>
/// <para><b>ResourceRequest (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_resourcerequest</para>
/// </summary>
public List<ResourceRequest> GetResourceRequests_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceRequest>(Service, this.Id, "msdyn_resourcerequest", "owningteam", Columns); }
/// <summary>
/// <para><b>ResourceRequirement (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_resourcerequirement</para>
/// </summary>
public List<ResourceRequirement> GetResourceRequirements_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceRequirement>(Service, this.Id, "msdyn_resourcerequirement", "owningteam", Columns); }
/// <summary>
/// <para><b>ResourceRequirement (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_resourcerequirement</para>
/// </summary>
public List<ResourceRequirement> GetResourceRequirements_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceRequirement>(Service, this.Id, "msdyn_resourcerequirement", "owningteam", Columns); }
/// <summary>
/// <para><b>ResourceRequirementDetail (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_resourcerequirementdetail</para>
/// </summary>
public List<ResourceRequirementDetail> GetResourceRequirementDetails_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceRequirementDetail>(Service, this.Id, "msdyn_resourcerequirementdetail", "owningteam", Columns); }
/// <summary>
/// <para><b>ResourceRequirementDetail (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_resourcerequirementdetail</para>
/// </summary>
public List<ResourceRequirementDetail> GetResourceRequirementDetails_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceRequirementDetail>(Service, this.Id, "msdyn_resourcerequirementdetail", "owningteam", Columns); }
/// <summary>
/// <para><b>ResourceTerritory (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_resourceterritory</para>
/// </summary>
public List<ResourceTerritory> GetResourceTerritories_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceTerritory>(Service, this.Id, "msdyn_resourceterritory", "owningteam", Columns); }
/// <summary>
/// <para><b>ResourceTerritory (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_resourceterritory</para>
/// </summary>
public List<ResourceTerritory> GetResourceTerritories_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceTerritory>(Service, this.Id, "msdyn_resourceterritory", "owningteam", Columns); }
/// <summary>
/// <para><b>RMA (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_rma</para>
/// </summary>
public List<RMA> GetRMAs_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMA>(Service, this.Id, "msdyn_rma", "owningteam", Columns); }
/// <summary>
/// <para><b>RMA (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_rma</para>
/// </summary>
public List<RMA> GetRMAs_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMA>(Service, this.Id, "msdyn_rma", "owningteam", Columns); }
/// <summary>
/// <para><b>RMAProduct (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_rmaproduct</para>
/// </summary>
public List<RMAProduct> GetRMAProducts_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMAProduct>(Service, this.Id, "msdyn_rmaproduct", "owningteam", Columns); }
/// <summary>
/// <para><b>RMAProduct (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_rmaproduct</para>
/// </summary>
public List<RMAProduct> GetRMAProducts_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMAProduct>(Service, this.Id, "msdyn_rmaproduct", "owningteam", Columns); }
/// <summary>
/// <para><b>RMAReceipt (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_rmareceipt</para>
/// </summary>
public List<RMAReceipt> GetRMAReceipts_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMAReceipt>(Service, this.Id, "msdyn_rmareceipt", "owningteam", Columns); }
/// <summary>
/// <para><b>RMAReceipt (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_rmareceipt</para>
/// </summary>
public List<RMAReceipt> GetRMAReceipts_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMAReceipt>(Service, this.Id, "msdyn_rmareceipt", "owningteam", Columns); }
/// <summary>
/// <para><b>RMAReceiptProduct (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_rmareceiptproduct</para>
/// </summary>
public List<RMAReceiptProduct> GetRMAReceiptProducts_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMAReceiptProduct>(Service, this.Id, "msdyn_rmareceiptproduct", "owningteam", Columns); }
/// <summary>
/// <para><b>RMAReceiptProduct (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_rmareceiptproduct</para>
/// </summary>
public List<RMAReceiptProduct> GetRMAReceiptProducts_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMAReceiptProduct>(Service, this.Id, "msdyn_rmareceiptproduct", "owningteam", Columns); }
/// <summary>
/// <para><b>RMASub_Status (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_rmasubstatus</para>
/// </summary>
public List<RMASub_Status> GetRMASub_Statuses_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMASub_Status>(Service, this.Id, "msdyn_rmasubstatus", "owningteam", Columns); }
/// <summary>
/// <para><b>RMASub_Status (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_rmasubstatus</para>
/// </summary>
public List<RMASub_Status> GetRMASub_Statuses_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMASub_Status>(Service, this.Id, "msdyn_rmasubstatus", "owningteam", Columns); }
/// <summary>
/// <para><b>RoleCompetencyRequirement (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_rolecompetencyrequirement</para>
/// </summary>
public List<RoleCompetencyRequirement> GetRoleCompetencyRequirement_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RoleCompetencyRequirement>(Service, this.Id, "msdyn_rolecompetencyrequirement", "owningteam", Columns); }
/// <summary>
/// <para><b>RoleCompetencyRequirement (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_rolecompetencyrequirement</para>
/// </summary>
public List<RoleCompetencyRequirement> GetRoleCompetencyRequirement_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RoleCompetencyRequirement>(Service, this.Id, "msdyn_rolecompetencyrequirement", "owningteam", Columns); }
/// <summary>
/// <para><b>RoleUtilization (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_roleutilization</para>
/// </summary>
public List<RoleUtilization> GetRoleUtilization_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RoleUtilization>(Service, this.Id, "msdyn_roleutilization", "owningteam", Columns); }
/// <summary>
/// <para><b>RoleUtilization (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_roleutilization</para>
/// </summary>
public List<RoleUtilization> GetRoleUtilization_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RoleUtilization>(Service, this.Id, "msdyn_roleutilization", "owningteam", Columns); }
/// <summary>
/// <para><b>RTV (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_rtv</para>
/// </summary>
public List<RTV> GetRTVs_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTV>(Service, this.Id, "msdyn_rtv", "owningteam", Columns); }
/// <summary>
/// <para><b>RTV (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_rtv</para>
/// </summary>
public List<RTV> GetRTVs_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTV>(Service, this.Id, "msdyn_rtv", "owningteam", Columns); }
/// <summary>
/// <para><b>RTVProduct (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_rtvproduct</para>
/// </summary>
public List<RTVProduct> GetRTVProducts_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTVProduct>(Service, this.Id, "msdyn_rtvproduct", "owningteam", Columns); }
/// <summary>
/// <para><b>RTVProduct (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_rtvproduct</para>
/// </summary>
public List<RTVProduct> GetRTVProducts_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTVProduct>(Service, this.Id, "msdyn_rtvproduct", "owningteam", Columns); }
/// <summary>
/// <para><b>RTVSub_Status (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_rtvsubstatus</para>
/// </summary>
public List<RTVSub_Status> GetRTVSub_Statuses_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTVSub_Status>(Service, this.Id, "msdyn_rtvsubstatus", "owningteam", Columns); }
/// <summary>
/// <para><b>RTVSub_Status (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_rtvsubstatus</para>
/// </summary>
public List<RTVSub_Status> GetRTVSub_Statuses_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTVSub_Status>(Service, this.Id, "msdyn_rtvsubstatus", "owningteam", Columns); }
/// <summary>
/// <para><b>ScheduleBoardSetting (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_scheduleboardsetting</para>
/// </summary>
public List<ScheduleBoardSetting> GetScheduleBoardSettings_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ScheduleBoardSetting>(Service, this.Id, "msdyn_scheduleboardsetting", "owningteam", Columns); }
/// <summary>
/// <para><b>ScheduleBoardSetting (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_scheduleboardsetting</para>
/// </summary>
public List<ScheduleBoardSetting> GetScheduleBoardSettings_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ScheduleBoardSetting>(Service, this.Id, "msdyn_scheduleboardsetting", "owningteam", Columns); }
/// <summary>
/// <para><b>ServiceTaskType (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_servicetasktype</para>
/// </summary>
public List<ServiceTaskType> GetServiceTaskTypes_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceTaskType>(Service, this.Id, "msdyn_servicetasktype", "owningteam", Columns); }
/// <summary>
/// <para><b>ServiceTaskType (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_servicetasktype</para>
/// </summary>
public List<ServiceTaskType> GetServiceTaskTypes_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceTaskType>(Service, this.Id, "msdyn_servicetasktype", "owningteam", Columns); }
/// <summary>
/// <para><b>ShipVia (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_shipvia</para>
/// </summary>
public List<ShipVia> GetShipVia_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ShipVia>(Service, this.Id, "msdyn_shipvia", "owningteam", Columns); }
/// <summary>
/// <para><b>ShipVia (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_shipvia</para>
/// </summary>
public List<ShipVia> GetShipVia_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ShipVia>(Service, this.Id, "msdyn_shipvia", "owningteam", Columns); }
/// <summary>
/// <para><b>SystemUserSchedulerSetting (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_systemuserschedulersetting</para>
/// </summary>
public List<SystemUserSchedulerSetting> GetSystemUserSchedulerSetting_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemUserSchedulerSetting>(Service, this.Id, "msdyn_systemuserschedulersetting", "owningteam", Columns); }
/// <summary>
/// <para><b>SystemUserSchedulerSetting (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_systemuserschedulersetting</para>
/// </summary>
public List<SystemUserSchedulerSetting> GetSystemUserSchedulerSetting_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemUserSchedulerSetting>(Service, this.Id, "msdyn_systemuserschedulersetting", "owningteam", Columns); }
/// <summary>
/// <para><b>TaxCode (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_taxcode</para>
/// </summary>
public List<TaxCode> GetTaxCodes_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TaxCode>(Service, this.Id, "msdyn_taxcode", "owningteam", Columns); }
/// <summary>
/// <para><b>TaxCode (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_taxcode</para>
/// </summary>
public List<TaxCode> GetTaxCodes_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TaxCode>(Service, this.Id, "msdyn_taxcode", "owningteam", Columns); }
/// <summary>
/// <para><b>TaxCodeDetail (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_taxcodedetail</para>
/// </summary>
public List<TaxCodeDetail> GetTaxCodeDetails_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TaxCodeDetail>(Service, this.Id, "msdyn_taxcodedetail", "owningteam", Columns); }
/// <summary>
/// <para><b>TaxCodeDetail (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_taxcodedetail</para>
/// </summary>
public List<TaxCodeDetail> GetTaxCodeDetails_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TaxCodeDetail>(Service, this.Id, "msdyn_taxcodedetail", "owningteam", Columns); }
/// <summary>
/// <para><b>TimeEntry (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_timeentry</para>
/// </summary>
public List<TimeEntry> GetTimeEntries_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TimeEntry>(Service, this.Id, "msdyn_timeentry", "owningteam", Columns); }
/// <summary>
/// <para><b>TimeEntry (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_timeentry</para>
/// </summary>
public List<TimeEntry> GetTimeEntries_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TimeEntry>(Service, this.Id, "msdyn_timeentry", "owningteam", Columns); }
/// <summary>
/// <para><b>TimeGroup (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_timegroup</para>
/// </summary>
public List<TimeGroup> GetTimeGroups_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TimeGroup>(Service, this.Id, "msdyn_timegroup", "owningteam", Columns); }
/// <summary>
/// <para><b>TimeGroup (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_timegroup</para>
/// </summary>
public List<TimeGroup> GetTimeGroups_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TimeGroup>(Service, this.Id, "msdyn_timegroup", "owningteam", Columns); }
/// <summary>
/// <para><b>TimeGroupDetail (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_timegroupdetail</para>
/// </summary>
public List<TimeGroupDetail> GetTimeGroupDetails_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TimeGroupDetail>(Service, this.Id, "msdyn_timegroupdetail", "owningteam", Columns); }
/// <summary>
/// <para><b>TimeGroupDetail (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_timegroupdetail</para>
/// </summary>
public List<TimeGroupDetail> GetTimeGroupDetails_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TimeGroupDetail>(Service, this.Id, "msdyn_timegroupdetail", "owningteam", Columns); }
/// <summary>
/// <para><b>TimeOffCalendar (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_timeoffcalendar</para>
/// </summary>
public List<TimeOffCalendar> GetTimeOffCalendars_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TimeOffCalendar>(Service, this.Id, "msdyn_timeoffcalendar", "owningteam", Columns); }
/// <summary>
/// <para><b>TimeOffCalendar (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_timeoffcalendar</para>
/// </summary>
public List<TimeOffCalendar> GetTimeOffCalendars_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TimeOffCalendar>(Service, this.Id, "msdyn_timeoffcalendar", "owningteam", Columns); }
/// <summary>
/// <para><b>TimeOffRequest (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_timeoffrequest</para>
/// </summary>
public List<TimeOffRequest> GetTimeOffRequests_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TimeOffRequest>(Service, this.Id, "msdyn_timeoffrequest", "owningteam", Columns); }
/// <summary>
/// <para><b>TimeOffRequest (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_timeoffrequest</para>
/// </summary>
public List<TimeOffRequest> GetTimeOffRequests_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TimeOffRequest>(Service, this.Id, "msdyn_timeoffrequest", "owningteam", Columns); }
/// <summary>
/// <para><b>TransactionConnection (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_transactionconnection</para>
/// </summary>
public List<TransactionConnection> GetTransactionConnections_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TransactionConnection>(Service, this.Id, "msdyn_transactionconnection", "owningteam", Columns); }
/// <summary>
/// <para><b>TransactionConnection (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_transactionconnection</para>
/// </summary>
public List<TransactionConnection> GetTransactionConnections_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TransactionConnection>(Service, this.Id, "msdyn_transactionconnection", "owningteam", Columns); }
/// <summary>
/// <para><b>TransactionOrigin (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_transactionorigin</para>
/// </summary>
public List<TransactionOrigin> GetTransactionOrigins_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TransactionOrigin>(Service, this.Id, "msdyn_transactionorigin", "owningteam", Columns); }
/// <summary>
/// <para><b>TransactionOrigin (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_transactionorigin</para>
/// </summary>
public List<TransactionOrigin> GetTransactionOrigins_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TransactionOrigin>(Service, this.Id, "msdyn_transactionorigin", "owningteam", Columns); }
/// <summary>
/// <para><b>UserWorkHistory (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_userworkhistory</para>
/// </summary>
public List<UserWorkHistory> GetUserWorkHistory_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserWorkHistory>(Service, this.Id, "msdyn_userworkhistory", "owningteam", Columns); }
/// <summary>
/// <para><b>UserWorkHistory (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_userworkhistory</para>
/// </summary>
public List<UserWorkHistory> GetUserWorkHistory_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserWorkHistory>(Service, this.Id, "msdyn_userworkhistory", "owningteam", Columns); }
/// <summary>
/// <para><b>Filter (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_wallsavedqueryusersettings</para>
/// </summary>
public List<Filter> GetFilters_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Filter>(Service, this.Id, "msdyn_wallsavedqueryusersettings", "owningteam", Columns); }
/// <summary>
/// <para><b>Filter (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_wallsavedqueryusersettings</para>
/// </summary>
public List<Filter> GetFilters_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Filter>(Service, this.Id, "msdyn_wallsavedqueryusersettings", "owningteam", Columns); }
/// <summary>
/// <para><b>Warehouse (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_warehouse</para>
/// </summary>
public List<Warehouse> GetWarehouses_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Warehouse>(Service, this.Id, "msdyn_warehouse", "owningteam", Columns); }
/// <summary>
/// <para><b>Warehouse (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_warehouse</para>
/// </summary>
public List<Warehouse> GetWarehouses_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Warehouse>(Service, this.Id, "msdyn_warehouse", "owningteam", Columns); }
/// <summary>
/// <para><b>WorkTemplate (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_workhourtemplate</para>
/// </summary>
public List<WorkTemplate> GetWorkTemplate_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkTemplate>(Service, this.Id, "msdyn_workhourtemplate", "owningteam", Columns); }
/// <summary>
/// <para><b>WorkTemplate (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_workhourtemplate</para>
/// </summary>
public List<WorkTemplate> GetWorkTemplate_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkTemplate>(Service, this.Id, "msdyn_workhourtemplate", "owningteam", Columns); }
/// <summary>
/// <para><b>WorkOrder (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_workorder</para>
/// </summary>
public List<WorkOrder> GetWorkOrders_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrder>(Service, this.Id, "msdyn_workorder", "owningteam", Columns); }
/// <summary>
/// <para><b>WorkOrder (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_workorder</para>
/// </summary>
public List<WorkOrder> GetWorkOrders_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrder>(Service, this.Id, "msdyn_workorder", "owningteam", Columns); }
/// <summary>
/// <para><b>WorkOrderCharacteristic_Deprecated (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_workordercharacteristic</para>
/// </summary>
public List<WorkOrderCharacteristic_Deprecated> GetWorkOrderCharacteristics_Deprecated__OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderCharacteristic_Deprecated>(Service, this.Id, "msdyn_workordercharacteristic", "owningteam", Columns); }
/// <summary>
/// <para><b>WorkOrderCharacteristic_Deprecated (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_workordercharacteristic</para>
/// </summary>
public List<WorkOrderCharacteristic_Deprecated> GetWorkOrderCharacteristics_Deprecated__OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderCharacteristic_Deprecated>(Service, this.Id, "msdyn_workordercharacteristic", "owningteam", Columns); }
/// <summary>
/// <para><b>WorkOrderIncident (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_workorderincident</para>
/// </summary>
public List<WorkOrderIncident> GetWorkOrderIncidents_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderIncident>(Service, this.Id, "msdyn_workorderincident", "owningteam", Columns); }
/// <summary>
/// <para><b>WorkOrderIncident (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_workorderincident</para>
/// </summary>
public List<WorkOrderIncident> GetWorkOrderIncidents_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderIncident>(Service, this.Id, "msdyn_workorderincident", "owningteam", Columns); }
/// <summary>
/// <para><b>WorkOrderProduct (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_workorderproduct</para>
/// </summary>
public List<WorkOrderProduct> GetWorkOrderProducts_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderProduct>(Service, this.Id, "msdyn_workorderproduct", "owningteam", Columns); }
/// <summary>
/// <para><b>WorkOrderProduct (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_workorderproduct</para>
/// </summary>
public List<WorkOrderProduct> GetWorkOrderProducts_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderProduct>(Service, this.Id, "msdyn_workorderproduct", "owningteam", Columns); }
/// <summary>
/// <para><b>ResourceRestriction_Deprecated (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_workorderresourcerestriction</para>
/// </summary>
public List<ResourceRestriction_Deprecated> GetResourceRestrictions_Deprecated__OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceRestriction_Deprecated>(Service, this.Id, "msdyn_workorderresourcerestriction", "owningteam", Columns); }
/// <summary>
/// <para><b>ResourceRestriction_Deprecated (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_workorderresourcerestriction</para>
/// </summary>
public List<ResourceRestriction_Deprecated> GetResourceRestrictions_Deprecated__OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceRestriction_Deprecated>(Service, this.Id, "msdyn_workorderresourcerestriction", "owningteam", Columns); }
/// <summary>
/// <para><b>WorkOrderService (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_workorderservice</para>
/// </summary>
public List<WorkOrderService> GetWorkOrderServices_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderService>(Service, this.Id, "msdyn_workorderservice", "owningteam", Columns); }
/// <summary>
/// <para><b>WorkOrderService (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_workorderservice</para>
/// </summary>
public List<WorkOrderService> GetWorkOrderServices_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderService>(Service, this.Id, "msdyn_workorderservice", "owningteam", Columns); }
/// <summary>
/// <para><b>WorkOrderServiceTask (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_workorderservicetask</para>
/// </summary>
public List<WorkOrderServiceTask> GetWorkOrderServiceTasks_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderServiceTask>(Service, this.Id, "msdyn_workorderservicetask", "owningteam", Columns); }
/// <summary>
/// <para><b>WorkOrderServiceTask (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_workorderservicetask</para>
/// </summary>
public List<WorkOrderServiceTask> GetWorkOrderServiceTasks_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderServiceTask>(Service, this.Id, "msdyn_workorderservicetask", "owningteam", Columns); }
/// <summary>
/// <para><b>WorkOrderSub_Status (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_workordersubstatus</para>
/// </summary>
public List<WorkOrderSub_Status> GetWorkOrderSub_Statuses_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderSub_Status>(Service, this.Id, "msdyn_workordersubstatus", "owningteam", Columns); }
/// <summary>
/// <para><b>WorkOrderSub_Status (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_workordersubstatus</para>
/// </summary>
public List<WorkOrderSub_Status> GetWorkOrderSub_Statuses_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderSub_Status>(Service, this.Id, "msdyn_workordersubstatus", "owningteam", Columns); }
/// <summary>
/// <para><b>WorkOrderType (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_workordertype</para>
/// </summary>
public List<WorkOrderType> GetWorkOrderTypes_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderType>(Service, this.Id, "msdyn_workordertype", "owningteam", Columns); }
/// <summary>
/// <para><b>WorkOrderType (Owning Team)</b></para>
/// <para>Schema Name: team_msdyn_workordertype</para>
/// </summary>
public List<WorkOrderType> GetWorkOrderTypes_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderType>(Service, this.Id, "msdyn_workordertype", "owningteam", Columns); }
/// <summary>
/// <para><b>Opportunity (Owning Team)</b></para>
/// <para>Schema Name: team_opportunities</para>
/// </summary>
public List<Opportunity> GetOpportunities_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Opportunity>(Service, this.Id, "opportunity", "owningteam", Columns); }
/// <summary>
/// <para><b>Opportunity (Owning Team)</b></para>
/// <para>Schema Name: team_opportunities</para>
/// </summary>
public List<Opportunity> GetOpportunities_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Opportunity>(Service, this.Id, "opportunity", "owningteam", Columns); }
/// <summary>
/// <para><b>OpportunityClose (Owning Team)</b></para>
/// <para>Schema Name: team_opportunityclose</para>
/// </summary>
public List<OpportunityClose> GetOpportunityCloseActivities_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityClose>(Service, this.Id, "opportunityclose", "owningteam", Columns); }
/// <summary>
/// <para><b>OpportunityClose (Owning Team)</b></para>
/// <para>Schema Name: team_opportunityclose</para>
/// </summary>
public List<OpportunityClose> GetOpportunityCloseActivities_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityClose>(Service, this.Id, "opportunityclose", "owningteam", Columns); }
/// <summary>
/// <para><b>OrderClose (Owning Team)</b></para>
/// <para>Schema Name: team_orderclose</para>
/// </summary>
public List<OrderClose> GetOrderCloseActivities_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderClose>(Service, this.Id, "orderclose", "owningteam", Columns); }
/// <summary>
/// <para><b>OrderClose (Owning Team)</b></para>
/// <para>Schema Name: team_orderclose</para>
/// </summary>
public List<OrderClose> GetOrderCloseActivities_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderClose>(Service, this.Id, "orderclose", "owningteam", Columns); }
/// <summary>
/// <para><b>PhoneCall (Owning Team)</b></para>
/// <para>Schema Name: team_phonecall</para>
/// </summary>
public List<PhoneCall> GetPhoneCalls_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneCall>(Service, this.Id, "phonecall", "owningteam", Columns); }
/// <summary>
/// <para><b>PhoneCall (Owning Team)</b></para>
/// <para>Schema Name: team_phonecall</para>
/// </summary>
public List<PhoneCall> GetPhoneCalls_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneCall>(Service, this.Id, "phonecall", "owningteam", Columns); }
/// <summary>
/// <para><b>Follow (Owning Team)</b></para>
/// <para>Schema Name: OwningTeam_postfollows</para>
/// </summary>
public List<Follow> GetFollows_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Follow>(Service, this.Id, "postfollow", "owningteam", Columns); }
/// <summary>
/// <para><b>Follow (Owning Team)</b></para>
/// <para>Schema Name: OwningTeam_postfollows</para>
/// </summary>
public List<Follow> GetFollows_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Follow>(Service, this.Id, "postfollow", "owningteam", Columns); }
/// <summary>
/// <para><b>PostRegarding (RegardingObjectId)</b></para>
/// <para>Schema Name: team_PostRegardings</para>
/// </summary>
public List<PostRegarding> GetPostRegarding_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostRegarding>(Service, this.Id, "postregarding", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PostRegarding (RegardingObjectId)</b></para>
/// <para>Schema Name: team_PostRegardings</para>
/// </summary>
public List<PostRegarding> GetPostRegarding_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostRegarding>(Service, this.Id, "postregarding", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PostRole (RegardingObjectId)</b></para>
/// <para>Schema Name: team_PostRoles</para>
/// </summary>
public List<PostRole> GetPostRoles_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostRole>(Service, this.Id, "postrole", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PostRole (RegardingObjectId)</b></para>
/// <para>Schema Name: team_PostRoles</para>
/// </summary>
public List<PostRole> GetPostRoles_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostRole>(Service, this.Id, "postrole", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: team_principalobjectattributeaccess</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: team_principalobjectattributeaccess</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Principal)</b></para>
/// <para>Schema Name: team_principalobjectattributeaccess_principalid</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_Principal (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "principalid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Principal)</b></para>
/// <para>Schema Name: team_principalobjectattributeaccess_principalid</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_Principal (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "principalid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Owning Team)</b></para>
/// <para>Schema Name: team_processsession</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "owningteam", Columns); }
/// <summary>
/// <para><b>ProcessSession (Owning Team)</b></para>
/// <para>Schema Name: team_processsession</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "owningteam", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: Team_ProcessSessions</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: Team_ProcessSessions</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>QueueItem (Worked By)</b></para>
/// <para>Schema Name: team_queueitembase_workerid</para>
/// </summary>
public List<QueueItem> GetQueueItems_WorkedBy (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QueueItem>(Service, this.Id, "queueitem", "workerid", Columns); }
/// <summary>
/// <para><b>QueueItem (Worked By)</b></para>
/// <para>Schema Name: team_queueitembase_workerid</para>
/// </summary>
public List<QueueItem> GetQueueItems_WorkedBy (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QueueItem>(Service, this.Id, "queueitem", "workerid", Columns); }
/// <summary>
/// <para><b>Quote (Owning Team)</b></para>
/// <para>Schema Name: team_quotes</para>
/// </summary>
public List<Quote> GetQuotes_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Quote>(Service, this.Id, "quote", "owningteam", Columns); }
/// <summary>
/// <para><b>Quote (Owning Team)</b></para>
/// <para>Schema Name: team_quotes</para>
/// </summary>
public List<Quote> GetQuotes_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Quote>(Service, this.Id, "quote", "owningteam", Columns); }
/// <summary>
/// <para><b>QuoteClose (Owning Team)</b></para>
/// <para>Schema Name: team_quoteclose</para>
/// </summary>
public List<QuoteClose> GetQuoteCloseActivities_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteClose>(Service, this.Id, "quoteclose", "owningteam", Columns); }
/// <summary>
/// <para><b>QuoteClose (Owning Team)</b></para>
/// <para>Schema Name: team_quoteclose</para>
/// </summary>
public List<QuoteClose> GetQuoteCloseActivities_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteClose>(Service, this.Id, "quoteclose", "owningteam", Columns); }
/// <summary>
/// <para><b>RatingModel (Owning Team)</b></para>
/// <para>Schema Name: team_ratingmodel</para>
/// </summary>
public List<RatingModel> GetRatingModels_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RatingModel>(Service, this.Id, "ratingmodel", "owningteam", Columns); }
/// <summary>
/// <para><b>RatingModel (Owning Team)</b></para>
/// <para>Schema Name: team_ratingmodel</para>
/// </summary>
public List<RatingModel> GetRatingModels_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RatingModel>(Service, this.Id, "ratingmodel", "owningteam", Columns); }
/// <summary>
/// <para><b>RatingValue (Owning Team)</b></para>
/// <para>Schema Name: team_ratingvalue</para>
/// </summary>
public List<RatingValue> GetRatingValues_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RatingValue>(Service, this.Id, "ratingvalue", "owningteam", Columns); }
/// <summary>
/// <para><b>RatingValue (Owning Team)</b></para>
/// <para>Schema Name: team_ratingvalue</para>
/// </summary>
public List<RatingValue> GetRatingValues_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RatingValue>(Service, this.Id, "ratingvalue", "owningteam", Columns); }
/// <summary>
/// <para><b>RecurringAppointment (Owning Team)</b></para>
/// <para>Schema Name: team_recurringappointmentmaster</para>
/// </summary>
public List<RecurringAppointment> GetRecurringAppointments_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecurringAppointment>(Service, this.Id, "recurringappointmentmaster", "owningteam", Columns); }
/// <summary>
/// <para><b>RecurringAppointment (Owning Team)</b></para>
/// <para>Schema Name: team_recurringappointmentmaster</para>
/// </summary>
public List<RecurringAppointment> GetRecurringAppointments_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecurringAppointment>(Service, this.Id, "recurringappointmentmaster", "owningteam", Columns); }
/// <summary>
/// <para><b>SchedulingGroup (Scheduling Group)</b></para>
/// <para>Schema Name: team_resource_groups</para>
/// </summary>
public List<SchedulingGroup> GetSchedulingGroups_SchedulingGroup (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SchedulingGroup>(Service, this.Id, "resourcegroup", "resourcegroupid", Columns); }
/// <summary>
/// <para><b>SchedulingGroup (Scheduling Group)</b></para>
/// <para>Schema Name: team_resource_groups</para>
/// </summary>
public List<SchedulingGroup> GetSchedulingGroups_SchedulingGroup (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SchedulingGroup>(Service, this.Id, "resourcegroup", "resourcegroupid", Columns); }
/// <summary>
/// <para><b>ResourceSpecification (Group Object)</b></para>
/// <para>Schema Name: team_resource_specs</para>
/// </summary>
public List<ResourceSpecification> GetResourceSpecifications_GroupObject (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceSpecification>(Service, this.Id, "resourcespec", "groupobjectid", Columns); }
/// <summary>
/// <para><b>ResourceSpecification (Group Object)</b></para>
/// <para>Schema Name: team_resource_specs</para>
/// </summary>
public List<ResourceSpecification> GetResourceSpecifications_GroupObject (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceSpecification>(Service, this.Id, "resourcespec", "groupobjectid", Columns); }
/// <summary>
/// <para><b>RoutingRuleSet (Owning Team)</b></para>
/// <para>Schema Name: team_routingrule</para>
/// </summary>
public List<RoutingRuleSet> GetRoutingRuleSets_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RoutingRuleSet>(Service, this.Id, "routingrule", "owningteam", Columns); }
/// <summary>
/// <para><b>RoutingRuleSet (Owning Team)</b></para>
/// <para>Schema Name: team_routingrule</para>
/// </summary>
public List<RoutingRuleSet> GetRoutingRuleSets_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RoutingRuleSet>(Service, this.Id, "routingrule", "owningteam", Columns); }
/// <summary>
/// <para><b>RuleItem (Assign to User/Team)</b></para>
/// <para>Schema Name: team_routingruleitem</para>
/// </summary>
public List<RuleItem> GetRuleItems_AssignToUser_Team (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RuleItem>(Service, this.Id, "routingruleitem", "assignobjectid", Columns); }
/// <summary>
/// <para><b>RuleItem (Assign to User/Team)</b></para>
/// <para>Schema Name: team_routingruleitem</para>
/// </summary>
public List<RuleItem> GetRuleItems_AssignToUser_Team (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RuleItem>(Service, this.Id, "routingruleitem", "assignobjectid", Columns); }
/// <summary>
/// <para><b>Order (Owning Team)</b></para>
/// <para>Schema Name: team_orders</para>
/// </summary>
public List<Order> GetOrders_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Order>(Service, this.Id, "salesorder", "owningteam", Columns); }
/// <summary>
/// <para><b>Order (Owning Team)</b></para>
/// <para>Schema Name: team_orders</para>
/// </summary>
public List<Order> GetOrders_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Order>(Service, this.Id, "salesorder", "owningteam", Columns); }
/// <summary>
/// <para><b>ServiceActivity (Owning Team)</b></para>
/// <para>Schema Name: team_service_appointments</para>
/// </summary>
public List<ServiceActivity> GetServiceActivities_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceActivity>(Service, this.Id, "serviceappointment", "owningteam", Columns); }
/// <summary>
/// <para><b>ServiceActivity (Owning Team)</b></para>
/// <para>Schema Name: team_service_appointments</para>
/// </summary>
public List<ServiceActivity> GetServiceActivities_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceActivity>(Service, this.Id, "serviceappointment", "owningteam", Columns); }
/// <summary>
/// <para><b>DocumentLocation (Owning Team)</b></para>
/// <para>Schema Name: team_sharepointdocumentlocation</para>
/// </summary>
public List<DocumentLocation> GetDocumentLocations_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DocumentLocation>(Service, this.Id, "sharepointdocumentlocation", "owningteam", Columns); }
/// <summary>
/// <para><b>DocumentLocation (Owning Team)</b></para>
/// <para>Schema Name: team_sharepointdocumentlocation</para>
/// </summary>
public List<DocumentLocation> GetDocumentLocations_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DocumentLocation>(Service, this.Id, "sharepointdocumentlocation", "owningteam", Columns); }
/// <summary>
/// <para><b>SharePointSite (Owning Team)</b></para>
/// <para>Schema Name: team_sharepointsite</para>
/// </summary>
public List<SharePointSite> GetSharePointSites_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SharePointSite>(Service, this.Id, "sharepointsite", "owningteam", Columns); }
/// <summary>
/// <para><b>SharePointSite (Owning Team)</b></para>
/// <para>Schema Name: team_sharepointsite</para>
/// </summary>
public List<SharePointSite> GetSharePointSites_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SharePointSite>(Service, this.Id, "sharepointsite", "owningteam", Columns); }
/// <summary>
/// <para><b>SLA (Owning Team)</b></para>
/// <para>Schema Name: team_slaBase</para>
/// </summary>
public List<SLA> GetSLAs_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SLA>(Service, this.Id, "sla", "owningteam", Columns); }
/// <summary>
/// <para><b>SLA (Owning Team)</b></para>
/// <para>Schema Name: team_slaBase</para>
/// </summary>
public List<SLA> GetSLAs_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SLA>(Service, this.Id, "sla", "owningteam", Columns); }
/// <summary>
/// <para><b>SocialActivity (Owning Team)</b></para>
/// <para>Schema Name: team_socialactivity</para>
/// </summary>
public List<SocialActivity> GetSocialActivities_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialActivity>(Service, this.Id, "socialactivity", "owningteam", Columns); }
/// <summary>
/// <para><b>SocialActivity (Owning Team)</b></para>
/// <para>Schema Name: team_socialactivity</para>
/// </summary>
public List<SocialActivity> GetSocialActivities_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialActivity>(Service, this.Id, "socialactivity", "owningteam", Columns); }
/// <summary>
/// <para><b>SyncError (Owning Team)</b></para>
/// <para>Schema Name: team_SyncError</para>
/// </summary>
public List<SyncError> GetSyncErrors_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "owningteam", Columns); }
/// <summary>
/// <para><b>SyncError (Owning Team)</b></para>
/// <para>Schema Name: team_SyncError</para>
/// </summary>
public List<SyncError> GetSyncErrors_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "owningteam", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: Team_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: Team_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Task (Owning Team)</b></para>
/// <para>Schema Name: team_task</para>
/// </summary>
public List<Task> GetTasks_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Task>(Service, this.Id, "task", "owningteam", Columns); }
/// <summary>
/// <para><b>Task (Owning Team)</b></para>
/// <para>Schema Name: team_task</para>
/// </summary>
public List<Task> GetTasks_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Task>(Service, this.Id, "task", "owningteam", Columns); }
/// <summary>
/// <para><b>EmailTemplate (Owning Team)</b></para>
/// <para>Schema Name: team_email_templates</para>
/// </summary>
public List<EmailTemplate> GetEmailTemplates_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EmailTemplate>(Service, this.Id, "template", "owningteam", Columns); }
/// <summary>
/// <para><b>EmailTemplate (Owning Team)</b></para>
/// <para>Schema Name: team_email_templates</para>
/// </summary>
public List<EmailTemplate> GetEmailTemplates_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EmailTemplate>(Service, this.Id, "template", "owningteam", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Owning Team)</b></para>
/// <para>Schema Name: team_userentityinstancedata</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "owningteam", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Owning Team)</b></para>
/// <para>Schema Name: team_userentityinstancedata</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "owningteam", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_team</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_team</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityUISettings (Owning Team)</b></para>
/// <para>Schema Name: team_userentityuisettings</para>
/// </summary>
public List<UserEntityUISettings> GetUserEntityUISettings_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityUISettings>(Service, this.Id, "userentityuisettings", "owningteam", Columns); }
/// <summary>
/// <para><b>UserEntityUISettings (Owning Team)</b></para>
/// <para>Schema Name: team_userentityuisettings</para>
/// </summary>
public List<UserEntityUISettings> GetUserEntityUISettings_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityUISettings>(Service, this.Id, "userentityuisettings", "owningteam", Columns); }
/// <summary>
/// <para><b>UserDashboard (Owning Team)</b></para>
/// <para>Schema Name: team_userform</para>
/// </summary>
public List<UserDashboard> GetUserDashboards_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserDashboard>(Service, this.Id, "userform", "owningteam", Columns); }
/// <summary>
/// <para><b>UserDashboard (Owning Team)</b></para>
/// <para>Schema Name: team_userform</para>
/// </summary>
public List<UserDashboard> GetUserDashboards_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserDashboard>(Service, this.Id, "userform", "owningteam", Columns); }
/// <summary>
/// <para><b>SavedView (Owning Team)</b></para>
/// <para>Schema Name: team_userquery</para>
/// </summary>
public List<SavedView> GetSavedViews_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SavedView>(Service, this.Id, "userquery", "owningteam", Columns); }
/// <summary>
/// <para><b>SavedView (Owning Team)</b></para>
/// <para>Schema Name: team_userquery</para>
/// </summary>
public List<SavedView> GetSavedViews_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SavedView>(Service, this.Id, "userquery", "owningteam", Columns); }
/// <summary>
/// <para><b>UserChart (Owning Team)</b></para>
/// <para>Schema Name: team_userqueryvisualizations</para>
/// </summary>
public List<UserChart> GetUserCharts_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserChart>(Service, this.Id, "userqueryvisualization", "owningteam", Columns); }
/// <summary>
/// <para><b>UserChart (Owning Team)</b></para>
/// <para>Schema Name: team_userqueryvisualizations</para>
/// </summary>
public List<UserChart> GetUserCharts_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserChart>(Service, this.Id, "userqueryvisualization", "owningteam", Columns); }
/// <summary>
/// <para><b>Process (Owning Team)</b></para>
/// <para>Schema Name: team_workflow</para>
/// </summary>
public List<Process> GetProcesses_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Process>(Service, this.Id, "workflow", "owningteam", Columns); }
/// <summary>
/// <para><b>Process (Owning Team)</b></para>
/// <para>Schema Name: team_workflow</para>
/// </summary>
public List<Process> GetProcesses_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Process>(Service, this.Id, "workflow", "owningteam", Columns); }
/// <summary>
/// <para><b>ProcessLog (Owning Team)</b></para>
/// <para>Schema Name: team_workflowlog</para>
/// </summary>
public List<ProcessLog> GetProcessLogs_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessLog>(Service, this.Id, "workflowlog", "owningteam", Columns); }
/// <summary>
/// <para><b>ProcessLog (Owning Team)</b></para>
/// <para>Schema Name: team_workflowlog</para>
/// </summary>
public List<ProcessLog> GetProcessLogs_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessLog>(Service, this.Id, "workflowlog", "owningteam", Columns); }


        /// <summary>
/// <para>Related Entity: <b>Security Role</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: teamroles_association</para>
/// </summary>
public List<SecurityRole> GetSecurityRoles (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<SecurityRole>(Service, this, "team", "teamid", "role", "roleid", "teamroles", "teamid", "roleid", Columns); }
public List<SecurityRole> GetSecurityRoles (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<SecurityRole>(Service, this, "team", "teamid", "role", "roleid", "teamroles", "teamid", "roleid", Columns); }
public void RelateSecurityRoles (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "teamroles_association", Items); }
public void RelateSecurityRoles (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "teamroles_association", Items); }
public void UnRelateSecurityRoles (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "teamroles_association", Items); }
public void UnRelateSecurityRoles (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "teamroles_association", Items); }
/// <summary>
/// <para>Related Entity: <b>User</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: teammembership_association</para>
/// </summary>
public List<User> GetUsers (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<User>(Service, this, "team", "teamid", "systemuser", "systemuserid", "teammembership", "teamid", "systemuserid", Columns); }
public List<User> GetUsers (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<User>(Service, this, "team", "teamid", "systemuser", "systemuserid", "teammembership", "teamid", "systemuserid", Columns); }
public void RelateUsers (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "teammembership_association", Items); }
public void RelateUsers (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "teammembership_association", Items); }
public void UnRelateUsers (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "teammembership_association", Items); }
public void UnRelateUsers (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "teammembership_association", Items); }
/// <summary>
/// <para>Related Entity: <b>Sync Attribute Mapping Profile</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: teamsyncattributemappingprofiles_association</para>
/// </summary>
public List<SyncAttributeMappingProfile> GetSyncAttributeMappingProfiles (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<SyncAttributeMappingProfile>(Service, this, "team", "teamid", "syncattributemappingprofile", "syncattributemappingprofileid", "teamsyncattributemappingprofiles", "teamid", "syncattributemappingprofileid", Columns); }
public List<SyncAttributeMappingProfile> GetSyncAttributeMappingProfiles (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<SyncAttributeMappingProfile>(Service, this, "team", "teamid", "syncattributemappingprofile", "syncattributemappingprofileid", "teamsyncattributemappingprofiles", "teamid", "syncattributemappingprofileid", Columns); }
public void RelateSyncAttributeMappingProfiles (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "teamsyncattributemappingprofiles_association", Items); }
public void RelateSyncAttributeMappingProfiles (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "teamsyncattributemappingprofiles_association", Items); }
public void UnRelateSyncAttributeMappingProfiles (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "teamsyncattributemappingprofiles_association", Items); }
public void UnRelateSyncAttributeMappingProfiles (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "teamsyncattributemappingprofiles_association", Items); }
/// <summary>
/// <para>Related Entity: <b>Field Security Profile</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: teamprofiles_association</para>
/// </summary>
public List<FieldSecurityProfile> GetFieldSecurityProfiles (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<FieldSecurityProfile>(Service, this, "team", "teamid", "fieldsecurityprofile", "fieldsecurityprofileid", "teamprofiles", "teamid", "fieldsecurityprofileid", Columns); }
public List<FieldSecurityProfile> GetFieldSecurityProfiles (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<FieldSecurityProfile>(Service, this, "team", "teamid", "fieldsecurityprofile", "fieldsecurityprofileid", "teamprofiles", "teamid", "fieldsecurityprofileid", Columns); }
public void RelateFieldSecurityProfiles (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "teamprofiles_association", Items); }
public void RelateFieldSecurityProfiles (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "teamprofiles_association", Items); }
public void UnRelateFieldSecurityProfiles (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "teamprofiles_association", Items); }
public void UnRelateFieldSecurityProfiles (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "teamprofiles_association", Items); }


                /// <summary>
        /// Add a group of members to a team.
        /// </summary>
        /// <param name="Service">Organization Service</param>
        /// <param name="MemberIds">Ids of the members to add to the team.</param>
        public void AddMembers(IOrganizationService Service, List<Guid> MemberIds)
        {
            AddMembersTeamRequest Request = new AddMembersTeamRequest() { TeamId = this.Id, MemberIds = MemberIds.ToArray() };
            Service.Execute(Request);
        }


        public enum eTeamType
{
	///<summary><para>Owner</para>
	///<para>Value = 0</para></summary>
	[Description("Owner")]
	Owner = 0, 
	///<summary><para>Access</para>
	///<para>Value = 1</para></summary>
	[Description("Access")]
	Access = 1
}


        public static class Properties
{
	/// <summary><para>transactioncurrencyidname</para>
	/// <para>transactioncurrencyidname</para></summary>
	public const string TransactionCurrencyIdName = "transactioncurrencyidname";
	/// <summary><para>queueidname</para>
	/// <para>queueidname</para></summary>
	public const string QueueIdName = "queueidname";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>businessunitidname</para>
	/// <para>businessunitidname</para></summary>
	public const string BusinessUnitIdName = "businessunitidname";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>administratoridname</para>
	/// <para>administratoridname</para></summary>
	public const string AdministratorIdName = "administratoridname";
	/// <summary><para>administratoridyominame</para>
	/// <para>administratoridyominame</para></summary>
	public const string AdministratorIdYomiName = "administratoridyominame";
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>organizationidname</para>
	/// <para>organizationidname</para></summary>
	public const string OrganizationIdName = "organizationidname";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>Administrator</para>
	/// <para>administratorid</para></summary>
	public const string Administrator = "administratorid";
	/// <summary><para>Business Unit</para>
	/// <para>businessunitid</para></summary>
	public const string BusinessUnit = "businessunitid";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Currency</para>
	/// <para>transactioncurrencyid</para></summary>
	public const string Currency = "transactioncurrencyid";
	/// <summary><para>Default Queue</para>
	/// <para>queueid</para></summary>
	public const string DefaultQueue = "queueid";
	/// <summary><para>Description</para>
	/// <para>description</para></summary>
	public const string Description = "description";
	/// <summary><para>Email</para>
	/// <para>emailaddress</para></summary>
	public const string Email = "emailaddress";
	/// <summary><para>Exchange Rate</para>
	/// <para>exchangerate</para></summary>
	public const string ExchangeRate = "exchangerate";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string ImportSequenceNumber = "importsequencenumber";
	/// <summary><para>Is Default</para>
	/// <para>isdefault</para></summary>
	public const string IsDefault = "isdefault";
	/// <summary><para>Is System Managed</para>
	/// <para>systemmanaged</para></summary>
	public const string IsSystemManaged = "systemmanaged";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>Organization </para>
	/// <para>organizationid</para></summary>
	public const string Organization = "organizationid";
	/// <summary><para>Process</para>
	/// <para>processid</para></summary>
	public const string Process = "processid";
	/// <summary><para>Process Stage</para>
	/// <para>stageid</para></summary>
	public const string ProcessStage = "stageid";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string RecordCreatedOn = "overriddencreatedon";
	/// <summary><para>Regarding Object Id</para>
	/// <para>regardingobjectid</para></summary>
	public const string RegardingObjectId = "regardingobjectid";
	/// <summary><para>Regarding Object Type</para>
	/// <para>regardingobjecttypecode</para></summary>
	public const string RegardingObjectType = "regardingobjecttypecode";
	/// <summary><para>Team</para>
	/// <para>teamid</para></summary>
	public const string TeamId = "teamid";
	/// <summary><para>Team Name</para>
	/// <para>name</para></summary>
	public const string TeamName = "name";
	/// <summary><para>Team Template Identifier</para>
	/// <para>teamtemplateid</para></summary>
	public const string TeamTemplateIdentifier = "teamtemplateid";
	/// <summary><para>Team Type</para>
	/// <para>teamtype</para></summary>
	public const string TeamType = "teamtype";
	/// <summary><para>Traversed Path</para>
	/// <para>traversedpath</para></summary>
	public const string TraversedPath = "traversedpath";
	/// <summary><para>Version number</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
	/// <summary><para>Yomi Name</para>
	/// <para>yominame</para></summary>
	public const string YomiName = "yominame";
}

    }
}

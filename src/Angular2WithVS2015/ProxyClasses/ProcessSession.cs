// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("processsession")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class ProcessSession : BaseProxyClass
    {
        public new const string LogicalName = "processsession";
        public const int ObjectTypeCode = 4710;
        public const string PrimaryIdAttribute = "processsessionid";
        public const string PrimaryNameAttribute = "name";
        
        static ProcessSession()
        {
            BaseProxyClass.RegisterProxyType(typeof(ProcessSession), "processsession");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public ProcessSession() : base(new Entity("processsession")) { }
        public ProcessSession(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<ProcessSession>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: processidname</para>
///<para>Max Length: 160 characters</para>
///</summary>
[AttributeLogicalNameAttribute("processidname")]
public string ProcessIdName
{
	get { return this.GetPropertyValue<string>("processidname"); }
}
///<summary>
///<para>Logical Name: owneridtype</para>
///</summary>
[AttributeLogicalNameAttribute("owneridtype")]
public string OwnerIdType
{
	get { return this.GetPropertyValue<string>("owneridtype"); }
	set { this.SetPropertyValue<string>("owneridtype", value, "OwnerIdType"); }
}
///<summary>
///<para>Logical Name: canceledbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("canceledbyyominame")]
public string CanceledByYomiName
{
	get { return this.GetPropertyValue<string>("canceledbyyominame"); }
}
///<summary>
///<para>Logical Name: regardingobjectidyominame</para>
///<para>Max Length: 400 characters</para>
///</summary>
[AttributeLogicalNameAttribute("regardingobjectidyominame")]
public string RegardingObjectIdYomiName
{
	get { return this.GetPropertyValue<string>("regardingobjectidyominame"); }
	set { this.SetPropertyValue("regardingobjectidyominame", value, 400, "RegardingObjectIdYomiName"); }
}
///<summary>
///<para>Logical Name: owneridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridname")]
public string OwnerIdName
{
	get { return this.GetPropertyValue<string>("owneridname"); }
}
///<summary>
///<para>Logical Name: originatingsessionidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("originatingsessionidname")]
public string OriginatingSessionIdName
{
	get { return this.GetPropertyValue<string>("originatingsessionidname"); }
}
///<summary>
///<para>Logical Name: startedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("startedbyname")]
public string StartedByName
{
	get { return this.GetPropertyValue<string>("startedbyname"); }
}
///<summary>
///<para>Logical Name: completedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("completedbyname")]
public string CompletedByName
{
	get { return this.GetPropertyValue<string>("completedbyname"); }
}
///<summary>
///<para>Logical Name: nextlinkedsessionidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("nextlinkedsessionidname")]
public string NextLinkedSessionIdName
{
	get { return this.GetPropertyValue<string>("nextlinkedsessionidname"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: startedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("startedbyyominame")]
public string StartedByYomiName
{
	get { return this.GetPropertyValue<string>("startedbyyominame"); }
}
///<summary>
///<para>Logical Name: regardingobjectidname</para>
///<para>Max Length: 400 characters</para>
///</summary>
[AttributeLogicalNameAttribute("regardingobjectidname")]
public string RegardingObjectIdName
{
	get { return this.GetPropertyValue<string>("regardingobjectidname"); }
	set { this.SetPropertyValue("regardingobjectidname", value, 400, "RegardingObjectIdName"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: completedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("completedbyyominame")]
public string CompletedByYomiName
{
	get { return this.GetPropertyValue<string>("completedbyyominame"); }
}
///<summary>
///<para>Logical Name: previouslinkedsessionidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("previouslinkedsessionidname")]
public string PreviousLinkedSessionIdName
{
	get { return this.GetPropertyValue<string>("previouslinkedsessionidname"); }
}
///<summary>
///<para>Logical Name: owneridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridyominame")]
public string OwnerIdYomiName
{
	get { return this.GetPropertyValue<string>("owneridyominame"); }
}
///<summary>
///<para>Logical Name: canceledbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("canceledbyname")]
public string CanceledByName
{
	get { return this.GetPropertyValue<string>("canceledbyname"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: regardingobjecttypecode</para>
///</summary>
[AttributeLogicalNameAttribute("regardingobjecttypecode")]
public string RegardingObjectTypeCode
{
	get { return this.GetPropertyValue<string>("regardingobjecttypecode"); }
	set { this.SetPropertyValue<string>("regardingobjecttypecode", value, "RegardingObjectTypeCode"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: executedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("executedbyyominame")]
public string ExecutedByYomiName
{
	get { return this.GetPropertyValue<string>("executedbyyominame"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: executedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("executedbyname")]
public string ExecutedByName
{
	get { return this.GetPropertyValue<string>("executedbyname"); }
}
///<summary>
///<para>Logical Name: activityname</para>
///<para>Max Length: 256 characters</para>
///</summary>
[AttributeLogicalNameAttribute("activityname")]
public string ActivityName
{
	get { return this.GetPropertyValue<string>("activityname"); }
	set { this.SetPropertyValue("activityname", value, 256, "ActivityName"); }
}
///<summary>
///<para>Logical Name: canceledby</para>
///</summary>
[AttributeLogicalNameAttribute("canceledby")]
public EntityReference CanceledBy
{
	get { return this.GetPropertyValue<EntityReference>("canceledby"); }
}
///<summary>
///<para>Logical Name: canceledon</para>
///</summary>
[AttributeLogicalNameAttribute("canceledon")]
public DateTime? CanceledOn
{
	get { return this.GetPropertyValue<DateTime?>("canceledon"); }
	set { this.SetPropertyValue<DateTime?>("canceledon", value, "CanceledOn"); }
}
///<summary>
///<para>Logical Name: comments</para>
///<para>Max Length: 2000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("comments")]
public string Comments
{
	get { return this.GetPropertyValue<string>("comments"); }
	set { this.SetPropertyValue("comments", value, 2000, "Comments"); }
}
///<summary>
///<para>Logical Name: completedby</para>
///</summary>
[AttributeLogicalNameAttribute("completedby")]
public EntityReference CompletedBy
{
	get { return this.GetPropertyValue<EntityReference>("completedby"); }
}
///<summary>
///<para>Logical Name: completedon</para>
///</summary>
[AttributeLogicalNameAttribute("completedon")]
public DateTime? CompletedOn
{
	get { return this.GetPropertyValue<DateTime?>("completedon"); }
	set { this.SetPropertyValue<DateTime?>("completedon", value, "CompletedOn"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: processsessionid</para>
///</summary>
[AttributeLogicalNameAttribute("processsessionid")]
public Guid DialogSessionId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: processstagename</para>
///<para>Max Length: 256 characters</para>
///</summary>
[AttributeLogicalNameAttribute("processstagename")]
public string DialogStage
{
	get { return this.GetPropertyValue<string>("processstagename"); }
	set { this.SetPropertyValue("processstagename", value, 256, "DialogStage"); }
}
///<summary>
///<para>Logical Name: errorcode</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("errorcode")]
public int? ErrorCode
{
	get { return this.GetPropertyValue<int?>("errorcode"); }
	set { this.SetPropertyValue("errorcode", (int?)value, (int)-2147483648, (int)2147483647, "ErrorCode"); }
}
///<summary>
///<para>Logical Name: executedby</para>
///</summary>
[AttributeLogicalNameAttribute("executedby")]
public EntityReference ExecutedBy
{
	get { return this.GetPropertyValue<EntityReference>("executedby"); }
	set { this.SetPropertyValue<EntityReference>("executedby", value, "ExecutedBy"); }
}
///<summary>
///<para>Logical Name: executedon</para>
///</summary>
[AttributeLogicalNameAttribute("executedon")]
public DateTime? ExecutedOn
{
	get { return this.GetPropertyValue<DateTime?>("executedon"); }
}
///<summary>
///<para>Logical Name: inputarguments</para>
///<para>Max Length: 1073741823 characters</para>
///</summary>
[AttributeLogicalNameAttribute("inputarguments")]
public string InputArguments
{
	get { return this.GetPropertyValue<string>("inputarguments"); }
	set { this.SetPropertyValue("inputarguments", value, 1073741823, "InputArguments"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: name</para>
///<para>Max Length: 256 characters</para>
///</summary>
[AttributeLogicalNameAttribute("name")]
public string Name
{
	get { return this.GetPropertyValue<string>("name"); }
	set { this.SetPropertyValue("name", value, 256, "Name"); }
}
///<summary>
///<para>Logical Name: nextlinkedsessionid</para>
///</summary>
[AttributeLogicalNameAttribute("nextlinkedsessionid")]
public EntityReference NextLinkedSession
{
	get { return this.GetPropertyValue<EntityReference>("nextlinkedsessionid"); }
	set { this.SetPropertyValue<EntityReference>("nextlinkedsessionid", value, "NextLinkedSession"); }
}
///<summary>
///<para>Logical Name: originatingsessionid</para>
///</summary>
[AttributeLogicalNameAttribute("originatingsessionid")]
public EntityReference OriginatingSession
{
	get { return this.GetPropertyValue<EntityReference>("originatingsessionid"); }
	set { this.SetPropertyValue<EntityReference>("originatingsessionid", value, "OriginatingSession"); }
}
///<summary>
///<para>Logical Name: ownerid</para>
///</summary>
[AttributeLogicalNameAttribute("ownerid")]
public EntityReference Owner
{
	get { return this.GetPropertyValue<EntityReference>("ownerid"); }
	set { this.SetPropertyValue<EntityReference>("ownerid", value, "Owner"); }
}
///<summary>
///<para>Logical Name: owningbusinessunit</para>
///</summary>
[AttributeLogicalNameAttribute("owningbusinessunit")]
public EntityReference OwningBusinessUnit
{
	get { return this.GetPropertyValue<EntityReference>("owningbusinessunit"); }
}
///<summary>
///<para>Logical Name: owningteam</para>
///</summary>
[AttributeLogicalNameAttribute("owningteam")]
public EntityReference OwningTeam
{
	get { return this.GetPropertyValue<EntityReference>("owningteam"); }
}
///<summary>
///<para>Logical Name: owninguser</para>
///</summary>
[AttributeLogicalNameAttribute("owninguser")]
public EntityReference OwningUser
{
	get { return this.GetPropertyValue<EntityReference>("owninguser"); }
}
///<summary>
///<para>Logical Name: previouslinkedsessionid</para>
///</summary>
[AttributeLogicalNameAttribute("previouslinkedsessionid")]
public EntityReference PreviousLinkedSession
{
	get { return this.GetPropertyValue<EntityReference>("previouslinkedsessionid"); }
	set { this.SetPropertyValue<EntityReference>("previouslinkedsessionid", value, "PreviousLinkedSession"); }
}
///<summary>
///<para>Logical Name: processid</para>
///</summary>
[AttributeLogicalNameAttribute("processid")]
public EntityReference Process
{
	get { return this.GetPropertyValue<EntityReference>("processid"); }
	set { this.SetPropertyValue<EntityReference>("processid", value, "Process"); }
}
///<summary>
///<para>Logical Name: processstate</para>
///<para>Max Length: 1073741823 characters</para>
///</summary>
[AttributeLogicalNameAttribute("processstate")]
public string ProcessState
{
	get { return this.GetPropertyValue<string>("processstate"); }
	set { this.SetPropertyValue("processstate", value, 1073741823, "ProcessState"); }
}
///<summary>
///<para>Logical Name: protectionkey</para>
///<para>Max Length: 256 characters</para>
///</summary>
[AttributeLogicalNameAttribute("protectionkey")]
public string ProtectionKey
{
	get { return this.GetPropertyValue<string>("protectionkey"); }
}
///<summary>
///<para>Logical Name: regardingobjectid</para>
///</summary>
[AttributeLogicalNameAttribute("regardingobjectid")]
public EntityReference Regarding
{
	get { return this.GetPropertyValue<EntityReference>("regardingobjectid"); }
	set { this.SetPropertyValue<EntityReference>("regardingobjectid", value, "Regarding"); }
}
///<summary>
///<para>Logical Name: startedby</para>
///</summary>
[AttributeLogicalNameAttribute("startedby")]
public EntityReference StartedBy
{
	get { return this.GetPropertyValue<EntityReference>("startedby"); }
}
///<summary>
///<para>Logical Name: startedon</para>
///</summary>
[AttributeLogicalNameAttribute("startedon")]
public DateTime? StartedOn
{
	get { return this.GetPropertyValue<DateTime?>("startedon"); }
	set { this.SetPropertyValue<DateTime?>("startedon", value, "StartedOn"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eStatus? Status
{
	get
	{
		if (Status_OptionSetValue != null) { return (eStatus)Status_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Status_OptionSetValue = new OptionSetValue((int)value); }
		else this.Status_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue Status_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
	set { this.SetPropertyValue<OptionSetValue>("statecode", value, "Status_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Status_Text(IOrganizationService Service)
{
	return this.Status_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Status_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Status_OptionSetValue.Value);
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? StatusReason
{
	get
	{
		if (StatusReason_OptionSetValue != null) { return (eStatusReason)StatusReason_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StatusReason_OptionSetValue = new OptionSetValue((int)value); }
		else this.StatusReason_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue StatusReason_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "StatusReason_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string StatusReason_Text(IOrganizationService Service)
{
	return this.StatusReason_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string StatusReason_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.StatusReason_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: stepname</para>
///<para>Max Length: 256 characters</para>
///</summary>
[AttributeLogicalNameAttribute("stepname")]
public string StepName
{
	get { return this.GetPropertyValue<string>("stepname"); }
	set { this.SetPropertyValue("stepname", value, 256, "StepName"); }
}


        /// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: processsession_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: processsession_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: processsession_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: processsession_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>Follow (Regarding)</b></para>
/// <para>Schema Name: processsession_PostFollows</para>
/// </summary>
public List<Follow> GetFollows_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Follow>(Service, this.Id, "postfollow", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Follow (Regarding)</b></para>
/// <para>Schema Name: processsession_PostFollows</para>
/// </summary>
public List<Follow> GetFollows_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Follow>(Service, this.Id, "postfollow", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PostRegarding (RegardingObjectId)</b></para>
/// <para>Schema Name: processsession_PostRegardings</para>
/// </summary>
public List<PostRegarding> GetPostRegarding_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostRegarding>(Service, this.Id, "postregarding", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PostRegarding (RegardingObjectId)</b></para>
/// <para>Schema Name: processsession_PostRegardings</para>
/// </summary>
public List<PostRegarding> GetPostRegarding_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostRegarding>(Service, this.Id, "postregarding", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PostRole (RegardingObjectId)</b></para>
/// <para>Schema Name: processsession_PostRoles</para>
/// </summary>
public List<PostRole> GetPostRoles_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostRole>(Service, this.Id, "postrole", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PostRole (RegardingObjectId)</b></para>
/// <para>Schema Name: processsession_PostRoles</para>
/// </summary>
public List<PostRole> GetPostRoles_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostRole>(Service, this.Id, "postrole", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Next Linked Session)</b></para>
/// <para>Schema Name: lk_processsession_nextlinkedsessionid</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_NextLinkedSession (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "nextlinkedsessionid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Next Linked Session)</b></para>
/// <para>Schema Name: lk_processsession_nextlinkedsessionid</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_NextLinkedSession (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "nextlinkedsessionid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Originating Session)</b></para>
/// <para>Schema Name: lk_processsession_originatingsessionid</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_OriginatingSession (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "originatingsessionid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Originating Session)</b></para>
/// <para>Schema Name: lk_processsession_originatingsessionid</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_OriginatingSession (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "originatingsessionid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Previous Linked Session)</b></para>
/// <para>Schema Name: lk_processsession_previouslinkedsessionid</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_PreviousLinkedSession (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "previouslinkedsessionid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Previous Linked Session)</b></para>
/// <para>Schema Name: lk_processsession_previouslinkedsessionid</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_PreviousLinkedSession (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "previouslinkedsessionid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: ProcessSession_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: ProcessSession_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_processsession</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_processsession</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>ProcessLog (Parent record)</b></para>
/// <para>Schema Name: lk_workflowlog_processsession</para>
/// </summary>
public List<ProcessLog> GetProcessLogs_ParentRecord (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessLog>(Service, this.Id, "workflowlog", "asyncoperationid", Columns); }
/// <summary>
/// <para><b>ProcessLog (Parent record)</b></para>
/// <para>Schema Name: lk_workflowlog_processsession</para>
/// </summary>
public List<ProcessLog> GetProcessLogs_ParentRecord (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessLog>(Service, this.Id, "workflowlog", "asyncoperationid", Columns); }
/// <summary>
/// <para><b>ProcessLog (Child Workflow System Job)</b></para>
/// <para>Schema Name: lk_workflowlog_processsession_childworkflow</para>
/// </summary>
public List<ProcessLog> GetProcessLogs_ChildWorkflowSystemJob (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessLog>(Service, this.Id, "workflowlog", "childworkflowinstanceid", Columns); }
/// <summary>
/// <para><b>ProcessLog (Child Workflow System Job)</b></para>
/// <para>Schema Name: lk_workflowlog_processsession_childworkflow</para>
/// </summary>
public List<ProcessLog> GetProcessLogs_ChildWorkflowSystemJob (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessLog>(Service, this.Id, "workflowlog", "childworkflowinstanceid", Columns); }


        

        

        public enum eStatus
{
	///<summary><para>Incomplete</para>
	///<para>Value = 0</para></summary>
	[Description("Incomplete")]
	Incomplete = 0, 
	///<summary><para>Complete</para>
	///<para>Value = 1</para></summary>
	[Description("Complete")]
	Complete = 1
}
public enum eStatusReason
{
	///<summary><para>Not Started</para>
	///<para>Value = 1</para></summary>
	[Description("Not Started")]
	NotStarted_Incomplete = 1, 
	///<summary><para>In Progress</para>
	///<para>Value = 2</para></summary>
	[Description("In Progress")]
	InProgress_Incomplete = 2, 
	///<summary><para>Paused</para>
	///<para>Value = 3</para></summary>
	[Description("Paused")]
	Paused_Incomplete = 3, 
	///<summary><para>Completed</para>
	///<para>Value = 4</para></summary>
	[Description("Completed")]
	Completed_Complete = 4, 
	///<summary><para>Canceled</para>
	///<para>Value = 5</para></summary>
	[Description("Canceled")]
	Canceled_Complete = 5, 
	///<summary><para>Failed</para>
	///<para>Value = 6</para></summary>
	[Description("Failed")]
	Failed_Complete = 6
}
public void SetState(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>processidname</para>
	/// <para>processidname</para></summary>
	public const string ProcessIdName = "processidname";
	/// <summary><para>owneridtype</para>
	/// <para>owneridtype</para></summary>
	public const string OwnerIdType = "owneridtype";
	/// <summary><para>canceledbyyominame</para>
	/// <para>canceledbyyominame</para></summary>
	public const string CanceledByYomiName = "canceledbyyominame";
	/// <summary><para>regardingobjectidyominame</para>
	/// <para>regardingobjectidyominame</para></summary>
	public const string RegardingObjectIdYomiName = "regardingobjectidyominame";
	/// <summary><para>owneridname</para>
	/// <para>owneridname</para></summary>
	public const string OwnerIdName = "owneridname";
	/// <summary><para>originatingsessionidname</para>
	/// <para>originatingsessionidname</para></summary>
	public const string OriginatingSessionIdName = "originatingsessionidname";
	/// <summary><para>startedbyname</para>
	/// <para>startedbyname</para></summary>
	public const string StartedByName = "startedbyname";
	/// <summary><para>completedbyname</para>
	/// <para>completedbyname</para></summary>
	public const string CompletedByName = "completedbyname";
	/// <summary><para>nextlinkedsessionidname</para>
	/// <para>nextlinkedsessionidname</para></summary>
	public const string NextLinkedSessionIdName = "nextlinkedsessionidname";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>startedbyyominame</para>
	/// <para>startedbyyominame</para></summary>
	public const string StartedByYomiName = "startedbyyominame";
	/// <summary><para>regardingobjectidname</para>
	/// <para>regardingobjectidname</para></summary>
	public const string RegardingObjectIdName = "regardingobjectidname";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>completedbyyominame</para>
	/// <para>completedbyyominame</para></summary>
	public const string CompletedByYomiName = "completedbyyominame";
	/// <summary><para>previouslinkedsessionidname</para>
	/// <para>previouslinkedsessionidname</para></summary>
	public const string PreviousLinkedSessionIdName = "previouslinkedsessionidname";
	/// <summary><para>owneridyominame</para>
	/// <para>owneridyominame</para></summary>
	public const string OwnerIdYomiName = "owneridyominame";
	/// <summary><para>canceledbyname</para>
	/// <para>canceledbyname</para></summary>
	public const string CanceledByName = "canceledbyname";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>regardingobjecttypecode</para>
	/// <para>regardingobjecttypecode</para></summary>
	public const string RegardingObjectTypeCode = "regardingobjecttypecode";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>executedbyyominame</para>
	/// <para>executedbyyominame</para></summary>
	public const string ExecutedByYomiName = "executedbyyominame";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>executedbyname</para>
	/// <para>executedbyname</para></summary>
	public const string ExecutedByName = "executedbyname";
	/// <summary><para>Activity Name</para>
	/// <para>activityname</para></summary>
	public const string ActivityName = "activityname";
	/// <summary><para>Canceled By</para>
	/// <para>canceledby</para></summary>
	public const string CanceledBy = "canceledby";
	/// <summary><para>Canceled On</para>
	/// <para>canceledon</para></summary>
	public const string CanceledOn = "canceledon";
	/// <summary><para>Comments</para>
	/// <para>comments</para></summary>
	public const string Comments = "comments";
	/// <summary><para>Completed By</para>
	/// <para>completedby</para></summary>
	public const string CompletedBy = "completedby";
	/// <summary><para>Completed On</para>
	/// <para>completedon</para></summary>
	public const string CompletedOn = "completedon";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Dialog Session</para>
	/// <para>processsessionid</para></summary>
	public const string DialogSessionId = "processsessionid";
	/// <summary><para>Dialog Stage</para>
	/// <para>processstagename</para></summary>
	public const string DialogStage = "processstagename";
	/// <summary><para>Error Code</para>
	/// <para>errorcode</para></summary>
	public const string ErrorCode = "errorcode";
	/// <summary><para>Executed By</para>
	/// <para>executedby</para></summary>
	public const string ExecutedBy = "executedby";
	/// <summary><para>Executed On</para>
	/// <para>executedon</para></summary>
	public const string ExecutedOn = "executedon";
	/// <summary><para>Input Arguments</para>
	/// <para>inputarguments</para></summary>
	public const string InputArguments = "inputarguments";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>Name</para>
	/// <para>name</para></summary>
	public const string Name = "name";
	/// <summary><para>Next Linked Session</para>
	/// <para>nextlinkedsessionid</para></summary>
	public const string NextLinkedSession = "nextlinkedsessionid";
	/// <summary><para>Originating Session</para>
	/// <para>originatingsessionid</para></summary>
	public const string OriginatingSession = "originatingsessionid";
	/// <summary><para>Owner</para>
	/// <para>ownerid</para></summary>
	public const string Owner = "ownerid";
	/// <summary><para>Owning Business Unit</para>
	/// <para>owningbusinessunit</para></summary>
	public const string OwningBusinessUnit = "owningbusinessunit";
	/// <summary><para>Owning Team</para>
	/// <para>owningteam</para></summary>
	public const string OwningTeam = "owningteam";
	/// <summary><para>Owning User</para>
	/// <para>owninguser</para></summary>
	public const string OwningUser = "owninguser";
	/// <summary><para>Previous Linked Session</para>
	/// <para>previouslinkedsessionid</para></summary>
	public const string PreviousLinkedSession = "previouslinkedsessionid";
	/// <summary><para>Process</para>
	/// <para>processid</para></summary>
	public const string Process = "processid";
	/// <summary><para>Process State</para>
	/// <para>processstate</para></summary>
	public const string ProcessState = "processstate";
	/// <summary><para>Protection Key</para>
	/// <para>protectionkey</para></summary>
	public const string ProtectionKey = "protectionkey";
	/// <summary><para>Regarding</para>
	/// <para>regardingobjectid</para></summary>
	public const string Regarding = "regardingobjectid";
	/// <summary><para>Started By</para>
	/// <para>startedby</para></summary>
	public const string StartedBy = "startedby";
	/// <summary><para>Started On</para>
	/// <para>startedon</para></summary>
	public const string StartedOn = "startedon";
	/// <summary><para>Status</para>
	/// <para>statecode</para></summary>
	public const string Status = "statecode";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string StatusReason = "statuscode";
	/// <summary><para>Step Name</para>
	/// <para>stepname</para></summary>
	public const string StepName = "stepname";
}

    }
}

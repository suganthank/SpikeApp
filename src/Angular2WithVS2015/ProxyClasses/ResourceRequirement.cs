// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("msdyn_resourcerequirement")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class ResourceRequirement : BaseProxyClass
    {
        public new const string LogicalName = "msdyn_resourcerequirement";
        public const int ObjectTypeCode = 10018;
        public const string PrimaryIdAttribute = "msdyn_resourcerequirementid";
        public const string PrimaryNameAttribute = "msdyn_name";
        
        static ResourceRequirement()
        {
            BaseProxyClass.RegisterProxyType(typeof(ResourceRequirement), "msdyn_resourcerequirement");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public ResourceRequirement() : base(new Entity("msdyn_resourcerequirement")) { }
        public ResourceRequirement(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<ResourceRequirement>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: msdyn_priorityname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_priorityname")]
public string Msdyn_PriorityName
{
	get { return this.GetPropertyValue<string>("msdyn_priorityname"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_projectidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_projectidname")]
public string Msdyn_projectidName
{
	get { return this.GetPropertyValue<string>("msdyn_projectidname"); }
}
///<summary>
///<para>Logical Name: owneridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridname")]
public string OwnerIdName
{
	get { return this.GetPropertyValue<string>("owneridname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_bookingsetupmetadataidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_bookingsetupmetadataidname")]
public string Msdyn_BookingSetupMetadataIdName
{
	get { return this.GetPropertyValue<string>("msdyn_bookingsetupmetadataidname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: owneridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridyominame")]
public string OwnerIdYomiName
{
	get { return this.GetPropertyValue<string>("owneridyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_roleidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_roleidname")]
public string Msdyn_roleidName
{
	get { return this.GetPropertyValue<string>("msdyn_roleidname"); }
}
///<summary>
///<para>Logical Name: msdyn_workordername</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workordername")]
public string Msdyn_WorkOrderName
{
	get { return this.GetPropertyValue<string>("msdyn_workordername"); }
}
///<summary>
///<para>Logical Name: msdyn_statusname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_statusname")]
public string Msdyn_StatusName
{
	get { return this.GetPropertyValue<string>("msdyn_statusname"); }
}
///<summary>
///<para>Logical Name: msdyn_workhourtemplatename</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workhourtemplatename")]
public string Msdyn_workhourtemplateName
{
	get { return this.GetPropertyValue<string>("msdyn_workhourtemplatename"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_territoryname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_territoryname")]
public string Msdyn_TerritoryName
{
	get { return this.GetPropertyValue<string>("msdyn_territoryname"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyidname")]
public string TransactionCurrencyIdName
{
	get { return this.GetPropertyValue<string>("transactioncurrencyidname"); }
}
///<summary>
///<para>Logical Name: msdyn_timegroupname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_timegroupname")]
public string Msdyn_TimeGroupName
{
	get { return this.GetPropertyValue<string>("msdyn_timegroupname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: owneridtype</para>
///</summary>
[AttributeLogicalNameAttribute("owneridtype")]
public string OwnerIdType
{
	get { return this.GetPropertyValue<string>("owneridtype"); }
	set { this.SetPropertyValue<string>("owneridtype", value, "OwnerIdType"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
/// <summary>
///Logical Name: msdyn_allocationmethod
/// </summary>
[AttributeLogicalNameAttribute("msdyn_allocationmethod")]
public eAllocationMethod? AllocationMethod
{
	get
	{
		if (AllocationMethod_OptionSetValue != null) { return (eAllocationMethod)AllocationMethod_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.AllocationMethod_OptionSetValue = new OptionSetValue((int)value); }
		else this.AllocationMethod_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_allocationmethod</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_allocationmethod")]
public OptionSetValue AllocationMethod_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_allocationmethod"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_allocationmethod", value, "AllocationMethod_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string AllocationMethod_Text(IOrganizationService Service)
{
	return this.AllocationMethod_OptionSetValue.GetOptionSetText(Service, this, "msdyn_allocationmethod");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string AllocationMethod_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.AllocationMethod_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_bookingsetupmetadataid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_bookingsetupmetadataid")]
public EntityReference BookingSetupMetadata
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_bookingsetupmetadataid"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_bookingsetupmetadataid", value, "BookingSetupMetadata"); }
}
///<summary>
///<para>Logical Name: msdyn_calendarid</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_calendarid")]
public string CalendarId
{
	get { return this.GetPropertyValue<string>("msdyn_calendarid"); }
	set { this.SetPropertyValue("msdyn_calendarid", value, 100, "CalendarId"); }
}
///<summary>
///<para>Logical Name: msdyn_city</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_city")]
public string City
{
	get { return this.GetPropertyValue<string>("msdyn_city"); }
	set { this.SetPropertyValue("msdyn_city", value, 100, "City"); }
}
///<summary>
///<para>Logical Name: msdyn_costprice</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? CostPrice
{
	get
	{
		if (CostPriceMoney != null) { return CostPriceMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.CostPriceMoney = new Money(value.Value); }
		else this.CostPriceMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_costprice</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_costprice")]
public Money CostPriceMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_costprice"); }
	set { this.SetPropertyValue("msdyn_costprice", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "CostPriceMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_costprice_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? CostPrice_Base
{
	get
	{
		if (CostPrice_BaseMoney != null) { return CostPrice_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_costprice_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_costprice_base")]
public Money CostPrice_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_costprice_base"); }
}
///<summary>
///<para>Logical Name: msdyn_country</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_country")]
public string Country_Region
{
	get { return this.GetPropertyValue<string>("msdyn_country"); }
	set { this.SetPropertyValue("msdyn_country", value, 100, "Country_Region"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyid</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyid")]
public EntityReference Currency
{
	get { return this.GetPropertyValue<EntityReference>("transactioncurrencyid"); }
	set { this.SetPropertyValue<EntityReference>("transactioncurrencyid", value, "Currency"); }
}
///<summary>
///<para>Logical Name: msdyn_duration</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_duration")]
public int? Duration
{
	get { return this.GetPropertyValue<int?>("msdyn_duration"); }
	set { this.SetPropertyValue("msdyn_duration", (int?)value, (int)0, (int)2147483647, "Duration"); }
}
///<summary>
///<para>Logical Name: exchangerate</para>
///<para>Minimum Value: 0.0000000001</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 10</para>
///</summary>
[AttributeLogicalNameAttribute("exchangerate")]
public decimal? ExchangeRate
{
	get { return this.GetPropertyValue<decimal?>("exchangerate"); }
}
///<summary>
///<para>Logical Name: msdyn_fromdate</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_fromdate")]
public DateTime? FromDate
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_fromdate"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_fromdate", value, "FromDate"); }
}
///<summary>
///<para>Logical Name: msdyn_fulfilledduration</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_fulfilledduration")]
public int? FulfilledDuration
{
	get { return this.GetPropertyValue<int?>("msdyn_fulfilledduration"); }
	set { this.SetPropertyValue("msdyn_fulfilledduration", (int?)value, (int)0, (int)2147483647, "FulfilledDuration"); }
}
///<summary>
///<para>Logical Name: msdyn_fulfilledhours</para>
///<para>Minimum Value: -100000000000</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_fulfilledhours")]
public decimal? FulfilledHours_Deprecated
{
	get { return this.GetPropertyValue<decimal?>("msdyn_fulfilledhours"); }
	set { this.SetPropertyValue("msdyn_fulfilledhours", (decimal?)value, (decimal)-100000000000, (decimal)100000000000, "FulfilledHours_Deprecated"); }
}
///<summary>
///<para>Logical Name: msdyn_hours</para>
///<para>Minimum Value: -100000000000</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_hours")]
public decimal? Hours_Deprecated
{
	get { return this.GetPropertyValue<decimal?>("msdyn_hours"); }
	set { this.SetPropertyValue("msdyn_hours", (decimal?)value, (decimal)-100000000000, (decimal)100000000000, "Hours_Deprecated"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? ImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "ImportSequenceNumber"); }
}
///<summary>
///<para>Logical Name: msdyn_internalflags</para>
///<para>Max Length: 1048576 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_internalflags")]
public string InternalFlags
{
	get { return this.GetPropertyValue<string>("msdyn_internalflags"); }
	set { this.SetPropertyValue("msdyn_internalflags", value, 1048576, "InternalFlags"); }
}
///<summary>
///<para>Logical Name: msdyn_isprimary</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_isprimary")]
public bool? IsPrimary
{
	get { return this.GetPropertyValue<bool?>("msdyn_isprimary"); }
	set { this.SetPropertyValue<bool?>("msdyn_isprimary", value, "IsPrimary"); }
}
///<summary>
///<para>Logical Name: msdyn_latitude</para>
///<para>Minimum Value: -90</para>
///<para>Maximum Value: 90</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_latitude")]
public double? Latitude
{
	get { return this.GetPropertyValue<double?>("msdyn_latitude"); }
	set { this.SetPropertyValue("msdyn_latitude", (double?)value, (double)-90, (double)90, "Latitude"); }
}
///<summary>
///<para>Logical Name: msdyn_longitude</para>
///<para>Minimum Value: -180</para>
///<para>Maximum Value: 180</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_longitude")]
public double? Longitude
{
	get { return this.GetPropertyValue<double?>("msdyn_longitude"); }
	set { this.SetPropertyValue("msdyn_longitude", (double?)value, (double)-180, (double)180, "Longitude"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: msdyn_name</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_name")]
public string Name
{
	get { return this.GetPropertyValue<string>("msdyn_name"); }
	set { this.SetPropertyValue("msdyn_name", value, 100, "Name"); }
}
///<summary>
///<para>Logical Name: ownerid</para>
///</summary>
[AttributeLogicalNameAttribute("ownerid")]
public EntityReference Owner
{
	get { return this.GetPropertyValue<EntityReference>("ownerid"); }
	set { this.SetPropertyValue<EntityReference>("ownerid", value, "Owner"); }
}
///<summary>
///<para>Logical Name: owningbusinessunit</para>
///</summary>
[AttributeLogicalNameAttribute("owningbusinessunit")]
public EntityReference OwningBusinessUnit
{
	get { return this.GetPropertyValue<EntityReference>("owningbusinessunit"); }
}
///<summary>
///<para>Logical Name: owningteam</para>
///</summary>
[AttributeLogicalNameAttribute("owningteam")]
public EntityReference OwningTeam
{
	get { return this.GetPropertyValue<EntityReference>("owningteam"); }
}
///<summary>
///<para>Logical Name: owninguser</para>
///</summary>
[AttributeLogicalNameAttribute("owninguser")]
public EntityReference OwningUser
{
	get { return this.GetPropertyValue<EntityReference>("owninguser"); }
}
///<summary>
///<para>Logical Name: msdyn_percentage</para>
///<para>Minimum Value: -100000000000</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_percentage")]
public decimal? Percentage
{
	get { return this.GetPropertyValue<decimal?>("msdyn_percentage"); }
	set { this.SetPropertyValue("msdyn_percentage", (decimal?)value, (decimal)-100000000000, (decimal)100000000000, "Percentage"); }
}
///<summary>
///<para>Logical Name: msdyn_priority</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_priority")]
public EntityReference Priority
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_priority"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_priority", value, "Priority"); }
}
///<summary>
///<para>Logical Name: msdyn_projectid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_projectid")]
public EntityReference Project
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_projectid"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_projectid", value, "Project"); }
}
///<summary>
///<para>Logical Name: msdyn_quantity</para>
///<para>Minimum Value: -100000000000</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_quantity")]
public decimal? Quantity
{
	get { return this.GetPropertyValue<decimal?>("msdyn_quantity"); }
	set { this.SetPropertyValue("msdyn_quantity", (decimal?)value, (decimal)-100000000000, (decimal)100000000000, "Quantity"); }
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? RecordCreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "RecordCreatedOn"); }
}
///<summary>
///<para>Logical Name: msdyn_remainingduration</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_remainingduration")]
public int? RemainingDuration
{
	get { return this.GetPropertyValue<int?>("msdyn_remainingduration"); }
	set { this.SetPropertyValue("msdyn_remainingduration", (int?)value, (int)0, (int)2147483647, "RemainingDuration"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: msdyn_resourcerequirementid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_resourcerequirementid")]
public Guid ResourceRequirementId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: msdyn_roleid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_roleid")]
public EntityReference Role_Deprecated
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_roleid"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_roleid", value, "Role_Deprecated"); }
}
///<summary>
///<para>Logical Name: msdyn_stateorprovince</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_stateorprovince")]
public string State_Province
{
	get { return this.GetPropertyValue<string>("msdyn_stateorprovince"); }
	set { this.SetPropertyValue("msdyn_stateorprovince", value, 100, "State_Province"); }
}
///<summary>
///<para>Logical Name: msdyn_status</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_status")]
public EntityReference Status
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_status"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_status", value, "Status"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eStatus? Status2
{
	get
	{
		if (Status2_OptionSetValue != null) { return (eStatus)Status2_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Status2_OptionSetValue = new OptionSetValue((int)value); }
		else this.Status2_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue Status2_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
	set { this.SetPropertyValue<OptionSetValue>("statecode", value, "Status2_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Status2_Text(IOrganizationService Service)
{
	return this.Status2_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Status2_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Status2_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_requeststatus</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_requeststatus")]
public string Status3
{
	get { return this.GetPropertyValue<string>("msdyn_requeststatus"); }
	set { this.SetPropertyValue("msdyn_requeststatus", value, 100, "Status3"); }
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? StatusReason
{
	get
	{
		if (StatusReason_OptionSetValue != null) { return (eStatusReason)StatusReason_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StatusReason_OptionSetValue = new OptionSetValue((int)value); }
		else this.StatusReason_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue StatusReason_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "StatusReason_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string StatusReason_Text(IOrganizationService Service)
{
	return this.StatusReason_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string StatusReason_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.StatusReason_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_territory</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_territory")]
public EntityReference Territory
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_territory"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_territory", value, "Territory"); }
}
///<summary>
///<para>Logical Name: msdyn_timefrompromised</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_timefrompromised")]
public DateTime? TimeFromPromised
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_timefrompromised"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_timefrompromised", value, "TimeFromPromised"); }
}
///<summary>
///<para>Logical Name: msdyn_timegroup</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_timegroup")]
public EntityReference TimeGroup
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_timegroup"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_timegroup", value, "TimeGroup"); }
}
///<summary>
///<para>Logical Name: msdyn_timetopromised</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_timetopromised")]
public DateTime? TimeToPromised
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_timetopromised"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_timetopromised", value, "TimeToPromised"); }
}
///<summary>
///<para>Logical Name: msdyn_timewindowend</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_timewindowend")]
public DateTime? TimeWindowEnd
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_timewindowend"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_timewindowend", value, "TimeWindowEnd"); }
}
///<summary>
///<para>Logical Name: msdyn_timewindowstart</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_timewindowstart")]
public DateTime? TimeWindowStart
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_timewindowstart"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_timewindowstart", value, "TimeWindowStart"); }
}
///<summary>
///<para>Logical Name: timezoneruleversionnumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("timezoneruleversionnumber")]
public int? TimeZoneRuleVersionNumber
{
	get { return this.GetPropertyValue<int?>("timezoneruleversionnumber"); }
	set { this.SetPropertyValue("timezoneruleversionnumber", (int?)value, (int)-1, (int)2147483647, "TimeZoneRuleVersionNumber"); }
}
///<summary>
///<para>Logical Name: msdyn_todate</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_todate")]
public DateTime? ToDate
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_todate"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_todate", value, "ToDate"); }
}
/// <summary>
///Logical Name: msdyn_type
/// </summary>
[AttributeLogicalNameAttribute("msdyn_type")]
public eType? Type
{
	get
	{
		if (Type_OptionSetValue != null) { return (eType)Type_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Type_OptionSetValue = new OptionSetValue((int)value); }
		else this.Type_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_type</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_type")]
public OptionSetValue Type_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_type"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_type", value, "Type_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Type_Text(IOrganizationService Service)
{
	return this.Type_OptionSetValue.GetOptionSetText(Service, this, "msdyn_type");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Type_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Type_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: utcconversiontimezonecode</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utcconversiontimezonecode")]
public int? UTCConversionTimeZoneCode
{
	get { return this.GetPropertyValue<int?>("utcconversiontimezonecode"); }
	set { this.SetPropertyValue("utcconversiontimezonecode", (int?)value, (int)-1, (int)2147483647, "UTCConversionTimeZoneCode"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}
///<summary>
///<para>Logical Name: msdyn_workhourtemplate</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workhourtemplate")]
public EntityReference WorkHourTemplate
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_workhourtemplate"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_workhourtemplate", value, "WorkHourTemplate"); }
}
/// <summary>
///Logical Name: msdyn_worklocation
/// </summary>
[AttributeLogicalNameAttribute("msdyn_worklocation")]
public eWorkLocation? WorkLocation
{
	get
	{
		if (WorkLocation_OptionSetValue != null) { return (eWorkLocation)WorkLocation_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.WorkLocation_OptionSetValue = new OptionSetValue((int)value); }
		else this.WorkLocation_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_worklocation</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_worklocation")]
public OptionSetValue WorkLocation_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_worklocation"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_worklocation", value, "WorkLocation_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string WorkLocation_Text(IOrganizationService Service)
{
	return this.WorkLocation_OptionSetValue.GetOptionSetText(Service, this, "msdyn_worklocation");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string WorkLocation_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.WorkLocation_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_workorder</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workorder")]
public EntityReference WorkOrder
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_workorder"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_workorder", value, "WorkOrder"); }
}


        /// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_Annotations</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_Annotations</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BookableResourceBooking (Resource Requirement)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_bookableresourcebooking_ResourceRequirement</para>
/// </summary>
public List<BookableResourceBooking> GetBookableResourceBookings_ResourceRequirement (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBooking>(Service, this.Id, "bookableresourcebooking", "msdyn_resourcerequirement", Columns); }
/// <summary>
/// <para><b>BookableResourceBooking (Resource Requirement)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_bookableresourcebooking_ResourceRequirement</para>
/// </summary>
public List<BookableResourceBooking> GetBookableResourceBookings_ResourceRequirement (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBooking>(Service, this.Id, "bookableresourcebooking", "msdyn_resourcerequirement", Columns); }
/// <summary>
/// <para><b>BookableResourceBookingHeader (Resource Requirement)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_bookableresourcebookingheader_ResourceRequirement</para>
/// </summary>
public List<BookableResourceBookingHeader> GetBookableResourceBookingHeaders_ResourceRequirement (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBookingHeader>(Service, this.Id, "bookableresourcebookingheader", "msdyn_resourcerequirement", Columns); }
/// <summary>
/// <para><b>BookableResourceBookingHeader (Resource Requirement)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_bookableresourcebookingheader_ResourceRequirement</para>
/// </summary>
public List<BookableResourceBookingHeader> GetBookableResourceBookingHeaders_ResourceRequirement (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBookingHeader>(Service, this.Id, "bookableresourcebookingheader", "msdyn_resourcerequirement", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_MailboxTrackingFolders</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_MailboxTrackingFolders</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>CompetencyRequirement_Deprecated (Resource Requirement)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_characteristicreq</para>
/// </summary>
public List<CompetencyRequirement_Deprecated> GetCompetencyRequirements_ResourceRequirement (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CompetencyRequirement_Deprecated>(Service, this.Id, "msdyn_characteristicreqforteammember", "msdyn_resourcerequirementid", Columns); }
/// <summary>
/// <para><b>CompetencyRequirement_Deprecated (Resource Requirement)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_characteristicreq</para>
/// </summary>
public List<CompetencyRequirement_Deprecated> GetCompetencyRequirements_ResourceRequirement (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CompetencyRequirement_Deprecated>(Service, this.Id, "msdyn_characteristicreqforteammember", "msdyn_resourcerequirementid", Columns); }
/// <summary>
/// <para><b>ProjectTeamMember (Resource Requirement)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_projectteam</para>
/// </summary>
public List<ProjectTeamMember> GetProjectTeamMembers_ResourceRequirement (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTeamMember>(Service, this.Id, "msdyn_projectteam", "msdyn_resourcerequirementid", Columns); }
/// <summary>
/// <para><b>ProjectTeamMember (Resource Requirement)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_projectteam</para>
/// </summary>
public List<ProjectTeamMember> GetProjectTeamMembers_ResourceRequirement (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTeamMember>(Service, this.Id, "msdyn_projectteam", "msdyn_resourcerequirementid", Columns); }
/// <summary>
/// <para>Characteristics</para>
/// <para><b>RequirementCharacteristic (Resource Requirement)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_requirementcharacteristic_resourcerequirement</para>
/// </summary>
public List<RequirementCharacteristic> GetCharacteristics_ResourceRequirement (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementCharacteristic>(Service, this.Id, "msdyn_requirementcharacteristic", "msdyn_resourcerequirement", Columns); }
/// <summary>
/// <para>Characteristics</para>
/// <para><b>RequirementCharacteristic (Resource Requirement)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_requirementcharacteristic_resourcerequirement</para>
/// </summary>
public List<RequirementCharacteristic> GetCharacteristics_ResourceRequirement (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementCharacteristic>(Service, this.Id, "msdyn_requirementcharacteristic", "msdyn_resourcerequirement", Columns); }
/// <summary>
/// <para>Organizational Units</para>
/// <para><b>RequirementOrganizationUnit (Resource Requirement)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_requirementorganizationunit_ResourceRequirement</para>
/// </summary>
public List<RequirementOrganizationUnit> GetOrganizationalUnits_ResourceRequirement (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementOrganizationUnit>(Service, this.Id, "msdyn_requirementorganizationunit", "msdyn_resourcerequirement", Columns); }
/// <summary>
/// <para>Organizational Units</para>
/// <para><b>RequirementOrganizationUnit (Resource Requirement)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_requirementorganizationunit_ResourceRequirement</para>
/// </summary>
public List<RequirementOrganizationUnit> GetOrganizationalUnits_ResourceRequirement (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementOrganizationUnit>(Service, this.Id, "msdyn_requirementorganizationunit", "msdyn_resourcerequirement", Columns); }
/// <summary>
/// <para>Resource Categories</para>
/// <para><b>RequirementResourceCategory (Resource Requirement)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_requirementresourcecategory_resourcerequirement</para>
/// </summary>
public List<RequirementResourceCategory> GetResourceCategories_ResourceRequirement (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementResourceCategory>(Service, this.Id, "msdyn_requirementresourcecategory", "msdyn_resourcerequirement", Columns); }
/// <summary>
/// <para>Resource Categories</para>
/// <para><b>RequirementResourceCategory (Resource Requirement)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_requirementresourcecategory_resourcerequirement</para>
/// </summary>
public List<RequirementResourceCategory> GetResourceCategories_ResourceRequirement (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementResourceCategory>(Service, this.Id, "msdyn_requirementresourcecategory", "msdyn_resourcerequirement", Columns); }
/// <summary>
/// <para>Resource Preferences</para>
/// <para><b>RequirementResourcePreference (Resource Requirement)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_requirementresourcepreference_ResourceRequirement</para>
/// </summary>
public List<RequirementResourcePreference> GetResourcePreferences_ResourceRequirement (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementResourcePreference>(Service, this.Id, "msdyn_requirementresourcepreference", "msdyn_resourcerequirement", Columns); }
/// <summary>
/// <para>Resource Preferences</para>
/// <para><b>RequirementResourcePreference (Resource Requirement)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_requirementresourcepreference_ResourceRequirement</para>
/// </summary>
public List<RequirementResourcePreference> GetResourcePreferences_ResourceRequirement (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementResourcePreference>(Service, this.Id, "msdyn_requirementresourcepreference", "msdyn_resourcerequirement", Columns); }
/// <summary>
/// <para><b>ResourceRequest (Resource Requirement)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_request</para>
/// </summary>
public List<ResourceRequest> GetResourceRequests_ResourceRequirement (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceRequest>(Service, this.Id, "msdyn_resourcerequest", "msdyn_resourcerequirementid", Columns); }
/// <summary>
/// <para><b>ResourceRequest (Resource Requirement)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_request</para>
/// </summary>
public List<ResourceRequest> GetResourceRequests_ResourceRequirement (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceRequest>(Service, this.Id, "msdyn_resourcerequest", "msdyn_resourcerequirementid", Columns); }
/// <summary>
/// <para>Requirement Details</para>
/// <para><b>ResourceRequirementDetail (Resource Requirement)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_details</para>
/// </summary>
public List<ResourceRequirementDetail> GetRequirementDetails_ResourceRequirement (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceRequirementDetail>(Service, this.Id, "msdyn_resourcerequirementdetail", "msdyn_resourcerequirementid", Columns); }
/// <summary>
/// <para>Requirement Details</para>
/// <para><b>ResourceRequirementDetail (Resource Requirement)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_details</para>
/// </summary>
public List<ResourceRequirementDetail> GetRequirementDetails_ResourceRequirement (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceRequirementDetail>(Service, this.Id, "msdyn_resourcerequirementdetail", "msdyn_resourcerequirementid", Columns); }
/// <summary>
/// <para><b>WorkOrderIncident (Resource Requirement)</b></para>
/// <para>Schema Name: msdyn_msdyn_resourcerequirement_msdyn_workorderincident_ResourceRequirement</para>
/// </summary>
public List<WorkOrderIncident> GetWorkOrderIncidents_ResourceRequirement (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderIncident>(Service, this.Id, "msdyn_workorderincident", "msdyn_resourcerequirement", Columns); }
/// <summary>
/// <para><b>WorkOrderIncident (Resource Requirement)</b></para>
/// <para>Schema Name: msdyn_msdyn_resourcerequirement_msdyn_workorderincident_ResourceRequirement</para>
/// </summary>
public List<WorkOrderIncident> GetWorkOrderIncidents_ResourceRequirement (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderIncident>(Service, this.Id, "msdyn_workorderincident", "msdyn_resourcerequirement", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_PrincipalObjectAttributeAccesses</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_PrincipalObjectAttributeAccesses</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_ProcessSession</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_ProcessSession</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_UserEntityInstanceDatas</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: msdyn_resourcerequirement_UserEntityInstanceDatas</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        /// <summary>
/// <para>Related Entity: <b>Bookable Resource</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: msdyn_resourcerequirement_bookableresource</para>
/// </summary>
public List<BookableResource> GetBookableResources (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<BookableResource>(Service, this, "msdyn_resourcerequirement", "msdyn_resourcerequirementid", "bookableresource", "bookableresourceid", "msdyn_resourcerequirement_bookableresource", "msdyn_resourcerequirementid", "bookableresourceid", Columns); }
public List<BookableResource> GetBookableResources (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<BookableResource>(Service, this, "msdyn_resourcerequirement", "msdyn_resourcerequirementid", "bookableresource", "bookableresourceid", "msdyn_resourcerequirement_bookableresource", "msdyn_resourcerequirementid", "bookableresourceid", Columns); }
public void RelateBookableResources (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "msdyn_resourcerequirement_bookableresource", Items); }
public void RelateBookableResources (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "msdyn_resourcerequirement_bookableresource", Items); }
public void UnRelateBookableResources (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "msdyn_resourcerequirement_bookableresource", Items); }
public void UnRelateBookableResources (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "msdyn_resourcerequirement_bookableresource", Items); }
/// <summary>
/// <para>Related Entity: <b>Bookable Resource Booking Header</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: msdyn_resourcerequirement_bookingheader</para>
/// </summary>
public List<BookableResourceBookingHeader> GetBookableResourceBookingHeaders (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<BookableResourceBookingHeader>(Service, this, "msdyn_resourcerequirement", "msdyn_resourcerequirementid", "bookableresourcebookingheader", "bookableresourcebookingheaderid", "msdyn_resourcerequirement_bookingheader", "msdyn_resourcerequirementid", "bookableresourcebookingheaderid", Columns); }
public List<BookableResourceBookingHeader> GetBookableResourceBookingHeaders (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<BookableResourceBookingHeader>(Service, this, "msdyn_resourcerequirement", "msdyn_resourcerequirementid", "bookableresourcebookingheader", "bookableresourcebookingheaderid", "msdyn_resourcerequirement_bookingheader", "msdyn_resourcerequirementid", "bookableresourcebookingheaderid", Columns); }
public void RelateBookableResourceBookingHeaders (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "msdyn_resourcerequirement_bookingheader", Items); }
public void RelateBookableResourceBookingHeaders (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "msdyn_resourcerequirement_bookingheader", Items); }
public void UnRelateBookableResourceBookingHeaders (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "msdyn_resourcerequirement_bookingheader", Items); }
public void UnRelateBookableResourceBookingHeaders (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "msdyn_resourcerequirement_bookingheader", Items); }
/// <summary>
/// <para>Related Entity: <b>User</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: msdyn_resourcerequirement_systemuser</para>
/// </summary>
public List<User> GetUsers (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<User>(Service, this, "msdyn_resourcerequirement", "msdyn_resourcerequirementid", "systemuser", "systemuserid", "msdyn_resourcerequirement_systemuser", "msdyn_resourcerequirementid", "systemuserid", Columns); }
public List<User> GetUsers (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<User>(Service, this, "msdyn_resourcerequirement", "msdyn_resourcerequirementid", "systemuser", "systemuserid", "msdyn_resourcerequirement_systemuser", "msdyn_resourcerequirementid", "systemuserid", Columns); }
public void RelateUsers (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "msdyn_resourcerequirement_systemuser", Items); }
public void RelateUsers (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "msdyn_resourcerequirement_systemuser", Items); }
public void UnRelateUsers (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "msdyn_resourcerequirement_systemuser", Items); }
public void UnRelateUsers (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "msdyn_resourcerequirement_systemuser", Items); }


        

        public enum eAllocationMethod
{
	///<summary><para>None</para>
	///<para>Value = 192350000</para></summary>
	[Description("None")]
	None = 192350000, 
	///<summary><para>Full capacity</para>
	///<para>Value = 192350001</para></summary>
	[Description("Full capacity")]
	FullCapacity = 192350001, 
	///<summary><para>Percentage capacity</para>
	///<para>Value = 192350004</para></summary>
	[Description("Percentage capacity")]
	PercentageCapacity = 192350004, 
	///<summary><para>Distribute evenly</para>
	///<para>Value = 192350003</para></summary>
	[Description("Distribute evenly")]
	DistributeEvenly = 192350003, 
	///<summary><para>Front load</para>
	///<para>Value = 192350005</para></summary>
	[Description("Front load")]
	FrontLoad = 192350005
}
public enum eStatus
{
	///<summary><para>Active</para>
	///<para>Value = 0</para></summary>
	[Description("Active")]
	Active = 0, 
	///<summary><para>Inactive</para>
	///<para>Value = 1</para></summary>
	[Description("Inactive")]
	Inactive = 1
}
public enum eStatusReason
{
	///<summary><para>Active</para>
	///<para>Value = 1</para></summary>
	[Description("Active")]
	Active_Active = 1, 
	///<summary><para>Inactive</para>
	///<para>Value = 2</para></summary>
	[Description("Inactive")]
	Inactive_Inactive = 2
}
public enum eType
{
	///<summary><para>New</para>
	///<para>Value = 192350000</para></summary>
	[Description("New")]
	@New = 192350000, 
	///<summary><para>Extend</para>
	///<para>Value = 192350001</para></summary>
	[Description("Extend")]
	Extend = 192350001
}
public enum eWorkLocation
{
	///<summary><para>Onsite</para>
	///<para>Value = 690970000</para></summary>
	[Description("Onsite")]
	Onsite = 690970000, 
	///<summary><para>Depot</para>
	///<para>Value = 690970001</para></summary>
	[Description("Depot")]
	Depot = 690970001, 
	///<summary><para>Location Agnostic</para>
	///<para>Value = 690970002</para></summary>
	[Description("Location Agnostic")]
	LocationAgnostic = 690970002
}
public void SetState(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>msdyn_priorityname</para>
	/// <para>msdyn_priorityname</para></summary>
	public const string Msdyn_PriorityName = "msdyn_priorityname";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>msdyn_projectidname</para>
	/// <para>msdyn_projectidname</para></summary>
	public const string Msdyn_projectidName = "msdyn_projectidname";
	/// <summary><para>owneridname</para>
	/// <para>owneridname</para></summary>
	public const string OwnerIdName = "owneridname";
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>msdyn_bookingsetupmetadataidname</para>
	/// <para>msdyn_bookingsetupmetadataidname</para></summary>
	public const string Msdyn_BookingSetupMetadataIdName = "msdyn_bookingsetupmetadataidname";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>owneridyominame</para>
	/// <para>owneridyominame</para></summary>
	public const string OwnerIdYomiName = "owneridyominame";
	/// <summary><para>msdyn_roleidname</para>
	/// <para>msdyn_roleidname</para></summary>
	public const string Msdyn_roleidName = "msdyn_roleidname";
	/// <summary><para>msdyn_workordername</para>
	/// <para>msdyn_workordername</para></summary>
	public const string Msdyn_WorkOrderName = "msdyn_workordername";
	/// <summary><para>msdyn_statusname</para>
	/// <para>msdyn_statusname</para></summary>
	public const string Msdyn_StatusName = "msdyn_statusname";
	/// <summary><para>msdyn_workhourtemplatename</para>
	/// <para>msdyn_workhourtemplatename</para></summary>
	public const string Msdyn_workhourtemplateName = "msdyn_workhourtemplatename";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>msdyn_territoryname</para>
	/// <para>msdyn_territoryname</para></summary>
	public const string Msdyn_TerritoryName = "msdyn_territoryname";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>transactioncurrencyidname</para>
	/// <para>transactioncurrencyidname</para></summary>
	public const string TransactionCurrencyIdName = "transactioncurrencyidname";
	/// <summary><para>msdyn_timegroupname</para>
	/// <para>msdyn_timegroupname</para></summary>
	public const string Msdyn_TimeGroupName = "msdyn_timegroupname";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>owneridtype</para>
	/// <para>owneridtype</para></summary>
	public const string OwnerIdType = "owneridtype";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>Allocation Method</para>
	/// <para>msdyn_allocationmethod</para></summary>
	public const string AllocationMethod = "msdyn_allocationmethod";
	/// <summary><para>Booking Setup Metadata</para>
	/// <para>msdyn_bookingsetupmetadataid</para></summary>
	public const string BookingSetupMetadata = "msdyn_bookingsetupmetadataid";
	/// <summary><para>Calendar Id</para>
	/// <para>msdyn_calendarid</para></summary>
	public const string CalendarId = "msdyn_calendarid";
	/// <summary><para>City</para>
	/// <para>msdyn_city</para></summary>
	public const string City = "msdyn_city";
	/// <summary><para>Cost Price</para>
	/// <para>msdyn_costprice</para></summary>
	public const string CostPrice = "msdyn_costprice";
	/// <summary><para>Cost Price (Base)</para>
	/// <para>msdyn_costprice_base</para></summary>
	public const string CostPrice_Base = "msdyn_costprice_base";
	/// <summary><para>Country/Region</para>
	/// <para>msdyn_country</para></summary>
	public const string Country_Region = "msdyn_country";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Currency</para>
	/// <para>transactioncurrencyid</para></summary>
	public const string Currency = "transactioncurrencyid";
	/// <summary><para>Duration</para>
	/// <para>msdyn_duration</para></summary>
	public const string Duration = "msdyn_duration";
	/// <summary><para>Exchange Rate</para>
	/// <para>exchangerate</para></summary>
	public const string ExchangeRate = "exchangerate";
	/// <summary><para>From Date</para>
	/// <para>msdyn_fromdate</para></summary>
	public const string FromDate = "msdyn_fromdate";
	/// <summary><para>Fulfilled Duration</para>
	/// <para>msdyn_fulfilledduration</para></summary>
	public const string FulfilledDuration = "msdyn_fulfilledduration";
	/// <summary><para>Fulfilled Hours (Deprecated)</para>
	/// <para>msdyn_fulfilledhours</para></summary>
	public const string FulfilledHours_Deprecated = "msdyn_fulfilledhours";
	/// <summary><para>Hours (Deprecated)</para>
	/// <para>msdyn_hours</para></summary>
	public const string Hours_Deprecated = "msdyn_hours";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string ImportSequenceNumber = "importsequencenumber";
	/// <summary><para>Internal Flags</para>
	/// <para>msdyn_internalflags</para></summary>
	public const string InternalFlags = "msdyn_internalflags";
	/// <summary><para>Is Primary</para>
	/// <para>msdyn_isprimary</para></summary>
	public const string IsPrimary = "msdyn_isprimary";
	/// <summary><para>Latitude</para>
	/// <para>msdyn_latitude</para></summary>
	public const string Latitude = "msdyn_latitude";
	/// <summary><para>Longitude</para>
	/// <para>msdyn_longitude</para></summary>
	public const string Longitude = "msdyn_longitude";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>Name</para>
	/// <para>msdyn_name</para></summary>
	public const string Name = "msdyn_name";
	/// <summary><para>Owner</para>
	/// <para>ownerid</para></summary>
	public const string Owner = "ownerid";
	/// <summary><para>Owning Business Unit</para>
	/// <para>owningbusinessunit</para></summary>
	public const string OwningBusinessUnit = "owningbusinessunit";
	/// <summary><para>Owning Team</para>
	/// <para>owningteam</para></summary>
	public const string OwningTeam = "owningteam";
	/// <summary><para>Owning User</para>
	/// <para>owninguser</para></summary>
	public const string OwningUser = "owninguser";
	/// <summary><para>Percentage</para>
	/// <para>msdyn_percentage</para></summary>
	public const string Percentage = "msdyn_percentage";
	/// <summary><para>Priority</para>
	/// <para>msdyn_priority</para></summary>
	public const string Priority = "msdyn_priority";
	/// <summary><para>Project</para>
	/// <para>msdyn_projectid</para></summary>
	public const string Project = "msdyn_projectid";
	/// <summary><para>Quantity</para>
	/// <para>msdyn_quantity</para></summary>
	public const string Quantity = "msdyn_quantity";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string RecordCreatedOn = "overriddencreatedon";
	/// <summary><para>Remaining Duration</para>
	/// <para>msdyn_remainingduration</para></summary>
	public const string RemainingDuration = "msdyn_remainingduration";
	/// <summary><para>Resource Requirement</para>
	/// <para>msdyn_resourcerequirementid</para></summary>
	public const string ResourceRequirementId = "msdyn_resourcerequirementid";
	/// <summary><para>Role (Deprecated)</para>
	/// <para>msdyn_roleid</para></summary>
	public const string Role_Deprecated = "msdyn_roleid";
	/// <summary><para>State/Province</para>
	/// <para>msdyn_stateorprovince</para></summary>
	public const string State_Province = "msdyn_stateorprovince";
	/// <summary><para>Status</para>
	/// <para>msdyn_status</para></summary>
	public const string Status = "msdyn_status";
	/// <summary><para>Status</para>
	/// <para>statecode</para></summary>
	public const string Status2 = "statecode";
	/// <summary><para>Status</para>
	/// <para>msdyn_requeststatus</para></summary>
	public const string Status3 = "msdyn_requeststatus";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string StatusReason = "statuscode";
	/// <summary><para>Territory</para>
	/// <para>msdyn_territory</para></summary>
	public const string Territory = "msdyn_territory";
	/// <summary><para>Time From Promised</para>
	/// <para>msdyn_timefrompromised</para></summary>
	public const string TimeFromPromised = "msdyn_timefrompromised";
	/// <summary><para>Time Group</para>
	/// <para>msdyn_timegroup</para></summary>
	public const string TimeGroup = "msdyn_timegroup";
	/// <summary><para>Time To Promised</para>
	/// <para>msdyn_timetopromised</para></summary>
	public const string TimeToPromised = "msdyn_timetopromised";
	/// <summary><para>Time Window End</para>
	/// <para>msdyn_timewindowend</para></summary>
	public const string TimeWindowEnd = "msdyn_timewindowend";
	/// <summary><para>Time Window Start</para>
	/// <para>msdyn_timewindowstart</para></summary>
	public const string TimeWindowStart = "msdyn_timewindowstart";
	/// <summary><para>Time Zone Rule Version Number</para>
	/// <para>timezoneruleversionnumber</para></summary>
	public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
	/// <summary><para>To Date</para>
	/// <para>msdyn_todate</para></summary>
	public const string ToDate = "msdyn_todate";
	/// <summary><para>Type</para>
	/// <para>msdyn_type</para></summary>
	public const string Type = "msdyn_type";
	/// <summary><para>UTC Conversion Time Zone Code</para>
	/// <para>utcconversiontimezonecode</para></summary>
	public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
	/// <summary><para>Work Hour Template</para>
	/// <para>msdyn_workhourtemplate</para></summary>
	public const string WorkHourTemplate = "msdyn_workhourtemplate";
	/// <summary><para>Work Location</para>
	/// <para>msdyn_worklocation</para></summary>
	public const string WorkLocation = "msdyn_worklocation";
	/// <summary><para>Work Order</para>
	/// <para>msdyn_workorder</para></summary>
	public const string WorkOrder = "msdyn_workorder";
}

    }
}

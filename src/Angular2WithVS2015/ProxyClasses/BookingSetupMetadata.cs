// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("msdyn_bookingsetupmetadata")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class BookingSetupMetadata : BaseProxyClass
    {
        public new const string LogicalName = "msdyn_bookingsetupmetadata";
        public const int ObjectTypeCode = 10010;
        public const string PrimaryIdAttribute = "msdyn_bookingsetupmetadataid";
        public const string PrimaryNameAttribute = "msdyn_entitylogicalname";
        
        static BookingSetupMetadata()
        {
            BaseProxyClass.RegisterProxyType(typeof(BookingSetupMetadata), "msdyn_bookingsetupmetadata");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public BookingSetupMetadata() : base(new Entity("msdyn_bookingsetupmetadata")) { }
        public BookingSetupMetadata(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<BookingSetupMetadata>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: owneridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridname")]
public string OwnerIdName
{
	get { return this.GetPropertyValue<string>("owneridname"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_defaultbookingcommittedstatusname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_defaultbookingcommittedstatusname")]
public string Msdyn_DefaultBookingCommittedStatusName
{
	get { return this.GetPropertyValue<string>("msdyn_defaultbookingcommittedstatusname"); }
}
///<summary>
///<para>Logical Name: msdyn_defaultrequirementcanceledstatusname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_defaultrequirementcanceledstatusname")]
public string Msdyn_DefaultRequirementCanceledStatusName
{
	get { return this.GetPropertyValue<string>("msdyn_defaultrequirementcanceledstatusname"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_defaultbookingcanceledstatusname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_defaultbookingcanceledstatusname")]
public string Msdyn_DefaultBookingCanceledStatusName
{
	get { return this.GetPropertyValue<string>("msdyn_defaultbookingcanceledstatusname"); }
}
///<summary>
///<para>Logical Name: owneridtype</para>
///</summary>
[AttributeLogicalNameAttribute("owneridtype")]
public string OwnerIdType
{
	get { return this.GetPropertyValue<string>("owneridtype"); }
	set { this.SetPropertyValue<string>("owneridtype", value, "OwnerIdType"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: owneridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridyominame")]
public string OwnerIdYomiName
{
	get { return this.GetPropertyValue<string>("owneridyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_defaultrequirementcompletedstatusname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_defaultrequirementcompletedstatusname")]
public string Msdyn_DefaultRequirementCompletedStatusName
{
	get { return this.GetPropertyValue<string>("msdyn_defaultrequirementcompletedstatusname"); }
}
///<summary>
///<para>Logical Name: msdyn_defaultrequirementactivestatusname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_defaultrequirementactivestatusname")]
public string Msdyn_DefaultRequirementActiveStatusName
{
	get { return this.GetPropertyValue<string>("msdyn_defaultrequirementactivestatusname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_bookingrelationshiplogicalname</para>
///<para>Max Length: 450 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_bookingrelationshiplogicalname")]
public string BookingRelationshipLogicalName
{
	get { return this.GetPropertyValue<string>("msdyn_bookingrelationshiplogicalname"); }
	set { this.SetPropertyValue("msdyn_bookingrelationshiplogicalname", value, 450, "BookingRelationshipLogicalName"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: msdyn_bookingsetupmetadataid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_bookingsetupmetadataid")]
public Guid BookingSetupMetadataId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: msdyn_bookingstatusfieldlogicalname</para>
///<para>Max Length: 450 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_bookingstatusfieldlogicalname")]
public string BookingStatusFieldLogicalName
{
	get { return this.GetPropertyValue<string>("msdyn_bookingstatusfieldlogicalname"); }
	set { this.SetPropertyValue("msdyn_bookingstatusfieldlogicalname", value, 450, "BookingStatusFieldLogicalName"); }
}
///<summary>
///<para>Logical Name: msdyn_cancelbookingswhenmoving</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_cancelbookingswhenmoving")]
public bool? CancelBookingsWhenMoving
{
	get { return this.GetPropertyValue<bool?>("msdyn_cancelbookingswhenmoving"); }
	set { this.SetPropertyValue<bool?>("msdyn_cancelbookingswhenmoving", value, "CancelBookingsWhenMoving"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: msdyn_defaultbookingcanceledstatus</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_defaultbookingcanceledstatus")]
public EntityReference DefaultBookingCanceledStatus
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_defaultbookingcanceledstatus"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_defaultbookingcanceledstatus", value, "DefaultBookingCanceledStatus"); }
}
///<summary>
///<para>Logical Name: msdyn_defaultbookingcommittedstatus</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_defaultbookingcommittedstatus")]
public EntityReference DefaultBookingCommittedStatus
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_defaultbookingcommittedstatus"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_defaultbookingcommittedstatus", value, "DefaultBookingCommittedStatus"); }
}
///<summary>
///<para>Logical Name: msdyn_defaultbookingduration</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_defaultbookingduration")]
public int? DefaultBookingDuration
{
	get { return this.GetPropertyValue<int?>("msdyn_defaultbookingduration"); }
	set { this.SetPropertyValue("msdyn_defaultbookingduration", (int?)value, (int)0, (int)2147483647, "DefaultBookingDuration"); }
}
///<summary>
///<para>Logical Name: msdyn_defaultrequirementactivestatus</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_defaultrequirementactivestatus")]
public EntityReference DefaultRequirementActiveStatus
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_defaultrequirementactivestatus"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_defaultrequirementactivestatus", value, "DefaultRequirementActiveStatus"); }
}
///<summary>
///<para>Logical Name: msdyn_defaultrequirementcanceledstatus</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_defaultrequirementcanceledstatus")]
public EntityReference DefaultRequirementCanceledStatus
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_defaultrequirementcanceledstatus"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_defaultrequirementcanceledstatus", value, "DefaultRequirementCanceledStatus"); }
}
///<summary>
///<para>Logical Name: msdyn_defaultrequirementcompletedstatus</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_defaultrequirementcompletedstatus")]
public EntityReference DefaultRequirementCompletedStatus
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_defaultrequirementcompletedstatus"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_defaultrequirementcompletedstatus", value, "DefaultRequirementCompletedStatus"); }
}
///<summary>
///<para>Logical Name: msdyn_disablerequirementautocreation</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_disablerequirementautocreation")]
public bool? DisableRequirementAutoCreation
{
	get { return this.GetPropertyValue<bool?>("msdyn_disablerequirementautocreation"); }
	set { this.SetPropertyValue<bool?>("msdyn_disablerequirementautocreation", value, "DisableRequirementAutoCreation"); }
}
///<summary>
///<para>Logical Name: msdyn_entitylogicalname</para>
///<para>Max Length: 450 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_entitylogicalname")]
public string EntityLogicalName
{
	get { return this.GetPropertyValue<string>("msdyn_entitylogicalname"); }
	set { this.SetPropertyValue("msdyn_entitylogicalname", value, 450, "EntityLogicalName"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? ImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "ImportSequenceNumber"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: ownerid</para>
///</summary>
[AttributeLogicalNameAttribute("ownerid")]
public EntityReference Owner
{
	get { return this.GetPropertyValue<EntityReference>("ownerid"); }
	set { this.SetPropertyValue<EntityReference>("ownerid", value, "Owner"); }
}
///<summary>
///<para>Logical Name: owningbusinessunit</para>
///</summary>
[AttributeLogicalNameAttribute("owningbusinessunit")]
public EntityReference OwningBusinessUnit
{
	get { return this.GetPropertyValue<EntityReference>("owningbusinessunit"); }
}
///<summary>
///<para>Logical Name: owningteam</para>
///</summary>
[AttributeLogicalNameAttribute("owningteam")]
public EntityReference OwningTeam
{
	get { return this.GetPropertyValue<EntityReference>("owningteam"); }
}
///<summary>
///<para>Logical Name: owninguser</para>
///</summary>
[AttributeLogicalNameAttribute("owninguser")]
public EntityReference OwningUser
{
	get { return this.GetPropertyValue<EntityReference>("owninguser"); }
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? RecordCreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "RecordCreatedOn"); }
}
///<summary>
///<para>Logical Name: msdyn_requirementrelationshiplogicalname</para>
///<para>Max Length: 450 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_requirementrelationshiplogicalname")]
public string RequirementRelationshipLogicalName
{
	get { return this.GetPropertyValue<string>("msdyn_requirementrelationshiplogicalname"); }
	set { this.SetPropertyValue("msdyn_requirementrelationshiplogicalname", value, 450, "RequirementRelationshipLogicalName"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eStatus? Status
{
	get
	{
		if (Status_OptionSetValue != null) { return (eStatus)Status_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Status_OptionSetValue = new OptionSetValue((int)value); }
		else this.Status_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue Status_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
	set { this.SetPropertyValue<OptionSetValue>("statecode", value, "Status_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Status_Text(IOrganizationService Service)
{
	return this.Status_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Status_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Status_OptionSetValue.Value);
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? StatusReason
{
	get
	{
		if (StatusReason_OptionSetValue != null) { return (eStatusReason)StatusReason_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StatusReason_OptionSetValue = new OptionSetValue((int)value); }
		else this.StatusReason_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue StatusReason_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "StatusReason_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string StatusReason_Text(IOrganizationService Service)
{
	return this.StatusReason_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string StatusReason_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.StatusReason_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: timezoneruleversionnumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("timezoneruleversionnumber")]
public int? TimeZoneRuleVersionNumber
{
	get { return this.GetPropertyValue<int?>("timezoneruleversionnumber"); }
	set { this.SetPropertyValue("timezoneruleversionnumber", (int?)value, (int)-1, (int)2147483647, "TimeZoneRuleVersionNumber"); }
}
///<summary>
///<para>Logical Name: utcconversiontimezonecode</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utcconversiontimezonecode")]
public int? UTCConversionTimeZoneCode
{
	get { return this.GetPropertyValue<int?>("utcconversiontimezonecode"); }
	set { this.SetPropertyValue("utcconversiontimezonecode", (int?)value, (int)-1, (int)2147483647, "UTCConversionTimeZoneCode"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}


        /// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: msdyn_bookingsetupmetadata_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: msdyn_bookingsetupmetadata_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BookableResourceBooking (Booking Setup Metadata)</b></para>
/// <para>Schema Name: msdyn_msdyn_bookingsetupmetadata_bookableresourcebooking</para>
/// </summary>
public List<BookableResourceBooking> GetBookableResourceBookings_BookingSetupMetadata (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBooking>(Service, this.Id, "bookableresourcebooking", "msdyn_bookingsetupmetadataid", Columns); }
/// <summary>
/// <para><b>BookableResourceBooking (Booking Setup Metadata)</b></para>
/// <para>Schema Name: msdyn_msdyn_bookingsetupmetadata_bookableresourcebooking</para>
/// </summary>
public List<BookableResourceBooking> GetBookableResourceBookings_BookingSetupMetadata (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBooking>(Service, this.Id, "bookableresourcebooking", "msdyn_bookingsetupmetadataid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: msdyn_bookingsetupmetadata_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: msdyn_bookingsetupmetadata_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: msdyn_bookingsetupmetadata_MailboxTrackingFolders</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: msdyn_bookingsetupmetadata_MailboxTrackingFolders</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para>Requirements</para>
/// <para><b>ResourceRequirement (Booking Setup Metadata)</b></para>
/// <para>Schema Name: msdyn_msdyn_bookingsetupmetadata_msdyn_resourcerequirement</para>
/// </summary>
public List<ResourceRequirement> GetRequirements_BookingSetupMetadata (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceRequirement>(Service, this.Id, "msdyn_resourcerequirement", "msdyn_bookingsetupmetadataid", Columns); }
/// <summary>
/// <para>Requirements</para>
/// <para><b>ResourceRequirement (Booking Setup Metadata)</b></para>
/// <para>Schema Name: msdyn_msdyn_bookingsetupmetadata_msdyn_resourcerequirement</para>
/// </summary>
public List<ResourceRequirement> GetRequirements_BookingSetupMetadata (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceRequirement>(Service, this.Id, "msdyn_resourcerequirement", "msdyn_bookingsetupmetadataid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: msdyn_bookingsetupmetadata_PrincipalObjectAttributeAccesses</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: msdyn_bookingsetupmetadata_PrincipalObjectAttributeAccesses</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: msdyn_bookingsetupmetadata_ProcessSession</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: msdyn_bookingsetupmetadata_ProcessSession</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: msdyn_bookingsetupmetadata_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: msdyn_bookingsetupmetadata_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: msdyn_bookingsetupmetadata_UserEntityInstanceDatas</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: msdyn_bookingsetupmetadata_UserEntityInstanceDatas</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        

        

        public enum eStatus
{
	///<summary><para>Active</para>
	///<para>Value = 0</para></summary>
	[Description("Active")]
	Active = 0, 
	///<summary><para>Inactive</para>
	///<para>Value = 1</para></summary>
	[Description("Inactive")]
	Inactive = 1
}
public enum eStatusReason
{
	///<summary><para>Active</para>
	///<para>Value = 1</para></summary>
	[Description("Active")]
	Active_Active = 1, 
	///<summary><para>Inactive</para>
	///<para>Value = 2</para></summary>
	[Description("Inactive")]
	Inactive_Inactive = 2
}
public void SetState(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>owneridname</para>
	/// <para>owneridname</para></summary>
	public const string OwnerIdName = "owneridname";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>msdyn_defaultbookingcommittedstatusname</para>
	/// <para>msdyn_defaultbookingcommittedstatusname</para></summary>
	public const string Msdyn_DefaultBookingCommittedStatusName = "msdyn_defaultbookingcommittedstatusname";
	/// <summary><para>msdyn_defaultrequirementcanceledstatusname</para>
	/// <para>msdyn_defaultrequirementcanceledstatusname</para></summary>
	public const string Msdyn_DefaultRequirementCanceledStatusName = "msdyn_defaultrequirementcanceledstatusname";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>msdyn_defaultbookingcanceledstatusname</para>
	/// <para>msdyn_defaultbookingcanceledstatusname</para></summary>
	public const string Msdyn_DefaultBookingCanceledStatusName = "msdyn_defaultbookingcanceledstatusname";
	/// <summary><para>owneridtype</para>
	/// <para>owneridtype</para></summary>
	public const string OwnerIdType = "owneridtype";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>owneridyominame</para>
	/// <para>owneridyominame</para></summary>
	public const string OwnerIdYomiName = "owneridyominame";
	/// <summary><para>msdyn_defaultrequirementcompletedstatusname</para>
	/// <para>msdyn_defaultrequirementcompletedstatusname</para></summary>
	public const string Msdyn_DefaultRequirementCompletedStatusName = "msdyn_defaultrequirementcompletedstatusname";
	/// <summary><para>msdyn_defaultrequirementactivestatusname</para>
	/// <para>msdyn_defaultrequirementactivestatusname</para></summary>
	public const string Msdyn_DefaultRequirementActiveStatusName = "msdyn_defaultrequirementactivestatusname";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>Booking Relationship Logical Name</para>
	/// <para>msdyn_bookingrelationshiplogicalname</para></summary>
	public const string BookingRelationshipLogicalName = "msdyn_bookingrelationshiplogicalname";
	/// <summary><para>Booking Setup Metadata</para>
	/// <para>msdyn_bookingsetupmetadataid</para></summary>
	public const string BookingSetupMetadataId = "msdyn_bookingsetupmetadataid";
	/// <summary><para>Booking Status Field Logical Name</para>
	/// <para>msdyn_bookingstatusfieldlogicalname</para></summary>
	public const string BookingStatusFieldLogicalName = "msdyn_bookingstatusfieldlogicalname";
	/// <summary><para>Cancel Bookings When Moving</para>
	/// <para>msdyn_cancelbookingswhenmoving</para></summary>
	public const string CancelBookingsWhenMoving = "msdyn_cancelbookingswhenmoving";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Default Booking Canceled Status</para>
	/// <para>msdyn_defaultbookingcanceledstatus</para></summary>
	public const string DefaultBookingCanceledStatus = "msdyn_defaultbookingcanceledstatus";
	/// <summary><para>Default Booking Committed Status</para>
	/// <para>msdyn_defaultbookingcommittedstatus</para></summary>
	public const string DefaultBookingCommittedStatus = "msdyn_defaultbookingcommittedstatus";
	/// <summary><para>Default Booking Duration</para>
	/// <para>msdyn_defaultbookingduration</para></summary>
	public const string DefaultBookingDuration = "msdyn_defaultbookingduration";
	/// <summary><para>Default Requirement Active Status</para>
	/// <para>msdyn_defaultrequirementactivestatus</para></summary>
	public const string DefaultRequirementActiveStatus = "msdyn_defaultrequirementactivestatus";
	/// <summary><para>Default Requirement Canceled Status</para>
	/// <para>msdyn_defaultrequirementcanceledstatus</para></summary>
	public const string DefaultRequirementCanceledStatus = "msdyn_defaultrequirementcanceledstatus";
	/// <summary><para>Default Requirement Completed Status</para>
	/// <para>msdyn_defaultrequirementcompletedstatus</para></summary>
	public const string DefaultRequirementCompletedStatus = "msdyn_defaultrequirementcompletedstatus";
	/// <summary><para>Disable Requirement Auto Creation</para>
	/// <para>msdyn_disablerequirementautocreation</para></summary>
	public const string DisableRequirementAutoCreation = "msdyn_disablerequirementautocreation";
	/// <summary><para>Entity Logical Name</para>
	/// <para>msdyn_entitylogicalname</para></summary>
	public const string EntityLogicalName = "msdyn_entitylogicalname";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string ImportSequenceNumber = "importsequencenumber";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>Owner</para>
	/// <para>ownerid</para></summary>
	public const string Owner = "ownerid";
	/// <summary><para>Owning Business Unit</para>
	/// <para>owningbusinessunit</para></summary>
	public const string OwningBusinessUnit = "owningbusinessunit";
	/// <summary><para>Owning Team</para>
	/// <para>owningteam</para></summary>
	public const string OwningTeam = "owningteam";
	/// <summary><para>Owning User</para>
	/// <para>owninguser</para></summary>
	public const string OwningUser = "owninguser";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string RecordCreatedOn = "overriddencreatedon";
	/// <summary><para>Requirement Relationship Logical Name</para>
	/// <para>msdyn_requirementrelationshiplogicalname</para></summary>
	public const string RequirementRelationshipLogicalName = "msdyn_requirementrelationshiplogicalname";
	/// <summary><para>Status</para>
	/// <para>statecode</para></summary>
	public const string Status = "statecode";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string StatusReason = "statuscode";
	/// <summary><para>Time Zone Rule Version Number</para>
	/// <para>timezoneruleversionnumber</para></summary>
	public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
	/// <summary><para>UTC Conversion Time Zone Code</para>
	/// <para>utcconversiontimezonecode</para></summary>
	public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
}

    }
}

// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("msdyn_purchaseorder")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class PurchaseOrder : BaseProxyClass
    {
        public new const string LogicalName = "msdyn_purchaseorder";
        public const int ObjectTypeCode = 10144;
        public const string PrimaryIdAttribute = "msdyn_purchaseorderid";
        public const string PrimaryNameAttribute = "msdyn_name";
        
        static PurchaseOrder()
        {
            BaseProxyClass.RegisterProxyType(typeof(PurchaseOrder), "msdyn_purchaseorder");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public PurchaseOrder() : base(new Entity("msdyn_purchaseorder")) { }
        public PurchaseOrder(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<PurchaseOrder>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: msdyn_receivetowarehousename</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_receivetowarehousename")]
public string Msdyn_ReceivetoWarehouseName
{
	get { return this.GetPropertyValue<string>("msdyn_receivetowarehousename"); }
}
///<summary>
///<para>Logical Name: owneridtype</para>
///</summary>
[AttributeLogicalNameAttribute("owneridtype")]
public string OwnerIdType
{
	get { return this.GetPropertyValue<string>("owneridtype"); }
	set { this.SetPropertyValue<string>("owneridtype", value, "OwnerIdType"); }
}
///<summary>
///<para>Logical Name: msdyn_approvedrejectedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_approvedrejectedbyyominame")]
public string Msdyn_ApprovedRejectedByYomiName
{
	get { return this.GetPropertyValue<string>("msdyn_approvedrejectedbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: owneridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridname")]
public string OwnerIdName
{
	get { return this.GetPropertyValue<string>("owneridname"); }
}
///<summary>
///<para>Logical Name: msdyn_orderedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_orderedbyyominame")]
public string Msdyn_OrderedByYomiName
{
	get { return this.GetPropertyValue<string>("msdyn_orderedbyyominame"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_requestedbyresourcename</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_requestedbyresourcename")]
public string Msdyn_RequestedByResourceName
{
	get { return this.GetPropertyValue<string>("msdyn_requestedbyresourcename"); }
}
///<summary>
///<para>Logical Name: msdyn_orderedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_orderedbyname")]
public string Msdyn_OrderedByName
{
	get { return this.GetPropertyValue<string>("msdyn_orderedbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_paymenttermname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_paymenttermname")]
public string Msdyn_PaymentTermName
{
	get { return this.GetPropertyValue<string>("msdyn_paymenttermname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_shipvianame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_shipvianame")]
public string Msdyn_ShipViaName
{
	get { return this.GetPropertyValue<string>("msdyn_shipvianame"); }
}
///<summary>
///<para>Logical Name: msdyn_workordername</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workordername")]
public string Msdyn_WorkOrderName
{
	get { return this.GetPropertyValue<string>("msdyn_workordername"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_vendorname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_vendorname")]
public string Msdyn_VendorName
{
	get { return this.GetPropertyValue<string>("msdyn_vendorname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_bookingname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_bookingname")]
public string Msdyn_BookingName
{
	get { return this.GetPropertyValue<string>("msdyn_bookingname"); }
}
///<summary>
///<para>Logical Name: msdyn_approvedrejectedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_approvedrejectedbyname")]
public string Msdyn_ApprovedRejectedByName
{
	get { return this.GetPropertyValue<string>("msdyn_approvedrejectedbyname"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyidname")]
public string TransactionCurrencyIdName
{
	get { return this.GetPropertyValue<string>("transactioncurrencyidname"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_vendoryominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_vendoryominame")]
public string Msdyn_VendorYomiName
{
	get { return this.GetPropertyValue<string>("msdyn_vendoryominame"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: owneridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridyominame")]
public string OwnerIdYomiName
{
	get { return this.GetPropertyValue<string>("owneridyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_substatusname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_substatusname")]
public string Msdyn_SubStatusName
{
	get { return this.GetPropertyValue<string>("msdyn_substatusname"); }
}
///<summary>
///<para>Logical Name: msdyn_addressname</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_addressname")]
public string AddressName
{
	get { return this.GetPropertyValue<string>("msdyn_addressname"); }
	set { this.SetPropertyValue("msdyn_addressname", value, 250, "AddressName"); }
}
///<summary>
///<para>Logical Name: msdyn_address1</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_address1")]
public string Address1
{
	get { return this.GetPropertyValue<string>("msdyn_address1"); }
	set { this.SetPropertyValue("msdyn_address1", value, 250, "Address1"); }
}
///<summary>
///<para>Logical Name: msdyn_address2</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_address2")]
public string Address2
{
	get { return this.GetPropertyValue<string>("msdyn_address2"); }
	set { this.SetPropertyValue("msdyn_address2", value, 250, "Address2"); }
}
///<summary>
///<para>Logical Name: msdyn_address3</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_address3")]
public string Address3
{
	get { return this.GetPropertyValue<string>("msdyn_address3"); }
	set { this.SetPropertyValue("msdyn_address3", value, 250, "Address3"); }
}
///<summary>
///<para>Logical Name: msdyn_amountbilled</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 900000000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? AmountBilled
{
	get
	{
		if (AmountBilledMoney != null) { return AmountBilledMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.AmountBilledMoney = new Money(value.Value); }
		else this.AmountBilledMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_amountbilled</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 900000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_amountbilled")]
public Money AmountBilledMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_amountbilled"); }
	set { this.SetPropertyValue("msdyn_amountbilled", (Money)value, (decimal)0, (decimal)900000000000000, "AmountBilledMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_amountbilled_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? AmountBilled_Base
{
	get
	{
		if (AmountBilled_BaseMoney != null) { return AmountBilled_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_amountbilled_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_amountbilled_base")]
public Money AmountBilled_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_amountbilled_base"); }
}
/// <summary>
///Logical Name: msdyn_approvalstatus
/// </summary>
[AttributeLogicalNameAttribute("msdyn_approvalstatus")]
public ePOApprovalStatus? ApprovalStatus
{
	get
	{
		if (ApprovalStatus_OptionSetValue != null) { return (ePOApprovalStatus)ApprovalStatus_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ApprovalStatus_OptionSetValue = new OptionSetValue((int)value); }
		else this.ApprovalStatus_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_approvalstatus</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_approvalstatus")]
public OptionSetValue ApprovalStatus_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_approvalstatus"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_approvalstatus", value, "ApprovalStatus_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ApprovalStatus_Text(IOrganizationService Service)
{
	return this.ApprovalStatus_OptionSetValue.GetOptionSetText(Service, this, "msdyn_approvalstatus");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ApprovalStatus_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ApprovalStatus_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_approvedrejectedby</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_approvedrejectedby")]
public EntityReference Approved_RejectedBy
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_approvedrejectedby"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_approvedrejectedby", value, "Approved_RejectedBy"); }
}
///<summary>
///<para>Logical Name: msdyn_booking</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_booking")]
public EntityReference Booking
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_booking"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_booking", value, "Booking"); }
}
///<summary>
///<para>Logical Name: msdyn_city</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_city")]
public string City
{
	get { return this.GetPropertyValue<string>("msdyn_city"); }
	set { this.SetPropertyValue("msdyn_city", value, 80, "City"); }
}
///<summary>
///<para>Logical Name: msdyn_country</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_country")]
public string Country_Region
{
	get { return this.GetPropertyValue<string>("msdyn_country"); }
	set { this.SetPropertyValue("msdyn_country", value, 80, "Country_Region"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyid</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyid")]
public EntityReference Currency
{
	get { return this.GetPropertyValue<EntityReference>("transactioncurrencyid"); }
	set { this.SetPropertyValue<EntityReference>("transactioncurrencyid", value, "Currency"); }
}
///<summary>
///<para>Logical Name: msdyn_dateexpected</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_dateexpected")]
public DateTime? DateExpected
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_dateexpected"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_dateexpected", value, "DateExpected"); }
}
///<summary>
///<para>Logical Name: exchangerate</para>
///<para>Minimum Value: 0.0000000001</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 10</para>
///</summary>
[AttributeLogicalNameAttribute("exchangerate")]
public decimal? ExchangeRate
{
	get { return this.GetPropertyValue<decimal?>("exchangerate"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? ImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "ImportSequenceNumber"); }
}
///<summary>
///<para>Logical Name: msdyn_latitude</para>
///<para>Minimum Value: -90</para>
///<para>Maximum Value: 90</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_latitude")]
public double? Latitude
{
	get { return this.GetPropertyValue<double?>("msdyn_latitude"); }
	set { this.SetPropertyValue("msdyn_latitude", (double?)value, (double)-90, (double)90, "Latitude"); }
}
///<summary>
///<para>Logical Name: msdyn_longitude</para>
///<para>Minimum Value: -180</para>
///<para>Maximum Value: 180</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_longitude")]
public double? Longitude
{
	get { return this.GetPropertyValue<double?>("msdyn_longitude"); }
	set { this.SetPropertyValue("msdyn_longitude", (double?)value, (double)-180, (double)180, "Longitude"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: msdyn_name</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_name")]
public string Name
{
	get { return this.GetPropertyValue<string>("msdyn_name"); }
	set { this.SetPropertyValue("msdyn_name", value, 100, "Name"); }
}
///<summary>
///<para>Logical Name: msdyn_orderedby</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_orderedby")]
public EntityReference OrderedBy
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_orderedby"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_orderedby", value, "OrderedBy"); }
}
///<summary>
///<para>Logical Name: ownerid</para>
///</summary>
[AttributeLogicalNameAttribute("ownerid")]
public EntityReference Owner
{
	get { return this.GetPropertyValue<EntityReference>("ownerid"); }
	set { this.SetPropertyValue<EntityReference>("ownerid", value, "Owner"); }
}
///<summary>
///<para>Logical Name: owningbusinessunit</para>
///</summary>
[AttributeLogicalNameAttribute("owningbusinessunit")]
public EntityReference OwningBusinessUnit
{
	get { return this.GetPropertyValue<EntityReference>("owningbusinessunit"); }
}
///<summary>
///<para>Logical Name: owningteam</para>
///</summary>
[AttributeLogicalNameAttribute("owningteam")]
public EntityReference OwningTeam
{
	get { return this.GetPropertyValue<EntityReference>("owningteam"); }
}
///<summary>
///<para>Logical Name: owninguser</para>
///</summary>
[AttributeLogicalNameAttribute("owninguser")]
public EntityReference OwningUser
{
	get { return this.GetPropertyValue<EntityReference>("owninguser"); }
}
///<summary>
///<para>Logical Name: msdyn_paymentterm</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_paymentterm")]
public EntityReference PaymentTerm
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_paymentterm"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_paymentterm", value, "PaymentTerm"); }
}
///<summary>
///<para>Logical Name: msdyn_postalcode</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_postalcode")]
public string PostalCode
{
	get { return this.GetPropertyValue<string>("msdyn_postalcode"); }
	set { this.SetPropertyValue("msdyn_postalcode", value, 20, "PostalCode"); }
}
///<summary>
///<para>Logical Name: processid</para>
///</summary>
[AttributeLogicalNameAttribute("processid")]
public Guid ProcessId
{
	get { return this.GetPropertyValue<Guid>("processid"); }
	set { this.SetPropertyValue<Guid>("processid", value, "ProcessId"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: msdyn_purchaseorderid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_purchaseorderid")]
public Guid PurchaseOrderId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: msdyn_purchaseorderdate</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_purchaseorderdate")]
public DateTime? PurchaseOrderDate
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_purchaseorderdate"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_purchaseorderdate", value, "PurchaseOrderDate"); }
}
///<summary>
///<para>Logical Name: msdyn_receivetowarehouse</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_receivetowarehouse")]
public EntityReference ReceiveToWarehouse
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_receivetowarehouse"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_receivetowarehouse", value, "ReceiveToWarehouse"); }
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? RecordCreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "RecordCreatedOn"); }
}
///<summary>
///<para>Logical Name: msdyn_requestedbyresource</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_requestedbyresource")]
public EntityReference RequestedByResource
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_requestedbyresource"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_requestedbyresource", value, "RequestedByResource"); }
}
/// <summary>
///Logical Name: msdyn_shipto
/// </summary>
[AttributeLogicalNameAttribute("msdyn_shipto")]
public ePOShipToType? ShipTo
{
	get
	{
		if (ShipTo_OptionSetValue != null) { return (ePOShipToType)ShipTo_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ShipTo_OptionSetValue = new OptionSetValue((int)value); }
		else this.ShipTo_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_shipto</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_shipto")]
public OptionSetValue ShipTo_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_shipto"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_shipto", value, "ShipTo_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ShipTo_Text(IOrganizationService Service)
{
	return this.ShipTo_OptionSetValue.GetOptionSetText(Service, this, "msdyn_shipto");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ShipTo_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ShipTo_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_shipvia</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_shipvia")]
public EntityReference ShipVia
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_shipvia"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_shipvia", value, "ShipVia"); }
}
///<summary>
///<para>Logical Name: stageid</para>
///</summary>
[AttributeLogicalNameAttribute("stageid")]
public Guid StageId
{
	get { return this.GetPropertyValue<Guid>("stageid"); }
	set { this.SetPropertyValue<Guid>("stageid", value, "StageId"); }
}
///<summary>
///<para>Logical Name: msdyn_stateorprovince</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_stateorprovince")]
public string StateOrProvince
{
	get { return this.GetPropertyValue<string>("msdyn_stateorprovince"); }
	set { this.SetPropertyValue("msdyn_stateorprovince", value, 50, "StateOrProvince"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eStatus? Status
{
	get
	{
		if (Status_OptionSetValue != null) { return (eStatus)Status_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Status_OptionSetValue = new OptionSetValue((int)value); }
		else this.Status_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue Status_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
	set { this.SetPropertyValue<OptionSetValue>("statecode", value, "Status_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Status_Text(IOrganizationService Service)
{
	return this.Status_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Status_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Status_OptionSetValue.Value);
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? StatusReason
{
	get
	{
		if (StatusReason_OptionSetValue != null) { return (eStatusReason)StatusReason_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StatusReason_OptionSetValue = new OptionSetValue((int)value); }
		else this.StatusReason_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue StatusReason_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "StatusReason_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string StatusReason_Text(IOrganizationService Service)
{
	return this.StatusReason_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string StatusReason_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.StatusReason_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_substatus</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_substatus")]
public EntityReference Sub_Status
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_substatus"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_substatus", value, "Sub_Status"); }
}
/// <summary>
///Logical Name: msdyn_systemstatus
/// </summary>
[AttributeLogicalNameAttribute("msdyn_systemstatus")]
public ePOSystemStatus? SystemStatus
{
	get
	{
		if (SystemStatus_OptionSetValue != null) { return (ePOSystemStatus)SystemStatus_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.SystemStatus_OptionSetValue = new OptionSetValue((int)value); }
		else this.SystemStatus_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_systemstatus</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_systemstatus")]
public OptionSetValue SystemStatus_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_systemstatus"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_systemstatus", value, "SystemStatus_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string SystemStatus_Text(IOrganizationService Service)
{
	return this.SystemStatus_OptionSetValue.GetOptionSetText(Service, this, "msdyn_systemstatus");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string SystemStatus_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.SystemStatus_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: timezoneruleversionnumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("timezoneruleversionnumber")]
public int? TimeZoneRuleVersionNumber
{
	get { return this.GetPropertyValue<int?>("timezoneruleversionnumber"); }
	set { this.SetPropertyValue("timezoneruleversionnumber", (int?)value, (int)-1, (int)2147483647, "TimeZoneRuleVersionNumber"); }
}
///<summary>
///<para>Logical Name: msdyn_totalamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalAmount
{
	get
	{
		if (TotalAmountMoney != null) { return TotalAmountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.TotalAmountMoney = new Money(value.Value); }
		else this.TotalAmountMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_totalamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totalamount")]
public Money TotalAmountMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_totalamount"); }
	set { this.SetPropertyValue("msdyn_totalamount", (Money)value, (decimal)0, (decimal)922337203685477, "TotalAmountMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_totalamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalAmount_Base
{
	get
	{
		if (TotalAmount_BaseMoney != null) { return TotalAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_totalamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totalamount_base")]
public Money TotalAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_totalamount_base"); }
}
///<summary>
///<para>Logical Name: traversedpath</para>
///<para>Max Length: 1250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("traversedpath")]
public string TraversedPath
{
	get { return this.GetPropertyValue<string>("traversedpath"); }
	set { this.SetPropertyValue("traversedpath", value, 1250, "TraversedPath"); }
}
///<summary>
///<para>Logical Name: utcconversiontimezonecode</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utcconversiontimezonecode")]
public int? UTCConversionTimeZoneCode
{
	get { return this.GetPropertyValue<int?>("utcconversiontimezonecode"); }
	set { this.SetPropertyValue("utcconversiontimezonecode", (int?)value, (int)-1, (int)2147483647, "UTCConversionTimeZoneCode"); }
}
///<summary>
///<para>Logical Name: msdyn_vendor</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_vendor")]
public EntityReference Vendor
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_vendor"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_vendor", value, "Vendor"); }
}
///<summary>
///<para>Logical Name: msdyn_vendornote</para>
///<para>Max Length: 2000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_vendornote")]
public string VendorNote
{
	get { return this.GetPropertyValue<string>("msdyn_vendornote"); }
	set { this.SetPropertyValue("msdyn_vendornote", value, 2000, "VendorNote"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}
///<summary>
///<para>Logical Name: msdyn_workorder</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workorder")]
public EntityReference WorkOrder
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_workorder"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_workorder", value, "WorkOrder"); }
}


        /// <summary>
/// <para><b>Activity (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_ActivityPointers</para>
/// </summary>
public List<Activity> GetActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Activity>(Service, this.Id, "activitypointer", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Activity (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_ActivityPointers</para>
/// </summary>
public List<Activity> GetActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Activity>(Service, this.Id, "activitypointer", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_Annotations</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_Annotations</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Appointment (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_Appointments</para>
/// </summary>
public List<Appointment> GetAppointments_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Appointment>(Service, this.Id, "appointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Appointment (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_Appointments</para>
/// </summary>
public List<Appointment> GetAppointments_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Appointment>(Service, this.Id, "appointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>Email (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_Emails</para>
/// </summary>
public List<Email> GetEmailMessages_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Email (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_Emails</para>
/// </summary>
public List<Email> GetEmailMessages_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Fax (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_Faxes</para>
/// </summary>
public List<Fax> GetFaxes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fax>(Service, this.Id, "fax", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Fax (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_Faxes</para>
/// </summary>
public List<Fax> GetFaxes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fax>(Service, this.Id, "fax", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Letter (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_Letters</para>
/// </summary>
public List<Letter> GetLetters_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Letter>(Service, this.Id, "letter", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Letter (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_Letters</para>
/// </summary>
public List<Letter> GetLetters_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Letter>(Service, this.Id, "letter", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_MailboxTrackingFolders</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_MailboxTrackingFolders</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Approval (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_msdyn_approvals</para>
/// </summary>
public List<Approval> GetApprovals_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Approval>(Service, this.Id, "msdyn_approval", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Approval (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_msdyn_approvals</para>
/// </summary>
public List<Approval> GetApprovals_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Approval>(Service, this.Id, "msdyn_approval", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BookingAlert (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_msdyn_bookingalerts</para>
/// </summary>
public List<BookingAlert> GetBookingAlerts_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlert>(Service, this.Id, "msdyn_bookingalert", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BookingAlert (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_msdyn_bookingalerts</para>
/// </summary>
public List<BookingAlert> GetBookingAlerts_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlert>(Service, this.Id, "msdyn_bookingalert", "regardingobjectid", Columns); }
/// <summary>
/// <para>msdyn_purchaseorder</para>
/// <para><b>PurchaseOrderBusinessProcess (Msdyn_Purchaseorder)</b></para>
/// <para>Schema Name: bpf_msdyn_purchaseorder_msdyn_bpf_2c5fe86acc8b414b8322ae571000c799</para>
/// </summary>
public List<PurchaseOrderBusinessProcess> Getmsdyn_purchaseorder_Msdyn_Purchaseorder (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderBusinessProcess>(Service, this.Id, "msdyn_bpf_2c5fe86acc8b414b8322ae571000c799", "bpf_msdyn_purchaseorderid", Columns); }
/// <summary>
/// <para>msdyn_purchaseorder</para>
/// <para><b>PurchaseOrderBusinessProcess (Msdyn_Purchaseorder)</b></para>
/// <para>Schema Name: bpf_msdyn_purchaseorder_msdyn_bpf_2c5fe86acc8b414b8322ae571000c799</para>
/// </summary>
public List<PurchaseOrderBusinessProcess> Getmsdyn_purchaseorder_Msdyn_Purchaseorder (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderBusinessProcess>(Service, this.Id, "msdyn_bpf_2c5fe86acc8b414b8322ae571000c799", "bpf_msdyn_purchaseorderid", Columns); }
/// <summary>
/// <para><b>PurchaseOrderBill (Purchase Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_purchaseorder_msdyn_purchaseorderbill_PurchaseOrder</para>
/// </summary>
public List<PurchaseOrderBill> GetPurchaseOrderBills_PurchaseOrder (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderBill>(Service, this.Id, "msdyn_purchaseorderbill", "msdyn_purchaseorder", Columns); }
/// <summary>
/// <para><b>PurchaseOrderBill (Purchase Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_purchaseorder_msdyn_purchaseorderbill_PurchaseOrder</para>
/// </summary>
public List<PurchaseOrderBill> GetPurchaseOrderBills_PurchaseOrder (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderBill>(Service, this.Id, "msdyn_purchaseorderbill", "msdyn_purchaseorder", Columns); }
/// <summary>
/// <para>Purchase Order</para>
/// <para><b>PurchaseOrderProduct (Purchase Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_purchaseorder_msdyn_purchaseorderproduct_PurchaseOrder</para>
/// </summary>
public List<PurchaseOrderProduct> GetPurchaseOrderProducts_PurchaseOrder (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderProduct>(Service, this.Id, "msdyn_purchaseorderproduct", "msdyn_purchaseorder", Columns); }
/// <summary>
/// <para>Purchase Order</para>
/// <para><b>PurchaseOrderProduct (Purchase Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_purchaseorder_msdyn_purchaseorderproduct_PurchaseOrder</para>
/// </summary>
public List<PurchaseOrderProduct> GetPurchaseOrderProducts_PurchaseOrder (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderProduct>(Service, this.Id, "msdyn_purchaseorderproduct", "msdyn_purchaseorder", Columns); }
/// <summary>
/// <para><b>PurchaseOrderReceipt (Purchase Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_purchaseorder_msdyn_purchaseorderreceipt_PurchaseOrder</para>
/// </summary>
public List<PurchaseOrderReceipt> GetPurchaseOrderReceipts_PurchaseOrder (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderReceipt>(Service, this.Id, "msdyn_purchaseorderreceipt", "msdyn_purchaseorder", Columns); }
/// <summary>
/// <para><b>PurchaseOrderReceipt (Purchase Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_purchaseorder_msdyn_purchaseorderreceipt_PurchaseOrder</para>
/// </summary>
public List<PurchaseOrderReceipt> GetPurchaseOrderReceipts_PurchaseOrder (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderReceipt>(Service, this.Id, "msdyn_purchaseorderreceipt", "msdyn_purchaseorder", Columns); }
/// <summary>
/// <para><b>PurchaseOrderReceiptProduct (Purchase Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_purchaseorder_msdyn_purchaseorderreceiptproduct_PurchaseOrder</para>
/// </summary>
public List<PurchaseOrderReceiptProduct> GetPurchaseOrderReceiptProducts_PurchaseOrder (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderReceiptProduct>(Service, this.Id, "msdyn_purchaseorderreceiptproduct", "msdyn_purchaseorder", Columns); }
/// <summary>
/// <para><b>PurchaseOrderReceiptProduct (Purchase Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_purchaseorder_msdyn_purchaseorderreceiptproduct_PurchaseOrder</para>
/// </summary>
public List<PurchaseOrderReceiptProduct> GetPurchaseOrderReceiptProducts_PurchaseOrder (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderReceiptProduct>(Service, this.Id, "msdyn_purchaseorderreceiptproduct", "msdyn_purchaseorder", Columns); }
/// <summary>
/// <para>Original Purchase Order</para>
/// <para><b>RTV (Original Purchase Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_purchaseorder_msdyn_rtv_OriginalPO</para>
/// </summary>
public List<RTV> GetOriginalPurchaseOrder_OriginalPurchaseOrder (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTV>(Service, this.Id, "msdyn_rtv", "msdyn_originalpurchaseorder", Columns); }
/// <summary>
/// <para>Original Purchase Order</para>
/// <para><b>RTV (Original Purchase Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_purchaseorder_msdyn_rtv_OriginalPO</para>
/// </summary>
public List<RTV> GetOriginalPurchaseOrder_OriginalPurchaseOrder (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTV>(Service, this.Id, "msdyn_rtv", "msdyn_originalpurchaseorder", Columns); }
/// <summary>
/// <para><b>PhoneCall (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_PhoneCalls</para>
/// </summary>
public List<PhoneCall> GetPhoneCalls_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneCall>(Service, this.Id, "phonecall", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PhoneCall (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_PhoneCalls</para>
/// </summary>
public List<PhoneCall> GetPhoneCalls_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneCall>(Service, this.Id, "phonecall", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_PrincipalObjectAttributeAccesses</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_PrincipalObjectAttributeAccesses</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_ProcessSession</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_ProcessSession</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>RecurringAppointment (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_RecurringAppointmentMasters</para>
/// </summary>
public List<RecurringAppointment> GetRecurringAppointments_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecurringAppointment>(Service, this.Id, "recurringappointmentmaster", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>RecurringAppointment (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_RecurringAppointmentMasters</para>
/// </summary>
public List<RecurringAppointment> GetRecurringAppointments_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecurringAppointment>(Service, this.Id, "recurringappointmentmaster", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ServiceActivity (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_ServiceAppointments</para>
/// </summary>
public List<ServiceActivity> GetServiceActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceActivity>(Service, this.Id, "serviceappointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ServiceActivity (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_ServiceAppointments</para>
/// </summary>
public List<ServiceActivity> GetServiceActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceActivity>(Service, this.Id, "serviceappointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>DocumentLocation (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_SharePointDocumentLocations</para>
/// </summary>
public List<DocumentLocation> GetDocumentLocations_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DocumentLocation>(Service, this.Id, "sharepointdocumentlocation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>DocumentLocation (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_SharePointDocumentLocations</para>
/// </summary>
public List<DocumentLocation> GetDocumentLocations_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DocumentLocation>(Service, this.Id, "sharepointdocumentlocation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SocialActivity (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_SocialActivities</para>
/// </summary>
public List<SocialActivity> GetSocialActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialActivity>(Service, this.Id, "socialactivity", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SocialActivity (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_SocialActivities</para>
/// </summary>
public List<SocialActivity> GetSocialActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialActivity>(Service, this.Id, "socialactivity", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Task (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_Tasks</para>
/// </summary>
public List<Task> GetTasks_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Task>(Service, this.Id, "task", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Task (Regarding)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_Tasks</para>
/// </summary>
public List<Task> GetTasks_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Task>(Service, this.Id, "task", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_UserEntityInstanceDatas</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: msdyn_purchaseorder_UserEntityInstanceDatas</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        

        

        public enum ePOApprovalStatus
{
	///<summary><para>Approved</para>
	///<para>Value = 690970000</para></summary>
	[Description("Approved")]
	Approved = 690970000, 
	///<summary><para>Rejected</para>
	///<para>Value = 690970001</para></summary>
	[Description("Rejected")]
	Rejected = 690970001
}
public enum ePOShipToType
{
	///<summary><para>Site</para>
	///<para>Value = 690970000</para></summary>
	[Description("Site")]
	Site = 690970000, 
	///<summary><para>Business Unit</para>
	///<para>Value = 690970001</para></summary>
	[Description("Business Unit")]
	BusinessUnit = 690970001, 
	///<summary><para>Service Account</para>
	///<para>Value = 690970002</para></summary>
	[Description("Service Account")]
	ServiceAccount = 690970002, 
	///<summary><para>Other</para>
	///<para>Value = 690970003</para></summary>
	[Description("Other")]
	Other = 690970003
}
public enum eStatus
{
	///<summary><para>Active</para>
	///<para>Value = 0</para></summary>
	[Description("Active")]
	Active = 0, 
	///<summary><para>Inactive</para>
	///<para>Value = 1</para></summary>
	[Description("Inactive")]
	Inactive = 1
}
public enum eStatusReason
{
	///<summary><para>Active</para>
	///<para>Value = 1</para></summary>
	[Description("Active")]
	Active_Active = 1, 
	///<summary><para>Inactive</para>
	///<para>Value = 2</para></summary>
	[Description("Inactive")]
	Inactive_Inactive = 2
}
public enum ePOSystemStatus
{
	///<summary><para>Draft</para>
	///<para>Value = 690970000</para></summary>
	[Description("Draft")]
	Draft = 690970000, 
	///<summary><para>Submitted</para>
	///<para>Value = 690970001</para></summary>
	[Description("Submitted")]
	Submitted = 690970001, 
	///<summary><para>Canceled</para>
	///<para>Value = 690970002</para></summary>
	[Description("Canceled")]
	Canceled = 690970002, 
	///<summary><para>Products Received</para>
	///<para>Value = 690970003</para></summary>
	[Description("Products Received")]
	ProductsReceived = 690970003, 
	///<summary><para>Billed</para>
	///<para>Value = 690970004</para></summary>
	[Description("Billed")]
	Billed = 690970004
}
public void SetState(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>msdyn_receivetowarehousename</para>
	/// <para>msdyn_receivetowarehousename</para></summary>
	public const string Msdyn_ReceivetoWarehouseName = "msdyn_receivetowarehousename";
	/// <summary><para>owneridtype</para>
	/// <para>owneridtype</para></summary>
	public const string OwnerIdType = "owneridtype";
	/// <summary><para>msdyn_approvedrejectedbyyominame</para>
	/// <para>msdyn_approvedrejectedbyyominame</para></summary>
	public const string Msdyn_ApprovedRejectedByYomiName = "msdyn_approvedrejectedbyyominame";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>owneridname</para>
	/// <para>owneridname</para></summary>
	public const string OwnerIdName = "owneridname";
	/// <summary><para>msdyn_orderedbyyominame</para>
	/// <para>msdyn_orderedbyyominame</para></summary>
	public const string Msdyn_OrderedByYomiName = "msdyn_orderedbyyominame";
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>msdyn_requestedbyresourcename</para>
	/// <para>msdyn_requestedbyresourcename</para></summary>
	public const string Msdyn_RequestedByResourceName = "msdyn_requestedbyresourcename";
	/// <summary><para>msdyn_orderedbyname</para>
	/// <para>msdyn_orderedbyname</para></summary>
	public const string Msdyn_OrderedByName = "msdyn_orderedbyname";
	/// <summary><para>msdyn_paymenttermname</para>
	/// <para>msdyn_paymenttermname</para></summary>
	public const string Msdyn_PaymentTermName = "msdyn_paymenttermname";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>msdyn_shipvianame</para>
	/// <para>msdyn_shipvianame</para></summary>
	public const string Msdyn_ShipViaName = "msdyn_shipvianame";
	/// <summary><para>msdyn_workordername</para>
	/// <para>msdyn_workordername</para></summary>
	public const string Msdyn_WorkOrderName = "msdyn_workordername";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>msdyn_vendorname</para>
	/// <para>msdyn_vendorname</para></summary>
	public const string Msdyn_VendorName = "msdyn_vendorname";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>msdyn_bookingname</para>
	/// <para>msdyn_bookingname</para></summary>
	public const string Msdyn_BookingName = "msdyn_bookingname";
	/// <summary><para>msdyn_approvedrejectedbyname</para>
	/// <para>msdyn_approvedrejectedbyname</para></summary>
	public const string Msdyn_ApprovedRejectedByName = "msdyn_approvedrejectedbyname";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>transactioncurrencyidname</para>
	/// <para>transactioncurrencyidname</para></summary>
	public const string TransactionCurrencyIdName = "transactioncurrencyidname";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>msdyn_vendoryominame</para>
	/// <para>msdyn_vendoryominame</para></summary>
	public const string Msdyn_VendorYomiName = "msdyn_vendoryominame";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>owneridyominame</para>
	/// <para>owneridyominame</para></summary>
	public const string OwnerIdYomiName = "owneridyominame";
	/// <summary><para>msdyn_substatusname</para>
	/// <para>msdyn_substatusname</para></summary>
	public const string Msdyn_SubStatusName = "msdyn_substatusname";
	/// <summary><para>Address Name</para>
	/// <para>msdyn_addressname</para></summary>
	public const string AddressName = "msdyn_addressname";
	/// <summary><para>Address1</para>
	/// <para>msdyn_address1</para></summary>
	public const string Address1 = "msdyn_address1";
	/// <summary><para>Address2</para>
	/// <para>msdyn_address2</para></summary>
	public const string Address2 = "msdyn_address2";
	/// <summary><para>Address3</para>
	/// <para>msdyn_address3</para></summary>
	public const string Address3 = "msdyn_address3";
	/// <summary><para>Amount Billed</para>
	/// <para>msdyn_amountbilled</para></summary>
	public const string AmountBilled = "msdyn_amountbilled";
	/// <summary><para>Amount Billed (Base)</para>
	/// <para>msdyn_amountbilled_base</para></summary>
	public const string AmountBilled_Base = "msdyn_amountbilled_base";
	/// <summary><para>Approval Status</para>
	/// <para>msdyn_approvalstatus</para></summary>
	public const string ApprovalStatus = "msdyn_approvalstatus";
	/// <summary><para>Approved/Rejected By</para>
	/// <para>msdyn_approvedrejectedby</para></summary>
	public const string Approved_RejectedBy = "msdyn_approvedrejectedby";
	/// <summary><para>Booking</para>
	/// <para>msdyn_booking</para></summary>
	public const string Booking = "msdyn_booking";
	/// <summary><para>City</para>
	/// <para>msdyn_city</para></summary>
	public const string City = "msdyn_city";
	/// <summary><para>Country/Region</para>
	/// <para>msdyn_country</para></summary>
	public const string Country_Region = "msdyn_country";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Currency</para>
	/// <para>transactioncurrencyid</para></summary>
	public const string Currency = "transactioncurrencyid";
	/// <summary><para>Date Expected</para>
	/// <para>msdyn_dateexpected</para></summary>
	public const string DateExpected = "msdyn_dateexpected";
	/// <summary><para>Exchange Rate</para>
	/// <para>exchangerate</para></summary>
	public const string ExchangeRate = "exchangerate";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string ImportSequenceNumber = "importsequencenumber";
	/// <summary><para>Latitude</para>
	/// <para>msdyn_latitude</para></summary>
	public const string Latitude = "msdyn_latitude";
	/// <summary><para>Longitude</para>
	/// <para>msdyn_longitude</para></summary>
	public const string Longitude = "msdyn_longitude";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>Name</para>
	/// <para>msdyn_name</para></summary>
	public const string Name = "msdyn_name";
	/// <summary><para>Ordered By</para>
	/// <para>msdyn_orderedby</para></summary>
	public const string OrderedBy = "msdyn_orderedby";
	/// <summary><para>Owner</para>
	/// <para>ownerid</para></summary>
	public const string Owner = "ownerid";
	/// <summary><para>Owning Business Unit</para>
	/// <para>owningbusinessunit</para></summary>
	public const string OwningBusinessUnit = "owningbusinessunit";
	/// <summary><para>Owning Team</para>
	/// <para>owningteam</para></summary>
	public const string OwningTeam = "owningteam";
	/// <summary><para>Owning User</para>
	/// <para>owninguser</para></summary>
	public const string OwningUser = "owninguser";
	/// <summary><para>Payment Term</para>
	/// <para>msdyn_paymentterm</para></summary>
	public const string PaymentTerm = "msdyn_paymentterm";
	/// <summary><para>Postal Code</para>
	/// <para>msdyn_postalcode</para></summary>
	public const string PostalCode = "msdyn_postalcode";
	/// <summary><para>Process Id</para>
	/// <para>processid</para></summary>
	public const string ProcessId = "processid";
	/// <summary><para>Purchase Order</para>
	/// <para>msdyn_purchaseorderid</para></summary>
	public const string PurchaseOrderId = "msdyn_purchaseorderid";
	/// <summary><para>Purchase Order Date</para>
	/// <para>msdyn_purchaseorderdate</para></summary>
	public const string PurchaseOrderDate = "msdyn_purchaseorderdate";
	/// <summary><para>Receive to Warehouse</para>
	/// <para>msdyn_receivetowarehouse</para></summary>
	public const string ReceiveToWarehouse = "msdyn_receivetowarehouse";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string RecordCreatedOn = "overriddencreatedon";
	/// <summary><para>Requested By Resource</para>
	/// <para>msdyn_requestedbyresource</para></summary>
	public const string RequestedByResource = "msdyn_requestedbyresource";
	/// <summary><para>Ship To</para>
	/// <para>msdyn_shipto</para></summary>
	public const string ShipTo = "msdyn_shipto";
	/// <summary><para>Ship Via</para>
	/// <para>msdyn_shipvia</para></summary>
	public const string ShipVia = "msdyn_shipvia";
	/// <summary><para>Stage Id</para>
	/// <para>stageid</para></summary>
	public const string StageId = "stageid";
	/// <summary><para>State Or Province</para>
	/// <para>msdyn_stateorprovince</para></summary>
	public const string StateOrProvince = "msdyn_stateorprovince";
	/// <summary><para>Status</para>
	/// <para>statecode</para></summary>
	public const string Status = "statecode";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string StatusReason = "statuscode";
	/// <summary><para>Sub-Status</para>
	/// <para>msdyn_substatus</para></summary>
	public const string Sub_Status = "msdyn_substatus";
	/// <summary><para>System Status</para>
	/// <para>msdyn_systemstatus</para></summary>
	public const string SystemStatus = "msdyn_systemstatus";
	/// <summary><para>Time Zone Rule Version Number</para>
	/// <para>timezoneruleversionnumber</para></summary>
	public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
	/// <summary><para>Total Amount</para>
	/// <para>msdyn_totalamount</para></summary>
	public const string TotalAmount = "msdyn_totalamount";
	/// <summary><para>Total Amount (Base)</para>
	/// <para>msdyn_totalamount_base</para></summary>
	public const string TotalAmount_Base = "msdyn_totalamount_base";
	/// <summary><para>Traversed Path</para>
	/// <para>traversedpath</para></summary>
	public const string TraversedPath = "traversedpath";
	/// <summary><para>UTC Conversion Time Zone Code</para>
	/// <para>utcconversiontimezonecode</para></summary>
	public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
	/// <summary><para>Vendor</para>
	/// <para>msdyn_vendor</para></summary>
	public const string Vendor = "msdyn_vendor";
	/// <summary><para>Vendor Note</para>
	/// <para>msdyn_vendornote</para></summary>
	public const string VendorNote = "msdyn_vendornote";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
	/// <summary><para>Work Order</para>
	/// <para>msdyn_workorder</para></summary>
	public const string WorkOrder = "msdyn_workorder";
}

    }
}

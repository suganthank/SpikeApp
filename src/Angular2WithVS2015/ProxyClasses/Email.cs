// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("email")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class Email : BaseProxyClass
    {
        public new const string LogicalName = "email";
        public const int ObjectTypeCode = 4202;
        public const string PrimaryIdAttribute = "activityid";
        public const string PrimaryNameAttribute = "subject";
        
        static Email()
        {
            BaseProxyClass.RegisterProxyType(typeof(Email), "email");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public Email() : base(new Entity("email")) { }
        public Email(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<Email>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: transactioncurrencyidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyidname")]
public string TransactionCurrencyIdName
{
	get { return this.GetPropertyValue<string>("transactioncurrencyidname"); }
}
///<summary>
///<para>Logical Name: owneridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridyominame")]
public string OwnerIdYomiName
{
	get { return this.GetPropertyValue<string>("owneridyominame"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: owneridtype</para>
///</summary>
[AttributeLogicalNameAttribute("owneridtype")]
public string OwnerIdType
{
	get { return this.GetPropertyValue<string>("owneridtype"); }
	set { this.SetPropertyValue<string>("owneridtype", value, "OwnerIdType"); }
}
///<summary>
///<para>Logical Name: owneridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridname")]
public string OwnerIdName
{
	get { return this.GetPropertyValue<string>("owneridname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: regardingobjectidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("regardingobjectidname")]
public string RegardingObjectIdName
{
	get { return this.GetPropertyValue<string>("regardingobjectidname"); }
}
///<summary>
///<para>Logical Name: slainvokedidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("slainvokedidname")]
public string SLAInvokedIdName
{
	get { return this.GetPropertyValue<string>("slainvokedidname"); }
}
///<summary>
///<para>Logical Name: sendermailboxidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("sendermailboxidname")]
public string SenderMailboxIdName
{
	get { return this.GetPropertyValue<string>("sendermailboxidname"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: templateidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("templateidname")]
public string TemplateIdName
{
	get { return this.GetPropertyValue<string>("templateidname"); }
}
///<summary>
///<para>Logical Name: regardingobjectidyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("regardingobjectidyominame")]
public string RegardingObjectIdYomiName
{
	get { return this.GetPropertyValue<string>("regardingobjectidyominame"); }
}
///<summary>
///<para>Logical Name: regardingobjecttypecode</para>
///</summary>
[AttributeLogicalNameAttribute("regardingobjecttypecode")]
public string RegardingObjectTypeCode
{
	get { return this.GetPropertyValue<string>("regardingobjecttypecode"); }
	set { this.SetPropertyValue<string>("regardingobjecttypecode", value, "RegardingObjectTypeCode"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: slaname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("slaname")]
public string SLAName
{
	get { return this.GetPropertyValue<string>("slaname"); }
}
///<summary>
///<para>Logical Name: sendersaccountobjecttypecode</para>
///</summary>
[AttributeLogicalNameAttribute("sendersaccountobjecttypecode")]
public string SendersAccountType
{
	get { return this.GetPropertyValue<string>("sendersaccountobjecttypecode"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eActivityStatus? ActivityStatus
{
	get
	{
		if (ActivityStatus_OptionSetValue != null) { return (eActivityStatus)ActivityStatus_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ActivityStatus_OptionSetValue = new OptionSetValue((int)value); }
		else this.ActivityStatus_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue ActivityStatus_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
	set { this.SetPropertyValue<OptionSetValue>("statecode", value, "ActivityStatus_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ActivityStatus_Text(IOrganizationService Service)
{
	return this.ActivityStatus_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ActivityStatus_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ActivityStatus_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: activitytypecode</para>
///</summary>
[AttributeLogicalNameAttribute("activitytypecode")]
public string ActivityType
{
	get { return this.GetPropertyValue<string>("activitytypecode"); }
}
///<summary>
///<para>Logical Name: actualend</para>
///</summary>
[AttributeLogicalNameAttribute("actualend")]
public DateTime? ActualEnd
{
	get { return this.GetPropertyValue<DateTime?>("actualend"); }
	set { this.SetPropertyValue<DateTime?>("actualend", value, "ActualEnd"); }
}
///<summary>
///<para>Logical Name: actualstart</para>
///</summary>
[AttributeLogicalNameAttribute("actualstart")]
public DateTime? ActualStart
{
	get { return this.GetPropertyValue<DateTime?>("actualstart"); }
	set { this.SetPropertyValue<DateTime?>("actualstart", value, "ActualStart"); }
}
///<summary>
///<para>Logical Name: activityadditionalparams</para>
///<para>Max Length: 8192 characters</para>
///</summary>
[AttributeLogicalNameAttribute("activityadditionalparams")]
public string AdditionalParameters
{
	get { return this.GetPropertyValue<string>("activityadditionalparams"); }
	set { this.SetPropertyValue("activityadditionalparams", value, 8192, "AdditionalParameters"); }
}
///<summary>
///<para>Logical Name: attachmentcount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("attachmentcount")]
public int? AttachmentCount
{
	get { return this.GetPropertyValue<int?>("attachmentcount"); }
}
///<summary>
///<para>Logical Name: attachmentopencount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("attachmentopencount")]
public int? AttachmentViewCount
{
	get { return this.GetPropertyValue<int?>("attachmentopencount"); }
	set { this.SetPropertyValue("attachmentopencount", (int?)value, (int)0, (int)2147483647, "AttachmentViewCount"); }
}
///<summary>
///<para>Logical Name: bcc</para>
///</summary>
[AttributeLogicalNameAttribute("bcc")]
public EntityCollection Bcc
{
	get { return this.GetPropertyValue<EntityCollection>("bcc"); }
	set { this.SetPropertyValue<EntityCollection>("bcc", value, "Bcc"); }
}
///<summary>
///<para>Logical Name: category</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("category")]
public string Category
{
	get { return this.GetPropertyValue<string>("category"); }
	set { this.SetPropertyValue("category", value, 250, "Category"); }
}
///<summary>
///<para>Logical Name: cc</para>
///</summary>
[AttributeLogicalNameAttribute("cc")]
public EntityCollection Cc
{
	get { return this.GetPropertyValue<EntityCollection>("cc"); }
	set { this.SetPropertyValue<EntityCollection>("cc", value, "Cc"); }
}
///<summary>
///<para>Logical Name: compressed</para>
///<para>True = Compressed</para>
///<para>False = Not compressed</para>
///</summary>
[AttributeLogicalNameAttribute("compressed")]
public bool? Compression
{
	get { return this.GetPropertyValue<bool?>("compressed"); }
}
///<summary>
///<para>Logical Name: conversationindex</para>
///<para>Max Length: 2048 characters</para>
///</summary>
[AttributeLogicalNameAttribute("conversationindex")]
public string ConversationIndex
{
	get { return this.GetPropertyValue<string>("conversationindex"); }
}
///<summary>
///<para>Logical Name: baseconversationindexhash</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("baseconversationindexhash")]
public int? ConversationIndex_Hash
{
	get { return this.GetPropertyValue<int?>("baseconversationindexhash"); }
	set { this.SetPropertyValue("baseconversationindexhash", (int?)value, (int)-2147483648, (int)2147483647, "ConversationIndex_Hash"); }
}
///<summary>
///<para>Logical Name: conversationtrackingid</para>
///</summary>
[AttributeLogicalNameAttribute("conversationtrackingid")]
public Guid ConversationTrackingId
{
	get { return this.GetPropertyValue<Guid>("conversationtrackingid"); }
	set { this.SetPropertyValue<Guid>("conversationtrackingid", value, "ConversationTrackingId"); }
}
/// <summary>
///Logical Name: correlationmethod
/// </summary>
[AttributeLogicalNameAttribute("correlationmethod")]
public eCorrelationMethod? CorrelationMethod
{
	get
	{
		if (CorrelationMethod_OptionSetValue != null) { return (eCorrelationMethod)CorrelationMethod_OptionSetValue.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: correlationmethod</para>
///</summary>
[AttributeLogicalNameAttribute("correlationmethod")]
public OptionSetValue CorrelationMethod_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("correlationmethod"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string CorrelationMethod_Text(IOrganizationService Service)
{
	return this.CorrelationMethod_OptionSetValue.GetOptionSetText(Service, this, "correlationmethod");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string CorrelationMethod_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.CorrelationMethod_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyid</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyid")]
public EntityReference Currency
{
	get { return this.GetPropertyValue<EntityReference>("transactioncurrencyid"); }
	set { this.SetPropertyValue<EntityReference>("transactioncurrencyid", value, "Currency"); }
}
///<summary>
///<para>Logical Name: senton</para>
///</summary>
[AttributeLogicalNameAttribute("senton")]
public DateTime? DateSent
{
	get { return this.GetPropertyValue<DateTime?>("senton"); }
}
///<summary>
///<para>Logical Name: postponeemailprocessinguntil</para>
///</summary>
[AttributeLogicalNameAttribute("postponeemailprocessinguntil")]
public DateTime? DelayEmailProcessingUntil
{
	get { return this.GetPropertyValue<DateTime?>("postponeemailprocessinguntil"); }
}
///<summary>
///<para>Logical Name: delayedemailsendtime</para>
///</summary>
[AttributeLogicalNameAttribute("delayedemailsendtime")]
public DateTime? DelaySend
{
	get { return this.GetPropertyValue<DateTime?>("delayedemailsendtime"); }
	set { this.SetPropertyValue<DateTime?>("delayedemailsendtime", value, "DelaySend"); }
}
/// <summary>
///Logical Name: deliveryprioritycode
/// </summary>
[AttributeLogicalNameAttribute("deliveryprioritycode")]
public eDeliveryPriority? DeliveryPriority
{
	get
	{
		if (DeliveryPriority_OptionSetValue != null) { return (eDeliveryPriority)DeliveryPriority_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.DeliveryPriority_OptionSetValue = new OptionSetValue((int)value); }
		else this.DeliveryPriority_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: deliveryprioritycode</para>
///</summary>
[AttributeLogicalNameAttribute("deliveryprioritycode")]
public OptionSetValue DeliveryPriority_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("deliveryprioritycode"); }
	set { this.SetPropertyValue<OptionSetValue>("deliveryprioritycode", value, "DeliveryPriority_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string DeliveryPriority_Text(IOrganizationService Service)
{
	return this.DeliveryPriority_OptionSetValue.GetOptionSetText(Service, this, "deliveryprioritycode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string DeliveryPriority_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.DeliveryPriority_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: deliveryreceiptrequested</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("deliveryreceiptrequested")]
public bool? DeliveryReceiptRequested
{
	get { return this.GetPropertyValue<bool?>("deliveryreceiptrequested"); }
	set { this.SetPropertyValue<bool?>("deliveryreceiptrequested", value, "DeliveryReceiptRequested"); }
}
///<summary>
///<para>Logical Name: description</para>
///<para>Max Length: 1073741823 characters</para>
///</summary>
[AttributeLogicalNameAttribute("description")]
public string Description
{
	get { return this.GetPropertyValue<string>("description"); }
	set { this.SetPropertyValue("description", value, 1073741823, "Description"); }
}
///<summary>
///<para>Logical Name: directioncode</para>
///<para>True = Outgoing</para>
///<para>False = Incoming</para>
///</summary>
[AttributeLogicalNameAttribute("directioncode")]
public bool? Direction
{
	get { return this.GetPropertyValue<bool?>("directioncode"); }
	set { this.SetPropertyValue<bool?>("directioncode", value, "Direction"); }
}
///<summary>
///<para>Logical Name: scheduledend</para>
///</summary>
[AttributeLogicalNameAttribute("scheduledend")]
public DateTime? DueDate
{
	get { return this.GetPropertyValue<DateTime?>("scheduledend"); }
	set { this.SetPropertyValue<DateTime?>("scheduledend", value, "DueDate"); }
}
///<summary>
///<para>Logical Name: actualdurationminutes</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("actualdurationminutes")]
public int? Duration
{
	get { return this.GetPropertyValue<int?>("actualdurationminutes"); }
	set { this.SetPropertyValue("actualdurationminutes", (int?)value, (int)0, (int)2147483647, "Duration"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: activityid</para>
///</summary>
[AttributeLogicalNameAttribute("activityid")]
public Guid EmailMessageId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: emailreminderexpirytime</para>
///</summary>
[AttributeLogicalNameAttribute("emailreminderexpirytime")]
public DateTime? EmailReminderExpiryTime
{
	get { return this.GetPropertyValue<DateTime?>("emailreminderexpirytime"); }
	set { this.SetPropertyValue<DateTime?>("emailreminderexpirytime", value, "EmailReminderExpiryTime"); }
}
/// <summary>
///Logical Name: emailreminderstatus
/// </summary>
[AttributeLogicalNameAttribute("emailreminderstatus")]
public eEmailReminderStatus? EmailReminderStatus
{
	get
	{
		if (EmailReminderStatus_OptionSetValue != null) { return (eEmailReminderStatus)EmailReminderStatus_OptionSetValue.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: emailreminderstatus</para>
///</summary>
[AttributeLogicalNameAttribute("emailreminderstatus")]
public OptionSetValue EmailReminderStatus_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("emailreminderstatus"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string EmailReminderStatus_Text(IOrganizationService Service)
{
	return this.EmailReminderStatus_OptionSetValue.GetOptionSetText(Service, this, "emailreminderstatus");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string EmailReminderStatus_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.EmailReminderStatus_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: emailremindertext</para>
///<para>Max Length: 1250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("emailremindertext")]
public string EmailReminderText
{
	get { return this.GetPropertyValue<string>("emailremindertext"); }
	set { this.SetPropertyValue("emailremindertext", value, 1250, "EmailReminderText"); }
}
/// <summary>
///Logical Name: emailremindertype
/// </summary>
[AttributeLogicalNameAttribute("emailremindertype")]
public eEmailReminderType? EmailReminderType
{
	get
	{
		if (EmailReminderType_OptionSetValue != null) { return (eEmailReminderType)EmailReminderType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.EmailReminderType_OptionSetValue = new OptionSetValue((int)value); }
		else this.EmailReminderType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: emailremindertype</para>
///</summary>
[AttributeLogicalNameAttribute("emailremindertype")]
public OptionSetValue EmailReminderType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("emailremindertype"); }
	set { this.SetPropertyValue<OptionSetValue>("emailremindertype", value, "EmailReminderType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string EmailReminderType_Text(IOrganizationService Service)
{
	return this.EmailReminderType_OptionSetValue.GetOptionSetText(Service, this, "emailremindertype");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string EmailReminderType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.EmailReminderType_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: sendersaccountname</para>
///<para>Max Length: 400 characters</para>
///</summary>
[AttributeLogicalNameAttribute("sendersaccountname")]
public string EmailSenderAccountName
{
	get { return this.GetPropertyValue<string>("sendersaccountname"); }
	set { this.SetPropertyValue("sendersaccountname", value, 400, "EmailSenderAccountName"); }
}
///<summary>
///<para>Logical Name: sendersaccountyominame</para>
///<para>Max Length: 400 characters</para>
///</summary>
[AttributeLogicalNameAttribute("sendersaccountyominame")]
public string EmailSenderAccountYomiName
{
	get { return this.GetPropertyValue<string>("sendersaccountyominame"); }
}
///<summary>
///<para>Logical Name: emailsendername</para>
///<para>Max Length: 400 characters</para>
///</summary>
[AttributeLogicalNameAttribute("emailsendername")]
public string EmailSenderName
{
	get { return this.GetPropertyValue<string>("emailsendername"); }
	set { this.SetPropertyValue("emailsendername", value, 400, "EmailSenderName"); }
}
///<summary>
///<para>Logical Name: emailsenderobjecttypecode</para>
///</summary>
[AttributeLogicalNameAttribute("emailsenderobjecttypecode")]
public string EmailSenderType
{
	get { return this.GetPropertyValue<string>("emailsenderobjecttypecode"); }
}
///<summary>
///<para>Logical Name: emailsenderyominame</para>
///<para>Max Length: 400 characters</para>
///</summary>
[AttributeLogicalNameAttribute("emailsenderyominame")]
public string EmailSenderYomiName
{
	get { return this.GetPropertyValue<string>("emailsenderyominame"); }
}
///<summary>
///<para>Logical Name: emailtrackingid</para>
///</summary>
[AttributeLogicalNameAttribute("emailtrackingid")]
public Guid EmailTrackingId
{
	get { return this.GetPropertyValue<Guid>("emailtrackingid"); }
	set { this.SetPropertyValue<Guid>("emailtrackingid", value, "EmailTrackingId"); }
}
///<summary>
///<para>Logical Name: exchangerate</para>
///<para>Minimum Value: 0.0000000001</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 10</para>
///</summary>
[AttributeLogicalNameAttribute("exchangerate")]
public decimal? ExchangeRate
{
	get { return this.GetPropertyValue<decimal?>("exchangerate"); }
}
///<summary>
///<para>Logical Name: isemailfollowed</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isemailfollowed")]
public bool? Followed
{
	get { return this.GetPropertyValue<bool?>("isemailfollowed"); }
}
///<summary>
///<para>Logical Name: followemailuserpreference</para>
///<para>True = True</para>
///<para>False = False</para>
///</summary>
[AttributeLogicalNameAttribute("followemailuserpreference")]
public bool? Following
{
	get { return this.GetPropertyValue<bool?>("followemailuserpreference"); }
	set { this.SetPropertyValue<bool?>("followemailuserpreference", value, "Following"); }
}
///<summary>
///<para>Logical Name: sender</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("sender")]
public string @From
{
	get { return this.GetPropertyValue<string>("sender"); }
	set { this.SetPropertyValue("sender", value, 250, "@From"); }
}
///<summary>
///<para>Logical Name: from</para>
///</summary>
[AttributeLogicalNameAttribute("from")]
public EntityCollection From2
{
	get { return this.GetPropertyValue<EntityCollection>("from"); }
	set { this.SetPropertyValue<EntityCollection>("from", value, "From2"); }
}
///<summary>
///<para>Logical Name: templateid</para>
///</summary>
[AttributeLogicalNameAttribute("templateid")]
public EntityReference IDForTemplateUsed
{
	get { return this.GetPropertyValue<EntityReference>("templateid"); }
	set { this.SetPropertyValue<EntityReference>("templateid", value, "IDForTemplateUsed"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? ImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "ImportSequenceNumber"); }
}
///<summary>
///<para>Logical Name: inreplyto</para>
///<para>Max Length: 320 characters</para>
///</summary>
[AttributeLogicalNameAttribute("inreplyto")]
public string InReplyToMessage
{
	get { return this.GetPropertyValue<string>("inreplyto"); }
}
///<summary>
///<para>Logical Name: isbilled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isbilled")]
public bool? IsBilled
{
	get { return this.GetPropertyValue<bool?>("isbilled"); }
	set { this.SetPropertyValue<bool?>("isbilled", value, "IsBilled"); }
}
///<summary>
///<para>Logical Name: isregularactivity</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isregularactivity")]
public bool? IsRegularActivity
{
	get { return this.GetPropertyValue<bool?>("isregularactivity"); }
}
///<summary>
///<para>Logical Name: isworkflowcreated</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isworkflowcreated")]
public bool? IsWorkflowCreated
{
	get { return this.GetPropertyValue<bool?>("isworkflowcreated"); }
	set { this.SetPropertyValue<bool?>("isworkflowcreated", value, "IsWorkflowCreated"); }
}
///<summary>
///<para>Logical Name: isunsafe</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("isunsafe")]
public int? IsUnsafe
{
	get { return this.GetPropertyValue<int?>("isunsafe"); }
}
///<summary>
///<para>Logical Name: lastonholdtime</para>
///</summary>
[AttributeLogicalNameAttribute("lastonholdtime")]
public DateTime? LastOnHoldTime
{
	get { return this.GetPropertyValue<DateTime?>("lastonholdtime"); }
	set { this.SetPropertyValue<DateTime?>("lastonholdtime", value, "LastOnHoldTime"); }
}
///<summary>
///<para>Logical Name: lastopenedtime</para>
///</summary>
[AttributeLogicalNameAttribute("lastopenedtime")]
public DateTime? LastOpenedTime
{
	get { return this.GetPropertyValue<DateTime?>("lastopenedtime"); }
	set { this.SetPropertyValue<DateTime?>("lastopenedtime", value, "LastOpenedTime"); }
}
///<summary>
///<para>Logical Name: slainvokedid</para>
///</summary>
[AttributeLogicalNameAttribute("slainvokedid")]
public EntityReference LastSLAApplied
{
	get { return this.GetPropertyValue<EntityReference>("slainvokedid"); }
}
///<summary>
///<para>Logical Name: linksclickedcount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("linksclickedcount")]
public int? LinkClickCount
{
	get { return this.GetPropertyValue<int?>("linksclickedcount"); }
	set { this.SetPropertyValue("linksclickedcount", (int?)value, (int)0, (int)2147483647, "LinkClickCount"); }
}
///<summary>
///<para>Logical Name: messageid</para>
///<para>Max Length: 320 characters</para>
///</summary>
[AttributeLogicalNameAttribute("messageid")]
public string MessageID
{
	get { return this.GetPropertyValue<string>("messageid"); }
	set { this.SetPropertyValue("messageid", value, 320, "MessageID"); }
}
///<summary>
///<para>Logical Name: messageiddupcheck</para>
///</summary>
[AttributeLogicalNameAttribute("messageiddupcheck")]
public Guid MessageIDDupCheck
{
	get { return this.GetPropertyValue<Guid>("messageiddupcheck"); }
	set { this.SetPropertyValue<Guid>("messageiddupcheck", value, "MessageIDDupCheck"); }
}
///<summary>
///<para>Logical Name: mimetype</para>
///<para>Max Length: 256 characters</para>
///</summary>
[AttributeLogicalNameAttribute("mimetype")]
public string MimeType
{
	get { return this.GetPropertyValue<string>("mimetype"); }
	set { this.SetPropertyValue("mimetype", value, 256, "MimeType"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: deliveryattempts</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///</summary>
[AttributeLogicalNameAttribute("deliveryattempts")]
public int? No_OfDeliveryAttempts
{
	get { return this.GetPropertyValue<int?>("deliveryattempts"); }
	set { this.SetPropertyValue("deliveryattempts", (int?)value, (int)0, (int)1000000000, "No_OfDeliveryAttempts"); }
}
/// <summary>
///Logical Name: notifications
/// </summary>
[AttributeLogicalNameAttribute("notifications")]
public eNotifications? Notifications
{
	get
	{
		if (Notifications_OptionSetValue != null) { return (eNotifications)Notifications_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Notifications_OptionSetValue = new OptionSetValue((int)value); }
		else this.Notifications_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: notifications</para>
///</summary>
[AttributeLogicalNameAttribute("notifications")]
public OptionSetValue Notifications_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("notifications"); }
	set { this.SetPropertyValue<OptionSetValue>("notifications", value, "Notifications_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Notifications_Text(IOrganizationService Service)
{
	return this.Notifications_OptionSetValue.GetOptionSetText(Service, this, "notifications");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Notifications_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Notifications_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: onholdtime</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("onholdtime")]
public int? OnHoldTime_Minutes
{
	get { return this.GetPropertyValue<int?>("onholdtime"); }
}
///<summary>
///<para>Logical Name: opencount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("opencount")]
public int? OpenCount
{
	get { return this.GetPropertyValue<int?>("opencount"); }
	set { this.SetPropertyValue("opencount", (int?)value, (int)0, (int)2147483647, "OpenCount"); }
}
///<summary>
///<para>Logical Name: ownerid</para>
///</summary>
[AttributeLogicalNameAttribute("ownerid")]
public EntityReference Owner
{
	get { return this.GetPropertyValue<EntityReference>("ownerid"); }
	set { this.SetPropertyValue<EntityReference>("ownerid", value, "Owner"); }
}
///<summary>
///<para>Logical Name: owningbusinessunit</para>
///</summary>
[AttributeLogicalNameAttribute("owningbusinessunit")]
public EntityReference OwningBusinessUnit
{
	get { return this.GetPropertyValue<EntityReference>("owningbusinessunit"); }
}
///<summary>
///<para>Logical Name: owningteam</para>
///</summary>
[AttributeLogicalNameAttribute("owningteam")]
public EntityReference OwningTeam
{
	get { return this.GetPropertyValue<EntityReference>("owningteam"); }
}
///<summary>
///<para>Logical Name: owninguser</para>
///</summary>
[AttributeLogicalNameAttribute("owninguser")]
public EntityReference OwningUser
{
	get { return this.GetPropertyValue<EntityReference>("owninguser"); }
}
///<summary>
///<para>Logical Name: parentactivityid</para>
///</summary>
[AttributeLogicalNameAttribute("parentactivityid")]
public EntityReference ParentActivityId
{
	get { return this.GetPropertyValue<EntityReference>("parentactivityid"); }
	set { this.SetPropertyValue<EntityReference>("parentactivityid", value, "ParentActivityId"); }
}
///<summary>
///<para>Logical Name: parentactivityidname</para>
///<para>Max Length: 400 characters</para>
///</summary>
[AttributeLogicalNameAttribute("parentactivityidname")]
public string ParentActivityName
{
	get { return this.GetPropertyValue<string>("parentactivityidname"); }
}
/// <summary>
///Logical Name: prioritycode
/// </summary>
[AttributeLogicalNameAttribute("prioritycode")]
public ePriority? Priority
{
	get
	{
		if (Priority_OptionSetValue != null) { return (ePriority)Priority_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Priority_OptionSetValue = new OptionSetValue((int)value); }
		else this.Priority_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: prioritycode</para>
///</summary>
[AttributeLogicalNameAttribute("prioritycode")]
public OptionSetValue Priority_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("prioritycode"); }
	set { this.SetPropertyValue<OptionSetValue>("prioritycode", value, "Priority_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Priority_Text(IOrganizationService Service)
{
	return this.Priority_OptionSetValue.GetOptionSetText(Service, this, "prioritycode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Priority_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Priority_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: processid</para>
///</summary>
[AttributeLogicalNameAttribute("processid")]
public Guid Process
{
	get { return this.GetPropertyValue<Guid>("processid"); }
	set { this.SetPropertyValue<Guid>("processid", value, "Process"); }
}
///<summary>
///<para>Logical Name: stageid</para>
///</summary>
[AttributeLogicalNameAttribute("stageid")]
public Guid ProcessStage
{
	get { return this.GetPropertyValue<Guid>("stageid"); }
	set { this.SetPropertyValue<Guid>("stageid", value, "ProcessStage"); }
}
///<summary>
///<para>Logical Name: readreceiptrequested</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("readreceiptrequested")]
public bool? ReadReceiptRequested
{
	get { return this.GetPropertyValue<bool?>("readreceiptrequested"); }
	set { this.SetPropertyValue<bool?>("readreceiptrequested", value, "ReadReceiptRequested"); }
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? RecordCreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "RecordCreatedOn"); }
}
///<summary>
///<para>Logical Name: regardingobjectid</para>
///</summary>
[AttributeLogicalNameAttribute("regardingobjectid")]
public EntityReference Regarding
{
	get { return this.GetPropertyValue<EntityReference>("regardingobjectid"); }
	set { this.SetPropertyValue<EntityReference>("regardingobjectid", value, "Regarding"); }
}
///<summary>
///<para>Logical Name: reminderactioncardid</para>
///</summary>
[AttributeLogicalNameAttribute("reminderactioncardid")]
public Guid ReminderActionCardId
{
	get { return this.GetPropertyValue<Guid>("reminderactioncardid"); }
	set { this.SetPropertyValue<Guid>("reminderactioncardid", value, "ReminderActionCardId"); }
}
///<summary>
///<para>Logical Name: replycount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("replycount")]
public int? ReplyCount
{
	get { return this.GetPropertyValue<int?>("replycount"); }
}
///<summary>
///<para>Logical Name: safedescription</para>
///<para>Max Length: 1073741823 characters</para>
///</summary>
[AttributeLogicalNameAttribute("safedescription")]
public string SafeDescription
{
	get { return this.GetPropertyValue<string>("safedescription"); }
}
///<summary>
///<para>Logical Name: scheduleddurationminutes</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("scheduleddurationminutes")]
public int? ScheduledDuration
{
	get { return this.GetPropertyValue<int?>("scheduleddurationminutes"); }
}
///<summary>
///<para>Logical Name: emailsender</para>
///</summary>
[AttributeLogicalNameAttribute("emailsender")]
public EntityReference Sender
{
	get { return this.GetPropertyValue<EntityReference>("emailsender"); }
}
///<summary>
///<para>Logical Name: sendersaccount</para>
///</summary>
[AttributeLogicalNameAttribute("sendersaccount")]
public EntityReference SendersAccount
{
	get { return this.GetPropertyValue<EntityReference>("sendersaccount"); }
}
///<summary>
///<para>Logical Name: sendermailboxid</para>
///</summary>
[AttributeLogicalNameAttribute("sendermailboxid")]
public EntityReference SendersMailbox
{
	get { return this.GetPropertyValue<EntityReference>("sendermailboxid"); }
}
///<summary>
///<para>Logical Name: serviceid</para>
///</summary>
[AttributeLogicalNameAttribute("serviceid")]
public EntityReference Service
{
	get { return this.GetPropertyValue<EntityReference>("serviceid"); }
	set { this.SetPropertyValue<EntityReference>("serviceid", value, "Service"); }
}
///<summary>
///<para>Logical Name: slaid</para>
///</summary>
[AttributeLogicalNameAttribute("slaid")]
public EntityReference SLA
{
	get { return this.GetPropertyValue<EntityReference>("slaid"); }
	set { this.SetPropertyValue<EntityReference>("slaid", value, "SLA"); }
}
///<summary>
///<para>Logical Name: sortdate</para>
///</summary>
[AttributeLogicalNameAttribute("sortdate")]
public DateTime? SortDate
{
	get { return this.GetPropertyValue<DateTime?>("sortdate"); }
	set { this.SetPropertyValue<DateTime?>("sortdate", value, "SortDate"); }
}
///<summary>
///<para>Logical Name: scheduledstart</para>
///</summary>
[AttributeLogicalNameAttribute("scheduledstart")]
public DateTime? StartDate
{
	get { return this.GetPropertyValue<DateTime?>("scheduledstart"); }
	set { this.SetPropertyValue<DateTime?>("scheduledstart", value, "StartDate"); }
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? StatusReason
{
	get
	{
		if (StatusReason_OptionSetValue != null) { return (eStatusReason)StatusReason_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StatusReason_OptionSetValue = new OptionSetValue((int)value); }
		else this.StatusReason_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue StatusReason_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "StatusReason_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string StatusReason_Text(IOrganizationService Service)
{
	return this.StatusReason_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string StatusReason_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.StatusReason_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: subcategory</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("subcategory")]
public string Sub_Category
{
	get { return this.GetPropertyValue<string>("subcategory"); }
	set { this.SetPropertyValue("subcategory", value, 250, "Sub_Category"); }
}
///<summary>
///<para>Logical Name: subject</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("subject")]
public string Subject
{
	get { return this.GetPropertyValue<string>("subject"); }
	set { this.SetPropertyValue("subject", value, 200, "Subject"); }
}
///<summary>
///<para>Logical Name: submittedby</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("submittedby")]
public string SubmittedBy
{
	get { return this.GetPropertyValue<string>("submittedby"); }
	set { this.SetPropertyValue("submittedby", value, 250, "SubmittedBy"); }
}
///<summary>
///<para>Logical Name: timezoneruleversionnumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("timezoneruleversionnumber")]
public int? TimeZoneRuleVersionNumber
{
	get { return this.GetPropertyValue<int?>("timezoneruleversionnumber"); }
	set { this.SetPropertyValue("timezoneruleversionnumber", (int?)value, (int)-1, (int)2147483647, "TimeZoneRuleVersionNumber"); }
}
///<summary>
///<para>Logical Name: to</para>
///</summary>
[AttributeLogicalNameAttribute("to")]
public EntityCollection To
{
	get { return this.GetPropertyValue<EntityCollection>("to"); }
	set { this.SetPropertyValue<EntityCollection>("to", value, "To"); }
}
///<summary>
///<para>Logical Name: torecipients</para>
///<para>Max Length: 500 characters</para>
///</summary>
[AttributeLogicalNameAttribute("torecipients")]
public string ToRecipients
{
	get { return this.GetPropertyValue<string>("torecipients"); }
	set { this.SetPropertyValue("torecipients", value, 500, "ToRecipients"); }
}
///<summary>
///<para>Logical Name: trackingtoken</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("trackingtoken")]
public string TrackingToken
{
	get { return this.GetPropertyValue<string>("trackingtoken"); }
	set { this.SetPropertyValue("trackingtoken", value, 50, "TrackingToken"); }
}
///<summary>
///<para>Logical Name: traversedpath</para>
///<para>Max Length: 1250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("traversedpath")]
public string TraversedPath
{
	get { return this.GetPropertyValue<string>("traversedpath"); }
	set { this.SetPropertyValue("traversedpath", value, 1250, "TraversedPath"); }
}
///<summary>
///<para>Logical Name: utcconversiontimezonecode</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utcconversiontimezonecode")]
public int? UTCConversionTimeZoneCode
{
	get { return this.GetPropertyValue<int?>("utcconversiontimezonecode"); }
	set { this.SetPropertyValue("utcconversiontimezonecode", (int?)value, (int)-1, (int)2147483647, "UTCConversionTimeZoneCode"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}


        /// <summary>
/// <para><b>ActionCard (Regarding)</b></para>
/// <para>Schema Name: email_actioncard</para>
/// </summary>
public List<ActionCard> GetActionCards_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActionCard>(Service, this.Id, "actioncard", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ActionCard (Regarding)</b></para>
/// <para>Schema Name: email_actioncard</para>
/// </summary>
public List<ActionCard> GetActionCards_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActionCard>(Service, this.Id, "actioncard", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Attachment (Item)</b></para>
/// <para>Schema Name: email_activity_mime_attachment</para>
/// </summary>
public List<Attachment> GetAttachments_Item (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Attachment>(Service, this.Id, "activitymimeattachment", "objectid", Columns); }
/// <summary>
/// <para><b>Attachment (Item)</b></para>
/// <para>Schema Name: email_activity_mime_attachment</para>
/// </summary>
public List<Attachment> GetAttachments_Item (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Attachment>(Service, this.Id, "activitymimeattachment", "objectid", Columns); }
/// <summary>
/// <para><b>ActivityParty (Activity)</b></para>
/// <para>Schema Name: email_activity_parties</para>
/// </summary>
public List<ActivityParty> GetActivityParties_Activity (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActivityParty>(Service, this.Id, "activityparty", "activityid", Columns); }
/// <summary>
/// <para><b>ActivityParty (Activity)</b></para>
/// <para>Schema Name: email_activity_parties</para>
/// </summary>
public List<ActivityParty> GetActivityParties_Activity (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActivityParty>(Service, this.Id, "activityparty", "activityid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: Email_Annotation</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: Email_Annotation</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: Email_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: Email_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: Email_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: Email_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>CampaignResponse (Originating Activity)</b></para>
/// <para>Schema Name: email_campaignresponse</para>
/// </summary>
public List<CampaignResponse> GetCampaignResponses_OriginatingActivity (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CampaignResponse>(Service, this.Id, "campaignresponse", "originatingactivityid", Columns); }
/// <summary>
/// <para><b>CampaignResponse (Originating Activity)</b></para>
/// <para>Schema Name: email_campaignresponse</para>
/// </summary>
public List<CampaignResponse> GetCampaignResponses_OriginatingActivity (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CampaignResponse>(Service, this.Id, "campaignresponse", "originatingactivityid", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: email_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: email_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: email_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: email_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: Email_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: Email_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: Email_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: Email_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>Email (Parent Activity Id)</b></para>
/// <para>Schema Name: email_email_parentactivityid</para>
/// </summary>
public List<Email> GetEmailMessages_ParentActivityId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "parentactivityid", Columns); }
/// <summary>
/// <para><b>Email (Parent Activity Id)</b></para>
/// <para>Schema Name: email_email_parentactivityid</para>
/// </summary>
public List<Email> GetEmailMessages_ParentActivityId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "parentactivityid", Columns); }
/// <summary>
/// <para><b>EmailHash ()</b></para>
/// <para>Schema Name: email_email_hash</para>
/// </summary>
public List<EmailHash> GetEmailHashes (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EmailHash>(Service, this.Id, "emailhash", "activityid", Columns); }
/// <summary>
/// <para><b>EmailHash ()</b></para>
/// <para>Schema Name: email_email_hash</para>
/// </summary>
public List<EmailHash> GetEmailHashes (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EmailHash>(Service, this.Id, "emailhash", "activityid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: email_principalobjectattributeaccess</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: email_principalobjectattributeaccess</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: Email_ProcessSessions</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: Email_ProcessSessions</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>QueueItem (Object)</b></para>
/// <para>Schema Name: Email_QueueItem</para>
/// </summary>
public List<QueueItem> GetQueueItems_Object (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QueueItem>(Service, this.Id, "queueitem", "objectid", Columns); }
/// <summary>
/// <para><b>QueueItem (Object)</b></para>
/// <para>Schema Name: Email_QueueItem</para>
/// </summary>
public List<QueueItem> GetQueueItems_Object (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QueueItem>(Service, this.Id, "queueitem", "objectid", Columns); }
/// <summary>
/// <para><b>SLAKPIInstance (Regarding)</b></para>
/// <para>Schema Name: slakpiinstance_email</para>
/// </summary>
public List<SLAKPIInstance> GetSLAKPIInstances_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SLAKPIInstance>(Service, this.Id, "slakpiinstance", "regarding", Columns); }
/// <summary>
/// <para><b>SLAKPIInstance (Regarding)</b></para>
/// <para>Schema Name: slakpiinstance_email</para>
/// </summary>
public List<SLAKPIInstance> GetSLAKPIInstances_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SLAKPIInstance>(Service, this.Id, "slakpiinstance", "regarding", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: Email_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: Email_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_email</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_email</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        

        

        public enum eActivityStatus
{
	///<summary><para>Open</para>
	///<para>Value = 0</para></summary>
	[Description("Open")]
	Open = 0, 
	///<summary><para>Completed</para>
	///<para>Value = 1</para></summary>
	[Description("Completed")]
	Completed = 1, 
	///<summary><para>Canceled</para>
	///<para>Value = 2</para></summary>
	[Description("Canceled")]
	Canceled = 2
}
public enum eCorrelationMethod
{
	///<summary><para>None</para>
	///<para>Value = 0</para></summary>
	[Description("None")]
	None = 0, 
	///<summary><para>Skipped</para>
	///<para>Value = 1</para></summary>
	[Description("Skipped")]
	Skipped = 1, 
	///<summary><para>XHeader</para>
	///<para>Value = 2</para></summary>
	[Description("XHeader")]
	XHeader = 2, 
	///<summary><para>InReplyTo</para>
	///<para>Value = 3</para></summary>
	[Description("InReplyTo")]
	InReplyTo = 3, 
	///<summary><para>TrackingToken</para>
	///<para>Value = 4</para></summary>
	[Description("TrackingToken")]
	TrackingToken = 4, 
	///<summary><para>ConversationIndex</para>
	///<para>Value = 5</para></summary>
	[Description("ConversationIndex")]
	ConversationIndex = 5, 
	///<summary><para>SmartMatching</para>
	///<para>Value = 6</para></summary>
	[Description("SmartMatching")]
	SmartMatching = 6, 
	///<summary><para>CustomCorrelation</para>
	///<para>Value = 7</para></summary>
	[Description("CustomCorrelation")]
	CustomCorrelation = 7
}
public enum eDeliveryPriority
{
	///<summary><para>Low</para>
	///<para>Value = 0</para></summary>
	[Description("Low")]
	Low = 0, 
	///<summary><para>Normal</para>
	///<para>Value = 1</para></summary>
	[Description("Normal")]
	Normal = 1, 
	///<summary><para>High</para>
	///<para>Value = 2</para></summary>
	[Description("High")]
	High = 2
}
public enum eEmailReminderStatus
{
	///<summary><para>NotSet</para>
	///<para>Value = 0</para></summary>
	[Description("NotSet")]
	NotSet = 0, 
	///<summary><para>ReminderSet</para>
	///<para>Value = 1</para></summary>
	[Description("ReminderSet")]
	ReminderSet = 1, 
	///<summary><para>ReminderExpired</para>
	///<para>Value = 2</para></summary>
	[Description("ReminderExpired")]
	ReminderExpired = 2, 
	///<summary><para>ReminderInvalid</para>
	///<para>Value = 3</para></summary>
	[Description("ReminderInvalid")]
	ReminderInvalid = 3
}
public enum eEmailReminderType
{
	///<summary><para>If I do not receive a reply by</para>
	///<para>Value = 0</para></summary>
	[Description("If I do not receive a reply by")]
	IfIDoNotReceiveAReplyBy = 0, 
	///<summary><para>If the email is not opened by</para>
	///<para>Value = 1</para></summary>
	[Description("If the email is not opened by")]
	IfTheEmailIsNotOpenedBy = 1, 
	///<summary><para>Remind me anyway at</para>
	///<para>Value = 2</para></summary>
	[Description("Remind me anyway at")]
	RemindMeAnywayAt = 2
}
public enum eNotifications
{
	///<summary><para>None</para>
	///<para>Value = 0</para></summary>
	[Description("None")]
	None = 0, 
	///<summary><para>The message was saved as a Microsoft Dynamics CRM email record, but not all the attachments could be saved with it. An attachment cannot be saved if it is blocked or if its file type is invalid.</para>
	///<para>Value = 1</para></summary>
	[Description("The message was saved as a Microsoft Dynamics CRM email record, but not all the attachments could be saved with it. An attachment cannot be saved if it is blocked or if its file type is invalid.")]
	TheMessageWasSavedAsAMicrosoftDynamicsCRMEmailRecord_ButNotAllTheAttachmentsCouldBeSavedWithIt_AnAttachmentCannotBeSavedIfItIsBlockedOrIfItsFileTypeIsInvalid = 1, 
	///<summary><para>Truncated body.</para>
	///<para>Value = 2</para></summary>
	[Description("Truncated body.")]
	TruncatedBody = 2
}
public enum ePriority
{
	///<summary><para>Low</para>
	///<para>Value = 0</para></summary>
	[Description("Low")]
	Low = 0, 
	///<summary><para>Normal</para>
	///<para>Value = 1</para></summary>
	[Description("Normal")]
	Normal = 1, 
	///<summary><para>High</para>
	///<para>Value = 2</para></summary>
	[Description("High")]
	High = 2
}
public enum eStatusReason
{
	///<summary><para>Draft</para>
	///<para>Value = 1</para></summary>
	[Description("Draft")]
	Draft_Open = 1, 
	///<summary><para>Completed</para>
	///<para>Value = 2</para></summary>
	[Description("Completed")]
	Completed_Completed = 2, 
	///<summary><para>Sent</para>
	///<para>Value = 3</para></summary>
	[Description("Sent")]
	Sent_Completed = 3, 
	///<summary><para>Received</para>
	///<para>Value = 4</para></summary>
	[Description("Received")]
	Received_Completed = 4, 
	///<summary><para>Canceled</para>
	///<para>Value = 5</para></summary>
	[Description("Canceled")]
	Canceled_Canceled = 5, 
	///<summary><para>Pending Send</para>
	///<para>Value = 6</para></summary>
	[Description("Pending Send")]
	PendingSend_Completed = 6, 
	///<summary><para>Sending</para>
	///<para>Value = 7</para></summary>
	[Description("Sending")]
	Sending_Completed = 7, 
	///<summary><para>Failed</para>
	///<para>Value = 8</para></summary>
	[Description("Failed")]
	Failed_Open = 8
}
public void SetState(IOrganizationService Service, eActivityStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eActivityStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>transactioncurrencyidname</para>
	/// <para>transactioncurrencyidname</para></summary>
	public const string TransactionCurrencyIdName = "transactioncurrencyidname";
	/// <summary><para>owneridyominame</para>
	/// <para>owneridyominame</para></summary>
	public const string OwnerIdYomiName = "owneridyominame";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>owneridtype</para>
	/// <para>owneridtype</para></summary>
	public const string OwnerIdType = "owneridtype";
	/// <summary><para>owneridname</para>
	/// <para>owneridname</para></summary>
	public const string OwnerIdName = "owneridname";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>regardingobjectidname</para>
	/// <para>regardingobjectidname</para></summary>
	public const string RegardingObjectIdName = "regardingobjectidname";
	/// <summary><para>slainvokedidname</para>
	/// <para>slainvokedidname</para></summary>
	public const string SLAInvokedIdName = "slainvokedidname";
	/// <summary><para>sendermailboxidname</para>
	/// <para>sendermailboxidname</para></summary>
	public const string SenderMailboxIdName = "sendermailboxidname";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>templateidname</para>
	/// <para>templateidname</para></summary>
	public const string TemplateIdName = "templateidname";
	/// <summary><para>regardingobjectidyominame</para>
	/// <para>regardingobjectidyominame</para></summary>
	public const string RegardingObjectIdYomiName = "regardingobjectidyominame";
	/// <summary><para>regardingobjecttypecode</para>
	/// <para>regardingobjecttypecode</para></summary>
	public const string RegardingObjectTypeCode = "regardingobjecttypecode";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>slaname</para>
	/// <para>slaname</para></summary>
	public const string SLAName = "slaname";
	/// <summary><para> SendersAccount Type</para>
	/// <para>sendersaccountobjecttypecode</para></summary>
	public const string SendersAccountType = "sendersaccountobjecttypecode";
	/// <summary><para>Activity Status</para>
	/// <para>statecode</para></summary>
	public const string ActivityStatus = "statecode";
	/// <summary><para>Activity Type</para>
	/// <para>activitytypecode</para></summary>
	public const string ActivityType = "activitytypecode";
	/// <summary><para>Actual End</para>
	/// <para>actualend</para></summary>
	public const string ActualEnd = "actualend";
	/// <summary><para>Actual Start</para>
	/// <para>actualstart</para></summary>
	public const string ActualStart = "actualstart";
	/// <summary><para>Additional Parameters</para>
	/// <para>activityadditionalparams</para></summary>
	public const string AdditionalParameters = "activityadditionalparams";
	/// <summary><para>Attachment Count</para>
	/// <para>attachmentcount</para></summary>
	public const string AttachmentCount = "attachmentcount";
	/// <summary><para>Attachment View Count</para>
	/// <para>attachmentopencount</para></summary>
	public const string AttachmentViewCount = "attachmentopencount";
	/// <summary><para>Bcc</para>
	/// <para>bcc</para></summary>
	public const string Bcc = "bcc";
	/// <summary><para>Category</para>
	/// <para>category</para></summary>
	public const string Category = "category";
	/// <summary><para>Cc</para>
	/// <para>cc</para></summary>
	public const string Cc = "cc";
	/// <summary><para>Compression</para>
	/// <para>compressed</para></summary>
	public const string Compression = "compressed";
	/// <summary><para>Conversation Index</para>
	/// <para>conversationindex</para></summary>
	public const string ConversationIndex = "conversationindex";
	/// <summary><para>Conversation Index (Hash)</para>
	/// <para>baseconversationindexhash</para></summary>
	public const string ConversationIndex_Hash = "baseconversationindexhash";
	/// <summary><para>Conversation Tracking Id</para>
	/// <para>conversationtrackingid</para></summary>
	public const string ConversationTrackingId = "conversationtrackingid";
	/// <summary><para>Correlation Method</para>
	/// <para>correlationmethod</para></summary>
	public const string CorrelationMethod = "correlationmethod";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Currency</para>
	/// <para>transactioncurrencyid</para></summary>
	public const string Currency = "transactioncurrencyid";
	/// <summary><para>Date Sent</para>
	/// <para>senton</para></summary>
	public const string DateSent = "senton";
	/// <summary><para>Delay email processing until</para>
	/// <para>postponeemailprocessinguntil</para></summary>
	public const string DelayEmailProcessingUntil = "postponeemailprocessinguntil";
	/// <summary><para>Delay Send</para>
	/// <para>delayedemailsendtime</para></summary>
	public const string DelaySend = "delayedemailsendtime";
	/// <summary><para>Delivery Priority</para>
	/// <para>deliveryprioritycode</para></summary>
	public const string DeliveryPriority = "deliveryprioritycode";
	/// <summary><para>Delivery Receipt Requested</para>
	/// <para>deliveryreceiptrequested</para></summary>
	public const string DeliveryReceiptRequested = "deliveryreceiptrequested";
	/// <summary><para>Description</para>
	/// <para>description</para></summary>
	public const string Description = "description";
	/// <summary><para>Direction</para>
	/// <para>directioncode</para></summary>
	public const string Direction = "directioncode";
	/// <summary><para>Due Date</para>
	/// <para>scheduledend</para></summary>
	public const string DueDate = "scheduledend";
	/// <summary><para>Duration</para>
	/// <para>actualdurationminutes</para></summary>
	public const string Duration = "actualdurationminutes";
	/// <summary><para>Email Message</para>
	/// <para>activityid</para></summary>
	public const string EmailMessageId = "activityid";
	/// <summary><para>Email Reminder Expiry Time</para>
	/// <para>emailreminderexpirytime</para></summary>
	public const string EmailReminderExpiryTime = "emailreminderexpirytime";
	/// <summary><para>Email Reminder Status</para>
	/// <para>emailreminderstatus</para></summary>
	public const string EmailReminderStatus = "emailreminderstatus";
	/// <summary><para>Email Reminder Text</para>
	/// <para>emailremindertext</para></summary>
	public const string EmailReminderText = "emailremindertext";
	/// <summary><para>Email Reminder Type</para>
	/// <para>emailremindertype</para></summary>
	public const string EmailReminderType = "emailremindertype";
	/// <summary><para>Email Sender Account Name</para>
	/// <para>sendersaccountname</para></summary>
	public const string EmailSenderAccountName = "sendersaccountname";
	/// <summary><para>Email Sender Account yomi Name</para>
	/// <para>sendersaccountyominame</para></summary>
	public const string EmailSenderAccountYomiName = "sendersaccountyominame";
	/// <summary><para>Email Sender Name</para>
	/// <para>emailsendername</para></summary>
	public const string EmailSenderName = "emailsendername";
	/// <summary><para>Email Sender Type</para>
	/// <para>emailsenderobjecttypecode</para></summary>
	public const string EmailSenderType = "emailsenderobjecttypecode";
	/// <summary><para>Email Sender yomi Name</para>
	/// <para>emailsenderyominame</para></summary>
	public const string EmailSenderYomiName = "emailsenderyominame";
	/// <summary><para>Email Tracking Id</para>
	/// <para>emailtrackingid</para></summary>
	public const string EmailTrackingId = "emailtrackingid";
	/// <summary><para>Exchange Rate</para>
	/// <para>exchangerate</para></summary>
	public const string ExchangeRate = "exchangerate";
	/// <summary><para>Followed</para>
	/// <para>isemailfollowed</para></summary>
	public const string Followed = "isemailfollowed";
	/// <summary><para>Following</para>
	/// <para>followemailuserpreference</para></summary>
	public const string Following = "followemailuserpreference";
	/// <summary><para>From</para>
	/// <para>sender</para></summary>
	public const string @From = "sender";
	/// <summary><para>From</para>
	/// <para>from</para></summary>
	public const string From2 = "from";
	/// <summary><para>ID for template used.</para>
	/// <para>templateid</para></summary>
	public const string IDForTemplateUsed = "templateid";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string ImportSequenceNumber = "importsequencenumber";
	/// <summary><para>In Reply To Message</para>
	/// <para>inreplyto</para></summary>
	public const string InReplyToMessage = "inreplyto";
	/// <summary><para>Is Billed</para>
	/// <para>isbilled</para></summary>
	public const string IsBilled = "isbilled";
	/// <summary><para>Is Regular Activity</para>
	/// <para>isregularactivity</para></summary>
	public const string IsRegularActivity = "isregularactivity";
	/// <summary><para>Is Workflow Created</para>
	/// <para>isworkflowcreated</para></summary>
	public const string IsWorkflowCreated = "isworkflowcreated";
	/// <summary><para>IsUnsafe</para>
	/// <para>isunsafe</para></summary>
	public const string IsUnsafe = "isunsafe";
	/// <summary><para>Last On Hold Time</para>
	/// <para>lastonholdtime</para></summary>
	public const string LastOnHoldTime = "lastonholdtime";
	/// <summary><para>Last Opened Time</para>
	/// <para>lastopenedtime</para></summary>
	public const string LastOpenedTime = "lastopenedtime";
	/// <summary><para>Last SLA applied</para>
	/// <para>slainvokedid</para></summary>
	public const string LastSLAApplied = "slainvokedid";
	/// <summary><para>Link Click Count</para>
	/// <para>linksclickedcount</para></summary>
	public const string LinkClickCount = "linksclickedcount";
	/// <summary><para>Message ID</para>
	/// <para>messageid</para></summary>
	public const string MessageID = "messageid";
	/// <summary><para>Message ID Dup Check</para>
	/// <para>messageiddupcheck</para></summary>
	public const string MessageIDDupCheck = "messageiddupcheck";
	/// <summary><para>Mime Type</para>
	/// <para>mimetype</para></summary>
	public const string MimeType = "mimetype";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>No. of Delivery Attempts</para>
	/// <para>deliveryattempts</para></summary>
	public const string No_OfDeliveryAttempts = "deliveryattempts";
	/// <summary><para>Notifications</para>
	/// <para>notifications</para></summary>
	public const string Notifications = "notifications";
	/// <summary><para>On Hold Time (Minutes)</para>
	/// <para>onholdtime</para></summary>
	public const string OnHoldTime_Minutes = "onholdtime";
	/// <summary><para>Open Count</para>
	/// <para>opencount</para></summary>
	public const string OpenCount = "opencount";
	/// <summary><para>Owner</para>
	/// <para>ownerid</para></summary>
	public const string Owner = "ownerid";
	/// <summary><para>Owning Business Unit</para>
	/// <para>owningbusinessunit</para></summary>
	public const string OwningBusinessUnit = "owningbusinessunit";
	/// <summary><para>Owning Team</para>
	/// <para>owningteam</para></summary>
	public const string OwningTeam = "owningteam";
	/// <summary><para>Owning User</para>
	/// <para>owninguser</para></summary>
	public const string OwningUser = "owninguser";
	/// <summary><para>Parent Activity Id</para>
	/// <para>parentactivityid</para></summary>
	public const string ParentActivityId = "parentactivityid";
	/// <summary><para>Parent Activity Name</para>
	/// <para>parentactivityidname</para></summary>
	public const string ParentActivityName = "parentactivityidname";
	/// <summary><para>Priority</para>
	/// <para>prioritycode</para></summary>
	public const string Priority = "prioritycode";
	/// <summary><para>Process</para>
	/// <para>processid</para></summary>
	public const string Process = "processid";
	/// <summary><para>Process Stage</para>
	/// <para>stageid</para></summary>
	public const string ProcessStage = "stageid";
	/// <summary><para>Read Receipt Requested</para>
	/// <para>readreceiptrequested</para></summary>
	public const string ReadReceiptRequested = "readreceiptrequested";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string RecordCreatedOn = "overriddencreatedon";
	/// <summary><para>Regarding</para>
	/// <para>regardingobjectid</para></summary>
	public const string Regarding = "regardingobjectid";
	/// <summary><para>Reminder Action Card Id.</para>
	/// <para>reminderactioncardid</para></summary>
	public const string ReminderActionCardId = "reminderactioncardid";
	/// <summary><para>Reply Count</para>
	/// <para>replycount</para></summary>
	public const string ReplyCount = "replycount";
	/// <summary><para>Safe Description</para>
	/// <para>safedescription</para></summary>
	public const string SafeDescription = "safedescription";
	/// <summary><para>Scheduled Duration</para>
	/// <para>scheduleddurationminutes</para></summary>
	public const string ScheduledDuration = "scheduleddurationminutes";
	/// <summary><para>Sender</para>
	/// <para>emailsender</para></summary>
	public const string Sender = "emailsender";
	/// <summary><para>Senders Account</para>
	/// <para>sendersaccount</para></summary>
	public const string SendersAccount = "sendersaccount";
	/// <summary><para>Sender's Mailbox</para>
	/// <para>sendermailboxid</para></summary>
	public const string SendersMailbox = "sendermailboxid";
	/// <summary><para>Service</para>
	/// <para>serviceid</para></summary>
	public const string Service = "serviceid";
	/// <summary><para>SLA</para>
	/// <para>slaid</para></summary>
	public const string SLA = "slaid";
	/// <summary><para>Sort Date</para>
	/// <para>sortdate</para></summary>
	public const string SortDate = "sortdate";
	/// <summary><para>Start Date</para>
	/// <para>scheduledstart</para></summary>
	public const string StartDate = "scheduledstart";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string StatusReason = "statuscode";
	/// <summary><para>Sub-Category</para>
	/// <para>subcategory</para></summary>
	public const string Sub_Category = "subcategory";
	/// <summary><para>Subject</para>
	/// <para>subject</para></summary>
	public const string Subject = "subject";
	/// <summary><para>Submitted By</para>
	/// <para>submittedby</para></summary>
	public const string SubmittedBy = "submittedby";
	/// <summary><para>Time Zone Rule Version Number</para>
	/// <para>timezoneruleversionnumber</para></summary>
	public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
	/// <summary><para>To</para>
	/// <para>to</para></summary>
	public const string To = "to";
	/// <summary><para>To Recipients</para>
	/// <para>torecipients</para></summary>
	public const string ToRecipients = "torecipients";
	/// <summary><para>Tracking Token</para>
	/// <para>trackingtoken</para></summary>
	public const string TrackingToken = "trackingtoken";
	/// <summary><para>Traversed Path</para>
	/// <para>traversedpath</para></summary>
	public const string TraversedPath = "traversedpath";
	/// <summary><para>UTC Conversion Time Zone Code</para>
	/// <para>utcconversiontimezonecode</para></summary>
	public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
}

    }
}

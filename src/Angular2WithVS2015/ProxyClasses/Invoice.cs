// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("invoice")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class Invoice : BaseProxyClass
    {
        public new const string LogicalName = "invoice";
        public const int ObjectTypeCode = 1090;
        public const string PrimaryIdAttribute = "invoiceid";
        public const string PrimaryNameAttribute = "name";
        
        static Invoice()
        {
            BaseProxyClass.RegisterProxyType(typeof(Invoice), "invoice");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public Invoice() : base(new Entity("invoice")) { }
        public Invoice(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<Invoice>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: entityimage_timestamp</para>
///</summary>
[AttributeLogicalNameAttribute("entityimage_timestamp")]
public int? EntityImage_Timestamp
{
	get { return this.GetPropertyValue<int?>("entityimage_timestamp"); }
}
///<summary>
///<para>Logical Name: contactidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("contactidname")]
public string ContactIdName
{
	get { return this.GetPropertyValue<string>("contactidname"); }
}
///<summary>
///<para>Logical Name: customeridyominame</para>
///<para>Max Length: 450 characters</para>
///</summary>
[AttributeLogicalNameAttribute("customeridyominame")]
public string CustomerIdYomiName
{
	get { return this.GetPropertyValue<string>("customeridyominame"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyidname")]
public string TransactionCurrencyIdName
{
	get { return this.GetPropertyValue<string>("transactioncurrencyidname"); }
}
///<summary>
///<para>Logical Name: contactidyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("contactidyominame")]
public string ContactIdYomiName
{
	get { return this.GetPropertyValue<string>("contactidyominame"); }
}
///<summary>
///<para>Logical Name: opportunityidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("opportunityidname")]
public string OpportunityIdName
{
	get { return this.GetPropertyValue<string>("opportunityidname"); }
}
///<summary>
///<para>Logical Name: owneridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridyominame")]
public string OwnerIdYomiName
{
	get { return this.GetPropertyValue<string>("owneridyominame"); }
}
///<summary>
///<para>Logical Name: salesorderidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("salesorderidname")]
public string SalesOrderIdName
{
	get { return this.GetPropertyValue<string>("salesorderidname"); }
}
///<summary>
///<para>Logical Name: entityimage_url</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("entityimage_url")]
public string EntityImage_URL
{
	get { return this.GetPropertyValue<string>("entityimage_url"); }
}
///<summary>
///<para>Logical Name: accountidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("accountidname")]
public string AccountIdName
{
	get { return this.GetPropertyValue<string>("accountidname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: slainvokedidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("slainvokedidname")]
public string SLAInvokedIdName
{
	get { return this.GetPropertyValue<string>("slainvokedidname"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: accountidyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("accountidyominame")]
public string AccountIdYomiName
{
	get { return this.GetPropertyValue<string>("accountidyominame"); }
}
///<summary>
///<para>Logical Name: owneridtype</para>
///</summary>
[AttributeLogicalNameAttribute("owneridtype")]
public string OwnerIdType
{
	get { return this.GetPropertyValue<string>("owneridtype"); }
	set { this.SetPropertyValue<string>("owneridtype", value, "OwnerIdType"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: customeridname</para>
///<para>Max Length: 160 characters</para>
///</summary>
[AttributeLogicalNameAttribute("customeridname")]
public string CustomerIdName
{
	get { return this.GetPropertyValue<string>("customeridname"); }
}
///<summary>
///<para>Logical Name: pricelevelidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("pricelevelidname")]
public string PriceLevelIdName
{
	get { return this.GetPropertyValue<string>("pricelevelidname"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: owneridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridname")]
public string OwnerIdName
{
	get { return this.GetPropertyValue<string>("owneridname"); }
}
///<summary>
///<para>Logical Name: slaname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("slaname")]
public string SLAName
{
	get { return this.GetPropertyValue<string>("slaname"); }
}
///<summary>
///<para>Logical Name: accountid</para>
///</summary>
[AttributeLogicalNameAttribute("accountid")]
public EntityReference Account
{
	get { return this.GetPropertyValue<EntityReference>("accountid"); }
}
///<summary>
///<para>Logical Name: msdyn_amountdue</para>
///<para>Minimum Value: -1000000000</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 4</para>
///</summary>
public decimal? AmountDue
{
	get
	{
		if (AmountDueMoney != null) { return AmountDueMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.AmountDueMoney = new Money(value.Value); }
		else this.AmountDueMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_amountdue</para>
///<para>Minimum Value: -1000000000</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_amountdue")]
public Money AmountDueMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_amountdue"); }
	set { this.SetPropertyValue("msdyn_amountdue", (Money)value, (decimal)-1000000000, (decimal)1000000000, "AmountDueMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_amountdue_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? AmountDue_Base
{
	get
	{
		if (AmountDue_BaseMoney != null) { return AmountDue_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_amountdue_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_amountdue_base")]
public Money AmountDue_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_amountdue_base"); }
}
///<summary>
///<para>Logical Name: billto_composite</para>
///<para>Max Length: 1000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("billto_composite")]
public string BillToAddress
{
	get { return this.GetPropertyValue<string>("billto_composite"); }
}
///<summary>
///<para>Logical Name: billto_city</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("billto_city")]
public string BillToCity
{
	get { return this.GetPropertyValue<string>("billto_city"); }
	set { this.SetPropertyValue("billto_city", value, 80, "BillToCity"); }
}
///<summary>
///<para>Logical Name: billto_country</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("billto_country")]
public string BillToCountry_Region
{
	get { return this.GetPropertyValue<string>("billto_country"); }
	set { this.SetPropertyValue("billto_country", value, 80, "BillToCountry_Region"); }
}
///<summary>
///<para>Logical Name: billto_fax</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("billto_fax")]
public string BillToFax
{
	get { return this.GetPropertyValue<string>("billto_fax"); }
	set { this.SetPropertyValue("billto_fax", value, 50, "BillToFax"); }
}
///<summary>
///<para>Logical Name: billto_name</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("billto_name")]
public string BillToName
{
	get { return this.GetPropertyValue<string>("billto_name"); }
	set { this.SetPropertyValue("billto_name", value, 200, "BillToName"); }
}
///<summary>
///<para>Logical Name: billto_telephone</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("billto_telephone")]
public string BillToPhone
{
	get { return this.GetPropertyValue<string>("billto_telephone"); }
	set { this.SetPropertyValue("billto_telephone", value, 50, "BillToPhone"); }
}
///<summary>
///<para>Logical Name: billto_stateorprovince</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("billto_stateorprovince")]
public string BillToState_Province
{
	get { return this.GetPropertyValue<string>("billto_stateorprovince"); }
	set { this.SetPropertyValue("billto_stateorprovince", value, 50, "BillToState_Province"); }
}
///<summary>
///<para>Logical Name: billto_line1</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("billto_line1")]
public string BillToStreet1
{
	get { return this.GetPropertyValue<string>("billto_line1"); }
	set { this.SetPropertyValue("billto_line1", value, 250, "BillToStreet1"); }
}
///<summary>
///<para>Logical Name: billto_line2</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("billto_line2")]
public string BillToStreet2
{
	get { return this.GetPropertyValue<string>("billto_line2"); }
	set { this.SetPropertyValue("billto_line2", value, 250, "BillToStreet2"); }
}
///<summary>
///<para>Logical Name: billto_line3</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("billto_line3")]
public string BillToStreet3
{
	get { return this.GetPropertyValue<string>("billto_line3"); }
	set { this.SetPropertyValue("billto_line3", value, 250, "BillToStreet3"); }
}
///<summary>
///<para>Logical Name: billto_postalcode</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("billto_postalcode")]
public string BillToZIP_PostalCode
{
	get { return this.GetPropertyValue<string>("billto_postalcode"); }
	set { this.SetPropertyValue("billto_postalcode", value, 20, "BillToZIP_PostalCode"); }
}
///<summary>
///<para>Logical Name: contactid</para>
///</summary>
[AttributeLogicalNameAttribute("contactid")]
public EntityReference Contact
{
	get { return this.GetPropertyValue<EntityReference>("contactid"); }
}
///<summary>
///<para>Logical Name: salesorderid</para>
///</summary>
[AttributeLogicalNameAttribute("salesorderid")]
public EntityReference Contract
{
	get { return this.GetPropertyValue<EntityReference>("salesorderid"); }
	set { this.SetPropertyValue<EntityReference>("salesorderid", value, "Contract"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyid</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyid")]
public EntityReference Currency
{
	get { return this.GetPropertyValue<EntityReference>("transactioncurrencyid"); }
	set { this.SetPropertyValue<EntityReference>("transactioncurrencyid", value, "Currency"); }
}
///<summary>
///<para>Logical Name: customerid</para>
///</summary>
[AttributeLogicalNameAttribute("customerid")]
public EntityReference Customer
{
	get { return this.GetPropertyValue<EntityReference>("customerid"); }
	set { this.SetPropertyValue<EntityReference>("customerid", value, "Customer"); }
}
///<summary>
///<para>Logical Name: customeridtype</para>
///</summary>
[AttributeLogicalNameAttribute("customeridtype")]
public string CustomerType
{
	get { return this.GetPropertyValue<string>("customeridtype"); }
	set { this.SetPropertyValue<string>("customeridtype", value, "CustomerType"); }
}
///<summary>
///<para>Logical Name: datedelivered</para>
///</summary>
[AttributeLogicalNameAttribute("datedelivered")]
public DateTime? DateDelivered
{
	get { return this.GetPropertyValue<DateTime?>("datedelivered"); }
	set { this.SetPropertyValue<DateTime?>("datedelivered", value, "DateDelivered"); }
}
///<summary>
///<para>Logical Name: description</para>
///<para>Max Length: 2000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("description")]
public string Description
{
	get { return this.GetPropertyValue<string>("description"); }
	set { this.SetPropertyValue("description", value, 2000, "Description"); }
}
///<summary>
///<para>Logical Name: duedate</para>
///</summary>
[AttributeLogicalNameAttribute("duedate")]
public DateTime? DueDate
{
	get { return this.GetPropertyValue<DateTime?>("duedate"); }
	set { this.SetPropertyValue<DateTime?>("duedate", value, "DueDate"); }
}
///<summary>
///<para>Logical Name: entityimageid</para>
///</summary>
[AttributeLogicalNameAttribute("entityimageid")]
public Guid EntityImageId
{
	get { return this.GetPropertyValue<Guid>("entityimageid"); }
}
///<summary>
///<para>Logical Name: exchangerate</para>
///<para>Minimum Value: 0.0000000001</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 10</para>
///</summary>
[AttributeLogicalNameAttribute("exchangerate")]
public decimal? ExchangeRate
{
	get { return this.GetPropertyValue<decimal?>("exchangerate"); }
}
///<summary>
///<para>Logical Name: freightamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? FreightAmount
{
	get
	{
		if (FreightAmountMoney != null) { return FreightAmountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.FreightAmountMoney = new Money(value.Value); }
		else this.FreightAmountMoney = null;
	}
}
///<summary>
///<para>Logical Name: freightamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("freightamount")]
public Money FreightAmountMoney
{
	get { return this.GetPropertyValue<Money>("freightamount"); }
	set { this.SetPropertyValue("freightamount", (Money)value, (decimal)0, (decimal)1000000000000, "FreightAmountMoney"); }
}
///<summary>
///<para>Logical Name: freightamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? FreightAmount_Base
{
	get
	{
		if (FreightAmount_BaseMoney != null) { return FreightAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: freightamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("freightamount_base")]
public Money FreightAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("freightamount_base"); }
}
///<summary>
///<para>Logical Name: msdyn_hascorrections</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_hascorrections")]
public bool? HasCorrections
{
	get { return this.GetPropertyValue<bool?>("msdyn_hascorrections"); }
	set { this.SetPropertyValue<bool?>("msdyn_hascorrections", value, "HasCorrections"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? ImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "ImportSequenceNumber"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: invoiceid</para>
///</summary>
[AttributeLogicalNameAttribute("invoiceid")]
public Guid InvoiceId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: msdyn_invoicedate</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_invoicedate")]
public DateTime? InvoiceDate
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_invoicedate"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_invoicedate", value, "InvoiceDate"); }
}
///<summary>
///<para>Logical Name: discountpercentage</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("discountpercentage")]
public decimal? InvoiceDiscount
{
	get { return this.GetPropertyValue<decimal?>("discountpercentage"); }
	set { this.SetPropertyValue("discountpercentage", (decimal?)value, (decimal)0, (decimal)100, "InvoiceDiscount"); }
}
///<summary>
///<para>Logical Name: discountamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? InvoiceDiscountAmount
{
	get
	{
		if (InvoiceDiscountAmountMoney != null) { return InvoiceDiscountAmountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.InvoiceDiscountAmountMoney = new Money(value.Value); }
		else this.InvoiceDiscountAmountMoney = null;
	}
}
///<summary>
///<para>Logical Name: discountamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("discountamount")]
public Money InvoiceDiscountAmountMoney
{
	get { return this.GetPropertyValue<Money>("discountamount"); }
	set { this.SetPropertyValue("discountamount", (Money)value, (decimal)0, (decimal)1000000000000, "InvoiceDiscountAmountMoney"); }
}
///<summary>
///<para>Logical Name: discountamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? InvoiceDiscountAmount_Base
{
	get
	{
		if (InvoiceDiscountAmount_BaseMoney != null) { return InvoiceDiscountAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: discountamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("discountamount_base")]
public Money InvoiceDiscountAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("discountamount_base"); }
}
///<summary>
///<para>Logical Name: invoicenumber</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("invoicenumber")]
public string InvoiceID
{
	get { return this.GetPropertyValue<string>("invoicenumber"); }
	set { this.SetPropertyValue("invoicenumber", value, 100, "InvoiceID"); }
}
///<summary>
///<para>Logical Name: lastonholdtime</para>
///</summary>
[AttributeLogicalNameAttribute("lastonholdtime")]
public DateTime? LastOnHoldTime
{
	get { return this.GetPropertyValue<DateTime?>("lastonholdtime"); }
	set { this.SetPropertyValue<DateTime?>("lastonholdtime", value, "LastOnHoldTime"); }
}
///<summary>
///<para>Logical Name: slainvokedid</para>
///</summary>
[AttributeLogicalNameAttribute("slainvokedid")]
public EntityReference LastSLAApplied
{
	get { return this.GetPropertyValue<EntityReference>("slainvokedid"); }
}
///<summary>
///<para>Logical Name: lastbackofficesubmit</para>
///</summary>
[AttributeLogicalNameAttribute("lastbackofficesubmit")]
public DateTime? LastSubmittedToBackOffice
{
	get { return this.GetPropertyValue<DateTime?>("lastbackofficesubmit"); }
	set { this.SetPropertyValue<DateTime?>("lastbackofficesubmit", value, "LastSubmittedToBackOffice"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: name</para>
///<para>Max Length: 300 characters</para>
///</summary>
[AttributeLogicalNameAttribute("name")]
public string Name
{
	get { return this.GetPropertyValue<string>("name"); }
	set { this.SetPropertyValue("name", value, 300, "Name"); }
}
///<summary>
///<para>Logical Name: onholdtime</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("onholdtime")]
public int? OnHoldTime_Minutes
{
	get { return this.GetPropertyValue<int?>("onholdtime"); }
}
///<summary>
///<para>Logical Name: opportunityid</para>
///</summary>
[AttributeLogicalNameAttribute("opportunityid")]
public EntityReference Opportunity
{
	get { return this.GetPropertyValue<EntityReference>("opportunityid"); }
	set { this.SetPropertyValue<EntityReference>("opportunityid", value, "Opportunity"); }
}
///<summary>
///<para>Logical Name: ownerid</para>
///</summary>
[AttributeLogicalNameAttribute("ownerid")]
public EntityReference Owner
{
	get { return this.GetPropertyValue<EntityReference>("ownerid"); }
	set { this.SetPropertyValue<EntityReference>("ownerid", value, "Owner"); }
}
///<summary>
///<para>Logical Name: owningbusinessunit</para>
///</summary>
[AttributeLogicalNameAttribute("owningbusinessunit")]
public EntityReference OwningBusinessUnit
{
	get { return this.GetPropertyValue<EntityReference>("owningbusinessunit"); }
}
///<summary>
///<para>Logical Name: owningteam</para>
///</summary>
[AttributeLogicalNameAttribute("owningteam")]
public EntityReference OwningTeam
{
	get { return this.GetPropertyValue<EntityReference>("owningteam"); }
}
///<summary>
///<para>Logical Name: owninguser</para>
///</summary>
[AttributeLogicalNameAttribute("owninguser")]
public EntityReference OwningUser
{
	get { return this.GetPropertyValue<EntityReference>("owninguser"); }
}
/// <summary>
///Logical Name: paymenttermscode
/// </summary>
[AttributeLogicalNameAttribute("paymenttermscode")]
public ePaymentTerms? PaymentTerms
{
	get
	{
		if (PaymentTerms_OptionSetValue != null) { return (ePaymentTerms)PaymentTerms_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.PaymentTerms_OptionSetValue = new OptionSetValue((int)value); }
		else this.PaymentTerms_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: paymenttermscode</para>
///</summary>
[AttributeLogicalNameAttribute("paymenttermscode")]
public OptionSetValue PaymentTerms_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("paymenttermscode"); }
	set { this.SetPropertyValue<OptionSetValue>("paymenttermscode", value, "PaymentTerms_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string PaymentTerms_Text(IOrganizationService Service)
{
	return this.PaymentTerms_OptionSetValue.GetOptionSetText(Service, this, "paymenttermscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string PaymentTerms_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.PaymentTerms_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: pricelevelid</para>
///</summary>
[AttributeLogicalNameAttribute("pricelevelid")]
public EntityReference PriceList
{
	get { return this.GetPropertyValue<EntityReference>("pricelevelid"); }
	set { this.SetPropertyValue<EntityReference>("pricelevelid", value, "PriceList"); }
}
///<summary>
///<para>Logical Name: ispricelocked</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("ispricelocked")]
public bool? PricesLocked
{
	get { return this.GetPropertyValue<bool?>("ispricelocked"); }
	set { this.SetPropertyValue<bool?>("ispricelocked", value, "PricesLocked"); }
}
/// <summary>
///Logical Name: pricingerrorcode
/// </summary>
[AttributeLogicalNameAttribute("pricingerrorcode")]
public ePricingError? PricingError
{
	get
	{
		if (PricingError_OptionSetValue != null) { return (ePricingError)PricingError_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.PricingError_OptionSetValue = new OptionSetValue((int)value); }
		else this.PricingError_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: pricingerrorcode</para>
///</summary>
[AttributeLogicalNameAttribute("pricingerrorcode")]
public OptionSetValue PricingError_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("pricingerrorcode"); }
	set { this.SetPropertyValue<OptionSetValue>("pricingerrorcode", value, "PricingError_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string PricingError_Text(IOrganizationService Service)
{
	return this.PricingError_OptionSetValue.GetOptionSetText(Service, this, "pricingerrorcode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string PricingError_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.PricingError_OptionSetValue.Value);
}
/// <summary>
///Logical Name: prioritycode
/// </summary>
[AttributeLogicalNameAttribute("prioritycode")]
public ePriority? Priority
{
	get
	{
		if (Priority_OptionSetValue != null) { return (ePriority)Priority_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Priority_OptionSetValue = new OptionSetValue((int)value); }
		else this.Priority_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: prioritycode</para>
///</summary>
[AttributeLogicalNameAttribute("prioritycode")]
public OptionSetValue Priority_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("prioritycode"); }
	set { this.SetPropertyValue<OptionSetValue>("prioritycode", value, "Priority_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Priority_Text(IOrganizationService Service)
{
	return this.Priority_OptionSetValue.GetOptionSetText(Service, this, "prioritycode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Priority_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Priority_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: processid</para>
///</summary>
[AttributeLogicalNameAttribute("processid")]
public Guid Process
{
	get { return this.GetPropertyValue<Guid>("processid"); }
	set { this.SetPropertyValue<Guid>("processid", value, "Process"); }
}
///<summary>
///<para>Logical Name: stageid</para>
///</summary>
[AttributeLogicalNameAttribute("stageid")]
public Guid ProcessStage
{
	get { return this.GetPropertyValue<Guid>("stageid"); }
	set { this.SetPropertyValue<Guid>("stageid", value, "ProcessStage"); }
}
/// <summary>
///Logical Name: msdyn_projectinvoicestatus
/// </summary>
[AttributeLogicalNameAttribute("msdyn_projectinvoicestatus")]
public eProjectInvoiceStatus? ProjectInvoiceStatus
{
	get
	{
		if (ProjectInvoiceStatus_OptionSetValue != null) { return (eProjectInvoiceStatus)ProjectInvoiceStatus_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ProjectInvoiceStatus_OptionSetValue = new OptionSetValue((int)value); }
		else this.ProjectInvoiceStatus_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_projectinvoicestatus</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_projectinvoicestatus")]
public OptionSetValue ProjectInvoiceStatus_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_projectinvoicestatus"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_projectinvoicestatus", value, "ProjectInvoiceStatus_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ProjectInvoiceStatus_Text(IOrganizationService Service)
{
	return this.ProjectInvoiceStatus_OptionSetValue.GetOptionSetText(Service, this, "msdyn_projectinvoicestatus");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ProjectInvoiceStatus_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ProjectInvoiceStatus_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? RecordCreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "RecordCreatedOn"); }
}
///<summary>
///<para>Logical Name: willcall</para>
///<para>True = Will Call</para>
///<para>False = Address</para>
///</summary>
[AttributeLogicalNameAttribute("willcall")]
public bool? ShipTo
{
	get { return this.GetPropertyValue<bool?>("willcall"); }
	set { this.SetPropertyValue<bool?>("willcall", value, "ShipTo"); }
}
///<summary>
///<para>Logical Name: shipto_composite</para>
///<para>Max Length: 1000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_composite")]
public string ShipToAddress
{
	get { return this.GetPropertyValue<string>("shipto_composite"); }
}
///<summary>
///<para>Logical Name: shipto_city</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_city")]
public string ShipToCity
{
	get { return this.GetPropertyValue<string>("shipto_city"); }
	set { this.SetPropertyValue("shipto_city", value, 80, "ShipToCity"); }
}
///<summary>
///<para>Logical Name: shipto_country</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_country")]
public string ShipToCountry_Region
{
	get { return this.GetPropertyValue<string>("shipto_country"); }
	set { this.SetPropertyValue("shipto_country", value, 80, "ShipToCountry_Region"); }
}
///<summary>
///<para>Logical Name: shipto_fax</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_fax")]
public string ShipToFax
{
	get { return this.GetPropertyValue<string>("shipto_fax"); }
	set { this.SetPropertyValue("shipto_fax", value, 50, "ShipToFax"); }
}
/// <summary>
///Logical Name: shipto_freighttermscode
/// </summary>
[AttributeLogicalNameAttribute("shipto_freighttermscode")]
public eShipToFreightTerms? ShipToFreightTerms
{
	get
	{
		if (ShipToFreightTerms_OptionSetValue != null) { return (eShipToFreightTerms)ShipToFreightTerms_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ShipToFreightTerms_OptionSetValue = new OptionSetValue((int)value); }
		else this.ShipToFreightTerms_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: shipto_freighttermscode</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_freighttermscode")]
public OptionSetValue ShipToFreightTerms_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("shipto_freighttermscode"); }
	set { this.SetPropertyValue<OptionSetValue>("shipto_freighttermscode", value, "ShipToFreightTerms_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ShipToFreightTerms_Text(IOrganizationService Service)
{
	return this.ShipToFreightTerms_OptionSetValue.GetOptionSetText(Service, this, "shipto_freighttermscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ShipToFreightTerms_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ShipToFreightTerms_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: shipto_name</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_name")]
public string ShipToName
{
	get { return this.GetPropertyValue<string>("shipto_name"); }
	set { this.SetPropertyValue("shipto_name", value, 200, "ShipToName"); }
}
///<summary>
///<para>Logical Name: shipto_telephone</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_telephone")]
public string ShipToPhone
{
	get { return this.GetPropertyValue<string>("shipto_telephone"); }
	set { this.SetPropertyValue("shipto_telephone", value, 50, "ShipToPhone"); }
}
///<summary>
///<para>Logical Name: shipto_stateorprovince</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_stateorprovince")]
public string ShipToState_Province
{
	get { return this.GetPropertyValue<string>("shipto_stateorprovince"); }
	set { this.SetPropertyValue("shipto_stateorprovince", value, 50, "ShipToState_Province"); }
}
///<summary>
///<para>Logical Name: shipto_line1</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_line1")]
public string ShipToStreet1
{
	get { return this.GetPropertyValue<string>("shipto_line1"); }
	set { this.SetPropertyValue("shipto_line1", value, 250, "ShipToStreet1"); }
}
///<summary>
///<para>Logical Name: shipto_line2</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_line2")]
public string ShipToStreet2
{
	get { return this.GetPropertyValue<string>("shipto_line2"); }
	set { this.SetPropertyValue("shipto_line2", value, 250, "ShipToStreet2"); }
}
///<summary>
///<para>Logical Name: shipto_line3</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_line3")]
public string ShipToStreet3
{
	get { return this.GetPropertyValue<string>("shipto_line3"); }
	set { this.SetPropertyValue("shipto_line3", value, 250, "ShipToStreet3"); }
}
///<summary>
///<para>Logical Name: shipto_postalcode</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_postalcode")]
public string ShipToZIP_PostalCode
{
	get { return this.GetPropertyValue<string>("shipto_postalcode"); }
	set { this.SetPropertyValue("shipto_postalcode", value, 20, "ShipToZIP_PostalCode"); }
}
/// <summary>
///Logical Name: shippingmethodcode
/// </summary>
[AttributeLogicalNameAttribute("shippingmethodcode")]
public eShippingMethod? ShippingMethod
{
	get
	{
		if (ShippingMethod_OptionSetValue != null) { return (eShippingMethod)ShippingMethod_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ShippingMethod_OptionSetValue = new OptionSetValue((int)value); }
		else this.ShippingMethod_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: shippingmethodcode</para>
///</summary>
[AttributeLogicalNameAttribute("shippingmethodcode")]
public OptionSetValue ShippingMethod_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("shippingmethodcode"); }
	set { this.SetPropertyValue<OptionSetValue>("shippingmethodcode", value, "ShippingMethod_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ShippingMethod_Text(IOrganizationService Service)
{
	return this.ShippingMethod_OptionSetValue.GetOptionSetText(Service, this, "shippingmethodcode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ShippingMethod_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ShippingMethod_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: slaid</para>
///</summary>
[AttributeLogicalNameAttribute("slaid")]
public EntityReference SLA
{
	get { return this.GetPropertyValue<EntityReference>("slaid"); }
	set { this.SetPropertyValue<EntityReference>("slaid", value, "SLA"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eStatus? Status
{
	get
	{
		if (Status_OptionSetValue != null) { return (eStatus)Status_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Status_OptionSetValue = new OptionSetValue((int)value); }
		else this.Status_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue Status_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
	set { this.SetPropertyValue<OptionSetValue>("statecode", value, "Status_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Status_Text(IOrganizationService Service)
{
	return this.Status_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Status_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Status_OptionSetValue.Value);
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? StatusReason
{
	get
	{
		if (StatusReason_OptionSetValue != null) { return (eStatusReason)StatusReason_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StatusReason_OptionSetValue = new OptionSetValue((int)value); }
		else this.StatusReason_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue StatusReason_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "StatusReason_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string StatusReason_Text(IOrganizationService Service)
{
	return this.StatusReason_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string StatusReason_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.StatusReason_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: timezoneruleversionnumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("timezoneruleversionnumber")]
public int? TimeZoneRuleVersionNumber
{
	get { return this.GetPropertyValue<int?>("timezoneruleversionnumber"); }
	set { this.SetPropertyValue("timezoneruleversionnumber", (int?)value, (int)-1, (int)2147483647, "TimeZoneRuleVersionNumber"); }
}
///<summary>
///<para>Logical Name: totalamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalAmount
{
	get
	{
		if (TotalAmountMoney != null) { return TotalAmountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.TotalAmountMoney = new Money(value.Value); }
		else this.TotalAmountMoney = null;
	}
}
///<summary>
///<para>Logical Name: totalamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("totalamount")]
public Money TotalAmountMoney
{
	get { return this.GetPropertyValue<Money>("totalamount"); }
	set { this.SetPropertyValue("totalamount", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "TotalAmountMoney"); }
}
///<summary>
///<para>Logical Name: totalamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? TotalAmount_Base
{
	get
	{
		if (TotalAmount_BaseMoney != null) { return TotalAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: totalamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("totalamount_base")]
public Money TotalAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("totalamount_base"); }
}
///<summary>
///<para>Logical Name: totallineitemamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalDetailAmount
{
	get
	{
		if (TotalDetailAmountMoney != null) { return TotalDetailAmountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.TotalDetailAmountMoney = new Money(value.Value); }
		else this.TotalDetailAmountMoney = null;
	}
}
///<summary>
///<para>Logical Name: totallineitemamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("totallineitemamount")]
public Money TotalDetailAmountMoney
{
	get { return this.GetPropertyValue<Money>("totallineitemamount"); }
	set { this.SetPropertyValue("totallineitemamount", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "TotalDetailAmountMoney"); }
}
///<summary>
///<para>Logical Name: totallineitemamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? TotalDetailAmount_Base
{
	get
	{
		if (TotalDetailAmount_BaseMoney != null) { return TotalDetailAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: totallineitemamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("totallineitemamount_base")]
public Money TotalDetailAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("totallineitemamount_base"); }
}
///<summary>
///<para>Logical Name: totaldiscountamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalDiscountAmount
{
	get
	{
		if (TotalDiscountAmountMoney != null) { return TotalDiscountAmountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.TotalDiscountAmountMoney = new Money(value.Value); }
		else this.TotalDiscountAmountMoney = null;
	}
}
///<summary>
///<para>Logical Name: totaldiscountamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("totaldiscountamount")]
public Money TotalDiscountAmountMoney
{
	get { return this.GetPropertyValue<Money>("totaldiscountamount"); }
	set { this.SetPropertyValue("totaldiscountamount", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "TotalDiscountAmountMoney"); }
}
///<summary>
///<para>Logical Name: totaldiscountamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? TotalDiscountAmount_Base
{
	get
	{
		if (TotalDiscountAmount_BaseMoney != null) { return TotalDiscountAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: totaldiscountamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("totaldiscountamount_base")]
public Money TotalDiscountAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("totaldiscountamount_base"); }
}
///<summary>
///<para>Logical Name: totallineitemdiscountamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalLineItemDiscountAmount
{
	get
	{
		if (TotalLineItemDiscountAmountMoney != null) { return TotalLineItemDiscountAmountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.TotalLineItemDiscountAmountMoney = new Money(value.Value); }
		else this.TotalLineItemDiscountAmountMoney = null;
	}
}
///<summary>
///<para>Logical Name: totallineitemdiscountamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("totallineitemdiscountamount")]
public Money TotalLineItemDiscountAmountMoney
{
	get { return this.GetPropertyValue<Money>("totallineitemdiscountamount"); }
	set { this.SetPropertyValue("totallineitemdiscountamount", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "TotalLineItemDiscountAmountMoney"); }
}
///<summary>
///<para>Logical Name: totallineitemdiscountamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? TotalLineItemDiscountAmount_Base
{
	get
	{
		if (TotalLineItemDiscountAmount_BaseMoney != null) { return TotalLineItemDiscountAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: totallineitemdiscountamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("totallineitemdiscountamount_base")]
public Money TotalLineItemDiscountAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("totallineitemdiscountamount_base"); }
}
///<summary>
///<para>Logical Name: totalamountlessfreight</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalPre_FreightAmount
{
	get
	{
		if (TotalPre_FreightAmountMoney != null) { return TotalPre_FreightAmountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.TotalPre_FreightAmountMoney = new Money(value.Value); }
		else this.TotalPre_FreightAmountMoney = null;
	}
}
///<summary>
///<para>Logical Name: totalamountlessfreight</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("totalamountlessfreight")]
public Money TotalPre_FreightAmountMoney
{
	get { return this.GetPropertyValue<Money>("totalamountlessfreight"); }
	set { this.SetPropertyValue("totalamountlessfreight", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "TotalPre_FreightAmountMoney"); }
}
///<summary>
///<para>Logical Name: totalamountlessfreight_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? TotalPre_FreightAmount_Base
{
	get
	{
		if (TotalPre_FreightAmount_BaseMoney != null) { return TotalPre_FreightAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: totalamountlessfreight_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("totalamountlessfreight_base")]
public Money TotalPre_FreightAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("totalamountlessfreight_base"); }
}
///<summary>
///<para>Logical Name: totaltax</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalTax
{
	get
	{
		if (TotalTaxMoney != null) { return TotalTaxMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.TotalTaxMoney = new Money(value.Value); }
		else this.TotalTaxMoney = null;
	}
}
///<summary>
///<para>Logical Name: totaltax</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("totaltax")]
public Money TotalTaxMoney
{
	get { return this.GetPropertyValue<Money>("totaltax"); }
	set { this.SetPropertyValue("totaltax", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "TotalTaxMoney"); }
}
///<summary>
///<para>Logical Name: totaltax_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? TotalTax_Base
{
	get
	{
		if (TotalTax_BaseMoney != null) { return TotalTax_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: totaltax_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("totaltax_base")]
public Money TotalTax_BaseMoney
{
	get { return this.GetPropertyValue<Money>("totaltax_base"); }
}
///<summary>
///<para>Logical Name: traversedpath</para>
///<para>Max Length: 1250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("traversedpath")]
public string TraversedPath
{
	get { return this.GetPropertyValue<string>("traversedpath"); }
	set { this.SetPropertyValue("traversedpath", value, 1250, "TraversedPath"); }
}
/// <summary>
///Logical Name: msdyn_ordertype
/// </summary>
[AttributeLogicalNameAttribute("msdyn_ordertype")]
public eType? Type
{
	get
	{
		if (Type_OptionSetValue != null) { return (eType)Type_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Type_OptionSetValue = new OptionSetValue((int)value); }
		else this.Type_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_ordertype</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_ordertype")]
public OptionSetValue Type_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_ordertype"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_ordertype", value, "Type_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Type_Text(IOrganizationService Service)
{
	return this.Type_OptionSetValue.GetOptionSetText(Service, this, "msdyn_ordertype");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Type_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Type_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: utcconversiontimezonecode</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utcconversiontimezonecode")]
public int? UTCConversionTimeZoneCode
{
	get { return this.GetPropertyValue<int?>("utcconversiontimezonecode"); }
	set { this.SetPropertyValue("utcconversiontimezonecode", (int?)value, (int)-1, (int)2147483647, "UTCConversionTimeZoneCode"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}


        /// <summary>
/// <para><b>ActivityParty (Party)</b></para>
/// <para>Schema Name: invoice_activity_parties</para>
/// </summary>
public List<ActivityParty> GetActivityParties_Party (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActivityParty>(Service, this.Id, "activityparty", "partyid", Columns); }
/// <summary>
/// <para><b>ActivityParty (Party)</b></para>
/// <para>Schema Name: invoice_activity_parties</para>
/// </summary>
public List<ActivityParty> GetActivityParties_Party (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActivityParty>(Service, this.Id, "activityparty", "partyid", Columns); }
/// <summary>
/// <para><b>Activity (Regarding)</b></para>
/// <para>Schema Name: Invoice_ActivityPointers</para>
/// </summary>
public List<Activity> GetActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Activity>(Service, this.Id, "activitypointer", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Activity (Regarding)</b></para>
/// <para>Schema Name: Invoice_ActivityPointers</para>
/// </summary>
public List<Activity> GetActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Activity>(Service, this.Id, "activitypointer", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: Invoice_Annotation</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: Invoice_Annotation</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Appointment (Regarding)</b></para>
/// <para>Schema Name: Invoice_Appointments</para>
/// </summary>
public List<Appointment> GetAppointments_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Appointment>(Service, this.Id, "appointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Appointment (Regarding)</b></para>
/// <para>Schema Name: Invoice_Appointments</para>
/// </summary>
public List<Appointment> GetAppointments_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Appointment>(Service, this.Id, "appointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: Invoice_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: Invoice_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: Invoice_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: Invoice_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: invoice_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: invoice_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: invoice_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: invoice_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>Email (Regarding)</b></para>
/// <para>Schema Name: Invoice_Emails</para>
/// </summary>
public List<Email> GetEmailMessages_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Email (Regarding)</b></para>
/// <para>Schema Name: Invoice_Emails</para>
/// </summary>
public List<Email> GetEmailMessages_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Fax (Regarding)</b></para>
/// <para>Schema Name: Invoice_Faxes</para>
/// </summary>
public List<Fax> GetFaxes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fax>(Service, this.Id, "fax", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Fax (Regarding)</b></para>
/// <para>Schema Name: Invoice_Faxes</para>
/// </summary>
public List<Fax> GetFaxes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fax>(Service, this.Id, "fax", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>InvoiceLine (Invoice ID)</b></para>
/// <para>Schema Name: invoice_details</para>
/// </summary>
public List<InvoiceLine> GetInvoiceLines_InvoiceID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceLine>(Service, this.Id, "invoicedetail", "invoiceid", Columns); }
/// <summary>
/// <para><b>InvoiceLine (Invoice ID)</b></para>
/// <para>Schema Name: invoice_details</para>
/// </summary>
public List<InvoiceLine> GetInvoiceLines_InvoiceID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceLine>(Service, this.Id, "invoicedetail", "invoiceid", Columns); }
/// <summary>
/// <para><b>Letter (Regarding)</b></para>
/// <para>Schema Name: Invoice_Letters</para>
/// </summary>
public List<Letter> GetLetters_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Letter>(Service, this.Id, "letter", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Letter (Regarding)</b></para>
/// <para>Schema Name: Invoice_Letters</para>
/// </summary>
public List<Letter> GetLetters_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Letter>(Service, this.Id, "letter", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: Invoice_MailboxTrackingFolder</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: Invoice_MailboxTrackingFolder</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Actual (Invoice)</b></para>
/// <para>Schema Name: msdyn_invoice_msdyn_actual_Invoice</para>
/// </summary>
public List<Actual> GetActuals_Invoice (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Actual>(Service, this.Id, "msdyn_actual", "msdyn_invoice", Columns); }
/// <summary>
/// <para><b>Actual (Invoice)</b></para>
/// <para>Schema Name: msdyn_invoice_msdyn_actual_Invoice</para>
/// </summary>
public List<Actual> GetActuals_Invoice (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Actual>(Service, this.Id, "msdyn_actual", "msdyn_invoice", Columns); }
/// <summary>
/// <para><b>AgreementInvoiceDate (Invoice)</b></para>
/// <para>Schema Name: msdyn_invoice_msdyn_agreementinvoicedate_Invoice</para>
/// </summary>
public List<AgreementInvoiceDate> GetAgreementInvoiceDates_Invoice (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementInvoiceDate>(Service, this.Id, "msdyn_agreementinvoicedate", "msdyn_invoice", Columns); }
/// <summary>
/// <para><b>AgreementInvoiceDate (Invoice)</b></para>
/// <para>Schema Name: msdyn_invoice_msdyn_agreementinvoicedate_Invoice</para>
/// </summary>
public List<AgreementInvoiceDate> GetAgreementInvoiceDates_Invoice (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementInvoiceDate>(Service, this.Id, "msdyn_agreementinvoicedate", "msdyn_invoice", Columns); }
/// <summary>
/// <para><b>Approval (Regarding)</b></para>
/// <para>Schema Name: invoice_msdyn_approvals</para>
/// </summary>
public List<Approval> GetApprovals_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Approval>(Service, this.Id, "msdyn_approval", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Approval (Regarding)</b></para>
/// <para>Schema Name: invoice_msdyn_approvals</para>
/// </summary>
public List<Approval> GetApprovals_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Approval>(Service, this.Id, "msdyn_approval", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BookingAlert (Regarding)</b></para>
/// <para>Schema Name: invoice_msdyn_bookingalerts</para>
/// </summary>
public List<BookingAlert> GetBookingAlerts_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlert>(Service, this.Id, "msdyn_bookingalert", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BookingAlert (Regarding)</b></para>
/// <para>Schema Name: invoice_msdyn_bookingalerts</para>
/// </summary>
public List<BookingAlert> GetBookingAlerts_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlert>(Service, this.Id, "msdyn_bookingalert", "regardingobjectid", Columns); }
/// <summary>
/// <para>invoice</para>
/// <para><b>InvoiceProcess (invoice)</b></para>
/// <para>Schema Name: bpf_invoice_msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d</para>
/// </summary>
public List<InvoiceProcess> Getinvoice_invoice (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceProcess>(Service, this.Id, "msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d", "bpf_invoiceid", Columns); }
/// <summary>
/// <para>invoice</para>
/// <para><b>InvoiceProcess (invoice)</b></para>
/// <para>Schema Name: bpf_invoice_msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d</para>
/// </summary>
public List<InvoiceProcess> Getinvoice_invoice (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceProcess>(Service, this.Id, "msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d", "bpf_invoiceid", Columns); }
/// <summary>
/// <para><b>ProjectContractLineInvoiceSchedule (Invoice)</b></para>
/// <para>Schema Name: msdyn_invoice_msdyn_contractlineinvoiceschedule_Invoice</para>
/// </summary>
public List<ProjectContractLineInvoiceSchedule> GetProjectContractLineInvoiceSchedules_Invoice (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineInvoiceSchedule>(Service, this.Id, "msdyn_contractlineinvoiceschedule", "msdyn_invoice", Columns); }
/// <summary>
/// <para><b>ProjectContractLineInvoiceSchedule (Invoice)</b></para>
/// <para>Schema Name: msdyn_invoice_msdyn_contractlineinvoiceschedule_Invoice</para>
/// </summary>
public List<ProjectContractLineInvoiceSchedule> GetProjectContractLineInvoiceSchedules_Invoice (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineInvoiceSchedule>(Service, this.Id, "msdyn_contractlineinvoiceschedule", "msdyn_invoice", Columns); }
/// <summary>
/// <para><b>InvoiceLineDetail (Invoice)</b></para>
/// <para>Schema Name: msdyn_invoice_msdyn_invoicelinetransaction_Invoice</para>
/// </summary>
public List<InvoiceLineDetail> GetInvoiceLineDetails_Invoice (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceLineDetail>(Service, this.Id, "msdyn_invoicelinetransaction", "msdyn_invoice", Columns); }
/// <summary>
/// <para><b>InvoiceLineDetail (Invoice)</b></para>
/// <para>Schema Name: msdyn_invoice_msdyn_invoicelinetransaction_Invoice</para>
/// </summary>
public List<InvoiceLineDetail> GetInvoiceLineDetails_Invoice (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceLineDetail>(Service, this.Id, "msdyn_invoicelinetransaction", "msdyn_invoice", Columns); }
/// <summary>
/// <para><b>OrderInvoicingDate (Invoice)</b></para>
/// <para>Schema Name: msdyn_invoice_msdyn_orderinvoicingdate_Invoice</para>
/// </summary>
public List<OrderInvoicingDate> GetOrderInvoicingDates_Invoice (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderInvoicingDate>(Service, this.Id, "msdyn_orderinvoicingdate", "msdyn_invoice", Columns); }
/// <summary>
/// <para><b>OrderInvoicingDate (Invoice)</b></para>
/// <para>Schema Name: msdyn_invoice_msdyn_orderinvoicingdate_Invoice</para>
/// </summary>
public List<OrderInvoicingDate> GetOrderInvoicingDates_Invoice (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderInvoicingDate>(Service, this.Id, "msdyn_orderinvoicingdate", "msdyn_invoice", Columns); }
/// <summary>
/// <para><b>OrderInvoicingSetupDate (Invoice)</b></para>
/// <para>Schema Name: msdyn_invoice_msdyn_orderinvoicingsetupdate_Invoice</para>
/// </summary>
public List<OrderInvoicingSetupDate> GetOrderInvoicingSetupDates_Invoice (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderInvoicingSetupDate>(Service, this.Id, "msdyn_orderinvoicingsetupdate", "msdyn_invoice", Columns); }
/// <summary>
/// <para><b>OrderInvoicingSetupDate (Invoice)</b></para>
/// <para>Schema Name: msdyn_invoice_msdyn_orderinvoicingsetupdate_Invoice</para>
/// </summary>
public List<OrderInvoicingSetupDate> GetOrderInvoicingSetupDates_Invoice (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderInvoicingSetupDate>(Service, this.Id, "msdyn_orderinvoicingsetupdate", "msdyn_invoice", Columns); }
/// <summary>
/// <para><b>PaymentDetail (Invoice)</b></para>
/// <para>Schema Name: msdyn_invoice_msdyn_paymentdetail_Invoice</para>
/// </summary>
public List<PaymentDetail> GetPaymentDetail_Invoice (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PaymentDetail>(Service, this.Id, "msdyn_paymentdetail", "msdyn_invoice", Columns); }
/// <summary>
/// <para><b>PaymentDetail (Invoice)</b></para>
/// <para>Schema Name: msdyn_invoice_msdyn_paymentdetail_Invoice</para>
/// </summary>
public List<PaymentDetail> GetPaymentDetail_Invoice (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PaymentDetail>(Service, this.Id, "msdyn_paymentdetail", "msdyn_invoice", Columns); }
/// <summary>
/// <para><b>PhoneCall (Regarding)</b></para>
/// <para>Schema Name: Invoice_Phonecalls</para>
/// </summary>
public List<PhoneCall> GetPhoneCalls_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneCall>(Service, this.Id, "phonecall", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PhoneCall (Regarding)</b></para>
/// <para>Schema Name: Invoice_Phonecalls</para>
/// </summary>
public List<PhoneCall> GetPhoneCalls_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneCall>(Service, this.Id, "phonecall", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: invoice_principalobjectattributeaccess</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: invoice_principalobjectattributeaccess</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: Invoice_ProcessSessions</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: Invoice_ProcessSessions</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>RecurringAppointment (Regarding)</b></para>
/// <para>Schema Name: Invoice_RecurringAppointmentMasters</para>
/// </summary>
public List<RecurringAppointment> GetRecurringAppointments_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecurringAppointment>(Service, this.Id, "recurringappointmentmaster", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>RecurringAppointment (Regarding)</b></para>
/// <para>Schema Name: Invoice_RecurringAppointmentMasters</para>
/// </summary>
public List<RecurringAppointment> GetRecurringAppointments_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecurringAppointment>(Service, this.Id, "recurringappointmentmaster", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ServiceActivity (Regarding)</b></para>
/// <para>Schema Name: Invoice_ServiceAppointments</para>
/// </summary>
public List<ServiceActivity> GetServiceActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceActivity>(Service, this.Id, "serviceappointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ServiceActivity (Regarding)</b></para>
/// <para>Schema Name: Invoice_ServiceAppointments</para>
/// </summary>
public List<ServiceActivity> GetServiceActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceActivity>(Service, this.Id, "serviceappointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SLAKPIInstance (Regarding)</b></para>
/// <para>Schema Name: slakpiinstance_invoice</para>
/// </summary>
public List<SLAKPIInstance> GetSLAKPIInstances_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SLAKPIInstance>(Service, this.Id, "slakpiinstance", "regarding", Columns); }
/// <summary>
/// <para><b>SLAKPIInstance (Regarding)</b></para>
/// <para>Schema Name: slakpiinstance_invoice</para>
/// </summary>
public List<SLAKPIInstance> GetSLAKPIInstances_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SLAKPIInstance>(Service, this.Id, "slakpiinstance", "regarding", Columns); }
/// <summary>
/// <para><b>SocialActivity (Regarding)</b></para>
/// <para>Schema Name: Invoice_SocialActivities</para>
/// </summary>
public List<SocialActivity> GetSocialActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialActivity>(Service, this.Id, "socialactivity", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SocialActivity (Regarding)</b></para>
/// <para>Schema Name: Invoice_SocialActivities</para>
/// </summary>
public List<SocialActivity> GetSocialActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialActivity>(Service, this.Id, "socialactivity", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: Invoice_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: Invoice_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Task (Regarding)</b></para>
/// <para>Schema Name: Invoice_Tasks</para>
/// </summary>
public List<Task> GetTasks_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Task>(Service, this.Id, "task", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Task (Regarding)</b></para>
/// <para>Schema Name: Invoice_Tasks</para>
/// </summary>
public List<Task> GetTasks_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Task>(Service, this.Id, "task", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_invoice</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_invoice</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        /// <summary>
/// <para>Related Entity: <b>Contact</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: contactinvoices_association</para>
/// </summary>
public List<Contact> GetContacts (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<Contact>(Service, this, "invoice", "invoiceid", "contact", "contactid", "contactinvoices", "invoiceid", "contactid", Columns); }
public List<Contact> GetContacts (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<Contact>(Service, this, "invoice", "invoiceid", "contact", "contactid", "contactinvoices", "invoiceid", "contactid", Columns); }
public void RelateContacts (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "contactinvoices_association", Items); }
public void RelateContacts (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "contactinvoices_association", Items); }
public void UnRelateContacts (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "contactinvoices_association", Items); }
public void UnRelateContacts (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "contactinvoices_association", Items); }


        

        public enum ePaymentTerms
{
	///<summary><para>Net 30</para>
	///<para>Value = 1</para></summary>
	[Description("Net 30")]
	Net30 = 1, 
	///<summary><para>2% 10, Net 30</para>
	///<para>Value = 2</para></summary>
	[Description("2% 10, Net 30")]
	_2_10_Net30 = 2, 
	///<summary><para>Net 45</para>
	///<para>Value = 3</para></summary>
	[Description("Net 45")]
	Net45 = 3, 
	///<summary><para>Net 60</para>
	///<para>Value = 4</para></summary>
	[Description("Net 60")]
	Net60 = 4
}
public enum ePricingError
{
	///<summary><para>None</para>
	///<para>Value = 0</para></summary>
	[Description("None")]
	None = 0, 
	///<summary><para>Detail Error</para>
	///<para>Value = 1</para></summary>
	[Description("Detail Error")]
	DetailError = 1, 
	///<summary><para>Missing Price Level</para>
	///<para>Value = 2</para></summary>
	[Description("Missing Price Level")]
	MissingPriceLevel = 2, 
	///<summary><para>Inactive Price Level</para>
	///<para>Value = 3</para></summary>
	[Description("Inactive Price Level")]
	InactivePriceLevel = 3, 
	///<summary><para>Missing Quantity</para>
	///<para>Value = 4</para></summary>
	[Description("Missing Quantity")]
	MissingQuantity = 4, 
	///<summary><para>Missing Unit Price</para>
	///<para>Value = 5</para></summary>
	[Description("Missing Unit Price")]
	MissingUnitPrice = 5, 
	///<summary><para>Missing Product</para>
	///<para>Value = 6</para></summary>
	[Description("Missing Product")]
	MissingProduct = 6, 
	///<summary><para>Invalid Product</para>
	///<para>Value = 7</para></summary>
	[Description("Invalid Product")]
	InvalidProduct = 7, 
	///<summary><para>Missing Pricing Code</para>
	///<para>Value = 8</para></summary>
	[Description("Missing Pricing Code")]
	MissingPricingCode = 8, 
	///<summary><para>Invalid Pricing Code</para>
	///<para>Value = 9</para></summary>
	[Description("Invalid Pricing Code")]
	InvalidPricingCode = 9, 
	///<summary><para>Missing UOM</para>
	///<para>Value = 10</para></summary>
	[Description("Missing UOM")]
	MissingUOM = 10, 
	///<summary><para>Product Not In Price Level</para>
	///<para>Value = 11</para></summary>
	[Description("Product Not In Price Level")]
	ProductNotInPriceLevel = 11, 
	///<summary><para>Missing Price Level Amount</para>
	///<para>Value = 12</para></summary>
	[Description("Missing Price Level Amount")]
	MissingPriceLevelAmount = 12, 
	///<summary><para>Missing Price Level Percentage</para>
	///<para>Value = 13</para></summary>
	[Description("Missing Price Level Percentage")]
	MissingPriceLevelPercentage = 13, 
	///<summary><para>Missing Price</para>
	///<para>Value = 14</para></summary>
	[Description("Missing Price")]
	MissingPrice = 14, 
	///<summary><para>Missing Current Cost</para>
	///<para>Value = 15</para></summary>
	[Description("Missing Current Cost")]
	MissingCurrentCost = 15, 
	///<summary><para>Missing Standard Cost</para>
	///<para>Value = 16</para></summary>
	[Description("Missing Standard Cost")]
	MissingStandardCost = 16, 
	///<summary><para>Invalid Price Level Amount</para>
	///<para>Value = 17</para></summary>
	[Description("Invalid Price Level Amount")]
	InvalidPriceLevelAmount = 17, 
	///<summary><para>Invalid Price Level Percentage</para>
	///<para>Value = 18</para></summary>
	[Description("Invalid Price Level Percentage")]
	InvalidPriceLevelPercentage = 18, 
	///<summary><para>Invalid Price</para>
	///<para>Value = 19</para></summary>
	[Description("Invalid Price")]
	InvalidPrice = 19, 
	///<summary><para>Invalid Current Cost</para>
	///<para>Value = 20</para></summary>
	[Description("Invalid Current Cost")]
	InvalidCurrentCost = 20, 
	///<summary><para>Invalid Standard Cost</para>
	///<para>Value = 21</para></summary>
	[Description("Invalid Standard Cost")]
	InvalidStandardCost = 21, 
	///<summary><para>Invalid Rounding Policy</para>
	///<para>Value = 22</para></summary>
	[Description("Invalid Rounding Policy")]
	InvalidRoundingPolicy = 22, 
	///<summary><para>Invalid Rounding Option</para>
	///<para>Value = 23</para></summary>
	[Description("Invalid Rounding Option")]
	InvalidRoundingOption = 23, 
	///<summary><para>Invalid Rounding Amount</para>
	///<para>Value = 24</para></summary>
	[Description("Invalid Rounding Amount")]
	InvalidRoundingAmount = 24, 
	///<summary><para>Price Calculation Error</para>
	///<para>Value = 25</para></summary>
	[Description("Price Calculation Error")]
	PriceCalculationError = 25, 
	///<summary><para>Invalid Discount Type</para>
	///<para>Value = 26</para></summary>
	[Description("Invalid Discount Type")]
	InvalidDiscountType = 26, 
	///<summary><para>Discount Type Invalid State</para>
	///<para>Value = 27</para></summary>
	[Description("Discount Type Invalid State")]
	DiscountTypeInvalidState = 27, 
	///<summary><para>Invalid Discount</para>
	///<para>Value = 28</para></summary>
	[Description("Invalid Discount")]
	InvalidDiscount = 28, 
	///<summary><para>Invalid Quantity</para>
	///<para>Value = 29</para></summary>
	[Description("Invalid Quantity")]
	InvalidQuantity = 29, 
	///<summary><para>Invalid Pricing Precision</para>
	///<para>Value = 30</para></summary>
	[Description("Invalid Pricing Precision")]
	InvalidPricingPrecision = 30, 
	///<summary><para>Missing Product Default UOM</para>
	///<para>Value = 31</para></summary>
	[Description("Missing Product Default UOM")]
	MissingProductDefaultUOM = 31, 
	///<summary><para>Missing Product UOM Schedule </para>
	///<para>Value = 32</para></summary>
	[Description("Missing Product UOM Schedule ")]
	MissingProductUOMSchedule = 32, 
	///<summary><para>Inactive Discount Type</para>
	///<para>Value = 33</para></summary>
	[Description("Inactive Discount Type")]
	InactiveDiscountType = 33, 
	///<summary><para>Invalid Price Level Currency</para>
	///<para>Value = 34</para></summary>
	[Description("Invalid Price Level Currency")]
	InvalidPriceLevelCurrency = 34, 
	///<summary><para>Price Attribute Out Of Range</para>
	///<para>Value = 35</para></summary>
	[Description("Price Attribute Out Of Range")]
	PriceAttributeOutOfRange = 35, 
	///<summary><para>Base Currency Attribute Overflow</para>
	///<para>Value = 36</para></summary>
	[Description("Base Currency Attribute Overflow")]
	BaseCurrencyAttributeOverflow = 36, 
	///<summary><para>Base Currency Attribute Underflow</para>
	///<para>Value = 37</para></summary>
	[Description("Base Currency Attribute Underflow")]
	BaseCurrencyAttributeUnderflow = 37
}
public enum ePriority
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eProjectInvoiceStatus
{
	///<summary><para>Draft</para>
	///<para>Value = 192350000</para></summary>
	[Description("Draft")]
	Draft = 192350000, 
	///<summary><para>In Review</para>
	///<para>Value = 192350001</para></summary>
	[Description("In Review")]
	InReview = 192350001, 
	///<summary><para>Confirmed</para>
	///<para>Value = 192350002</para></summary>
	[Description("Confirmed")]
	Confirmed = 192350002, 
	///<summary><para>Invoice Paid</para>
	///<para>Value = 192350003</para></summary>
	[Description("Invoice Paid")]
	InvoicePaid = 192350003
}
public enum eShipToFreightTerms
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eShippingMethod
{
	///<summary><para>Airborne</para>
	///<para>Value = 1</para></summary>
	[Description("Airborne")]
	Airborne = 1, 
	///<summary><para>DHL</para>
	///<para>Value = 2</para></summary>
	[Description("DHL")]
	DHL = 2, 
	///<summary><para>FedEx</para>
	///<para>Value = 3</para></summary>
	[Description("FedEx")]
	FedEx = 3, 
	///<summary><para>UPS</para>
	///<para>Value = 4</para></summary>
	[Description("UPS")]
	UPS = 4, 
	///<summary><para>Postal Mail</para>
	///<para>Value = 5</para></summary>
	[Description("Postal Mail")]
	PostalMail = 5, 
	///<summary><para>Full Load</para>
	///<para>Value = 6</para></summary>
	[Description("Full Load")]
	FullLoad = 6, 
	///<summary><para>Will Call</para>
	///<para>Value = 7</para></summary>
	[Description("Will Call")]
	WillCall = 7
}
public enum eStatus
{
	///<summary><para>Active</para>
	///<para>Value = 0</para></summary>
	[Description("Active")]
	Active = 0, 
	///<summary><para>Closed (deprecated)</para>
	///<para>Value = 1</para></summary>
	[Description("Closed (deprecated)")]
	Closed_deprecated = 1, 
	///<summary><para>Paid</para>
	///<para>Value = 2</para></summary>
	[Description("Paid")]
	Paid = 2, 
	///<summary><para>Canceled</para>
	///<para>Value = 3</para></summary>
	[Description("Canceled")]
	Canceled = 3
}
public enum eStatusReason
{
	///<summary><para>New</para>
	///<para>Value = 1</para></summary>
	[Description("New")]
	_New_Active = 1, 
	///<summary><para>Partially Shipped</para>
	///<para>Value = 2</para></summary>
	[Description("Partially Shipped")]
	PartiallyShipped_Active = 2, 
	///<summary><para>Billed</para>
	///<para>Value = 4</para></summary>
	[Description("Billed")]
	Billed_Active = 4, 
	///<summary><para>Booked (applies to services)</para>
	///<para>Value = 5</para></summary>
	[Description("Booked (applies to services)")]
	Booked_appliesToServices_Active = 5, 
	///<summary><para>Installed (applies to services)</para>
	///<para>Value = 6</para></summary>
	[Description("Installed (applies to services)")]
	Installed_appliesToServices_Active = 6, 
	///<summary><para>Canceled (deprecated)</para>
	///<para>Value = 3</para></summary>
	[Description("Canceled (deprecated)")]
	Canceled_deprecated_Closed_deprecated = 3, 
	///<summary><para>Paid in Full (deprecated)</para>
	///<para>Value = 7</para></summary>
	[Description("Paid in Full (deprecated)")]
	PaidInFull_deprecated_Closed_deprecated = 7, 
	///<summary><para>Complete</para>
	///<para>Value = 100001</para></summary>
	[Description("Complete")]
	Complete_Paid = 100001, 
	///<summary><para>Partial</para>
	///<para>Value = 100002</para></summary>
	[Description("Partial")]
	_Partial_Paid = 100002, 
	///<summary><para>Canceled</para>
	///<para>Value = 100003</para></summary>
	[Description("Canceled")]
	Canceled_Canceled = 100003
}
public enum eType
{
	///<summary><para>Work based</para>
	///<para>Value = 192350001</para></summary>
	[Description("Work based")]
	WorkBased = 192350001, 
	///<summary><para>Item based</para>
	///<para>Value = 192350000</para></summary>
	[Description("Item based")]
	ItemBased = 192350000, 
	///<summary><para>Service-Maintenance Based</para>
	///<para>Value = 690970002</para></summary>
	[Description("Service-Maintenance Based")]
	Service_MaintenanceBased = 690970002
}
public void SetState(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>entityimage_timestamp</para>
	/// <para>entityimage_timestamp</para></summary>
	public const string EntityImage_Timestamp = "entityimage_timestamp";
	/// <summary><para>contactidname</para>
	/// <para>contactidname</para></summary>
	public const string ContactIdName = "contactidname";
	/// <summary><para>customeridyominame</para>
	/// <para>customeridyominame</para></summary>
	public const string CustomerIdYomiName = "customeridyominame";
	/// <summary><para>transactioncurrencyidname</para>
	/// <para>transactioncurrencyidname</para></summary>
	public const string TransactionCurrencyIdName = "transactioncurrencyidname";
	/// <summary><para>contactidyominame</para>
	/// <para>contactidyominame</para></summary>
	public const string ContactIdYomiName = "contactidyominame";
	/// <summary><para>opportunityidname</para>
	/// <para>opportunityidname</para></summary>
	public const string OpportunityIdName = "opportunityidname";
	/// <summary><para>owneridyominame</para>
	/// <para>owneridyominame</para></summary>
	public const string OwnerIdYomiName = "owneridyominame";
	/// <summary><para>salesorderidname</para>
	/// <para>salesorderidname</para></summary>
	public const string SalesOrderIdName = "salesorderidname";
	/// <summary><para>entityimage_url</para>
	/// <para>entityimage_url</para></summary>
	public const string EntityImage_URL = "entityimage_url";
	/// <summary><para>accountidname</para>
	/// <para>accountidname</para></summary>
	public const string AccountIdName = "accountidname";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>slainvokedidname</para>
	/// <para>slainvokedidname</para></summary>
	public const string SLAInvokedIdName = "slainvokedidname";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>accountidyominame</para>
	/// <para>accountidyominame</para></summary>
	public const string AccountIdYomiName = "accountidyominame";
	/// <summary><para>owneridtype</para>
	/// <para>owneridtype</para></summary>
	public const string OwnerIdType = "owneridtype";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>customeridname</para>
	/// <para>customeridname</para></summary>
	public const string CustomerIdName = "customeridname";
	/// <summary><para>pricelevelidname</para>
	/// <para>pricelevelidname</para></summary>
	public const string PriceLevelIdName = "pricelevelidname";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>owneridname</para>
	/// <para>owneridname</para></summary>
	public const string OwnerIdName = "owneridname";
	/// <summary><para>slaname</para>
	/// <para>slaname</para></summary>
	public const string SLAName = "slaname";
	/// <summary><para>Account</para>
	/// <para>accountid</para></summary>
	public const string Account = "accountid";
	/// <summary><para>Amount Due</para>
	/// <para>msdyn_amountdue</para></summary>
	public const string AmountDue = "msdyn_amountdue";
	/// <summary><para>Amount Due (Base)</para>
	/// <para>msdyn_amountdue_base</para></summary>
	public const string AmountDue_Base = "msdyn_amountdue_base";
	/// <summary><para>Bill To Address</para>
	/// <para>billto_composite</para></summary>
	public const string BillToAddress = "billto_composite";
	/// <summary><para>Bill To City</para>
	/// <para>billto_city</para></summary>
	public const string BillToCity = "billto_city";
	/// <summary><para>Bill To Country/Region</para>
	/// <para>billto_country</para></summary>
	public const string BillToCountry_Region = "billto_country";
	/// <summary><para>Bill To Fax</para>
	/// <para>billto_fax</para></summary>
	public const string BillToFax = "billto_fax";
	/// <summary><para>Bill To Name</para>
	/// <para>billto_name</para></summary>
	public const string BillToName = "billto_name";
	/// <summary><para>Bill To Phone</para>
	/// <para>billto_telephone</para></summary>
	public const string BillToPhone = "billto_telephone";
	/// <summary><para>Bill To State/Province</para>
	/// <para>billto_stateorprovince</para></summary>
	public const string BillToState_Province = "billto_stateorprovince";
	/// <summary><para>Bill To Street 1</para>
	/// <para>billto_line1</para></summary>
	public const string BillToStreet1 = "billto_line1";
	/// <summary><para>Bill To Street 2</para>
	/// <para>billto_line2</para></summary>
	public const string BillToStreet2 = "billto_line2";
	/// <summary><para>Bill To Street 3</para>
	/// <para>billto_line3</para></summary>
	public const string BillToStreet3 = "billto_line3";
	/// <summary><para>Bill To ZIP/Postal Code</para>
	/// <para>billto_postalcode</para></summary>
	public const string BillToZIP_PostalCode = "billto_postalcode";
	/// <summary><para>Contact</para>
	/// <para>contactid</para></summary>
	public const string Contact = "contactid";
	/// <summary><para>Contract</para>
	/// <para>salesorderid</para></summary>
	public const string Contract = "salesorderid";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Currency</para>
	/// <para>transactioncurrencyid</para></summary>
	public const string Currency = "transactioncurrencyid";
	/// <summary><para>Customer</para>
	/// <para>customerid</para></summary>
	public const string Customer = "customerid";
	/// <summary><para>Customer Type</para>
	/// <para>customeridtype</para></summary>
	public const string CustomerType = "customeridtype";
	/// <summary><para>Date Delivered</para>
	/// <para>datedelivered</para></summary>
	public const string DateDelivered = "datedelivered";
	/// <summary><para>Description</para>
	/// <para>description</para></summary>
	public const string Description = "description";
	/// <summary><para>Due Date</para>
	/// <para>duedate</para></summary>
	public const string DueDate = "duedate";
	/// <summary><para>Entity Image Id</para>
	/// <para>entityimageid</para></summary>
	public const string EntityImageId = "entityimageid";
	/// <summary><para>Exchange Rate</para>
	/// <para>exchangerate</para></summary>
	public const string ExchangeRate = "exchangerate";
	/// <summary><para>Freight Amount</para>
	/// <para>freightamount</para></summary>
	public const string FreightAmount = "freightamount";
	/// <summary><para>Freight Amount (Base)</para>
	/// <para>freightamount_base</para></summary>
	public const string FreightAmount_Base = "freightamount_base";
	/// <summary><para>Has Corrections</para>
	/// <para>msdyn_hascorrections</para></summary>
	public const string HasCorrections = "msdyn_hascorrections";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string ImportSequenceNumber = "importsequencenumber";
	/// <summary><para>Invoice</para>
	/// <para>invoiceid</para></summary>
	public const string InvoiceId = "invoiceid";
	/// <summary><para>Invoice Date</para>
	/// <para>msdyn_invoicedate</para></summary>
	public const string InvoiceDate = "msdyn_invoicedate";
	/// <summary><para>Invoice Discount (%)</para>
	/// <para>discountpercentage</para></summary>
	public const string InvoiceDiscount = "discountpercentage";
	/// <summary><para>Invoice Discount Amount</para>
	/// <para>discountamount</para></summary>
	public const string InvoiceDiscountAmount = "discountamount";
	/// <summary><para>Invoice Discount Amount (Base)</para>
	/// <para>discountamount_base</para></summary>
	public const string InvoiceDiscountAmount_Base = "discountamount_base";
	/// <summary><para>Invoice ID</para>
	/// <para>invoicenumber</para></summary>
	public const string InvoiceID = "invoicenumber";
	/// <summary><para>Last On Hold Time</para>
	/// <para>lastonholdtime</para></summary>
	public const string LastOnHoldTime = "lastonholdtime";
	/// <summary><para>Last SLA applied</para>
	/// <para>slainvokedid</para></summary>
	public const string LastSLAApplied = "slainvokedid";
	/// <summary><para>Last Submitted to Back Office</para>
	/// <para>lastbackofficesubmit</para></summary>
	public const string LastSubmittedToBackOffice = "lastbackofficesubmit";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>Name</para>
	/// <para>name</para></summary>
	public const string Name = "name";
	/// <summary><para>On Hold Time (Minutes)</para>
	/// <para>onholdtime</para></summary>
	public const string OnHoldTime_Minutes = "onholdtime";
	/// <summary><para>Opportunity</para>
	/// <para>opportunityid</para></summary>
	public const string Opportunity = "opportunityid";
	/// <summary><para>Owner</para>
	/// <para>ownerid</para></summary>
	public const string Owner = "ownerid";
	/// <summary><para>Owning Business Unit</para>
	/// <para>owningbusinessunit</para></summary>
	public const string OwningBusinessUnit = "owningbusinessunit";
	/// <summary><para>Owning Team</para>
	/// <para>owningteam</para></summary>
	public const string OwningTeam = "owningteam";
	/// <summary><para>Owning User</para>
	/// <para>owninguser</para></summary>
	public const string OwningUser = "owninguser";
	/// <summary><para>Payment Terms</para>
	/// <para>paymenttermscode</para></summary>
	public const string PaymentTerms = "paymenttermscode";
	/// <summary><para>Price List</para>
	/// <para>pricelevelid</para></summary>
	public const string PriceList = "pricelevelid";
	/// <summary><para>Prices Locked</para>
	/// <para>ispricelocked</para></summary>
	public const string PricesLocked = "ispricelocked";
	/// <summary><para>Pricing Error </para>
	/// <para>pricingerrorcode</para></summary>
	public const string PricingError = "pricingerrorcode";
	/// <summary><para>Priority</para>
	/// <para>prioritycode</para></summary>
	public const string Priority = "prioritycode";
	/// <summary><para>Process</para>
	/// <para>processid</para></summary>
	public const string Process = "processid";
	/// <summary><para>Process Stage</para>
	/// <para>stageid</para></summary>
	public const string ProcessStage = "stageid";
	/// <summary><para>Project Invoice Status</para>
	/// <para>msdyn_projectinvoicestatus</para></summary>
	public const string ProjectInvoiceStatus = "msdyn_projectinvoicestatus";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string RecordCreatedOn = "overriddencreatedon";
	/// <summary><para>Ship To</para>
	/// <para>willcall</para></summary>
	public const string ShipTo = "willcall";
	/// <summary><para>Ship To Address</para>
	/// <para>shipto_composite</para></summary>
	public const string ShipToAddress = "shipto_composite";
	/// <summary><para>Ship To City</para>
	/// <para>shipto_city</para></summary>
	public const string ShipToCity = "shipto_city";
	/// <summary><para>Ship To Country/Region</para>
	/// <para>shipto_country</para></summary>
	public const string ShipToCountry_Region = "shipto_country";
	/// <summary><para>Ship To Fax</para>
	/// <para>shipto_fax</para></summary>
	public const string ShipToFax = "shipto_fax";
	/// <summary><para>Ship To Freight Terms</para>
	/// <para>shipto_freighttermscode</para></summary>
	public const string ShipToFreightTerms = "shipto_freighttermscode";
	/// <summary><para>Ship To Name</para>
	/// <para>shipto_name</para></summary>
	public const string ShipToName = "shipto_name";
	/// <summary><para>Ship To Phone</para>
	/// <para>shipto_telephone</para></summary>
	public const string ShipToPhone = "shipto_telephone";
	/// <summary><para>Ship To State/Province</para>
	/// <para>shipto_stateorprovince</para></summary>
	public const string ShipToState_Province = "shipto_stateorprovince";
	/// <summary><para>Ship To Street 1</para>
	/// <para>shipto_line1</para></summary>
	public const string ShipToStreet1 = "shipto_line1";
	/// <summary><para>Ship To Street 2</para>
	/// <para>shipto_line2</para></summary>
	public const string ShipToStreet2 = "shipto_line2";
	/// <summary><para>Ship To Street 3</para>
	/// <para>shipto_line3</para></summary>
	public const string ShipToStreet3 = "shipto_line3";
	/// <summary><para>Ship To ZIP/Postal Code</para>
	/// <para>shipto_postalcode</para></summary>
	public const string ShipToZIP_PostalCode = "shipto_postalcode";
	/// <summary><para>Shipping Method</para>
	/// <para>shippingmethodcode</para></summary>
	public const string ShippingMethod = "shippingmethodcode";
	/// <summary><para>SLA</para>
	/// <para>slaid</para></summary>
	public const string SLA = "slaid";
	/// <summary><para>Status</para>
	/// <para>statecode</para></summary>
	public const string Status = "statecode";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string StatusReason = "statuscode";
	/// <summary><para>Time Zone Rule Version Number</para>
	/// <para>timezoneruleversionnumber</para></summary>
	public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
	/// <summary><para>Total Amount</para>
	/// <para>totalamount</para></summary>
	public const string TotalAmount = "totalamount";
	/// <summary><para>Total Amount (Base)</para>
	/// <para>totalamount_base</para></summary>
	public const string TotalAmount_Base = "totalamount_base";
	/// <summary><para>Total Detail Amount</para>
	/// <para>totallineitemamount</para></summary>
	public const string TotalDetailAmount = "totallineitemamount";
	/// <summary><para>Total Detail Amount (Base)</para>
	/// <para>totallineitemamount_base</para></summary>
	public const string TotalDetailAmount_Base = "totallineitemamount_base";
	/// <summary><para>Total Discount Amount</para>
	/// <para>totaldiscountamount</para></summary>
	public const string TotalDiscountAmount = "totaldiscountamount";
	/// <summary><para>Total Discount Amount (Base)</para>
	/// <para>totaldiscountamount_base</para></summary>
	public const string TotalDiscountAmount_Base = "totaldiscountamount_base";
	/// <summary><para>Total Line Item Discount Amount</para>
	/// <para>totallineitemdiscountamount</para></summary>
	public const string TotalLineItemDiscountAmount = "totallineitemdiscountamount";
	/// <summary><para>Total Line Item Discount Amount (Base)</para>
	/// <para>totallineitemdiscountamount_base</para></summary>
	public const string TotalLineItemDiscountAmount_Base = "totallineitemdiscountamount_base";
	/// <summary><para>Total Pre-Freight Amount</para>
	/// <para>totalamountlessfreight</para></summary>
	public const string TotalPre_FreightAmount = "totalamountlessfreight";
	/// <summary><para>Total Pre-Freight Amount (Base)</para>
	/// <para>totalamountlessfreight_base</para></summary>
	public const string TotalPre_FreightAmount_Base = "totalamountlessfreight_base";
	/// <summary><para>Total Tax</para>
	/// <para>totaltax</para></summary>
	public const string TotalTax = "totaltax";
	/// <summary><para>Total Tax (Base)</para>
	/// <para>totaltax_base</para></summary>
	public const string TotalTax_Base = "totaltax_base";
	/// <summary><para>Traversed Path</para>
	/// <para>traversedpath</para></summary>
	public const string TraversedPath = "traversedpath";
	/// <summary><para>Type</para>
	/// <para>msdyn_ordertype</para></summary>
	public const string Type = "msdyn_ordertype";
	/// <summary><para>UTC Conversion Time Zone Code</para>
	/// <para>utcconversiontimezonecode</para></summary>
	public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
}

    }
}

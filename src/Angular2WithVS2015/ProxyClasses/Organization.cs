// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("organization")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class Organization : BaseProxyClass
    {
        public new const string LogicalName = "organization";
        public const int ObjectTypeCode = 1019;
        public const string PrimaryIdAttribute = "organizationid";
        public const string PrimaryNameAttribute = "name";
        
        static Organization()
        {
            BaseProxyClass.RegisterProxyType(typeof(Organization), "organization");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public Organization() : base(new Entity("organization")) { }
        public Organization(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<Organization>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: defaultemailserverprofileidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("defaultemailserverprofileidname")]
public string DefaultEmailServerProfileIdName
{
	get { return this.GetPropertyValue<string>("defaultemailserverprofileidname"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: entityimage_url</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("entityimage_url")]
public string EntityImage_URL
{
	get { return this.GetPropertyValue<string>("entityimage_url"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: basecurrencyidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("basecurrencyidname")]
public string BaseCurrencyIdName
{
	get { return this.GetPropertyValue<string>("basecurrencyidname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: entityimage_timestamp</para>
///</summary>
[AttributeLogicalNameAttribute("entityimage_timestamp")]
public int? EntityImage_Timestamp
{
	get { return this.GetPropertyValue<int?>("entityimage_timestamp"); }
}
///<summary>
///<para>Logical Name: defaultmobileofflineprofileidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("defaultmobileofflineprofileidname")]
public string DefaultMobileOfflineProfileIdName
{
	get { return this.GetPropertyValue<string>("defaultmobileofflineprofileidname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: acknowledgementtemplateidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("acknowledgementtemplateidname")]
public string AcknowledgementTemplateIdName
{
	get { return this.GetPropertyValue<string>("acknowledgementtemplateidname"); }
}
///<summary>
///<para>Logical Name: pinpointlanguagecode</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("pinpointlanguagecode")]
public int? PinpointLanguageCode
{
	get { return this.GetPropertyValue<int?>("pinpointlanguagecode"); }
	set { this.SetPropertyValue("pinpointlanguagecode", (int?)value, (int)-2147483648, (int)2147483647, "PinpointLanguageCode"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: aciwebendpointurl</para>
///<para>Max Length: 500 characters</para>
///</summary>
[AttributeLogicalNameAttribute("aciwebendpointurl")]
public string ACITenantURL
{
	get { return this.GetPropertyValue<string>("aciwebendpointurl"); }
	set { this.SetPropertyValue("aciwebendpointurl", value, 500, "ACITenantURL"); }
}
///<summary>
///<para>Logical Name: acknowledgementtemplateid</para>
///</summary>
[AttributeLogicalNameAttribute("acknowledgementtemplateid")]
public EntityReference AcknowledgementTemplate
{
	get { return this.GetPropertyValue<EntityReference>("acknowledgementtemplateid"); }
	set { this.SetPropertyValue<EntityReference>("acknowledgementtemplateid", value, "AcknowledgementTemplate"); }
}
///<summary>
///<para>Logical Name: allowaddressbooksyncs</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("allowaddressbooksyncs")]
public bool? AllowAddressBookSynchronization
{
	get { return this.GetPropertyValue<bool?>("allowaddressbooksyncs"); }
	set { this.SetPropertyValue<bool?>("allowaddressbooksyncs", value, "AllowAddressBookSynchronization"); }
}
///<summary>
///<para>Logical Name: allowautoresponsecreation</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("allowautoresponsecreation")]
public bool? AllowAutomaticResponseCreation
{
	get { return this.GetPropertyValue<bool?>("allowautoresponsecreation"); }
	set { this.SetPropertyValue<bool?>("allowautoresponsecreation", value, "AllowAutomaticResponseCreation"); }
}
///<summary>
///<para>Logical Name: allowautounsubscribe</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("allowautounsubscribe")]
public bool? AllowAutomaticUnsubscribe
{
	get { return this.GetPropertyValue<bool?>("allowautounsubscribe"); }
	set { this.SetPropertyValue<bool?>("allowautounsubscribe", value, "AllowAutomaticUnsubscribe"); }
}
///<summary>
///<para>Logical Name: allowautounsubscribeacknowledgement</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("allowautounsubscribeacknowledgement")]
public bool? AllowAutomaticUnsubscribeAcknowledgement
{
	get { return this.GetPropertyValue<bool?>("allowautounsubscribeacknowledgement"); }
	set { this.SetPropertyValue<bool?>("allowautounsubscribeacknowledgement", value, "AllowAutomaticUnsubscribeAcknowledgement"); }
}
///<summary>
///<para>Logical Name: allowentityonlyaudit</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("allowentityonlyaudit")]
public bool? AllowEntityLevelAuditing
{
	get { return this.GetPropertyValue<bool?>("allowentityonlyaudit"); }
	set { this.SetPropertyValue<bool?>("allowentityonlyaudit", value, "AllowEntityLevelAuditing"); }
}
///<summary>
///<para>Logical Name: allowwebexcelexport</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("allowwebexcelexport")]
public bool? AllowExportToExcel
{
	get { return this.GetPropertyValue<bool?>("allowwebexcelexport"); }
	set { this.SetPropertyValue<bool?>("allowwebexcelexport", value, "AllowExportToExcel"); }
}
///<summary>
///<para>Logical Name: allowmarketingemailexecution</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("allowmarketingemailexecution")]
public bool? AllowMarketingEmailExecution
{
	get { return this.GetPropertyValue<bool?>("allowmarketingemailexecution"); }
	set { this.SetPropertyValue<bool?>("allowmarketingemailexecution", value, "AllowMarketingEmailExecution"); }
}
///<summary>
///<para>Logical Name: allowofflinescheduledsyncs</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("allowofflinescheduledsyncs")]
public bool? AllowOfflineScheduledSynchronization
{
	get { return this.GetPropertyValue<bool?>("allowofflinescheduledsyncs"); }
	set { this.SetPropertyValue<bool?>("allowofflinescheduledsyncs", value, "AllowOfflineScheduledSynchronization"); }
}
///<summary>
///<para>Logical Name: allowclientmessagebarad</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("allowclientmessagebarad")]
public bool? AllowOutlookClientMessageBarAdvertisement
{
	get { return this.GetPropertyValue<bool?>("allowclientmessagebarad"); }
	set { this.SetPropertyValue<bool?>("allowclientmessagebarad", value, "AllowOutlookClientMessageBarAdvertisement"); }
}
///<summary>
///<para>Logical Name: allowoutlookscheduledsyncs</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("allowoutlookscheduledsyncs")]
public bool? AllowScheduledSynchronization
{
	get { return this.GetPropertyValue<bool?>("allowoutlookscheduledsyncs"); }
	set { this.SetPropertyValue<bool?>("allowoutlookscheduledsyncs", value, "AllowScheduledSynchronization"); }
}
///<summary>
///<para>Logical Name: allowusersseeappdownloadmessage</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("allowusersseeappdownloadmessage")]
public bool? AllowTheShowingTabletApplicationNotificationBarsInABrowser
{
	get { return this.GetPropertyValue<bool?>("allowusersseeappdownloadmessage"); }
	set { this.SetPropertyValue<bool?>("allowusersseeappdownloadmessage", value, "AllowTheShowingTabletApplicationNotificationBarsInABrowser"); }
}
///<summary>
///<para>Logical Name: isemailmonitoringallowed</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isemailmonitoringallowed")]
public bool? AllowTrackingRecipientActivityOnSentEmails
{
	get { return this.GetPropertyValue<bool?>("isemailmonitoringallowed"); }
	set { this.SetPropertyValue<bool?>("isemailmonitoringallowed", value, "AllowTrackingRecipientActivityOnSentEmails"); }
}
///<summary>
///<para>Logical Name: allowunresolvedpartiesonemailsend</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("allowunresolvedpartiesonemailsend")]
public bool? AllowUnresolvedAddressEmailSend
{
	get { return this.GetPropertyValue<bool?>("allowunresolvedpartiesonemailsend"); }
	set { this.SetPropertyValue<bool?>("allowunresolvedpartiesonemailsend", value, "AllowUnresolvedAddressEmailSend"); }
}
///<summary>
///<para>Logical Name: allowuserformmodepreference</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("allowuserformmodepreference")]
public bool? AllowUserFormModePreference
{
	get { return this.GetPropertyValue<bool?>("allowuserformmodepreference"); }
	set { this.SetPropertyValue<bool?>("allowuserformmodepreference", value, "AllowUserFormModePreference"); }
}
///<summary>
///<para>Logical Name: ispreviewforemailmonitoringallowed</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("ispreviewforemailmonitoringallowed")]
public bool? AllowsPreviewForEmailMonitoring
{
	get { return this.GetPropertyValue<bool?>("ispreviewforemailmonitoringallowed"); }
	set { this.SetPropertyValue<bool?>("ispreviewforemailmonitoringallowed", value, "AllowsPreviewForEmailMonitoring"); }
}
///<summary>
///<para>Logical Name: amdesignator</para>
///<para>Max Length: 25 characters</para>
///</summary>
[AttributeLogicalNameAttribute("amdesignator")]
public string AMDesignator
{
	get { return this.GetPropertyValue<string>("amdesignator"); }
	set { this.SetPropertyValue("amdesignator", value, 25, "AMDesignator"); }
}
///<summary>
///<para>Logical Name: kbprefix</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("kbprefix")]
public string ArticlePrefix
{
	get { return this.GetPropertyValue<string>("kbprefix"); }
	set { this.SetPropertyValue("kbprefix", value, 20, "ArticlePrefix"); }
}
///<summary>
///<para>Logical Name: autoapplydefaultoncasecreate</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("autoapplydefaultoncasecreate")]
public bool? AutoApplyDefaultEntitlementOnCaseCreate
{
	get { return this.GetPropertyValue<bool?>("autoapplydefaultoncasecreate"); }
	set { this.SetPropertyValue<bool?>("autoapplydefaultoncasecreate", value, "AutoApplyDefaultEntitlementOnCaseCreate"); }
}
///<summary>
///<para>Logical Name: autoapplydefaultoncaseupdate</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("autoapplydefaultoncaseupdate")]
public bool? AutoApplyDefaultEntitlementOnCaseUpdate
{
	get { return this.GetPropertyValue<bool?>("autoapplydefaultoncaseupdate"); }
	set { this.SetPropertyValue<bool?>("autoapplydefaultoncaseupdate", value, "AutoApplyDefaultEntitlementOnCaseUpdate"); }
}
///<summary>
///<para>Logical Name: isautosaveenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isautosaveenabled")]
public bool? AutoSaveEnabled
{
	get { return this.GetPropertyValue<bool?>("isautosaveenabled"); }
	set { this.SetPropertyValue<bool?>("isautosaveenabled", value, "AutoSaveEnabled"); }
}
///<summary>
///<para>Logical Name: goalrollupfrequency</para>
///<para>Minimum Value: 1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("goalrollupfrequency")]
public int? AutomaticRollupFrequencyForGoal
{
	get { return this.GetPropertyValue<int?>("goalrollupfrequency"); }
	set { this.SetPropertyValue("goalrollupfrequency", (int?)value, (int)1, (int)2147483647, "AutomaticRollupFrequencyForGoal"); }
}
///<summary>
///<para>Logical Name: isfolderautocreatedonsp</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isfolderautocreatedonsp")]
public bool? AutomaticallyCreateFolders
{
	get { return this.GetPropertyValue<bool?>("isfolderautocreatedonsp"); }
	set { this.SetPropertyValue<bool?>("isfolderautocreatedonsp", value, "AutomaticallyCreateFolders"); }
}
///<summary>
///<para>Logical Name: tagpollingperiod</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("tagpollingperiod")]
public int? Auto_TagInterval
{
	get { return this.GetPropertyValue<int?>("tagpollingperiod"); }
	set { this.SetPropertyValue("tagpollingperiod", (int?)value, (int)0, (int)2147483647, "Auto_TagInterval"); }
}
///<summary>
///<para>Logical Name: tagmaxaggressivecycles</para>
///</summary>
[AttributeLogicalNameAttribute("tagmaxaggressivecycles")]
public int? Auto_TagMaxCycles
{
	get { return this.GetPropertyValue<int?>("tagmaxaggressivecycles"); }
	set { this.SetPropertyValue<int?>("tagmaxaggressivecycles", value, "Auto_TagMaxCycles"); }
}
///<summary>
///<para>Logical Name: basecurrencyprecision</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 4</para>
///</summary>
[AttributeLogicalNameAttribute("basecurrencyprecision")]
public int? BaseCurrencyPrecision
{
	get { return this.GetPropertyValue<int?>("basecurrencyprecision"); }
}
///<summary>
///<para>Logical Name: basecurrencysymbol</para>
///<para>Max Length: 5 characters</para>
///</summary>
[AttributeLogicalNameAttribute("basecurrencysymbol")]
public string BaseCurrencySymbol
{
	get { return this.GetPropertyValue<string>("basecurrencysymbol"); }
}
///<summary>
///<para>Logical Name: baseisocurrencycode</para>
///<para>Max Length: 5 characters</para>
///</summary>
[AttributeLogicalNameAttribute("baseisocurrencycode")]
public string BaseISOCurrencyCode
{
	get { return this.GetPropertyValue<string>("baseisocurrencycode"); }
}
///<summary>
///<para>Logical Name: bingmapsapikey</para>
///<para>Max Length: 1024 characters</para>
///</summary>
[AttributeLogicalNameAttribute("bingmapsapikey")]
public string BingMapsAPIKey
{
	get { return this.GetPropertyValue<string>("bingmapsapikey"); }
	set { this.SetPropertyValue("bingmapsapikey", value, 1024, "BingMapsAPIKey"); }
}
///<summary>
///<para>Logical Name: blockedattachments</para>
///<para>Max Length: 1073741823 characters</para>
///</summary>
[AttributeLogicalNameAttribute("blockedattachments")]
public string BlockAttachments
{
	get { return this.GetPropertyValue<string>("blockedattachments"); }
	set { this.SetPropertyValue("blockedattachments", value, 1073741823, "BlockAttachments"); }
}
///<summary>
///<para>Logical Name: bulkoperationprefix</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("bulkoperationprefix")]
public string BulkOperationPrefix
{
	get { return this.GetPropertyValue<string>("bulkoperationprefix"); }
	set { this.SetPropertyValue("bulkoperationprefix", value, 20, "BulkOperationPrefix"); }
}
///<summary>
///<para>Logical Name: maxproductsinbundle</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("maxproductsinbundle")]
public int? BundleItemLimit
{
	get { return this.GetPropertyValue<int?>("maxproductsinbundle"); }
	set { this.SetPropertyValue("maxproductsinbundle", (int?)value, (int)0, (int)2147483647, "BundleItemLimit"); }
}
///<summary>
///<para>Logical Name: businessclosurecalendarid</para>
///</summary>
[AttributeLogicalNameAttribute("businessclosurecalendarid")]
public Guid BusinessClosureCalendar
{
	get { return this.GetPropertyValue<Guid>("businessclosurecalendarid"); }
	set { this.SetPropertyValue<Guid>("businessclosurecalendarid", value, "BusinessClosureCalendar"); }
}
///<summary>
///<para>Logical Name: calendartype</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("calendartype")]
public int? CalendarType
{
	get { return this.GetPropertyValue<int?>("calendartype"); }
	set { this.SetPropertyValue("calendartype", (int?)value, (int)-2147483648, (int)2147483647, "CalendarType"); }
}
///<summary>
///<para>Logical Name: campaignprefix</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("campaignprefix")]
public string CampaignPrefix
{
	get { return this.GetPropertyValue<string>("campaignprefix"); }
	set { this.SetPropertyValue("campaignprefix", value, 20, "CampaignPrefix"); }
}
///<summary>
///<para>Logical Name: cascadestatusupdate</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("cascadestatusupdate")]
public bool? CascadeStatusUpdate
{
	get { return this.GetPropertyValue<bool?>("cascadestatusupdate"); }
	set { this.SetPropertyValue<bool?>("cascadestatusupdate", value, "CascadeStatusUpdate"); }
}
///<summary>
///<para>Logical Name: caseprefix</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("caseprefix")]
public string CasePrefix
{
	get { return this.GetPropertyValue<string>("caseprefix"); }
	set { this.SetPropertyValue("caseprefix", value, 20, "CasePrefix"); }
}
///<summary>
///<para>Logical Name: categoryprefix</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("categoryprefix")]
public string CategoryPrefix
{
	get { return this.GetPropertyValue<string>("categoryprefix"); }
	set { this.SetPropertyValue("categoryprefix", value, 20, "CategoryPrefix"); }
}
///<summary>
///<para>Logical Name: sharepointdeploymenttype</para>
///</summary>
[AttributeLogicalNameAttribute("sharepointdeploymenttype")]
public OptionSetValue ChooseSharePointDeploymentType
{
	get { return this.GetPropertyValue<OptionSetValue>("sharepointdeploymenttype"); }
	set { this.SetPropertyValue<OptionSetValue>("sharepointdeploymenttype", value, "ChooseSharePointDeploymentType"); }
}
///<summary>
///<para>Logical Name: contractprefix</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("contractprefix")]
public string ContractPrefix
{
	get { return this.GetPropertyValue<string>("contractprefix"); }
	set { this.SetPropertyValue("contractprefix", value, 20, "ContractPrefix"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: signupoutlookdownloadfwlink</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("signupoutlookdownloadfwlink")]
public string CRMForOutlookDownloadURL
{
	get { return this.GetPropertyValue<string>("signupoutlookdownloadfwlink"); }
	set { this.SetPropertyValue("signupoutlookdownloadfwlink", value, 200, "CRMForOutlookDownloadURL"); }
}
///<summary>
///<para>Logical Name: basecurrencyid</para>
///</summary>
[AttributeLogicalNameAttribute("basecurrencyid")]
public EntityReference Currency
{
	get { return this.GetPropertyValue<EntityReference>("basecurrencyid"); }
	set { this.SetPropertyValue<EntityReference>("basecurrencyid", value, "Currency"); }
}
///<summary>
///<para>Logical Name: currencydecimalprecision</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("currencydecimalprecision")]
public int? CurrencyDecimalPrecision
{
	get { return this.GetPropertyValue<int?>("currencydecimalprecision"); }
	set { this.SetPropertyValue("currencydecimalprecision", (int?)value, (int)-2147483648, (int)2147483647, "CurrencyDecimalPrecision"); }
}
///<summary>
///<para>Logical Name: currencyformatcode</para>
///</summary>
[AttributeLogicalNameAttribute("currencyformatcode")]
public OptionSetValue CurrencyFormatCode
{
	get { return this.GetPropertyValue<OptionSetValue>("currencyformatcode"); }
	set { this.SetPropertyValue<OptionSetValue>("currencyformatcode", value, "CurrencyFormatCode"); }
}
///<summary>
///<para>Logical Name: currencysymbol</para>
///<para>Max Length: 13 characters</para>
///</summary>
[AttributeLogicalNameAttribute("currencysymbol")]
public string CurrencySymbol
{
	get { return this.GetPropertyValue<string>("currencysymbol"); }
	set { this.SetPropertyValue("currencysymbol", value, 13, "CurrencySymbol"); }
}
///<summary>
///<para>Logical Name: currentkbnumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("currentkbnumber")]
public int? CurrentArticleNumber
{
	get { return this.GetPropertyValue<int?>("currentkbnumber"); }
	set { this.SetPropertyValue("currentkbnumber", (int?)value, (int)-2147483648, (int)2147483647, "CurrentArticleNumber"); }
}
///<summary>
///<para>Logical Name: currentbulkoperationnumber</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("currentbulkoperationnumber")]
public int? CurrentBulkOperationNumber
{
	get { return this.GetPropertyValue<int?>("currentbulkoperationnumber"); }
	set { this.SetPropertyValue("currentbulkoperationnumber", (int?)value, (int)0, (int)2147483647, "CurrentBulkOperationNumber"); }
}
///<summary>
///<para>Logical Name: currentcampaignnumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("currentcampaignnumber")]
public int? CurrentCampaignNumber
{
	get { return this.GetPropertyValue<int?>("currentcampaignnumber"); }
	set { this.SetPropertyValue("currentcampaignnumber", (int?)value, (int)-2147483648, (int)2147483647, "CurrentCampaignNumber"); }
}
///<summary>
///<para>Logical Name: currentcasenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("currentcasenumber")]
public int? CurrentCaseNumber
{
	get { return this.GetPropertyValue<int?>("currentcasenumber"); }
	set { this.SetPropertyValue("currentcasenumber", (int?)value, (int)-2147483648, (int)2147483647, "CurrentCaseNumber"); }
}
///<summary>
///<para>Logical Name: currentcategorynumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("currentcategorynumber")]
public int? CurrentCategoryNumber
{
	get { return this.GetPropertyValue<int?>("currentcategorynumber"); }
	set { this.SetPropertyValue("currentcategorynumber", (int?)value, (int)-1, (int)2147483647, "CurrentCategoryNumber"); }
}
///<summary>
///<para>Logical Name: currentcontractnumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("currentcontractnumber")]
public int? CurrentContractNumber
{
	get { return this.GetPropertyValue<int?>("currentcontractnumber"); }
	set { this.SetPropertyValue("currentcontractnumber", (int?)value, (int)-2147483648, (int)2147483647, "CurrentContractNumber"); }
}
///<summary>
///<para>Logical Name: currentimportsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("currentimportsequencenumber")]
public int? CurrentImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("currentimportsequencenumber"); }
}
///<summary>
///<para>Logical Name: currentinvoicenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("currentinvoicenumber")]
public int? CurrentInvoiceNumber
{
	get { return this.GetPropertyValue<int?>("currentinvoicenumber"); }
	set { this.SetPropertyValue("currentinvoicenumber", (int?)value, (int)-2147483648, (int)2147483647, "CurrentInvoiceNumber"); }
}
///<summary>
///<para>Logical Name: currentkanumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("currentkanumber")]
public int? CurrentKnowledgeArticleNumber
{
	get { return this.GetPropertyValue<int?>("currentkanumber"); }
	set { this.SetPropertyValue("currentkanumber", (int?)value, (int)-1, (int)2147483647, "CurrentKnowledgeArticleNumber"); }
}
///<summary>
///<para>Logical Name: currentordernumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("currentordernumber")]
public int? CurrentOrderNumber
{
	get { return this.GetPropertyValue<int?>("currentordernumber"); }
	set { this.SetPropertyValue("currentordernumber", (int?)value, (int)-2147483648, (int)2147483647, "CurrentOrderNumber"); }
}
///<summary>
///<para>Logical Name: currentparsedtablenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("currentparsedtablenumber")]
public int? CurrentParsedTableNumber
{
	get { return this.GetPropertyValue<int?>("currentparsedtablenumber"); }
}
///<summary>
///<para>Logical Name: currentquotenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("currentquotenumber")]
public int? CurrentQuoteNumber
{
	get { return this.GetPropertyValue<int?>("currentquotenumber"); }
	set { this.SetPropertyValue("currentquotenumber", (int?)value, (int)-2147483648, (int)2147483647, "CurrentQuoteNumber"); }
}
///<summary>
///<para>Logical Name: schemanameprefix</para>
///<para>Max Length: 8 characters</para>
///</summary>
[AttributeLogicalNameAttribute("schemanameprefix")]
public string CustomizationNamePrefix
{
	get { return this.GetPropertyValue<string>("schemanameprefix"); }
	set { this.SetPropertyValue("schemanameprefix", value, 8, "CustomizationNamePrefix"); }
}
///<summary>
///<para>Logical Name: dateformatcode</para>
///</summary>
[AttributeLogicalNameAttribute("dateformatcode")]
public OptionSetValue DateFormatCode
{
	get { return this.GetPropertyValue<OptionSetValue>("dateformatcode"); }
	set { this.SetPropertyValue<OptionSetValue>("dateformatcode", value, "DateFormatCode"); }
}
///<summary>
///<para>Logical Name: dateformatstring</para>
///<para>Max Length: 255 characters</para>
///</summary>
[AttributeLogicalNameAttribute("dateformatstring")]
public string DateFormatString
{
	get { return this.GetPropertyValue<string>("dateformatstring"); }
	set { this.SetPropertyValue("dateformatstring", value, 255, "DateFormatString"); }
}
///<summary>
///<para>Logical Name: dateseparator</para>
///<para>Max Length: 5 characters</para>
///</summary>
[AttributeLogicalNameAttribute("dateseparator")]
public string DateSeparator
{
	get { return this.GetPropertyValue<string>("dateseparator"); }
	set { this.SetPropertyValue("dateseparator", value, 5, "DateSeparator"); }
}
///<summary>
///<para>Logical Name: expirechangetrackingindays</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 365</para>
///</summary>
[AttributeLogicalNameAttribute("expirechangetrackingindays")]
public int? DaysToExpireChangeTrackingDeletedRecords
{
	get { return this.GetPropertyValue<int?>("expirechangetrackingindays"); }
	set { this.SetPropertyValue("expirechangetrackingindays", (int?)value, (int)0, (int)365, "DaysToExpireChangeTrackingDeletedRecords"); }
}
///<summary>
///<para>Logical Name: expiresubscriptionsindays</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("expiresubscriptionsindays")]
public int? DaysToExpireSubscriptions
{
	get { return this.GetPropertyValue<int?>("expiresubscriptionsindays"); }
	set { this.SetPropertyValue("expiresubscriptionsindays", (int?)value, (int)0, (int)2147483647, "DaysToExpireSubscriptions"); }
}
///<summary>
///<para>Logical Name: decimalsymbol</para>
///<para>Max Length: 5 characters</para>
///</summary>
[AttributeLogicalNameAttribute("decimalsymbol")]
public string DecimalSymbol
{
	get { return this.GetPropertyValue<string>("decimalsymbol"); }
	set { this.SetPropertyValue("decimalsymbol", value, 5, "DecimalSymbol"); }
}
///<summary>
///<para>Logical Name: defaultcountrycode</para>
///<para>Max Length: 30 characters</para>
///</summary>
[AttributeLogicalNameAttribute("defaultcountrycode")]
public string DefaultCountryCode
{
	get { return this.GetPropertyValue<string>("defaultcountrycode"); }
	set { this.SetPropertyValue("defaultcountrycode", value, 30, "DefaultCountryCode"); }
}
///<summary>
///<para>Logical Name: defaultemailsettings</para>
///<para>Max Length: 1073741823 characters</para>
///</summary>
[AttributeLogicalNameAttribute("defaultemailsettings")]
public string DefaultEmailSettings
{
	get { return this.GetPropertyValue<string>("defaultemailsettings"); }
	set { this.SetPropertyValue("defaultemailsettings", value, 1073741823, "DefaultEmailSettings"); }
}
///<summary>
///<para>Logical Name: defaultmobileofflineprofileid</para>
///</summary>
[AttributeLogicalNameAttribute("defaultmobileofflineprofileid")]
public EntityReference DefaultMobileOfflineProfile
{
	get { return this.GetPropertyValue<EntityReference>("defaultmobileofflineprofileid"); }
	set { this.SetPropertyValue<EntityReference>("defaultmobileofflineprofileid", value, "DefaultMobileOfflineProfile"); }
}
/// <summary>
///Logical Name: defaultrecurrenceendrangetype
/// </summary>
[AttributeLogicalNameAttribute("defaultrecurrenceendrangetype")]
public eDefaultRecurrenceEndRangeType? DefaultRecurrenceEndRangeType
{
	get
	{
		if (DefaultRecurrenceEndRangeType_OptionSetValue != null) { return (eDefaultRecurrenceEndRangeType)DefaultRecurrenceEndRangeType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.DefaultRecurrenceEndRangeType_OptionSetValue = new OptionSetValue((int)value); }
		else this.DefaultRecurrenceEndRangeType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: defaultrecurrenceendrangetype</para>
///</summary>
[AttributeLogicalNameAttribute("defaultrecurrenceendrangetype")]
public OptionSetValue DefaultRecurrenceEndRangeType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("defaultrecurrenceendrangetype"); }
	set { this.SetPropertyValue<OptionSetValue>("defaultrecurrenceendrangetype", value, "DefaultRecurrenceEndRangeType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string DefaultRecurrenceEndRangeType_Text(IOrganizationService Service)
{
	return this.DefaultRecurrenceEndRangeType_OptionSetValue.GetOptionSetText(Service, this, "defaultrecurrenceendrangetype");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string DefaultRecurrenceEndRangeType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.DefaultRecurrenceEndRangeType_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: defaultthemedata</para>
///<para>Max Length: 1073741823 characters</para>
///</summary>
[AttributeLogicalNameAttribute("defaultthemedata")]
public string DefaultThemeData
{
	get { return this.GetPropertyValue<string>("defaultthemedata"); }
	set { this.SetPropertyValue("defaultthemedata", value, 1073741823, "DefaultThemeData"); }
}
///<summary>
///<para>Logical Name: delegatedadminuserid</para>
///</summary>
[AttributeLogicalNameAttribute("delegatedadminuserid")]
public Guid DelegatedAdmin
{
	get { return this.GetPropertyValue<Guid>("delegatedadminuserid"); }
	set { this.SetPropertyValue<Guid>("delegatedadminuserid", value, "DelegatedAdmin"); }
}
///<summary>
///<para>Logical Name: disabledreason</para>
///<para>Max Length: 500 characters</para>
///</summary>
[AttributeLogicalNameAttribute("disabledreason")]
public string DisabledReason
{
	get { return this.GetPropertyValue<string>("disabledreason"); }
}
/// <summary>
///Logical Name: discountcalculationmethod
/// </summary>
[AttributeLogicalNameAttribute("discountcalculationmethod")]
public eDiscountCalculationMethod? DiscountCalculationMethod
{
	get
	{
		if (DiscountCalculationMethod_OptionSetValue != null) { return (eDiscountCalculationMethod)DiscountCalculationMethod_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.DiscountCalculationMethod_OptionSetValue = new OptionSetValue((int)value); }
		else this.DiscountCalculationMethod_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: discountcalculationmethod</para>
///</summary>
[AttributeLogicalNameAttribute("discountcalculationmethod")]
public OptionSetValue DiscountCalculationMethod_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("discountcalculationmethod"); }
	set { this.SetPropertyValue<OptionSetValue>("discountcalculationmethod", value, "DiscountCalculationMethod_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string DiscountCalculationMethod_Text(IOrganizationService Service)
{
	return this.DiscountCalculationMethod_OptionSetValue.GetOptionSetText(Service, this, "discountcalculationmethod");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string DiscountCalculationMethod_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.DiscountCalculationMethod_OptionSetValue.Value);
}
/// <summary>
///Logical Name: currencydisplayoption
/// </summary>
[AttributeLogicalNameAttribute("currencydisplayoption")]
public eDisplayCurrenciesUsing? DisplayCurrenciesUsing
{
	get
	{
		if (DisplayCurrenciesUsing_OptionSetValue != null) { return (eDisplayCurrenciesUsing)DisplayCurrenciesUsing_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.DisplayCurrenciesUsing_OptionSetValue = new OptionSetValue((int)value); }
		else this.DisplayCurrenciesUsing_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: currencydisplayoption</para>
///</summary>
[AttributeLogicalNameAttribute("currencydisplayoption")]
public OptionSetValue DisplayCurrenciesUsing_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("currencydisplayoption"); }
	set { this.SetPropertyValue<OptionSetValue>("currencydisplayoption", value, "DisplayCurrenciesUsing_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string DisplayCurrenciesUsing_Text(IOrganizationService Service)
{
	return this.DisplayCurrenciesUsing_OptionSetValue.GetOptionSetText(Service, this, "currencydisplayoption");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string DisplayCurrenciesUsing_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.DisplayCurrenciesUsing_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: displaynavigationtour</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("displaynavigationtour")]
public bool? DisplayNavigationTour
{
	get { return this.GetPropertyValue<bool?>("displaynavigationtour"); }
	set { this.SetPropertyValue<bool?>("displaynavigationtour", value, "DisplayNavigationTour"); }
}
///<summary>
///<para>Logical Name: emailconnectionchannel</para>
///</summary>
[AttributeLogicalNameAttribute("emailconnectionchannel")]
public OptionSetValue EmailConnectionChannel
{
	get { return this.GetPropertyValue<OptionSetValue>("emailconnectionchannel"); }
	set { this.SetPropertyValue<OptionSetValue>("emailconnectionchannel", value, "EmailConnectionChannel"); }
}
///<summary>
///<para>Logical Name: emailsendpollingperiod</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("emailsendpollingperiod")]
public int? EmailSendPollingFrequency
{
	get { return this.GetPropertyValue<int?>("emailsendpollingperiod"); }
	set { this.SetPropertyValue("emailsendpollingperiod", (int?)value, (int)-2147483648, (int)2147483647, "EmailSendPollingFrequency"); }
}
///<summary>
///<para>Logical Name: defaultemailserverprofileid</para>
///</summary>
[AttributeLogicalNameAttribute("defaultemailserverprofileid")]
public EntityReference EmailServerProfile
{
	get { return this.GetPropertyValue<EntityReference>("defaultemailserverprofileid"); }
	set { this.SetPropertyValue<EntityReference>("defaultemailserverprofileid", value, "EmailServerProfile"); }
}
///<summary>
///<para>Logical Name: isactioncardenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isactioncardenabled")]
public bool? EnableActionCardForThisOrganization
{
	get { return this.GetPropertyValue<bool?>("isactioncardenabled"); }
	set { this.SetPropertyValue<bool?>("isactioncardenabled", value, "EnableActionCardForThisOrganization"); }
}
///<summary>
///<para>Logical Name: isdelveactionhubintegrationenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isdelveactionhubintegrationenabled")]
public bool? EnableActionHubForThisOrganization
{
	get { return this.GetPropertyValue<bool?>("isdelveactionhubintegrationenabled"); }
	set { this.SetPropertyValue<bool?>("isdelveactionhubintegrationenabled", value, "EnableActionHubForThisOrganization"); }
}
///<summary>
///<para>Logical Name: createproductswithoutparentinactivestate</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("createproductswithoutparentinactivestate")]
public bool? EnableActiveInitialProductState
{
	get { return this.GetPropertyValue<bool?>("createproductswithoutparentinactivestate"); }
	set { this.SetPropertyValue<bool?>("createproductswithoutparentinactivestate", value, "EnableActiveInitialProductState"); }
}
///<summary>
///<para>Logical Name: appdesignerexperienceenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("appdesignerexperienceenabled")]
public bool? EnableAppDesignerExperienceForThisOrganization
{
	get { return this.GetPropertyValue<bool?>("appdesignerexperienceenabled"); }
	set { this.SetPropertyValue<bool?>("appdesignerexperienceenabled", value, "EnableAppDesignerExperienceForThisOrganization"); }
}
///<summary>
///<para>Logical Name: isautodatacaptureenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isautodatacaptureenabled")]
public bool? EnableAutoCaptureForThisOrganization
{
	get { return this.GetPropertyValue<bool?>("isautodatacaptureenabled"); }
	set { this.SetPropertyValue<bool?>("isautodatacaptureenabled", value, "EnableAutoCaptureForThisOrganization"); }
}
///<summary>
///<para>Logical Name: ispreviewforautocaptureenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("ispreviewforautocaptureenabled")]
public bool? EnableAutoCaptureForThisOrganizationAtPreviewSettings
{
	get { return this.GetPropertyValue<bool?>("ispreviewforautocaptureenabled"); }
	set { this.SetPropertyValue<bool?>("ispreviewforautocaptureenabled", value, "EnableAutoCaptureForThisOrganizationAtPreviewSettings"); }
}
///<summary>
///<para>Logical Name: cortanaproactiveexperienceenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("cortanaproactiveexperienceenabled")]
public bool? EnableCortanaProactiveExperienceFlowProcessesForThisOrganization
{
	get { return this.GetPropertyValue<bool?>("cortanaproactiveexperienceenabled"); }
	set { this.SetPropertyValue<bool?>("cortanaproactiveexperienceenabled", value, "EnableCortanaProactiveExperienceFlowProcessesForThisOrganization"); }
}
///<summary>
///<para>Logical Name: isexternalsearchindexenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isexternalsearchindexenabled")]
public bool? EnableExternalSearchDataSyncing
{
	get { return this.GetPropertyValue<bool?>("isexternalsearchindexenabled"); }
	set { this.SetPropertyValue<bool?>("isexternalsearchindexenabled", value, "EnableExternalSearchDataSyncing"); }
}
///<summary>
///<para>Logical Name: isfulltextsearchenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isfulltextsearchenabled")]
public bool? EnableFull_textSearchForQuickFind
{
	get { return this.GetPropertyValue<bool?>("isfulltextsearchenabled"); }
	set { this.SetPropertyValue<bool?>("isfulltextsearchenabled", value, "EnableFull_textSearchForQuickFind"); }
}
///<summary>
///<para>Logical Name: ishierarchicalsecuritymodelenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("ishierarchicalsecuritymodelenabled")]
public bool? EnableHierarchicalSecurityModel
{
	get { return this.GetPropertyValue<bool?>("ishierarchicalsecuritymodelenabled"); }
	set { this.SetPropertyValue<bool?>("ishierarchicalsecuritymodelenabled", value, "EnableHierarchicalSecurityModel"); }
}
///<summary>
///<para>Logical Name: enablebingmapsintegration</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("enablebingmapsintegration")]
public bool? EnableIntegrationWithBingMaps
{
	get { return this.GetPropertyValue<bool?>("enablebingmapsintegration"); }
	set { this.SetPropertyValue<bool?>("enablebingmapsintegration", value, "EnableIntegrationWithBingMaps"); }
}
///<summary>
///<para>Logical Name: enablemicrosoftflowintegration</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("enablemicrosoftflowintegration")]
public bool? EnableIntegrationWithMicrosoftFlow
{
	get { return this.GetPropertyValue<bool?>("enablemicrosoftflowintegration"); }
	set { this.SetPropertyValue<bool?>("enablemicrosoftflowintegration", value, "EnableIntegrationWithMicrosoftFlow"); }
}
///<summary>
///<para>Logical Name: enablelpauthoring</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("enablelpauthoring")]
public bool? EnableLearningPathAuthoring
{
	get { return this.GetPropertyValue<bool?>("enablelpauthoring"); }
	set { this.SetPropertyValue<bool?>("enablelpauthoring", value, "EnableLearningPathAuthoring"); }
}
///<summary>
///<para>Logical Name: ismobileofflineenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("ismobileofflineenabled")]
public bool? EnableMobileOfflineForThisOrganization
{
	get { return this.GetPropertyValue<bool?>("ismobileofflineenabled"); }
	set { this.SetPropertyValue<bool?>("ismobileofflineenabled", value, "EnableMobileOfflineForThisOrganization"); }
}
///<summary>
///<para>Logical Name: officeappsautodeploymentenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("officeappsautodeploymentenabled")]
public bool? EnableOfficeAppsAutoDeploymentForThisOrganization
{
	get { return this.GetPropertyValue<bool?>("officeappsautodeploymentenabled"); }
	set { this.SetPropertyValue<bool?>("officeappsautodeploymentenabled", value, "EnableOfficeAppsAutoDeploymentForThisOrganization"); }
}
///<summary>
///<para>Logical Name: isofficegraphenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isofficegraphenabled")]
public bool? EnableOfficeGraphForThisOrganization
{
	get { return this.GetPropertyValue<bool?>("isofficegraphenabled"); }
	set { this.SetPropertyValue<bool?>("isofficegraphenabled", value, "EnableOfficeGraphForThisOrganization"); }
}
///<summary>
///<para>Logical Name: isonedriveenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isonedriveenabled")]
public bool? EnableOneDriveForThisOrganization
{
	get { return this.GetPropertyValue<bool?>("isonedriveenabled"); }
	set { this.SetPropertyValue<bool?>("isonedriveenabled", value, "EnableOneDriveForThisOrganization"); }
}
///<summary>
///<para>Logical Name: oobpricecalculationenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("oobpricecalculationenabled")]
public bool? EnableOOBPriceCalculation
{
	get { return this.GetPropertyValue<bool?>("oobpricecalculationenabled"); }
	set { this.SetPropertyValue<bool?>("oobpricecalculationenabled", value, "EnableOOBPriceCalculation"); }
}
///<summary>
///<para>Logical Name: isdefaultcountrycodecheckenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isdefaultcountrycodecheckenabled")]
public bool? EnableOrDisableCountryCodeSelection
{
	get { return this.GetPropertyValue<bool?>("isdefaultcountrycodecheckenabled"); }
	set { this.SetPropertyValue<bool?>("isdefaultcountrycodecheckenabled", value, "EnableOrDisableCountryCodeSelection"); }
}
///<summary>
///<para>Logical Name: orginsightsenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("orginsightsenabled")]
public bool? EnableOrgInsightsForThisOrganization
{
	get { return this.GetPropertyValue<bool?>("orginsightsenabled"); }
	set { this.SetPropertyValue<bool?>("orginsightsenabled", value, "EnableOrgInsightsForThisOrganization"); }
}
///<summary>
///<para>Logical Name: powerbifeatureenabled</para>
///<para>True = Enable</para>
///<para>False = Disable</para>
///</summary>
[AttributeLogicalNameAttribute("powerbifeatureenabled")]
public bool? EnablePowerBIFeatureForThisOrganization
{
	get { return this.GetPropertyValue<bool?>("powerbifeatureenabled"); }
	set { this.SetPropertyValue<bool?>("powerbifeatureenabled", value, "EnablePowerBIFeatureForThisOrganization"); }
}
///<summary>
///<para>Logical Name: ispreviewenabledforactioncard</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("ispreviewenabledforactioncard")]
public bool? EnablePreviewActionCardFeatureForThisOrganization
{
	get { return this.GetPropertyValue<bool?>("ispreviewenabledforactioncard"); }
	set { this.SetPropertyValue<bool?>("ispreviewenabledforactioncard", value, "EnablePreviewActionCardFeatureForThisOrganization"); }
}
///<summary>
///<para>Logical Name: enablepricingoncreate</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("enablepricingoncreate")]
public bool? EnablePricingOnCreate
{
	get { return this.GetPropertyValue<bool?>("enablepricingoncreate"); }
	set { this.SetPropertyValue<bool?>("enablepricingoncreate", value, "EnablePricingOnCreate"); }
}
///<summary>
///<para>Logical Name: productrecommendationsenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("productrecommendationsenabled")]
public bool? EnableProductRecommendationsForThisOrganization
{
	get { return this.GetPropertyValue<bool?>("productrecommendationsenabled"); }
	set { this.SetPropertyValue<bool?>("productrecommendationsenabled", value, "EnableProductRecommendationsForThisOrganization"); }
}
///<summary>
///<para>Logical Name: isactivityanalysisenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isactivityanalysisenabled")]
public bool? EnableRelationshipAnalyticsForThisOrganization
{
	get { return this.GetPropertyValue<bool?>("isactivityanalysisenabled"); }
	set { this.SetPropertyValue<bool?>("isactivityanalysisenabled", value, "EnableRelationshipAnalyticsForThisOrganization"); }
}
///<summary>
///<para>Logical Name: isrelationshipinsightsenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isrelationshipinsightsenabled")]
public bool? EnableRelationshipInsightsForThisOrganization
{
	get { return this.GetPropertyValue<bool?>("isrelationshipinsightsenabled"); }
	set { this.SetPropertyValue<bool?>("isrelationshipinsightsenabled", value, "EnableRelationshipInsightsForThisOrganization"); }
}
///<summary>
///<para>Logical Name: enablesmartmatching</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("enablesmartmatching")]
public bool? EnableSmartMatching
{
	get { return this.GetPropertyValue<bool?>("enablesmartmatching"); }
	set { this.SetPropertyValue<bool?>("enablesmartmatching", value, "EnableSmartMatching"); }
}
///<summary>
///<para>Logical Name: taskbasedflowenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("taskbasedflowenabled")]
public bool? EnableTaskFlowProcessesForThisOrganization
{
	get { return this.GetPropertyValue<bool?>("taskbasedflowenabled"); }
	set { this.SetPropertyValue<bool?>("taskbasedflowenabled", value, "EnableTaskFlowProcessesForThisOrganization"); }
}
///<summary>
///<para>Logical Name: textanalyticsenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("textanalyticsenabled")]
public bool? EnableTextAnalyticsForThisOrganization
{
	get { return this.GetPropertyValue<bool?>("textanalyticsenabled"); }
	set { this.SetPropertyValue<bool?>("textanalyticsenabled", value, "EnableTextAnalyticsForThisOrganization"); }
}
///<summary>
///<para>Logical Name: entityimageid</para>
///</summary>
[AttributeLogicalNameAttribute("entityimageid")]
public Guid EntityImageId
{
	get { return this.GetPropertyValue<Guid>("entityimageid"); }
}
///<summary>
///<para>Logical Name: rierrorstatus</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("rierrorstatus")]
public int? ErrorStatusOfRelationshipInsightsProvisioning
{
	get { return this.GetPropertyValue<int?>("rierrorstatus"); }
	set { this.SetPropertyValue("rierrorstatus", (int?)value, (int)0, (int)2147483647, "ErrorStatusOfRelationshipInsightsProvisioning"); }
}
///<summary>
///<para>Logical Name: incomingemailexchangeemailretrievalbatchsize</para>
///<para>Minimum Value: 1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("incomingemailexchangeemailretrievalbatchsize")]
public int? ExchangeEmailRetrievalBatchSize
{
	get { return this.GetPropertyValue<int?>("incomingemailexchangeemailretrievalbatchsize"); }
	set { this.SetPropertyValue("incomingemailexchangeemailretrievalbatchsize", (int?)value, (int)1, (int)2147483647, "ExchangeEmailRetrievalBatchSize"); }
}
///<summary>
///<para>Logical Name: externalbaseurl</para>
///<para>Max Length: 500 characters</para>
///</summary>
[AttributeLogicalNameAttribute("externalbaseurl")]
public string ExternalBaseURL
{
	get { return this.GetPropertyValue<string>("externalbaseurl"); }
	set { this.SetPropertyValue("externalbaseurl", value, 500, "ExternalBaseURL"); }
}
///<summary>
///<para>Logical Name: externalpartycorrelationkeys</para>
///<para>Max Length: 1073741823 characters</para>
///</summary>
[AttributeLogicalNameAttribute("externalpartycorrelationkeys")]
public string ExternalPartyEnabledEntitiesCorrelationKeys
{
	get { return this.GetPropertyValue<string>("externalpartycorrelationkeys"); }
	set { this.SetPropertyValue("externalpartycorrelationkeys", value, 1073741823, "ExternalPartyEnabledEntitiesCorrelationKeys"); }
}
///<summary>
///<para>Logical Name: externalpartyentitysettings</para>
///<para>Max Length: 1073741823 characters</para>
///</summary>
[AttributeLogicalNameAttribute("externalpartyentitysettings")]
public string ExternalPartyEnabledEntitiesSettings_ForInternalUseOnly
{
	get { return this.GetPropertyValue<string>("externalpartyentitysettings"); }
	set { this.SetPropertyValue("externalpartyentitysettings", value, 1073741823, "ExternalPartyEnabledEntitiesSettings_ForInternalUseOnly"); }
}
///<summary>
///<para>Logical Name: featureset</para>
///<para>Max Length: 1073741823 characters</para>
///</summary>
[AttributeLogicalNameAttribute("featureset")]
public string FeatureSet
{
	get { return this.GetPropertyValue<string>("featureset"); }
	set { this.SetPropertyValue("featureset", value, 1073741823, "FeatureSet"); }
}
///<summary>
///<para>Logical Name: fiscalcalendarstart</para>
///</summary>
[AttributeLogicalNameAttribute("fiscalcalendarstart")]
public DateTime? FiscalCalendarStart
{
	get { return this.GetPropertyValue<DateTime?>("fiscalcalendarstart"); }
	set { this.SetPropertyValue<DateTime?>("fiscalcalendarstart", value, "FiscalCalendarStart"); }
}
///<summary>
///<para>Logical Name: fiscalperiodformat</para>
///<para>Max Length: 25 characters</para>
///</summary>
[AttributeLogicalNameAttribute("fiscalperiodformat")]
public string FiscalPeriodFormat
{
	get { return this.GetPropertyValue<string>("fiscalperiodformat"); }
	set { this.SetPropertyValue("fiscalperiodformat", value, 25, "FiscalPeriodFormat"); }
}
///<summary>
///<para>Logical Name: fiscalperiodtype</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("fiscalperiodtype")]
public int? FiscalPeriodType
{
	get { return this.GetPropertyValue<int?>("fiscalperiodtype"); }
	set { this.SetPropertyValue("fiscalperiodtype", (int?)value, (int)-2147483648, (int)2147483647, "FiscalPeriodType"); }
}
///<summary>
///<para>Logical Name: fiscalyeardisplaycode</para>
///</summary>
[AttributeLogicalNameAttribute("fiscalyeardisplaycode")]
public int? FiscalYearDisplay
{
	get { return this.GetPropertyValue<int?>("fiscalyeardisplaycode"); }
	set { this.SetPropertyValue<int?>("fiscalyeardisplaycode", value, "FiscalYearDisplay"); }
}
///<summary>
///<para>Logical Name: fiscalyearformat</para>
///<para>Max Length: 25 characters</para>
///</summary>
[AttributeLogicalNameAttribute("fiscalyearformat")]
public string FiscalYearFormat
{
	get { return this.GetPropertyValue<string>("fiscalyearformat"); }
	set { this.SetPropertyValue("fiscalyearformat", value, 25, "FiscalYearFormat"); }
}
/// <summary>
///Logical Name: fiscalyearformatyear
/// </summary>
[AttributeLogicalNameAttribute("fiscalyearformatyear")]
public eFiscalYearFormat? FiscalYearFormatYear
{
	get
	{
		if (FiscalYearFormatYear_OptionSetValue != null) { return (eFiscalYearFormat)FiscalYearFormatYear_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.FiscalYearFormatYear_OptionSetValue = new OptionSetValue((int)value); }
		else this.FiscalYearFormatYear_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: fiscalyearformatyear</para>
///</summary>
[AttributeLogicalNameAttribute("fiscalyearformatyear")]
public OptionSetValue FiscalYearFormatYear_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("fiscalyearformatyear"); }
	set { this.SetPropertyValue<OptionSetValue>("fiscalyearformatyear", value, "FiscalYearFormatYear_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string FiscalYearFormatYear_Text(IOrganizationService Service)
{
	return this.FiscalYearFormatYear_OptionSetValue.GetOptionSetText(Service, this, "fiscalyearformatyear");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string FiscalYearFormatYear_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.FiscalYearFormatYear_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: fiscalyearperiodconnect</para>
///<para>Max Length: 5 characters</para>
///</summary>
[AttributeLogicalNameAttribute("fiscalyearperiodconnect")]
public string FiscalYearPeriodConnector
{
	get { return this.GetPropertyValue<string>("fiscalyearperiodconnect"); }
	set { this.SetPropertyValue("fiscalyearperiodconnect", value, 5, "FiscalYearPeriodConnector"); }
}
///<summary>
///<para>Logical Name: postmessagewhitelistdomains</para>
///<para>Max Length: 500 characters</para>
///</summary>
[AttributeLogicalNameAttribute("postmessagewhitelistdomains")]
public string ForInternalUseOnly
{
	get { return this.GetPropertyValue<string>("postmessagewhitelistdomains"); }
	set { this.SetPropertyValue("postmessagewhitelistdomains", value, 500, "ForInternalUseOnly"); }
}
///<summary>
///<para>Logical Name: azureschedulerjobcollectionname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("azureschedulerjobcollectionname")]
public string ForInternalUseOnly2
{
	get { return this.GetPropertyValue<string>("azureschedulerjobcollectionname"); }
	set { this.SetPropertyValue("azureschedulerjobcollectionname", value, 100, "ForInternalUseOnly2"); }
}
///<summary>
///<para>Logical Name: widgetproperties</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("widgetproperties")]
public string ForInternalUseOnly3
{
	get { return this.GetPropertyValue<string>("widgetproperties"); }
	set { this.SetPropertyValue("widgetproperties", value, 100, "ForInternalUseOnly3"); }
}
/// <summary>
///Logical Name: fiscalperiodformatperiod
/// </summary>
[AttributeLogicalNameAttribute("fiscalperiodformatperiod")]
public eFiscalPeriodFormat? FormatForFiscalPeriod
{
	get
	{
		if (FormatForFiscalPeriod_OptionSetValue != null) { return (eFiscalPeriodFormat)FormatForFiscalPeriod_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.FormatForFiscalPeriod_OptionSetValue = new OptionSetValue((int)value); }
		else this.FormatForFiscalPeriod_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: fiscalperiodformatperiod</para>
///</summary>
[AttributeLogicalNameAttribute("fiscalperiodformatperiod")]
public OptionSetValue FormatForFiscalPeriod_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("fiscalperiodformatperiod"); }
	set { this.SetPropertyValue<OptionSetValue>("fiscalperiodformatperiod", value, "FormatForFiscalPeriod_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string FormatForFiscalPeriod_Text(IOrganizationService Service)
{
	return this.FormatForFiscalPeriod_OptionSetValue.GetOptionSetText(Service, this, "fiscalperiodformatperiod");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string FormatForFiscalPeriod_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.FormatForFiscalPeriod_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: fullnameconventioncode</para>
///</summary>
[AttributeLogicalNameAttribute("fullnameconventioncode")]
public OptionSetValue FullNameDisplayOrder
{
	get { return this.GetPropertyValue<OptionSetValue>("fullnameconventioncode"); }
	set { this.SetPropertyValue<OptionSetValue>("fullnameconventioncode", value, "FullNameDisplayOrder"); }
}
///<summary>
///<para>Logical Name: futureexpansionwindow</para>
///<para>Minimum Value: 1</para>
///<para>Maximum Value: 140</para>
///</summary>
[AttributeLogicalNameAttribute("futureexpansionwindow")]
public int? FutureExpansionWindow
{
	get { return this.GetPropertyValue<int?>("futureexpansionwindow"); }
	set { this.SetPropertyValue("futureexpansionwindow", (int?)value, (int)1, (int)140, "FutureExpansionWindow"); }
}
///<summary>
///<para>Logical Name: generatealertsforerrors</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("generatealertsforerrors")]
public bool? GenerateAlertsForErrors
{
	get { return this.GetPropertyValue<bool?>("generatealertsforerrors"); }
	set { this.SetPropertyValue<bool?>("generatealertsforerrors", value, "GenerateAlertsForErrors"); }
}
///<summary>
///<para>Logical Name: generatealertsforinformation</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("generatealertsforinformation")]
public bool? GenerateAlertsForInformation
{
	get { return this.GetPropertyValue<bool?>("generatealertsforinformation"); }
	set { this.SetPropertyValue<bool?>("generatealertsforinformation", value, "GenerateAlertsForInformation"); }
}
///<summary>
///<para>Logical Name: generatealertsforwarnings</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("generatealertsforwarnings")]
public bool? GenerateAlertsForWarnings
{
	get { return this.GetPropertyValue<bool?>("generatealertsforwarnings"); }
	set { this.SetPropertyValue<bool?>("generatealertsforwarnings", value, "GenerateAlertsForWarnings"); }
}
///<summary>
///<para>Logical Name: globalhelpurl</para>
///<para>Max Length: 500 characters</para>
///</summary>
[AttributeLogicalNameAttribute("globalhelpurl")]
public string GlobalHelpURL
{
	get { return this.GetPropertyValue<string>("globalhelpurl"); }
	set { this.SetPropertyValue("globalhelpurl", value, 500, "GlobalHelpURL"); }
}
///<summary>
///<para>Logical Name: grantaccesstonetworkservice</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("grantaccesstonetworkservice")]
public bool? GrantAccessToNetworkService
{
	get { return this.GetPropertyValue<bool?>("grantaccesstonetworkservice"); }
	set { this.SetPropertyValue<bool?>("grantaccesstonetworkservice", value, "GrantAccessToNetworkService"); }
}
///<summary>
///<para>Logical Name: hashdeltasubjectcount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("hashdeltasubjectcount")]
public int? HashDeltaSubjectCount
{
	get { return this.GetPropertyValue<int?>("hashdeltasubjectcount"); }
	set { this.SetPropertyValue("hashdeltasubjectcount", (int?)value, (int)0, (int)2147483647, "HashDeltaSubjectCount"); }
}
///<summary>
///<para>Logical Name: hashfilterkeywords</para>
///<para>Max Length: 1073741823 characters</para>
///</summary>
[AttributeLogicalNameAttribute("hashfilterkeywords")]
public string HashFilterKeywords
{
	get { return this.GetPropertyValue<string>("hashfilterkeywords"); }
	set { this.SetPropertyValue("hashfilterkeywords", value, 1073741823, "HashFilterKeywords"); }
}
///<summary>
///<para>Logical Name: hashmaxcount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("hashmaxcount")]
public int? HashMaxCount
{
	get { return this.GetPropertyValue<int?>("hashmaxcount"); }
	set { this.SetPropertyValue("hashmaxcount", (int?)value, (int)0, (int)2147483647, "HashMaxCount"); }
}
///<summary>
///<para>Logical Name: hashminaddresscount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("hashminaddresscount")]
public int? HashMinAddressCount
{
	get { return this.GetPropertyValue<int?>("hashminaddresscount"); }
	set { this.SetPropertyValue("hashminaddresscount", (int?)value, (int)0, (int)2147483647, "HashMinAddressCount"); }
}
///<summary>
///<para>Logical Name: highcontrastthemedata</para>
///<para>Max Length: 1073741823 characters</para>
///</summary>
[AttributeLogicalNameAttribute("highcontrastthemedata")]
public string HighContrastThemeData
{
	get { return this.GetPropertyValue<string>("highcontrastthemedata"); }
	set { this.SetPropertyValue("highcontrastthemedata", value, 1073741823, "HighContrastThemeData"); }
}
///<summary>
///<para>Logical Name: ignoreinternalemail</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("ignoreinternalemail")]
public bool? IgnoreInternalEmail
{
	get { return this.GetPropertyValue<bool?>("ignoreinternalemail"); }
	set { this.SetPropertyValue<bool?>("ignoreinternalemail", value, "IgnoreInternalEmail"); }
}
///<summary>
///<para>Logical Name: initialversion</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("initialversion")]
public string InitialVersion
{
	get { return this.GetPropertyValue<string>("initialversion"); }
	set { this.SetPropertyValue("initialversion", value, 20, "InitialVersion"); }
}
///<summary>
///<para>Logical Name: integrationuserid</para>
///</summary>
[AttributeLogicalNameAttribute("integrationuserid")]
public Guid IntegrationUser
{
	get { return this.GetPropertyValue<Guid>("integrationuserid"); }
	set { this.SetPropertyValue<Guid>("integrationuserid", value, "IntegrationUser"); }
}
///<summary>
///<para>Logical Name: yammerpostmethod</para>
///</summary>
[AttributeLogicalNameAttribute("yammerpostmethod")]
public OptionSetValue InternalUseOnly
{
	get { return this.GetPropertyValue<OptionSetValue>("yammerpostmethod"); }
	set { this.SetPropertyValue<OptionSetValue>("yammerpostmethod", value, "InternalUseOnly"); }
}
///<summary>
///<para>Logical Name: invoiceprefix</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("invoiceprefix")]
public string InvoicePrefix
{
	get { return this.GetPropertyValue<string>("invoiceprefix"); }
	set { this.SetPropertyValue("invoiceprefix", value, 20, "InvoicePrefix"); }
}
///<summary>
///<para>Logical Name: globalappendurlparametersenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("globalappendurlparametersenabled")]
public bool? IsAppendUrlParametersEnabled
{
	get { return this.GetPropertyValue<bool?>("globalappendurlparametersenabled"); }
	set { this.SetPropertyValue<bool?>("globalappendurlparametersenabled", value, "IsAppendUrlParametersEnabled"); }
}
///<summary>
///<para>Logical Name: isappmode</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isappmode")]
public bool? IsApplicationModeEnabled
{
	get { return this.GetPropertyValue<bool?>("isappmode"); }
	set { this.SetPropertyValue<bool?>("isappmode", value, "IsApplicationModeEnabled"); }
}
///<summary>
///<para>Logical Name: requireapprovalforqueueemail</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("requireapprovalforqueueemail")]
public bool? IsApprovalForQueueEmailRequired
{
	get { return this.GetPropertyValue<bool?>("requireapprovalforqueueemail"); }
	set { this.SetPropertyValue<bool?>("requireapprovalforqueueemail", value, "IsApprovalForQueueEmailRequired"); }
}
///<summary>
///<para>Logical Name: requireapprovalforuseremail</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("requireapprovalforuseremail")]
public bool? IsApprovalForUserEmailRequired
{
	get { return this.GetPropertyValue<bool?>("requireapprovalforuseremail"); }
	set { this.SetPropertyValue<bool?>("requireapprovalforuseremail", value, "IsApprovalForUserEmailRequired"); }
}
///<summary>
///<para>Logical Name: isassignedtaskssyncenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isassignedtaskssyncenabled")]
public bool? IsAssignedTasksSyncEnabled
{
	get { return this.GetPropertyValue<bool?>("isassignedtaskssyncenabled"); }
	set { this.SetPropertyValue<bool?>("isassignedtaskssyncenabled", value, "IsAssignedTasksSyncEnabled"); }
}
///<summary>
///<para>Logical Name: isappointmentattachmentsyncenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isappointmentattachmentsyncenabled")]
public bool? IsAttachmentSyncEnabled
{
	get { return this.GetPropertyValue<bool?>("isappointmentattachmentsyncenabled"); }
	set { this.SetPropertyValue<bool?>("isappointmentattachmentsyncenabled", value, "IsAttachmentSyncEnabled"); }
}
///<summary>
///<para>Logical Name: isauditenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isauditenabled")]
public bool? IsAuditingEnabled
{
	get { return this.GetPropertyValue<bool?>("isauditenabled"); }
	set { this.SetPropertyValue<bool?>("isauditenabled", value, "IsAuditingEnabled"); }
}
///<summary>
///<para>Logical Name: autoapplysla</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("autoapplysla")]
public bool? IsAuto_applySLAAfterManuallyOver_riding
{
	get { return this.GetPropertyValue<bool?>("autoapplysla"); }
	set { this.SetPropertyValue<bool?>("autoapplysla", value, "IsAuto_applySLAAfterManuallyOver_riding"); }
}
///<summary>
///<para>Logical Name: isconflictdetectionenabledformobileclient</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isconflictdetectionenabledformobileclient")]
public bool? IsConflictDetectionForMobileClientEnabled
{
	get { return this.GetPropertyValue<bool?>("isconflictdetectionenabledformobileclient"); }
	set { this.SetPropertyValue<bool?>("isconflictdetectionenabledformobileclient", value, "IsConflictDetectionForMobileClientEnabled"); }
}
///<summary>
///<para>Logical Name: globalhelpurlenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("globalhelpurlenabled")]
public bool? IsCustomizableGlobalHelpEnabled
{
	get { return this.GetPropertyValue<bool?>("globalhelpurlenabled"); }
	set { this.SetPropertyValue<bool?>("globalhelpurlenabled", value, "IsCustomizableGlobalHelpEnabled"); }
}
///<summary>
///<para>Logical Name: isdelegateaccessenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isdelegateaccessenabled")]
public bool? IsDelegationAccessEnabled
{
	get { return this.GetPropertyValue<bool?>("isdelegateaccessenabled"); }
	set { this.SetPropertyValue<bool?>("isdelegateaccessenabled", value, "IsDelegationAccessEnabled"); }
}
///<summary>
///<para>Logical Name: isduplicatedetectionenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isduplicatedetectionenabled")]
public bool? IsDuplicateDetectionEnabled
{
	get { return this.GetPropertyValue<bool?>("isduplicatedetectionenabled"); }
	set { this.SetPropertyValue<bool?>("isduplicatedetectionenabled", value, "IsDuplicateDetectionEnabled"); }
}
///<summary>
///<para>Logical Name: isduplicatedetectionenabledforimport</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isduplicatedetectionenabledforimport")]
public bool? IsDuplicateDetectionEnabledForImport
{
	get { return this.GetPropertyValue<bool?>("isduplicatedetectionenabledforimport"); }
	set { this.SetPropertyValue<bool?>("isduplicatedetectionenabledforimport", value, "IsDuplicateDetectionEnabledForImport"); }
}
///<summary>
///<para>Logical Name: isduplicatedetectionenabledforofflinesync</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isduplicatedetectionenabledforofflinesync")]
public bool? IsDuplicateDetectionEnabledForOfflineSynchronization
{
	get { return this.GetPropertyValue<bool?>("isduplicatedetectionenabledforofflinesync"); }
	set { this.SetPropertyValue<bool?>("isduplicatedetectionenabledforofflinesync", value, "IsDuplicateDetectionEnabledForOfflineSynchronization"); }
}
///<summary>
///<para>Logical Name: isduplicatedetectionenabledforonlinecreateupdate</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isduplicatedetectionenabledforonlinecreateupdate")]
public bool? IsDuplicateDetectionEnabledForOnlineCreate_Update
{
	get { return this.GetPropertyValue<bool?>("isduplicatedetectionenabledforonlinecreateupdate"); }
	set { this.SetPropertyValue<bool?>("isduplicatedetectionenabledforonlinecreateupdate", value, "IsDuplicateDetectionEnabledForOnlineCreate_Update"); }
}
///<summary>
///<para>Logical Name: isemailserverprofilecontentfilteringenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isemailserverprofilecontentfilteringenabled")]
public bool? IsEmailServerProfileContentFilteringEnabled
{
	get { return this.GetPropertyValue<bool?>("isemailserverprofilecontentfilteringenabled"); }
	set { this.SetPropertyValue<bool?>("isemailserverprofilecontentfilteringenabled", value, "IsEmailServerProfileContentFilteringEnabled"); }
}
///<summary>
///<para>Logical Name: isfiscalperiodmonthbased</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isfiscalperiodmonthbased")]
public bool? IsFiscalPeriodMonthly
{
	get { return this.GetPropertyValue<bool?>("isfiscalperiodmonthbased"); }
	set { this.SetPropertyValue<bool?>("isfiscalperiodmonthbased", value, "IsFiscalPeriodMonthly"); }
}
///<summary>
///<para>Logical Name: fiscalsettingsupdated</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("fiscalsettingsupdated")]
public bool? IsFiscalSettingsUpdated
{
	get { return this.GetPropertyValue<bool?>("fiscalsettingsupdated"); }
}
///<summary>
///<para>Logical Name: isfolderbasedtrackingenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isfolderbasedtrackingenabled")]
public bool? IsFolderBasedTrackingEnabled
{
	get { return this.GetPropertyValue<bool?>("isfolderbasedtrackingenabled"); }
	set { this.SetPropertyValue<bool?>("isfolderbasedtrackingenabled", value, "IsFolderBasedTrackingEnabled"); }
}
///<summary>
///<para>Logical Name: getstartedpanecontentenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("getstartedpanecontentenabled")]
public bool? IsGetStartedPaneContentEnabled
{
	get { return this.GetPropertyValue<bool?>("getstartedpanecontentenabled"); }
	set { this.SetPropertyValue<bool?>("getstartedpanecontentenabled", value, "IsGetStartedPaneContentEnabled"); }
}
///<summary>
///<para>Logical Name: ismailboxforcedunlockingenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("ismailboxforcedunlockingenabled")]
public bool? IsMailboxForcedUnlockingEnabled
{
	get { return this.GetPropertyValue<bool?>("ismailboxforcedunlockingenabled"); }
	set { this.SetPropertyValue<bool?>("ismailboxforcedunlockingenabled", value, "IsMailboxForcedUnlockingEnabled"); }
}
///<summary>
///<para>Logical Name: ismailboxinactivebackoffenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("ismailboxinactivebackoffenabled")]
public bool? IsMailboxKeepAliveEnabled
{
	get { return this.GetPropertyValue<bool?>("ismailboxinactivebackoffenabled"); }
	set { this.SetPropertyValue<bool?>("ismailboxinactivebackoffenabled", value, "IsMailboxKeepAliveEnabled"); }
}
///<summary>
///<para>Logical Name: iscontactmailingaddresssyncenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("iscontactmailingaddresssyncenabled")]
public bool? IsMailingAddressSyncEnabled
{
	get { return this.GetPropertyValue<bool?>("iscontactmailingaddresssyncenabled"); }
	set { this.SetPropertyValue<bool?>("iscontactmailingaddresssyncenabled", value, "IsMailingAddressSyncEnabled"); }
}
///<summary>
///<para>Logical Name: ismobileclientondemandsyncenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("ismobileclientondemandsyncenabled")]
public bool? IsMobileClientOnDemandSyncEnabled
{
	get { return this.GetPropertyValue<bool?>("ismobileclientondemandsyncenabled"); }
	set { this.SetPropertyValue<bool?>("ismobileclientondemandsyncenabled", value, "IsMobileClientOnDemandSyncEnabled"); }
}
///<summary>
///<para>Logical Name: isdisabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isdisabled")]
public bool? IsOrganizationDisabled
{
	get { return this.GetPropertyValue<bool?>("isdisabled"); }
}
///<summary>
///<para>Logical Name: issopintegrationenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("issopintegrationenabled")]
public bool? IsSalesOrderIntegrationEnabled
{
	get { return this.GetPropertyValue<bool?>("issopintegrationenabled"); }
	set { this.SetPropertyValue<bool?>("issopintegrationenabled", value, "IsSalesOrderIntegrationEnabled"); }
}
///<summary>
///<para>Logical Name: suppresssla</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("suppresssla")]
public bool? IsSLASuppressed
{
	get { return this.GetPropertyValue<bool?>("suppresssla"); }
	set { this.SetPropertyValue<bool?>("suppresssla", value, "IsSLASuppressed"); }
}
///<summary>
///<para>Logical Name: disablesocialcare</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("disablesocialcare")]
public bool? IsSocialCareDisabled
{
	get { return this.GetPropertyValue<bool?>("disablesocialcare"); }
	set { this.SetPropertyValue<bool?>("disablesocialcare", value, "IsSocialCareDisabled"); }
}
///<summary>
///<para>Logical Name: sqmenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("sqmenabled")]
public bool? IsSQMEnabled
{
	get { return this.GetPropertyValue<bool?>("sqmenabled"); }
	set { this.SetPropertyValue<bool?>("sqmenabled", value, "IsSQMEnabled"); }
}
///<summary>
///<para>Logical Name: isuseraccessauditenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isuseraccessauditenabled")]
public bool? IsUserAccessAuditingEnabled
{
	get { return this.GetPropertyValue<bool?>("isuseraccessauditenabled"); }
	set { this.SetPropertyValue<bool?>("isuseraccessauditenabled", value, "IsUserAccessAuditingEnabled"); }
}
///<summary>
///<para>Logical Name: isvintegrationcode</para>
///</summary>
[AttributeLogicalNameAttribute("isvintegrationcode")]
public OptionSetValue ISVIntegrationMode
{
	get { return this.GetPropertyValue<OptionSetValue>("isvintegrationcode"); }
	set { this.SetPropertyValue<OptionSetValue>("isvintegrationcode", value, "ISVIntegrationMode"); }
}
///<summary>
///<para>Logical Name: kaprefix</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("kaprefix")]
public string KnowledgeArticlePrefix
{
	get { return this.GetPropertyValue<string>("kaprefix"); }
	set { this.SetPropertyValue("kaprefix", value, 20, "KnowledgeArticlePrefix"); }
}
///<summary>
///<para>Logical Name: kmsettings</para>
///<para>Max Length: 1073741823 characters</para>
///</summary>
[AttributeLogicalNameAttribute("kmsettings")]
public string KnowledgeManagementSettings
{
	get { return this.GetPropertyValue<string>("kmsettings"); }
	set { this.SetPropertyValue("kmsettings", value, 1073741823, "KnowledgeManagementSettings"); }
}
///<summary>
///<para>Logical Name: languagecode</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("languagecode")]
public int? Language
{
	get { return this.GetPropertyValue<int?>("languagecode"); }
	set { this.SetPropertyValue("languagecode", (int?)value, (int)0, (int)2147483647, "Language"); }
}
///<summary>
///<para>Logical Name: uselegacyrendering</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("uselegacyrendering")]
public bool? LegacyFormRendering
{
	get { return this.GetPropertyValue<bool?>("uselegacyrendering"); }
	set { this.SetPropertyValue<bool?>("uselegacyrendering", value, "LegacyFormRendering"); }
}
///<summary>
///<para>Logical Name: localeid</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("localeid")]
public int? Locale
{
	get { return this.GetPropertyValue<int?>("localeid"); }
	set { this.SetPropertyValue("localeid", (int?)value, (int)-2147483648, (int)2147483647, "Locale"); }
}
///<summary>
///<para>Logical Name: longdateformatcode</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("longdateformatcode")]
public int? LongDateFormat
{
	get { return this.GetPropertyValue<int?>("longdateformatcode"); }
	set { this.SetPropertyValue("longdateformatcode", (int?)value, (int)-2147483648, (int)2147483647, "LongDateFormat"); }
}
///<summary>
///<para>Logical Name: mailboxintermittentissueminrange</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("mailboxintermittentissueminrange")]
public int? LowerThresholdForMailboxIntermittentIssue
{
	get { return this.GetPropertyValue<int?>("mailboxintermittentissueminrange"); }
	set { this.SetPropertyValue("mailboxintermittentissueminrange", (int?)value, (int)-2147483648, (int)2147483647, "LowerThresholdForMailboxIntermittentIssue"); }
}
///<summary>
///<para>Logical Name: mailboxpermanentissueminrange</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("mailboxpermanentissueminrange")]
public int? LowerThresholdForMailboxPermanentIssue
{
	get { return this.GetPropertyValue<int?>("mailboxpermanentissueminrange"); }
	set { this.SetPropertyValue("mailboxpermanentissueminrange", (int?)value, (int)-2147483648, (int)2147483647, "LowerThresholdForMailboxPermanentIssue"); }
}
///<summary>
///<para>Logical Name: maxappointmentdurationdays</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("maxappointmentdurationdays")]
public int? MaxAppointmentDuration
{
	get { return this.GetPropertyValue<int?>("maxappointmentdurationdays"); }
	set { this.SetPropertyValue("maxappointmentdurationdays", (int?)value, (int)0, (int)2147483647, "MaxAppointmentDuration"); }
}
///<summary>
///<para>Logical Name: maxfolderbasedtrackingmappings</para>
///<para>Minimum Value: 1</para>
///<para>Maximum Value: 25</para>
///</summary>
[AttributeLogicalNameAttribute("maxfolderbasedtrackingmappings")]
public int? MaxFolderBasedTrackingMappings
{
	get { return this.GetPropertyValue<int?>("maxfolderbasedtrackingmappings"); }
	set { this.SetPropertyValue("maxfolderbasedtrackingmappings", (int?)value, (int)1, (int)25, "MaxFolderBasedTrackingMappings"); }
}
///<summary>
///<para>Logical Name: maxverboseloggingmailbox</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("maxverboseloggingmailbox")]
public int? MaxNoOfMailboxesToEnableForVerboseLogging
{
	get { return this.GetPropertyValue<int?>("maxverboseloggingmailbox"); }
}
///<summary>
///<para>Logical Name: maxrecordsforlookupfilters</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("maxrecordsforlookupfilters")]
public int? MaxRecordsFilterSelection
{
	get { return this.GetPropertyValue<int?>("maxrecordsforlookupfilters"); }
	set { this.SetPropertyValue("maxrecordsforlookupfilters", (int?)value, (int)0, (int)2147483647, "MaxRecordsFilterSelection"); }
}
///<summary>
///<para>Logical Name: maxrecordsforexporttoexcel</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("maxrecordsforexporttoexcel")]
public int? MaxRecordsForExcelExport
{
	get { return this.GetPropertyValue<int?>("maxrecordsforexporttoexcel"); }
	set { this.SetPropertyValue("maxrecordsforexporttoexcel", (int?)value, (int)0, (int)2147483647, "MaxRecordsForExcelExport"); }
}
///<summary>
///<para>Logical Name: maxsupportedinternetexplorerversion</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("maxsupportedinternetexplorerversion")]
public int? MaxSupportedIEVersion
{
	get { return this.GetPropertyValue<int?>("maxsupportedinternetexplorerversion"); }
}
///<summary>
///<para>Logical Name: maximumtrackingnumber</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("maximumtrackingnumber")]
public int? MaxTrackingNumber
{
	get { return this.GetPropertyValue<int?>("maximumtrackingnumber"); }
	set { this.SetPropertyValue("maximumtrackingnumber", (int?)value, (int)0, (int)2147483647, "MaxTrackingNumber"); }
}
///<summary>
///<para>Logical Name: maxuploadfilesize</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("maxuploadfilesize")]
public int? MaxUploadFileSize
{
	get { return this.GetPropertyValue<int?>("maxuploadfilesize"); }
	set { this.SetPropertyValue("maxuploadfilesize", (int?)value, (int)0, (int)2147483647, "MaxUploadFileSize"); }
}
///<summary>
///<para>Logical Name: dayssincerecordlastmodifiedmaxvalue</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("dayssincerecordlastmodifiedmaxvalue")]
public int? MaxValueOfDaysSinceRecordLastModified
{
	get { return this.GetPropertyValue<int?>("dayssincerecordlastmodifiedmaxvalue"); }
}
///<summary>
///<para>Logical Name: maximumactivebusinessprocessflowsallowedperentity</para>
///<para>Minimum Value: 1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("maximumactivebusinessprocessflowsallowedperentity")]
public int? MaximumActiveBusinessProcessFlowsPerEntity
{
	get { return this.GetPropertyValue<int?>("maximumactivebusinessprocessflowsallowedperentity"); }
	set { this.SetPropertyValue("maximumactivebusinessprocessflowsallowedperentity", (int?)value, (int)1, (int)2147483647, "MaximumActiveBusinessProcessFlowsPerEntity"); }
}
///<summary>
///<para>Logical Name: maxdepthforhierarchicalsecuritymodel</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("maxdepthforhierarchicalsecuritymodel")]
public int? MaximumDepthForHierarchySecurityPropagation
{
	get { return this.GetPropertyValue<int?>("maxdepthforhierarchicalsecuritymodel"); }
	set { this.SetPropertyValue("maxdepthforhierarchicalsecuritymodel", (int?)value, (int)-2147483648, (int)2147483647, "MaximumDepthForHierarchySecurityPropagation"); }
}
///<summary>
///<para>Logical Name: maximumentitieswithactivesla</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("maximumentitieswithactivesla")]
public int? MaximumNumberOfActiveSLAAllowedPerEntityInOnline
{
	get { return this.GetPropertyValue<int?>("maximumentitieswithactivesla"); }
	set { this.SetPropertyValue("maximumentitieswithactivesla", (int?)value, (int)0, (int)2147483647, "MaximumNumberOfActiveSLAAllowedPerEntityInOnline"); }
}
///<summary>
///<para>Logical Name: maximumslakpiperentitywithactivesla</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("maximumslakpiperentitywithactivesla")]
public int? MaximumNumberOfActiveSLAKPIAllowedPerEntityInOnline
{
	get { return this.GetPropertyValue<int?>("maximumslakpiperentitywithactivesla"); }
	set { this.SetPropertyValue("maximumslakpiperentitywithactivesla", (int?)value, (int)0, (int)2147483647, "MaximumNumberOfActiveSLAKPIAllowedPerEntityInOnline"); }
}
///<summary>
///<para>Logical Name: maxconditionsformobileofflinefilters</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("maxconditionsformobileofflinefilters")]
public int? MaximumNumberOfConditionsAllowedForMobileOfflineFilters
{
	get { return this.GetPropertyValue<int?>("maxconditionsformobileofflinefilters"); }
	set { this.SetPropertyValue("maxconditionsformobileofflinefilters", (int?)value, (int)0, (int)2147483647, "MaximumNumberOfConditionsAllowedForMobileOfflineFilters"); }
}
///<summary>
///<para>Logical Name: maxverboseloggingsynccycles</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("maxverboseloggingsynccycles")]
public int? MaximumNumberOfSyncCyclesForWhichVerboseLoggingWillBeEnabledByDefault
{
	get { return this.GetPropertyValue<int?>("maxverboseloggingsynccycles"); }
}
///<summary>
///<para>Logical Name: metadatasynctimestamp</para>
///</summary>
[AttributeLogicalNameAttribute("metadatasynctimestamp")]
public int? MetadataSyncVersion
{
	get { return this.GetPropertyValue<int?>("metadatasynctimestamp"); }
}
///<summary>
///<para>Logical Name: minaddressbooksyncinterval</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("minaddressbooksyncinterval")]
public int? MinAddressSynchronizationFrequency
{
	get { return this.GetPropertyValue<int?>("minaddressbooksyncinterval"); }
	set { this.SetPropertyValue("minaddressbooksyncinterval", (int?)value, (int)-2147483648, (int)2147483647, "MinAddressSynchronizationFrequency"); }
}
///<summary>
///<para>Logical Name: minofflinesyncinterval</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("minofflinesyncinterval")]
public int? MinOfflineSynchronizationFrequency
{
	get { return this.GetPropertyValue<int?>("minofflinesyncinterval"); }
	set { this.SetPropertyValue("minofflinesyncinterval", (int?)value, (int)-2147483648, (int)2147483647, "MinOfflineSynchronizationFrequency"); }
}
///<summary>
///<para>Logical Name: minoutlooksyncinterval</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("minoutlooksyncinterval")]
public int? MinSynchronizationFrequency
{
	get { return this.GetPropertyValue<int?>("minoutlooksyncinterval"); }
	set { this.SetPropertyValue("minoutlooksyncinterval", (int?)value, (int)0, (int)2147483647, "MinSynchronizationFrequency"); }
}
///<summary>
///<para>Logical Name: mobileofflineminlicenseprod</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("mobileofflineminlicenseprod")]
public int? MinimumNumberOfUserLicenseRequiredForMobileOfflineServiceByProduction_previewOrganization
{
	get { return this.GetPropertyValue<int?>("mobileofflineminlicenseprod"); }
}
///<summary>
///<para>Logical Name: mobileofflineminlicensetrial</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("mobileofflineminlicensetrial")]
public int? MinimumNumberOfUserLicenseRequiredForMobileOfflineServiceByTrialOrganization
{
	get { return this.GetPropertyValue<int?>("mobileofflineminlicensetrial"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: defaultcrmcustomname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("defaultcrmcustomname")]
public string NameOfTheDefaultApp
{
	get { return this.GetPropertyValue<string>("defaultcrmcustomname"); }
	set { this.SetPropertyValue("defaultcrmcustomname", value, 100, "NameOfTheDefaultApp"); }
}
///<summary>
///<para>Logical Name: negativecurrencyformatcode</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("negativecurrencyformatcode")]
public int? NegativeCurrencyFormat
{
	get { return this.GetPropertyValue<int?>("negativecurrencyformatcode"); }
	set { this.SetPropertyValue("negativecurrencyformatcode", (int?)value, (int)-2147483648, (int)2147483647, "NegativeCurrencyFormat"); }
}
///<summary>
///<para>Logical Name: negativeformatcode</para>
///</summary>
[AttributeLogicalNameAttribute("negativeformatcode")]
public OptionSetValue NegativeFormat
{
	get { return this.GetPropertyValue<OptionSetValue>("negativeformatcode"); }
	set { this.SetPropertyValue<OptionSetValue>("negativeformatcode", value, "NegativeFormat"); }
}
///<summary>
///<para>Logical Name: nextcustomobjecttypecode</para>
///<para>Minimum Value: 10000</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("nextcustomobjecttypecode")]
public int? NextEntityTypeCode
{
	get { return this.GetPropertyValue<int?>("nextcustomobjecttypecode"); }
}
///<summary>
///<para>Logical Name: nexttrackingnumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("nexttrackingnumber")]
public int? NextTrackingNumber
{
	get { return this.GetPropertyValue<int?>("nexttrackingnumber"); }
	set { this.SetPropertyValue("nexttrackingnumber", (int?)value, (int)-2147483648, (int)2147483647, "NextTrackingNumber"); }
}
///<summary>
///<para>Logical Name: notifymailboxownerofemailserverlevelalerts</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("notifymailboxownerofemailserverlevelalerts")]
public bool? NotifyMailboxOwnerOfEmailServerLevelAlerts
{
	get { return this.GetPropertyValue<bool?>("notifymailboxownerofemailserverlevelalerts"); }
	set { this.SetPropertyValue<bool?>("notifymailboxownerofemailserverlevelalerts", value, "NotifyMailboxOwnerOfEmailServerLevelAlerts"); }
}
///<summary>
///<para>Logical Name: numberformat</para>
///<para>Max Length: 2 characters</para>
///</summary>
[AttributeLogicalNameAttribute("numberformat")]
public string NumberFormat
{
	get { return this.GetPropertyValue<string>("numberformat"); }
	set { this.SetPropertyValue("numberformat", value, 2, "NumberFormat"); }
}
///<summary>
///<para>Logical Name: numbergroupformat</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("numbergroupformat")]
public string NumberGroupingFormat
{
	get { return this.GetPropertyValue<string>("numbergroupformat"); }
	set { this.SetPropertyValue("numbergroupformat", value, 50, "NumberGroupingFormat"); }
}
///<summary>
///<para>Logical Name: numberseparator</para>
///<para>Max Length: 5 characters</para>
///</summary>
[AttributeLogicalNameAttribute("numberseparator")]
public string NumberSeparator
{
	get { return this.GetPropertyValue<string>("numberseparator"); }
	set { this.SetPropertyValue("numberseparator", value, 5, "NumberSeparator"); }
}
///<summary>
///<para>Logical Name: isenabledforallroles</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isenabledforallroles")]
public bool? OptionSetValuesForIsenabledforallroles
{
	get { return this.GetPropertyValue<bool?>("isenabledforallroles"); }
	set { this.SetPropertyValue<bool?>("isenabledforallroles", value, "OptionSetValuesForIsenabledforallroles"); }
}
///<summary>
///<para>Logical Name: orderprefix</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("orderprefix")]
public string OrderPrefix
{
	get { return this.GetPropertyValue<string>("orderprefix"); }
	set { this.SetPropertyValue("orderprefix", value, 20, "OrderPrefix"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: organizationid</para>
///</summary>
[AttributeLogicalNameAttribute("organizationid")]
public Guid OrganizationId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: orgdborgsettings</para>
///<para>Max Length: 1073741823 characters</para>
///</summary>
[AttributeLogicalNameAttribute("orgdborgsettings")]
public string OrganizationDatabaseOrganizationSettings
{
	get { return this.GetPropertyValue<string>("orgdborgsettings"); }
	set { this.SetPropertyValue("orgdborgsettings", value, 1073741823, "OrganizationDatabaseOrganizationSettings"); }
}
///<summary>
///<para>Logical Name: name</para>
///<para>Max Length: 160 characters</para>
///</summary>
[AttributeLogicalNameAttribute("name")]
public string OrganizationName
{
	get { return this.GetPropertyValue<string>("name"); }
	set { this.SetPropertyValue("name", value, 160, "OrganizationName"); }
}
///<summary>
///<para>Logical Name: enforcereadonlyplugins</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("enforcereadonlyplugins")]
public bool? OrganizationSettingToEnforceReadOnlyPlugins
{
	get { return this.GetPropertyValue<bool?>("enforcereadonlyplugins"); }
	set { this.SetPropertyValue<bool?>("enforcereadonlyplugins", value, "OrganizationSettingToEnforceReadOnlyPlugins"); }
}
///<summary>
///<para>Logical Name: parsedtablecolumnprefix</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("parsedtablecolumnprefix")]
public string ParsedTableColumnPrefix
{
	get { return this.GetPropertyValue<string>("parsedtablecolumnprefix"); }
}
///<summary>
///<para>Logical Name: parsedtableprefix</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("parsedtableprefix")]
public string ParsedTablePrefix
{
	get { return this.GetPropertyValue<string>("parsedtableprefix"); }
}
///<summary>
///<para>Logical Name: pastexpansionwindow</para>
///<para>Minimum Value: 1</para>
///<para>Maximum Value: 120</para>
///</summary>
[AttributeLogicalNameAttribute("pastexpansionwindow")]
public int? PastExpansionWindow
{
	get { return this.GetPropertyValue<int?>("pastexpansionwindow"); }
	set { this.SetPropertyValue("pastexpansionwindow", (int?)value, (int)1, (int)120, "PastExpansionWindow"); }
}
///<summary>
///<para>Logical Name: picture</para>
///<para>Max Length: 1073741823 characters</para>
///</summary>
[AttributeLogicalNameAttribute("picture")]
public string Picture
{
	get { return this.GetPropertyValue<string>("picture"); }
	set { this.SetPropertyValue("picture", value, 1073741823, "Picture"); }
}
///<summary>
///<para>Logical Name: plugintracelogsetting</para>
///</summary>
[AttributeLogicalNameAttribute("plugintracelogsetting")]
public OptionSetValue Plug_inTraceLogSetting
{
	get { return this.GetPropertyValue<OptionSetValue>("plugintracelogsetting"); }
	set { this.SetPropertyValue<OptionSetValue>("plugintracelogsetting", value, "Plug_inTraceLogSetting"); }
}
///<summary>
///<para>Logical Name: pmdesignator</para>
///<para>Max Length: 25 characters</para>
///</summary>
[AttributeLogicalNameAttribute("pmdesignator")]
public string PMDesignator
{
	get { return this.GetPropertyValue<string>("pmdesignator"); }
	set { this.SetPropertyValue("pmdesignator", value, 25, "PMDesignator"); }
}
/// <summary>
///Logical Name: fiscalyearformatprefix
/// </summary>
[AttributeLogicalNameAttribute("fiscalyearformatprefix")]
public eFiscalYearFormatPrefix? PrefixForFiscalYear
{
	get
	{
		if (PrefixForFiscalYear_OptionSetValue != null) { return (eFiscalYearFormatPrefix)PrefixForFiscalYear_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.PrefixForFiscalYear_OptionSetValue = new OptionSetValue((int)value); }
		else this.PrefixForFiscalYear_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: fiscalyearformatprefix</para>
///</summary>
[AttributeLogicalNameAttribute("fiscalyearformatprefix")]
public OptionSetValue PrefixForFiscalYear_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("fiscalyearformatprefix"); }
	set { this.SetPropertyValue<OptionSetValue>("fiscalyearformatprefix", value, "PrefixForFiscalYear_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string PrefixForFiscalYear_Text(IOrganizationService Service)
{
	return this.PrefixForFiscalYear_OptionSetValue.GetOptionSetText(Service, this, "fiscalyearformatprefix");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string PrefixForFiscalYear_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.PrefixForFiscalYear_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: ispresenceenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("ispresenceenabled")]
public bool? PresenceEnabled
{
	get { return this.GetPropertyValue<bool?>("ispresenceenabled"); }
	set { this.SetPropertyValue<bool?>("ispresenceenabled", value, "PresenceEnabled"); }
}
///<summary>
///<para>Logical Name: pricingdecimalprecision</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 4</para>
///</summary>
[AttributeLogicalNameAttribute("pricingdecimalprecision")]
public int? PricingDecimalPrecision
{
	get { return this.GetPropertyValue<int?>("pricingdecimalprecision"); }
	set { this.SetPropertyValue("pricingdecimalprecision", (int?)value, (int)0, (int)4, "PricingDecimalPrecision"); }
}
///<summary>
///<para>Logical Name: privacystatementurl</para>
///<para>Max Length: 500 characters</para>
///</summary>
[AttributeLogicalNameAttribute("privacystatementurl")]
public string PrivacyStatementURL
{
	get { return this.GetPropertyValue<string>("privacystatementurl"); }
	set { this.SetPropertyValue("privacystatementurl", value, 500, "PrivacyStatementURL"); }
}
///<summary>
///<para>Logical Name: privreportinggroupid</para>
///</summary>
[AttributeLogicalNameAttribute("privreportinggroupid")]
public Guid PrivilegeReportingGroup
{
	get { return this.GetPropertyValue<Guid>("privreportinggroupid"); }
	set { this.SetPropertyValue<Guid>("privreportinggroupid", value, "PrivilegeReportingGroup"); }
}
///<summary>
///<para>Logical Name: privreportinggroupname</para>
///<para>Max Length: 256 characters</para>
///</summary>
[AttributeLogicalNameAttribute("privreportinggroupname")]
public string PrivilegeReportingGroupName
{
	get { return this.GetPropertyValue<string>("privreportinggroupname"); }
	set { this.SetPropertyValue("privreportinggroupname", value, 256, "PrivilegeReportingGroupName"); }
}
///<summary>
///<para>Logical Name: privilegeusergroupid</para>
///</summary>
[AttributeLogicalNameAttribute("privilegeusergroupid")]
public Guid PrivilegeUserGroup
{
	get { return this.GetPropertyValue<Guid>("privilegeusergroupid"); }
	set { this.SetPropertyValue<Guid>("privilegeusergroupid", value, "PrivilegeUserGroup"); }
}
///<summary>
///<para>Logical Name: maximumdynamicpropertiesallowed</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("maximumdynamicpropertiesallowed")]
public int? ProductPropertiesItemLimit
{
	get { return this.GetPropertyValue<int?>("maximumdynamicpropertiesallowed"); }
	set { this.SetPropertyValue("maximumdynamicpropertiesallowed", (int?)value, (int)0, (int)2147483647, "ProductPropertiesItemLimit"); }
}
///<summary>
///<para>Logical Name: quickfindrecordlimitenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("quickfindrecordlimitenabled")]
public bool? QuickFindRecordLimitEnabled
{
	get { return this.GetPropertyValue<bool?>("quickfindrecordlimitenabled"); }
	set { this.SetPropertyValue<bool?>("quickfindrecordlimitenabled", value, "QuickFindRecordLimitEnabled"); }
}
///<summary>
///<para>Logical Name: quoteprefix</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("quoteprefix")]
public string QuotePrefix
{
	get { return this.GetPropertyValue<string>("quoteprefix"); }
	set { this.SetPropertyValue("quoteprefix", value, 20, "QuotePrefix"); }
}
///<summary>
///<para>Logical Name: recurrencedefaultnumberofoccurrences</para>
///<para>Minimum Value: 1</para>
///<para>Maximum Value: 999</para>
///</summary>
[AttributeLogicalNameAttribute("recurrencedefaultnumberofoccurrences")]
public int? RecurrenceDefaultNumberOfOccurrences
{
	get { return this.GetPropertyValue<int?>("recurrencedefaultnumberofoccurrences"); }
	set { this.SetPropertyValue("recurrencedefaultnumberofoccurrences", (int?)value, (int)1, (int)999, "RecurrenceDefaultNumberOfOccurrences"); }
}
///<summary>
///<para>Logical Name: recurrenceexpansionjobbatchinterval</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("recurrenceexpansionjobbatchinterval")]
public int? RecurrenceExpansionJobBatchInterval
{
	get { return this.GetPropertyValue<int?>("recurrenceexpansionjobbatchinterval"); }
	set { this.SetPropertyValue("recurrenceexpansionjobbatchinterval", (int?)value, (int)0, (int)2147483647, "RecurrenceExpansionJobBatchInterval"); }
}
///<summary>
///<para>Logical Name: recurrenceexpansionjobbatchsize</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("recurrenceexpansionjobbatchsize")]
public int? RecurrenceExpansionOnDemandJobBatchSize
{
	get { return this.GetPropertyValue<int?>("recurrenceexpansionjobbatchsize"); }
	set { this.SetPropertyValue("recurrenceexpansionjobbatchsize", (int?)value, (int)0, (int)2147483647, "RecurrenceExpansionOnDemandJobBatchSize"); }
}
///<summary>
///<para>Logical Name: recurrenceexpansionsynchcreatemax</para>
///<para>Minimum Value: 1</para>
///<para>Maximum Value: 1000</para>
///</summary>
[AttributeLogicalNameAttribute("recurrenceexpansionsynchcreatemax")]
public int? RecurrenceExpansionSynchronizationCreateMaximum
{
	get { return this.GetPropertyValue<int?>("recurrenceexpansionsynchcreatemax"); }
	set { this.SetPropertyValue("recurrenceexpansionsynchcreatemax", (int?)value, (int)1, (int)1000, "RecurrenceExpansionSynchronizationCreateMaximum"); }
}
///<summary>
///<para>Logical Name: referencesitemapxml</para>
///<para>Max Length: 1073741823 characters</para>
///</summary>
[AttributeLogicalNameAttribute("referencesitemapxml")]
public string ReferenceSiteMapXML
{
	get { return this.GetPropertyValue<string>("referencesitemapxml"); }
	set { this.SetPropertyValue("referencesitemapxml", value, 1073741823, "ReferenceSiteMapXML"); }
}
///<summary>
///<para>Logical Name: rendersecureiframeforemail</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("rendersecureiframeforemail")]
public bool? RenderSecureFrameForEmail
{
	get { return this.GetPropertyValue<bool?>("rendersecureiframeforemail"); }
	set { this.SetPropertyValue<bool?>("rendersecureiframeforemail", value, "RenderSecureFrameForEmail"); }
}
/// <summary>
///Logical Name: reportscripterrors
/// </summary>
[AttributeLogicalNameAttribute("reportscripterrors")]
public eReportScriptErrors? ReportScriptErrors
{
	get
	{
		if (ReportScriptErrors_OptionSetValue != null) { return (eReportScriptErrors)ReportScriptErrors_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ReportScriptErrors_OptionSetValue = new OptionSetValue((int)value); }
		else this.ReportScriptErrors_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: reportscripterrors</para>
///</summary>
[AttributeLogicalNameAttribute("reportscripterrors")]
public OptionSetValue ReportScriptErrors_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("reportscripterrors"); }
	set { this.SetPropertyValue<OptionSetValue>("reportscripterrors", value, "ReportScriptErrors_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ReportScriptErrors_Text(IOrganizationService Service)
{
	return this.ReportScriptErrors_OptionSetValue.GetOptionSetText(Service, this, "reportscripterrors");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ReportScriptErrors_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ReportScriptErrors_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: reportinggroupid</para>
///</summary>
[AttributeLogicalNameAttribute("reportinggroupid")]
public Guid ReportingGroup
{
	get { return this.GetPropertyValue<Guid>("reportinggroupid"); }
	set { this.SetPropertyValue<Guid>("reportinggroupid", value, "ReportingGroup"); }
}
///<summary>
///<para>Logical Name: reportinggroupname</para>
///<para>Max Length: 256 characters</para>
///</summary>
[AttributeLogicalNameAttribute("reportinggroupname")]
public string ReportingGroupName
{
	get { return this.GetPropertyValue<string>("reportinggroupname"); }
	set { this.SetPropertyValue("reportinggroupname", value, 256, "ReportingGroupName"); }
}
///<summary>
///<para>Logical Name: isresourcebookingexchangesyncenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isresourcebookingexchangesyncenabled")]
public bool? ResourceBookingSynchronizationEnabled
{
	get { return this.GetPropertyValue<bool?>("isresourcebookingexchangesyncenabled"); }
	set { this.SetPropertyValue<bool?>("isresourcebookingexchangesyncenabled", value, "ResourceBookingSynchronizationEnabled"); }
}
///<summary>
///<para>Logical Name: restrictstatusupdate</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("restrictstatusupdate")]
public bool? RestrictStatusUpdate
{
	get { return this.GetPropertyValue<bool?>("restrictstatusupdate"); }
	set { this.SetPropertyValue<bool?>("restrictstatusupdate", value, "RestrictStatusUpdate"); }
}
///<summary>
///<para>Logical Name: goalrollupexpirytime</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 400</para>
///</summary>
[AttributeLogicalNameAttribute("goalrollupexpirytime")]
public int? RollupExpirationTimeForGoal
{
	get { return this.GetPropertyValue<int?>("goalrollupexpirytime"); }
	set { this.SetPropertyValue("goalrollupexpirytime", (int?)value, (int)0, (int)400, "RollupExpirationTimeForGoal"); }
}
///<summary>
///<para>Logical Name: sampledataimportid</para>
///</summary>
[AttributeLogicalNameAttribute("sampledataimportid")]
public Guid SampleDataImport
{
	get { return this.GetPropertyValue<Guid>("sampledataimportid"); }
	set { this.SetPropertyValue<Guid>("sampledataimportid", value, "SampleDataImport"); }
}
///<summary>
///<para>Logical Name: unresolveemailaddressifmultiplematch</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("unresolveemailaddressifmultiplematch")]
public bool? SetTo_cc_bccFieldsAsUnresolvedIfMultipleMatchesAreFound
{
	get { return this.GetPropertyValue<bool?>("unresolveemailaddressifmultiplematch"); }
	set { this.SetPropertyValue<bool?>("unresolveemailaddressifmultiplematch", value, "SetTo_cc_bccFieldsAsUnresolvedIfMultipleMatchesAreFound"); }
}
///<summary>
///<para>Logical Name: sharetopreviousowneronassign</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("sharetopreviousowneronassign")]
public bool? ShareToPreviousOwnerOnAssign
{
	get { return this.GetPropertyValue<bool?>("sharetopreviousowneronassign"); }
	set { this.SetPropertyValue<bool?>("sharetopreviousowneronassign", value, "ShareToPreviousOwnerOnAssign"); }
}
///<summary>
///<para>Logical Name: showkbarticledeprecationnotification</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("showkbarticledeprecationnotification")]
public bool? ShowKBArticleDeprecationMessageToUser
{
	get { return this.GetPropertyValue<bool?>("showkbarticledeprecationnotification"); }
	set { this.SetPropertyValue<bool?>("showkbarticledeprecationnotification", value, "ShowKBArticleDeprecationMessageToUser"); }
}
///<summary>
///<para>Logical Name: showweeknumber</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("showweeknumber")]
public bool? ShowWeekNumber
{
	get { return this.GetPropertyValue<bool?>("showweeknumber"); }
	set { this.SetPropertyValue<bool?>("showweeknumber", value, "ShowWeekNumber"); }
}
///<summary>
///<para>Logical Name: sitemapxml</para>
///<para>Max Length: 1073741823 characters</para>
///</summary>
[AttributeLogicalNameAttribute("sitemapxml")]
public string SiteMapXML
{
	get { return this.GetPropertyValue<string>("sitemapxml"); }
	set { this.SetPropertyValue("sitemapxml", value, 1073741823, "SiteMapXML"); }
}
///<summary>
///<para>Logical Name: slapausestates</para>
///<para>Max Length: 1073741823 characters</para>
///</summary>
[AttributeLogicalNameAttribute("slapausestates")]
public string SLAPauseStates
{
	get { return this.GetPropertyValue<string>("slapausestates"); }
	set { this.SetPropertyValue("slapausestates", value, 1073741823, "SLAPauseStates"); }
}
///<summary>
///<para>Logical Name: socialinsightsenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("socialinsightsenabled")]
public bool? SocialInsightsEnabled
{
	get { return this.GetPropertyValue<bool?>("socialinsightsenabled"); }
	set { this.SetPropertyValue<bool?>("socialinsightsenabled", value, "SocialInsightsEnabled"); }
}
///<summary>
///<para>Logical Name: socialinsightsinstance</para>
///<para>Max Length: 2048 characters</para>
///</summary>
[AttributeLogicalNameAttribute("socialinsightsinstance")]
public string SocialInsightsInstanceIdentifier
{
	get { return this.GetPropertyValue<string>("socialinsightsinstance"); }
	set { this.SetPropertyValue("socialinsightsinstance", value, 2048, "SocialInsightsInstanceIdentifier"); }
}
///<summary>
///<para>Logical Name: socialinsightstermsaccepted</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("socialinsightstermsaccepted")]
public bool? SocialInsightsTermsOfUse
{
	get { return this.GetPropertyValue<bool?>("socialinsightstermsaccepted"); }
	set { this.SetPropertyValue<bool?>("socialinsightstermsaccepted", value, "SocialInsightsTermsOfUse"); }
}
///<summary>
///<para>Logical Name: sortid</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("sortid")]
public int? Sort
{
	get { return this.GetPropertyValue<int?>("sortid"); }
	set { this.SetPropertyValue("sortid", (int?)value, (int)-2147483648, (int)2147483647, "Sort"); }
}
///<summary>
///<para>Logical Name: sqlaccessgroupid</para>
///</summary>
[AttributeLogicalNameAttribute("sqlaccessgroupid")]
public Guid SQLAccessGroup
{
	get { return this.GetPropertyValue<Guid>("sqlaccessgroupid"); }
	set { this.SetPropertyValue<Guid>("sqlaccessgroupid", value, "SQLAccessGroup"); }
}
///<summary>
///<para>Logical Name: sqlaccessgroupname</para>
///<para>Max Length: 256 characters</para>
///</summary>
[AttributeLogicalNameAttribute("sqlaccessgroupname")]
public string SQLAccessGroupName
{
	get { return this.GetPropertyValue<string>("sqlaccessgroupname"); }
	set { this.SetPropertyValue("sqlaccessgroupname", value, 256, "SQLAccessGroupName"); }
}
/// <summary>
///Logical Name: fiscalyearformatsuffix
/// </summary>
[AttributeLogicalNameAttribute("fiscalyearformatsuffix")]
public eFiscalYearFormatSuffix? SuffixForFiscalYear
{
	get
	{
		if (SuffixForFiscalYear_OptionSetValue != null) { return (eFiscalYearFormatSuffix)SuffixForFiscalYear_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.SuffixForFiscalYear_OptionSetValue = new OptionSetValue((int)value); }
		else this.SuffixForFiscalYear_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: fiscalyearformatsuffix</para>
///</summary>
[AttributeLogicalNameAttribute("fiscalyearformatsuffix")]
public OptionSetValue SuffixForFiscalYear_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("fiscalyearformatsuffix"); }
	set { this.SetPropertyValue<OptionSetValue>("fiscalyearformatsuffix", value, "SuffixForFiscalYear_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string SuffixForFiscalYear_Text(IOrganizationService Service)
{
	return this.SuffixForFiscalYear_OptionSetValue.GetOptionSetText(Service, this, "fiscalyearformatsuffix");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string SuffixForFiscalYear_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.SuffixForFiscalYear_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: supportuserid</para>
///</summary>
[AttributeLogicalNameAttribute("supportuserid")]
public Guid SupportUser
{
	get { return this.GetPropertyValue<Guid>("supportuserid"); }
	set { this.SetPropertyValue<Guid>("supportuserid", value, "SupportUser"); }
}
///<summary>
///<para>Logical Name: mobileofflinesyncinterval</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("mobileofflinesyncinterval")]
public int? SyncIntervalForMobileOffline
{
	get { return this.GetPropertyValue<int?>("mobileofflinesyncinterval"); }
	set { this.SetPropertyValue("mobileofflinesyncinterval", (int?)value, (int)0, (int)2147483647, "SyncIntervalForMobileOffline"); }
}
///<summary>
///<para>Logical Name: systemuserid</para>
///</summary>
[AttributeLogicalNameAttribute("systemuserid")]
public Guid SystemUser
{
	get { return this.GetPropertyValue<Guid>("systemuserid"); }
	set { this.SetPropertyValue<Guid>("systemuserid", value, "SystemUser"); }
}
///<summary>
///<para>Logical Name: metadatasynclasttimeofneverexpireddeletedobjects</para>
///</summary>
[AttributeLogicalNameAttribute("metadatasynclasttimeofneverexpireddeletedobjects")]
public DateTime? TheLastDate_timeForNeverExpiredMetadataTrackingDeletedObjects
{
	get { return this.GetPropertyValue<DateTime?>("metadatasynclasttimeofneverexpireddeletedobjects"); }
}
///<summary>
///<para>Logical Name: officegraphdelveurl</para>
///<para>Max Length: 1000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("officegraphdelveurl")]
public string TheUrlToOpenTheDelve
{
	get { return this.GetPropertyValue<string>("officegraphdelveurl"); }
	set { this.SetPropertyValue("officegraphdelveurl", value, 1000, "TheUrlToOpenTheDelve"); }
}
///<summary>
///<para>Logical Name: timeformatcode</para>
///</summary>
[AttributeLogicalNameAttribute("timeformatcode")]
public OptionSetValue TimeFormatCode
{
	get { return this.GetPropertyValue<OptionSetValue>("timeformatcode"); }
	set { this.SetPropertyValue<OptionSetValue>("timeformatcode", value, "TimeFormatCode"); }
}
///<summary>
///<para>Logical Name: timeformatstring</para>
///<para>Max Length: 255 characters</para>
///</summary>
[AttributeLogicalNameAttribute("timeformatstring")]
public string TimeFormatString
{
	get { return this.GetPropertyValue<string>("timeformatstring"); }
	set { this.SetPropertyValue("timeformatstring", value, 255, "TimeFormatString"); }
}
///<summary>
///<para>Logical Name: timeseparator</para>
///<para>Max Length: 5 characters</para>
///</summary>
[AttributeLogicalNameAttribute("timeseparator")]
public string TimeSeparator
{
	get { return this.GetPropertyValue<string>("timeseparator"); }
	set { this.SetPropertyValue("timeseparator", value, 5, "TimeSeparator"); }
}
///<summary>
///<para>Logical Name: timezoneruleversionnumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("timezoneruleversionnumber")]
public int? TimeZoneRuleVersionNumber
{
	get { return this.GetPropertyValue<int?>("timezoneruleversionnumber"); }
	set { this.SetPropertyValue("timezoneruleversionnumber", (int?)value, (int)-1, (int)2147483647, "TimeZoneRuleVersionNumber"); }
}
///<summary>
///<para>Logical Name: tokenexpiry</para>
///</summary>
[AttributeLogicalNameAttribute("tokenexpiry")]
public int? TokenExpirationDuration
{
	get { return this.GetPropertyValue<int?>("tokenexpiry"); }
	set { this.SetPropertyValue<int?>("tokenexpiry", value, "TokenExpirationDuration"); }
}
///<summary>
///<para>Logical Name: tokenkey</para>
///<para>Max Length: 90 characters</para>
///</summary>
[AttributeLogicalNameAttribute("tokenkey")]
public string TokenKey
{
	get { return this.GetPropertyValue<string>("tokenkey"); }
	set { this.SetPropertyValue("tokenkey", value, 90, "TokenKey"); }
}
///<summary>
///<para>Logical Name: trackingprefix</para>
///<para>Max Length: 256 characters</para>
///</summary>
[AttributeLogicalNameAttribute("trackingprefix")]
public string TrackingPrefix
{
	get { return this.GetPropertyValue<string>("trackingprefix"); }
	set { this.SetPropertyValue("trackingprefix", value, 256, "TrackingPrefix"); }
}
///<summary>
///<para>Logical Name: trackingtokenidbase</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("trackingtokenidbase")]
public int? TrackingTokenBase
{
	get { return this.GetPropertyValue<int?>("trackingtokenidbase"); }
	set { this.SetPropertyValue("trackingtokenidbase", (int?)value, (int)0, (int)2147483647, "TrackingTokenBase"); }
}
///<summary>
///<para>Logical Name: trackingtokeniddigits</para>
///</summary>
[AttributeLogicalNameAttribute("trackingtokeniddigits")]
public int? TrackingTokenDigits
{
	get { return this.GetPropertyValue<int?>("trackingtokeniddigits"); }
	set { this.SetPropertyValue<int?>("trackingtokeniddigits", value, "TrackingTokenDigits"); }
}
///<summary>
///<para>Logical Name: uniquespecifierlength</para>
///<para>Minimum Value: 4</para>
///<para>Maximum Value: 6</para>
///</summary>
[AttributeLogicalNameAttribute("uniquespecifierlength")]
public int? UniqueStringLength
{
	get { return this.GetPropertyValue<int?>("uniquespecifierlength"); }
	set { this.SetPropertyValue("uniquespecifierlength", (int?)value, (int)4, (int)6, "UniqueStringLength"); }
}
///<summary>
///<para>Logical Name: emailcorrelationenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("emailcorrelationenabled")]
public bool? UseEmailCorrelation
{
	get { return this.GetPropertyValue<bool?>("emailcorrelationenabled"); }
	set { this.SetPropertyValue<bool?>("emailcorrelationenabled", value, "UseEmailCorrelation"); }
}
///<summary>
///<para>Logical Name: useinbuiltrulefordefaultpricelistselection</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("useinbuiltrulefordefaultpricelistselection")]
public bool? UseInbuiltRuleForDefaultPricelistSelection
{
	get { return this.GetPropertyValue<bool?>("useinbuiltrulefordefaultpricelistselection"); }
	set { this.SetPropertyValue<bool?>("useinbuiltrulefordefaultpricelistselection", value, "UseInbuiltRuleForDefaultPricelistSelection"); }
}
///<summary>
///<para>Logical Name: usepositionhierarchy</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("usepositionhierarchy")]
public bool? UsePositionHierarchy
{
	get { return this.GetPropertyValue<bool?>("usepositionhierarchy"); }
	set { this.SetPropertyValue<bool?>("usepositionhierarchy", value, "UsePositionHierarchy"); }
}
///<summary>
///<para>Logical Name: usereadform</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("usereadform")]
public bool? UseRead_OptimizedForm
{
	get { return this.GetPropertyValue<bool?>("usereadform"); }
	set { this.SetPropertyValue<bool?>("usereadform", value, "UseRead_OptimizedForm"); }
}
///<summary>
///<para>Logical Name: useraccessauditinginterval</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("useraccessauditinginterval")]
public int? UserAuthenticationAuditingInterval
{
	get { return this.GetPropertyValue<int?>("useraccessauditinginterval"); }
	set { this.SetPropertyValue("useraccessauditinginterval", (int?)value, (int)0, (int)2147483647, "UserAuthenticationAuditingInterval"); }
}
///<summary>
///<para>Logical Name: usergroupid</para>
///</summary>
[AttributeLogicalNameAttribute("usergroupid")]
public Guid UserGroup
{
	get { return this.GetPropertyValue<Guid>("usergroupid"); }
	set { this.SetPropertyValue<Guid>("usergroupid", value, "UserGroup"); }
}
///<summary>
///<para>Logical Name: useskypeprotocol</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("useskypeprotocol")]
public bool? UserSkypeProtocol
{
	get { return this.GetPropertyValue<bool?>("useskypeprotocol"); }
	set { this.SetPropertyValue<bool?>("useskypeprotocol", value, "UserSkypeProtocol"); }
}
///<summary>
///<para>Logical Name: utcconversiontimezonecode</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utcconversiontimezonecode")]
public int? UTCConversionTimeZoneCode
{
	get { return this.GetPropertyValue<int?>("utcconversiontimezonecode"); }
	set { this.SetPropertyValue("utcconversiontimezonecode", (int?)value, (int)-1, (int)2147483647, "UTCConversionTimeZoneCode"); }
}
///<summary>
///<para>Logical Name: v3calloutconfighash</para>
///<para>Max Length: 256 characters</para>
///</summary>
[AttributeLogicalNameAttribute("v3calloutconfighash")]
public string V3CalloutHash
{
	get { return this.GetPropertyValue<string>("v3calloutconfighash"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}
///<summary>
///<para>Logical Name: webresourcehash</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("webresourcehash")]
public string WebResourceHash
{
	get { return this.GetPropertyValue<string>("webresourcehash"); }
	set { this.SetPropertyValue("webresourcehash", value, 100, "WebResourceHash"); }
}
///<summary>
///<para>Logical Name: weekstartdaycode</para>
///</summary>
[AttributeLogicalNameAttribute("weekstartdaycode")]
public OptionSetValue WeekStartDayCode
{
	get { return this.GetPropertyValue<OptionSetValue>("weekstartdaycode"); }
	set { this.SetPropertyValue<OptionSetValue>("weekstartdaycode", value, "WeekStartDayCode"); }
}
///<summary>
///<para>Logical Name: yammergroupid</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("yammergroupid")]
public int? YammerGroupId
{
	get { return this.GetPropertyValue<int?>("yammergroupid"); }
	set { this.SetPropertyValue("yammergroupid", (int?)value, (int)0, (int)2147483647, "YammerGroupId"); }
}
///<summary>
///<para>Logical Name: yammernetworkpermalink</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("yammernetworkpermalink")]
public string YammerNetworkPermalink
{
	get { return this.GetPropertyValue<string>("yammernetworkpermalink"); }
	set { this.SetPropertyValue("yammernetworkpermalink", value, 100, "YammerNetworkPermalink"); }
}
///<summary>
///<para>Logical Name: yammeroauthaccesstokenexpired</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("yammeroauthaccesstokenexpired")]
public bool? YammerOAuthAccessTokenExpired
{
	get { return this.GetPropertyValue<bool?>("yammeroauthaccesstokenexpired"); }
	set { this.SetPropertyValue<bool?>("yammeroauthaccesstokenexpired", value, "YammerOAuthAccessTokenExpired"); }
}
///<summary>
///<para>Logical Name: yearstartweekcode</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("yearstartweekcode")]
public int? YearStartWeekCode
{
	get { return this.GetPropertyValue<int?>("yearstartweekcode"); }
	set { this.SetPropertyValue("yearstartweekcode", (int?)value, (int)-2147483648, (int)2147483647, "YearStartWeekCode"); }
}


        /// <summary>
/// <para><b>AdvancedSimilarityRule (Organization)</b></para>
/// <para>Schema Name: organization_advancedsimilarityrule</para>
/// </summary>
public List<AdvancedSimilarityRule> GetAdvancedSimilarityRules_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AdvancedSimilarityRule>(Service, this.Id, "advancedsimilarityrule", "organizationid", Columns); }
/// <summary>
/// <para><b>AdvancedSimilarityRule (Organization)</b></para>
/// <para>Schema Name: organization_advancedsimilarityrule</para>
/// </summary>
public List<AdvancedSimilarityRule> GetAdvancedSimilarityRules_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AdvancedSimilarityRule>(Service, this.Id, "advancedsimilarityrule", "organizationid", Columns); }
/// <summary>
/// <para><b>ApplicationFile (Organization Id)</b></para>
/// <para>Schema Name: organization_applicationfile</para>
/// </summary>
public List<ApplicationFile> GetApplicationFiles_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ApplicationFile>(Service, this.Id, "applicationfile", "organizationid", Columns); }
/// <summary>
/// <para><b>ApplicationFile (Organization Id)</b></para>
/// <para>Schema Name: organization_applicationfile</para>
/// </summary>
public List<ApplicationFile> GetApplicationFiles_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ApplicationFile>(Service, this.Id, "applicationfile", "organizationid", Columns); }
/// <summary>
/// <para><b>App (Organization)</b></para>
/// <para>Schema Name: organization_appmodule</para>
/// </summary>
public List<App> GetApps_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<App>(Service, this.Id, "appmodule", "organizationid", Columns); }
/// <summary>
/// <para><b>App (Organization)</b></para>
/// <para>Schema Name: organization_appmodule</para>
/// </summary>
public List<App> GetApps_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<App>(Service, this.Id, "appmodule", "organizationid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: Organization_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: Organization_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>AttributeMap ()</b></para>
/// <para>Schema Name: organization_attributemap</para>
/// </summary>
public List<AttributeMap> GetAttributeMaps (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AttributeMap>(Service, this.Id, "attributemap", "organizationid", Columns); }
/// <summary>
/// <para><b>AttributeMap ()</b></para>
/// <para>Schema Name: organization_attributemap</para>
/// </summary>
public List<AttributeMap> GetAttributeMaps (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AttributeMap>(Service, this.Id, "attributemap", "organizationid", Columns); }
/// <summary>
/// <para><b>AuthorizationServer (Organization Id)</b></para>
/// <para>Schema Name: lk_authorizationserver_organizationid</para>
/// </summary>
public List<AuthorizationServer> GetAuthorizationServers_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AuthorizationServer>(Service, this.Id, "authorizationserver", "organizationid", Columns); }
/// <summary>
/// <para><b>AuthorizationServer (Organization Id)</b></para>
/// <para>Schema Name: lk_authorizationserver_organizationid</para>
/// </summary>
public List<AuthorizationServer> GetAuthorizationServers_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AuthorizationServer>(Service, this.Id, "authorizationserver", "organizationid", Columns); }
/// <summary>
/// <para><b>AzureServiceConnection (Organization)</b></para>
/// <para>Schema Name: organization_azureserviceconnection</para>
/// </summary>
public List<AzureServiceConnection> GetAzureServiceConnections_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AzureServiceConnection>(Service, this.Id, "azureserviceconnection", "organizationid", Columns); }
/// <summary>
/// <para><b>AzureServiceConnection (Organization)</b></para>
/// <para>Schema Name: organization_azureserviceconnection</para>
/// </summary>
public List<AzureServiceConnection> GetAzureServiceConnections_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AzureServiceConnection>(Service, this.Id, "azureserviceconnection", "organizationid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: Organization_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: Organization_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BusinessUnit (Organization)</b></para>
/// <para>Schema Name: organization_business_units</para>
/// </summary>
public List<BusinessUnit> GetBusinessUnits_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BusinessUnit>(Service, this.Id, "businessunit", "organizationid", Columns); }
/// <summary>
/// <para><b>BusinessUnit (Organization)</b></para>
/// <para>Schema Name: organization_business_units</para>
/// </summary>
public List<BusinessUnit> GetBusinessUnits_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BusinessUnit>(Service, this.Id, "businessunit", "organizationid", Columns); }
/// <summary>
/// <para><b>Announcement (Organization)</b></para>
/// <para>Schema Name: organization_business_unit_news_articles</para>
/// </summary>
public List<Announcement> GetAnnouncements_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Announcement>(Service, this.Id, "businessunitnewsarticle", "organizationid", Columns); }
/// <summary>
/// <para><b>Announcement (Organization)</b></para>
/// <para>Schema Name: organization_business_unit_news_articles</para>
/// </summary>
public List<Announcement> GetAnnouncements_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Announcement>(Service, this.Id, "businessunitnewsarticle", "organizationid", Columns); }
/// <summary>
/// <para><b>Calendar (Organization)</b></para>
/// <para>Schema Name: organization_calendars</para>
/// </summary>
public List<Calendar> GetCalendars_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Calendar>(Service, this.Id, "calendar", "organizationid", Columns); }
/// <summary>
/// <para><b>Calendar (Organization)</b></para>
/// <para>Schema Name: organization_calendars</para>
/// </summary>
public List<Calendar> GetCalendars_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Calendar>(Service, this.Id, "calendar", "organizationid", Columns); }
/// <summary>
/// <para><b>ChannelProperty (Organization)</b></para>
/// <para>Schema Name: channelproperty_organization</para>
/// </summary>
public List<ChannelProperty> GetChannelProperties_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ChannelProperty>(Service, this.Id, "channelproperty", "organizationid", Columns); }
/// <summary>
/// <para><b>ChannelProperty (Organization)</b></para>
/// <para>Schema Name: channelproperty_organization</para>
/// </summary>
public List<ChannelProperty> GetChannelProperties_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ChannelProperty>(Service, this.Id, "channelproperty", "organizationid", Columns); }
/// <summary>
/// <para><b>ChannelPropertyGroup (Organization)</b></para>
/// <para>Schema Name: channelpropertygroup_organization</para>
/// </summary>
public List<ChannelPropertyGroup> GetChannelPropertyGroups_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ChannelPropertyGroup>(Service, this.Id, "channelpropertygroup", "organizationid", Columns); }
/// <summary>
/// <para><b>ChannelPropertyGroup (Organization)</b></para>
/// <para>Schema Name: channelpropertygroup_organization</para>
/// </summary>
public List<ChannelPropertyGroup> GetChannelPropertyGroups_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ChannelPropertyGroup>(Service, this.Id, "channelpropertygroup", "organizationid", Columns); }
/// <summary>
/// <para><b>Competitor (Organization)</b></para>
/// <para>Schema Name: organization_competitors</para>
/// </summary>
public List<Competitor> GetCompetitors_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Competitor>(Service, this.Id, "competitor", "organizationid", Columns); }
/// <summary>
/// <para><b>Competitor (Organization)</b></para>
/// <para>Schema Name: organization_competitors</para>
/// </summary>
public List<Competitor> GetCompetitors_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Competitor>(Service, this.Id, "competitor", "organizationid", Columns); }
/// <summary>
/// <para><b>ProcessConfiguration ()</b></para>
/// <para>Schema Name: organization_complexcontrols</para>
/// </summary>
public List<ProcessConfiguration> GetProcessConfigurations (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessConfiguration>(Service, this.Id, "complexcontrol", "organizationid", Columns); }
/// <summary>
/// <para><b>ProcessConfiguration ()</b></para>
/// <para>Schema Name: organization_complexcontrols</para>
/// </summary>
public List<ProcessConfiguration> GetProcessConfigurations (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessConfiguration>(Service, this.Id, "complexcontrol", "organizationid", Columns); }
/// <summary>
/// <para><b>ConnectionRole (Organization)</b></para>
/// <para>Schema Name: organization_connection_roles</para>
/// </summary>
public List<ConnectionRole> GetConnectionRoles_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ConnectionRole>(Service, this.Id, "connectionrole", "organizationid", Columns); }
/// <summary>
/// <para><b>ConnectionRole (Organization)</b></para>
/// <para>Schema Name: organization_connection_roles</para>
/// </summary>
public List<ConnectionRole> GetConnectionRoles_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ConnectionRole>(Service, this.Id, "connectionrole", "organizationid", Columns); }
/// <summary>
/// <para><b>ResourceGroup (Organization)</b></para>
/// <para>Schema Name: organization_constraint_based_groups</para>
/// </summary>
public List<ResourceGroup> GetResourceGroups_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceGroup>(Service, this.Id, "constraintbasedgroup", "organizationid", Columns); }
/// <summary>
/// <para><b>ResourceGroup (Organization)</b></para>
/// <para>Schema Name: organization_constraint_based_groups</para>
/// </summary>
public List<ResourceGroup> GetResourceGroups_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceGroup>(Service, this.Id, "constraintbasedgroup", "organizationid", Columns); }
/// <summary>
/// <para><b>ContractTemplate (Organization)</b></para>
/// <para>Schema Name: organization_contract_templates</para>
/// </summary>
public List<ContractTemplate> GetContractTemplates_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ContractTemplate>(Service, this.Id, "contracttemplate", "organizationid", Columns); }
/// <summary>
/// <para><b>ContractTemplate (Organization)</b></para>
/// <para>Schema Name: organization_contract_templates</para>
/// </summary>
public List<ContractTemplate> GetContractTemplates_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ContractTemplate>(Service, this.Id, "contracttemplate", "organizationid", Columns); }
/// <summary>
/// <para><b>CustomControl (Organization)</b></para>
/// <para>Schema Name: customcontrol_organization</para>
/// </summary>
public List<CustomControl> GetCustomControls_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CustomControl>(Service, this.Id, "customcontrol", "organizationid", Columns); }
/// <summary>
/// <para><b>CustomControl (Organization)</b></para>
/// <para>Schema Name: customcontrol_organization</para>
/// </summary>
public List<CustomControl> GetCustomControls_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CustomControl>(Service, this.Id, "customcontrol", "organizationid", Columns); }
/// <summary>
/// <para><b>CustomControlDefaultConfig (Organization)</b></para>
/// <para>Schema Name: customcontroldefaultconfig_organization</para>
/// </summary>
public List<CustomControlDefaultConfig> GetCustomControlDefaultConfigs_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CustomControlDefaultConfig>(Service, this.Id, "customcontroldefaultconfig", "organizationid", Columns); }
/// <summary>
/// <para><b>CustomControlDefaultConfig (Organization)</b></para>
/// <para>Schema Name: customcontroldefaultconfig_organization</para>
/// </summary>
public List<CustomControlDefaultConfig> GetCustomControlDefaultConfigs_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CustomControlDefaultConfig>(Service, this.Id, "customcontroldefaultconfig", "organizationid", Columns); }
/// <summary>
/// <para><b>CustomControlResource (Organization)</b></para>
/// <para>Schema Name: customcontrolresource_organization</para>
/// </summary>
public List<CustomControlResource> GetCustomControlResources_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CustomControlResource>(Service, this.Id, "customcontrolresource", "organizationid", Columns); }
/// <summary>
/// <para><b>CustomControlResource (Organization)</b></para>
/// <para>Schema Name: customcontrolresource_organization</para>
/// </summary>
public List<CustomControlResource> GetCustomControlResources_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CustomControlResource>(Service, this.Id, "customcontrolresource", "organizationid", Columns); }
/// <summary>
/// <para><b>DataPerformanceDashboard ()</b></para>
/// <para>Schema Name: lk_dataperformance_organizationid</para>
/// </summary>
public List<DataPerformanceDashboard> GetDataPerformanceCollection (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DataPerformanceDashboard>(Service, this.Id, "dataperformance", "organizationid", Columns); }
/// <summary>
/// <para><b>DataPerformanceDashboard ()</b></para>
/// <para>Schema Name: lk_dataperformance_organizationid</para>
/// </summary>
public List<DataPerformanceDashboard> GetDataPerformanceCollection (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DataPerformanceDashboard>(Service, this.Id, "dataperformance", "organizationid", Columns); }
/// <summary>
/// <para><b>DelveActionHub (Organization Id)</b></para>
/// <para>Schema Name: organization_delveactionhub</para>
/// </summary>
public List<DelveActionHub> GetSmartActions_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DelveActionHub>(Service, this.Id, "delveactionhub", "organizationid", Columns); }
/// <summary>
/// <para><b>DelveActionHub (Organization Id)</b></para>
/// <para>Schema Name: organization_delveactionhub</para>
/// </summary>
public List<DelveActionHub> GetSmartActions_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DelveActionHub>(Service, this.Id, "delveactionhub", "organizationid", Columns); }
/// <summary>
/// <para><b>DiscountList (Organization)</b></para>
/// <para>Schema Name: organization_discount_types</para>
/// </summary>
public List<DiscountList> GetDiscountLists_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DiscountList>(Service, this.Id, "discounttype", "organizationid", Columns); }
/// <summary>
/// <para><b>DiscountList (Organization)</b></para>
/// <para>Schema Name: organization_discount_types</para>
/// </summary>
public List<DiscountList> GetDiscountLists_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DiscountList>(Service, this.Id, "discounttype", "organizationid", Columns); }
/// <summary>
/// <para><b>DisplayString (Organization)</b></para>
/// <para>Schema Name: organization_custom_displaystrings</para>
/// </summary>
public List<DisplayString> GetDisplayStrings_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DisplayString>(Service, this.Id, "displaystring", "organizationid", Columns); }
/// <summary>
/// <para><b>DisplayString (Organization)</b></para>
/// <para>Schema Name: organization_custom_displaystrings</para>
/// </summary>
public List<DisplayString> GetDisplayStrings_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DisplayString>(Service, this.Id, "displaystring", "organizationid", Columns); }
/// <summary>
/// <para><b>IndexedArticle (Organization)</b></para>
/// <para>Schema Name: organization_indexed_documents</para>
/// </summary>
public List<IndexedArticle> GetIndexedArticles_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IndexedArticle>(Service, this.Id, "documentindex", "organizationid", Columns); }
/// <summary>
/// <para><b>IndexedArticle (Organization)</b></para>
/// <para>Schema Name: organization_indexed_documents</para>
/// </summary>
public List<IndexedArticle> GetIndexedArticles_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IndexedArticle>(Service, this.Id, "documentindex", "organizationid", Columns); }
/// <summary>
/// <para><b>DocumentTemplate (Organization)</b></para>
/// <para>Schema Name: lk_documenttemplatebase_organization</para>
/// </summary>
public List<DocumentTemplate> GetDocumentTemplates_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DocumentTemplate>(Service, this.Id, "documenttemplate", "organizationid", Columns); }
/// <summary>
/// <para><b>DocumentTemplate (Organization)</b></para>
/// <para>Schema Name: lk_documenttemplatebase_organization</para>
/// </summary>
public List<DocumentTemplate> GetDocumentTemplates_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DocumentTemplate>(Service, this.Id, "documenttemplate", "organizationid", Columns); }
/// <summary>
/// <para><b>Property (Organization)</b></para>
/// <para>Schema Name: dynamicproperty_organization</para>
/// </summary>
public List<Property> GetProperties_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Property>(Service, this.Id, "dynamicproperty", "organizationid", Columns); }
/// <summary>
/// <para><b>Property (Organization)</b></para>
/// <para>Schema Name: dynamicproperty_organization</para>
/// </summary>
public List<Property> GetProperties_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Property>(Service, this.Id, "dynamicproperty", "organizationid", Columns); }
/// <summary>
/// <para><b>PropertyAssociation (Organization)</b></para>
/// <para>Schema Name: DynamicPropertyAssociation_organization</para>
/// </summary>
public List<PropertyAssociation> GetPropertyAssociations_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PropertyAssociation>(Service, this.Id, "dynamicpropertyassociation", "organizationid", Columns); }
/// <summary>
/// <para><b>PropertyAssociation (Organization)</b></para>
/// <para>Schema Name: DynamicPropertyAssociation_organization</para>
/// </summary>
public List<PropertyAssociation> GetPropertyAssociations_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PropertyAssociation>(Service, this.Id, "dynamicpropertyassociation", "organizationid", Columns); }
/// <summary>
/// <para><b>PropertyOptionSetItem (Organization)</b></para>
/// <para>Schema Name: DynamicPropertyOptionSetItem_organization</para>
/// </summary>
public List<PropertyOptionSetItem> GetPropertyOptionSetItems_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PropertyOptionSetItem>(Service, this.Id, "dynamicpropertyoptionsetitem", "organizationid", Columns); }
/// <summary>
/// <para><b>PropertyOptionSetItem (Organization)</b></para>
/// <para>Schema Name: DynamicPropertyOptionSetItem_organization</para>
/// </summary>
public List<PropertyOptionSetItem> GetPropertyOptionSetItems_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PropertyOptionSetItem>(Service, this.Id, "dynamicpropertyoptionsetitem", "organizationid", Columns); }
/// <summary>
/// <para><b>EmailServerProfile (Organization Id)</b></para>
/// <para>Schema Name: organization_emailserverprofile</para>
/// </summary>
public List<EmailServerProfile> GetEmailServerProfiles_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EmailServerProfile>(Service, this.Id, "emailserverprofile", "organizationid", Columns); }
/// <summary>
/// <para><b>EmailServerProfile (Organization Id)</b></para>
/// <para>Schema Name: organization_emailserverprofile</para>
/// </summary>
public List<EmailServerProfile> GetEmailServerProfiles_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EmailServerProfile>(Service, this.Id, "emailserverprofile", "organizationid", Columns); }
/// <summary>
/// <para><b>EntitlementChannel (Organization)</b></para>
/// <para>Schema Name: entitlementchannel_organization</para>
/// </summary>
public List<EntitlementChannel> GetEntitlementChannels_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EntitlementChannel>(Service, this.Id, "entitlementchannel", "organizationid", Columns); }
/// <summary>
/// <para><b>EntitlementChannel (Organization)</b></para>
/// <para>Schema Name: entitlementchannel_organization</para>
/// </summary>
public List<EntitlementChannel> GetEntitlementChannels_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EntitlementChannel>(Service, this.Id, "entitlementchannel", "organizationid", Columns); }
/// <summary>
/// <para><b>EntitlementTemplate (Organization)</b></para>
/// <para>Schema Name: entitlementtemplate_organization</para>
/// </summary>
public List<EntitlementTemplate> GetEntitlementTemplates_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EntitlementTemplate>(Service, this.Id, "entitlementtemplate", "organizationid", Columns); }
/// <summary>
/// <para><b>EntitlementTemplate (Organization)</b></para>
/// <para>Schema Name: entitlementtemplate_organization</para>
/// </summary>
public List<EntitlementTemplate> GetEntitlementTemplates_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EntitlementTemplate>(Service, this.Id, "entitlementtemplate", "organizationid", Columns); }
/// <summary>
/// <para><b>EntitlementTemplateChannel (Organization)</b></para>
/// <para>Schema Name: entitlementtemplatechannel_organization</para>
/// </summary>
public List<EntitlementTemplateChannel> GetForInternalUseOnly__Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EntitlementTemplateChannel>(Service, this.Id, "entitlementtemplatechannel", "organizationid", Columns); }
/// <summary>
/// <para><b>EntitlementTemplateChannel (Organization)</b></para>
/// <para>Schema Name: entitlementtemplatechannel_organization</para>
/// </summary>
public List<EntitlementTemplateChannel> GetForInternalUseOnly__Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EntitlementTemplateChannel>(Service, this.Id, "entitlementtemplatechannel", "organizationid", Columns); }
/// <summary>
/// <para><b>EntityMap ()</b></para>
/// <para>Schema Name: organization_entitymap</para>
/// </summary>
public List<EntityMap> GetEntityMaps (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EntityMap>(Service, this.Id, "entitymap", "organizationid", Columns); }
/// <summary>
/// <para><b>EntityMap ()</b></para>
/// <para>Schema Name: organization_entitymap</para>
/// </summary>
public List<EntityMap> GetEntityMaps (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EntityMap>(Service, this.Id, "entitymap", "organizationid", Columns); }
/// <summary>
/// <para><b>Facility_Equipment (Organization)</b></para>
/// <para>Schema Name: organization_equipment</para>
/// </summary>
public List<Facility_Equipment> GetFacilities_Equipment_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Facility_Equipment>(Service, this.Id, "equipment", "organizationid", Columns); }
/// <summary>
/// <para><b>Facility_Equipment (Organization)</b></para>
/// <para>Schema Name: organization_equipment</para>
/// </summary>
public List<Facility_Equipment> GetFacilities_Equipment_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Facility_Equipment>(Service, this.Id, "equipment", "organizationid", Columns); }
/// <summary>
/// <para><b>ExpiredProcess (Organization)</b></para>
/// <para>Schema Name: organization_expiredprocess</para>
/// </summary>
public List<ExpiredProcess> GetExpiredProcess_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ExpiredProcess>(Service, this.Id, "expiredprocess", "organizationid", Columns); }
/// <summary>
/// <para><b>ExpiredProcess (Organization)</b></para>
/// <para>Schema Name: organization_expiredprocess</para>
/// </summary>
public List<ExpiredProcess> GetExpiredProcess_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ExpiredProcess>(Service, this.Id, "expiredprocess", "organizationid", Columns); }
/// <summary>
/// <para><b>FieldSecurityProfile (Organization)</b></para>
/// <para>Schema Name: lk_fieldsecurityprofile_organizationid</para>
/// </summary>
public List<FieldSecurityProfile> GetFieldSecurityProfiles_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSecurityProfile>(Service, this.Id, "fieldsecurityprofile", "organizationid", Columns); }
/// <summary>
/// <para><b>FieldSecurityProfile (Organization)</b></para>
/// <para>Schema Name: lk_fieldsecurityprofile_organizationid</para>
/// </summary>
public List<FieldSecurityProfile> GetFieldSecurityProfiles_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSecurityProfile>(Service, this.Id, "fieldsecurityprofile", "organizationid", Columns); }
/// <summary>
/// <para><b>HierarchyRule ()</b></para>
/// <para>Schema Name: organization_hierarchyrules</para>
/// </summary>
public List<HierarchyRule> GetHierarchyRules (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<HierarchyRule>(Service, this.Id, "hierarchyrule", "organizationid", Columns); }
/// <summary>
/// <para><b>HierarchyRule ()</b></para>
/// <para>Schema Name: organization_hierarchyrules</para>
/// </summary>
public List<HierarchyRule> GetHierarchyRules (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<HierarchyRule>(Service, this.Id, "hierarchyrule", "organizationid", Columns); }
/// <summary>
/// <para><b>ImportJob (Organization)</b></para>
/// <para>Schema Name: organization_importjob</para>
/// </summary>
public List<ImportJob> GetImportJobs_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ImportJob>(Service, this.Id, "importjob", "organizationid", Columns); }
/// <summary>
/// <para><b>ImportJob (Organization)</b></para>
/// <para>Schema Name: organization_importjob</para>
/// </summary>
public List<ImportJob> GetImportJobs_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ImportJob>(Service, this.Id, "importjob", "organizationid", Columns); }
/// <summary>
/// <para><b>IntegrationStatus ()</b></para>
/// <para>Schema Name: organization_integration_statuses</para>
/// </summary>
public List<IntegrationStatus> GetIntegrationStatuses (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IntegrationStatus>(Service, this.Id, "integrationstatus", "organizationid", Columns); }
/// <summary>
/// <para><b>IntegrationStatus ()</b></para>
/// <para>Schema Name: organization_integration_statuses</para>
/// </summary>
public List<IntegrationStatus> GetIntegrationStatuses (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IntegrationStatus>(Service, this.Id, "integrationstatus", "organizationid", Columns); }
/// <summary>
/// <para><b>ISVConfig (Organization )</b></para>
/// <para>Schema Name: organization_isvconfigs</para>
/// </summary>
public List<ISVConfig> GetISVConfig_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ISVConfig>(Service, this.Id, "isvconfig", "organizationid", Columns); }
/// <summary>
/// <para><b>ISVConfig (Organization )</b></para>
/// <para>Schema Name: organization_isvconfigs</para>
/// </summary>
public List<ISVConfig> GetISVConfig_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ISVConfig>(Service, this.Id, "isvconfig", "organizationid", Columns); }
/// <summary>
/// <para><b>Article (Organization)</b></para>
/// <para>Schema Name: organization_kb_articles</para>
/// </summary>
public List<Article> GetArticles_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Article>(Service, this.Id, "kbarticle", "organizationid", Columns); }
/// <summary>
/// <para><b>Article (Organization)</b></para>
/// <para>Schema Name: organization_kb_articles</para>
/// </summary>
public List<Article> GetArticles_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Article>(Service, this.Id, "kbarticle", "organizationid", Columns); }
/// <summary>
/// <para><b>ArticleTemplate (Organization)</b></para>
/// <para>Schema Name: organization_kb_article_templates</para>
/// </summary>
public List<ArticleTemplate> GetArticleTemplates_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ArticleTemplate>(Service, this.Id, "kbarticletemplate", "organizationid", Columns); }
/// <summary>
/// <para><b>ArticleTemplate (Organization)</b></para>
/// <para>Schema Name: organization_kb_article_templates</para>
/// </summary>
public List<ArticleTemplate> GetArticleTemplates_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ArticleTemplate>(Service, this.Id, "kbarticletemplate", "organizationid", Columns); }
/// <summary>
/// <para><b>KnowledgeBaseRecord (Organization Id)</b></para>
/// <para>Schema Name: organization_KnowledgeBaseRecord</para>
/// </summary>
public List<KnowledgeBaseRecord> GetKnowledgeBaseRecords_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<KnowledgeBaseRecord>(Service, this.Id, "knowledgebaserecord", "organizationid", Columns); }
/// <summary>
/// <para><b>KnowledgeBaseRecord (Organization Id)</b></para>
/// <para>Schema Name: organization_KnowledgeBaseRecord</para>
/// </summary>
public List<KnowledgeBaseRecord> GetKnowledgeBaseRecords_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<KnowledgeBaseRecord>(Service, this.Id, "knowledgebaserecord", "organizationid", Columns); }
/// <summary>
/// <para><b>KnowledgeSearchModel (Organization)</b></para>
/// <para>Schema Name: organization_knowledgesearchmodel</para>
/// </summary>
public List<KnowledgeSearchModel> GetKnowledgeSearchModel_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<KnowledgeSearchModel>(Service, this.Id, "knowledgesearchmodel", "organizationid", Columns); }
/// <summary>
/// <para><b>KnowledgeSearchModel (Organization)</b></para>
/// <para>Schema Name: organization_knowledgesearchmodel</para>
/// </summary>
public List<KnowledgeSearchModel> GetKnowledgeSearchModel_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<KnowledgeSearchModel>(Service, this.Id, "knowledgesearchmodel", "organizationid", Columns); }
/// <summary>
/// <para><b>Language (Organization)</b></para>
/// <para>Schema Name: languagelocale_organization</para>
/// </summary>
public List<Language> GetLanguages_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Language>(Service, this.Id, "languagelocale", "organizationid", Columns); }
/// <summary>
/// <para><b>Language (Organization)</b></para>
/// <para>Schema Name: languagelocale_organization</para>
/// </summary>
public List<Language> GetLanguages_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Language>(Service, this.Id, "languagelocale", "organizationid", Columns); }
/// <summary>
/// <para><b>LeadToOpportunitySalesProcess (Organization Id)</b></para>
/// <para>Schema Name: organization_leadtoopportunitysalesprocess</para>
/// </summary>
public List<LeadToOpportunitySalesProcess> GetLeadToOpportunitySalesProcess_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<LeadToOpportunitySalesProcess>(Service, this.Id, "leadtoopportunitysalesprocess", "organizationid", Columns); }
/// <summary>
/// <para><b>LeadToOpportunitySalesProcess (Organization Id)</b></para>
/// <para>Schema Name: organization_leadtoopportunitysalesprocess</para>
/// </summary>
public List<LeadToOpportunitySalesProcess> GetLeadToOpportunitySalesProcess_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<LeadToOpportunitySalesProcess>(Service, this.Id, "leadtoopportunitysalesprocess", "organizationid", Columns); }
/// <summary>
/// <para><b>License ()</b></para>
/// <para>Schema Name: organization_licenses</para>
/// </summary>
public List<License> GetLicenses (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<License>(Service, this.Id, "license", "organizationid", Columns); }
/// <summary>
/// <para><b>License ()</b></para>
/// <para>Schema Name: organization_licenses</para>
/// </summary>
public List<License> GetLicenses (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<License>(Service, this.Id, "license", "organizationid", Columns); }
/// <summary>
/// <para><b>Mailbox (Organization)</b></para>
/// <para>Schema Name: organization_mailbox</para>
/// </summary>
public List<Mailbox> GetMailboxes_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Mailbox>(Service, this.Id, "mailbox", "organizationid", Columns); }
/// <summary>
/// <para><b>Mailbox (Organization)</b></para>
/// <para>Schema Name: organization_mailbox</para>
/// </summary>
public List<Mailbox> GetMailboxes_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Mailbox>(Service, this.Id, "mailbox", "organizationid", Columns); }
/// <summary>
/// <para><b>MailboxStatistics (Organization)</b></para>
/// <para>Schema Name: organization_mailboxstatistics</para>
/// </summary>
public List<MailboxStatistics> GetMailboxStatistics_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxStatistics>(Service, this.Id, "mailboxstatistics", "organizationid", Columns); }
/// <summary>
/// <para><b>MailboxStatistics (Organization)</b></para>
/// <para>Schema Name: organization_mailboxstatistics</para>
/// </summary>
public List<MailboxStatistics> GetMailboxStatistics_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxStatistics>(Service, this.Id, "mailboxstatistics", "organizationid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Organization)</b></para>
/// <para>Schema Name: Organization_MailboxTrackingFolder</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "organizationid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Organization)</b></para>
/// <para>Schema Name: Organization_MailboxTrackingFolder</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "organizationid", Columns); }
/// <summary>
/// <para><b>GoalMetric (Organization Id)</b></para>
/// <para>Schema Name: organization_metric</para>
/// </summary>
public List<GoalMetric> GetGoalMetrics_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<GoalMetric>(Service, this.Id, "metric", "organizationid", Columns); }
/// <summary>
/// <para><b>GoalMetric (Organization Id)</b></para>
/// <para>Schema Name: organization_metric</para>
/// </summary>
public List<GoalMetric> GetGoalMetrics_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<GoalMetric>(Service, this.Id, "metric", "organizationid", Columns); }
/// <summary>
/// <para><b>MobileOfflineProfile (Organization)</b></para>
/// <para>Schema Name: MobileOfflineProfile_organization</para>
/// </summary>
public List<MobileOfflineProfile> GetMobileOfflineProfiles_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MobileOfflineProfile>(Service, this.Id, "mobileofflineprofile", "organizationid", Columns); }
/// <summary>
/// <para><b>MobileOfflineProfile (Organization)</b></para>
/// <para>Schema Name: MobileOfflineProfile_organization</para>
/// </summary>
public List<MobileOfflineProfile> GetMobileOfflineProfiles_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MobileOfflineProfile>(Service, this.Id, "mobileofflineprofile", "organizationid", Columns); }
/// <summary>
/// <para><b>MobileOfflineProfileItem (Organization)</b></para>
/// <para>Schema Name: MobileOfflineProfileItem_organization</para>
/// </summary>
public List<MobileOfflineProfileItem> GetMobileOfflineProfileItem_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MobileOfflineProfileItem>(Service, this.Id, "mobileofflineprofileitem", "organizationid", Columns); }
/// <summary>
/// <para><b>MobileOfflineProfileItem (Organization)</b></para>
/// <para>Schema Name: MobileOfflineProfileItem_organization</para>
/// </summary>
public List<MobileOfflineProfileItem> GetMobileOfflineProfileItem_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MobileOfflineProfileItem>(Service, this.Id, "mobileofflineprofileitem", "organizationid", Columns); }
/// <summary>
/// <para><b>MobileOfflineProfileItemAssociation (Organization)</b></para>
/// <para>Schema Name: MobileOfflineProfileItemAssociation_organization</para>
/// </summary>
public List<MobileOfflineProfileItemAssociation> GetMobileOfflineProfileItemAssociations_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MobileOfflineProfileItemAssociation>(Service, this.Id, "mobileofflineprofileitemassociation", "organizationid", Columns); }
/// <summary>
/// <para><b>MobileOfflineProfileItemAssociation (Organization)</b></para>
/// <para>Schema Name: MobileOfflineProfileItemAssociation_organization</para>
/// </summary>
public List<MobileOfflineProfileItemAssociation> GetMobileOfflineProfileItemAssociations_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MobileOfflineProfileItemAssociation>(Service, this.Id, "mobileofflineprofileitemassociation", "organizationid", Columns); }
/// <summary>
/// <para><b>BatchJob (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_batchjob</para>
/// </summary>
public List<BatchJob> GetBatchJobs_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BatchJob>(Service, this.Id, "msdyn_batchjob", "organizationid", Columns); }
/// <summary>
/// <para><b>BatchJob (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_batchjob</para>
/// </summary>
public List<BatchJob> GetBatchJobs_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BatchJob>(Service, this.Id, "msdyn_batchjob", "organizationid", Columns); }
/// <summary>
/// <para><b>PurchaseOrderBusinessProcess (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_bpf_2c5fe86acc8b414b8322ae571000c799</para>
/// </summary>
public List<PurchaseOrderBusinessProcess> GetPurchaseOrderBusinessProcess_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderBusinessProcess>(Service, this.Id, "msdyn_bpf_2c5fe86acc8b414b8322ae571000c799", "organizationid", Columns); }
/// <summary>
/// <para><b>PurchaseOrderBusinessProcess (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_bpf_2c5fe86acc8b414b8322ae571000c799</para>
/// </summary>
public List<PurchaseOrderBusinessProcess> GetPurchaseOrderBusinessProcess_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderBusinessProcess>(Service, this.Id, "msdyn_bpf_2c5fe86acc8b414b8322ae571000c799", "organizationid", Columns); }
/// <summary>
/// <para><b>ProjectStages (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_bpf_665e73aa18c247d886bfc50499c73b82</para>
/// </summary>
public List<ProjectStages> GetProjectStages_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectStages>(Service, this.Id, "msdyn_bpf_665e73aa18c247d886bfc50499c73b82", "organizationid", Columns); }
/// <summary>
/// <para><b>ProjectStages (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_bpf_665e73aa18c247d886bfc50499c73b82</para>
/// </summary>
public List<ProjectStages> GetProjectStages_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectStages>(Service, this.Id, "msdyn_bpf_665e73aa18c247d886bfc50499c73b82", "organizationid", Columns); }
/// <summary>
/// <para><b>CaseToWorkOrderBusinessProcess (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_bpf_989e9b1857e24af18787d5143b67523b</para>
/// </summary>
public List<CaseToWorkOrderBusinessProcess> GetCaseToWorkOrderBusinessProcess_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CaseToWorkOrderBusinessProcess>(Service, this.Id, "msdyn_bpf_989e9b1857e24af18787d5143b67523b", "organizationid", Columns); }
/// <summary>
/// <para><b>CaseToWorkOrderBusinessProcess (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_bpf_989e9b1857e24af18787d5143b67523b</para>
/// </summary>
public List<CaseToWorkOrderBusinessProcess> GetCaseToWorkOrderBusinessProcess_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CaseToWorkOrderBusinessProcess>(Service, this.Id, "msdyn_bpf_989e9b1857e24af18787d5143b67523b", "organizationid", Columns); }
/// <summary>
/// <para><b>AgreementBusinessProcess (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3</para>
/// </summary>
public List<AgreementBusinessProcess> GetAgreementBusinessProcess_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBusinessProcess>(Service, this.Id, "msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3", "organizationid", Columns); }
/// <summary>
/// <para><b>AgreementBusinessProcess (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3</para>
/// </summary>
public List<AgreementBusinessProcess> GetAgreementBusinessProcess_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBusinessProcess>(Service, this.Id, "msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3", "organizationid", Columns); }
/// <summary>
/// <para><b>WorkOrderBusinessProcess (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39</para>
/// </summary>
public List<WorkOrderBusinessProcess> GetWorkOrderBusinessProcess_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderBusinessProcess>(Service, this.Id, "msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39", "organizationid", Columns); }
/// <summary>
/// <para><b>WorkOrderBusinessProcess (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39</para>
/// </summary>
public List<WorkOrderBusinessProcess> GetWorkOrderBusinessProcess_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderBusinessProcess>(Service, this.Id, "msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39", "organizationid", Columns); }
/// <summary>
/// <para><b>InvoiceProcess (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d</para>
/// </summary>
public List<InvoiceProcess> GetInvoiceProcess_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceProcess>(Service, this.Id, "msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d", "organizationid", Columns); }
/// <summary>
/// <para><b>InvoiceProcess (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d</para>
/// </summary>
public List<InvoiceProcess> GetInvoiceProcess_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceProcess>(Service, this.Id, "msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d", "organizationid", Columns); }
/// <summary>
/// <para><b>ProjectContractLineInvoiceSchedule (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_contractlineinvoiceschedule</para>
/// </summary>
public List<ProjectContractLineInvoiceSchedule> GetProjectContractLineInvoiceSchedules_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineInvoiceSchedule>(Service, this.Id, "msdyn_contractlineinvoiceschedule", "organizationid", Columns); }
/// <summary>
/// <para><b>ProjectContractLineInvoiceSchedule (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_contractlineinvoiceschedule</para>
/// </summary>
public List<ProjectContractLineInvoiceSchedule> GetProjectContractLineInvoiceSchedules_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineInvoiceSchedule>(Service, this.Id, "msdyn_contractlineinvoiceschedule", "organizationid", Columns); }
/// <summary>
/// <para><b>ExpenseCategory (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_expensecategory</para>
/// </summary>
public List<ExpenseCategory> GetExpenseCategories_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ExpenseCategory>(Service, this.Id, "msdyn_expensecategory", "organizationid", Columns); }
/// <summary>
/// <para><b>ExpenseCategory (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_expensecategory</para>
/// </summary>
public List<ExpenseCategory> GetExpenseCategories_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ExpenseCategory>(Service, this.Id, "msdyn_expensecategory", "organizationid", Columns); }
/// <summary>
/// <para><b>FieldServicePriceListItem (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_fieldservicepricelistitem</para>
/// </summary>
public List<FieldServicePriceListItem> GetFieldServicePriceListItems_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldServicePriceListItem>(Service, this.Id, "msdyn_fieldservicepricelistitem", "organizationid", Columns); }
/// <summary>
/// <para><b>FieldServicePriceListItem (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_fieldservicepricelistitem</para>
/// </summary>
public List<FieldServicePriceListItem> GetFieldServicePriceListItems_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldServicePriceListItem>(Service, this.Id, "msdyn_fieldservicepricelistitem", "organizationid", Columns); }
/// <summary>
/// <para><b>FieldServiceSystemJob (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_fieldservicesystemjob</para>
/// </summary>
public List<FieldServiceSystemJob> GetFieldServiceSystemJobs_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldServiceSystemJob>(Service, this.Id, "msdyn_fieldservicesystemjob", "organizationid", Columns); }
/// <summary>
/// <para><b>FieldServiceSystemJob (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_fieldservicesystemjob</para>
/// </summary>
public List<FieldServiceSystemJob> GetFieldServiceSystemJobs_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldServiceSystemJob>(Service, this.Id, "msdyn_fieldservicesystemjob", "organizationid", Columns); }
/// <summary>
/// <para><b>InvoiceFrequency (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_invoicefrequency</para>
/// </summary>
public List<InvoiceFrequency> GetInvoiceFrequencies_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceFrequency>(Service, this.Id, "msdyn_invoicefrequency", "organizationid", Columns); }
/// <summary>
/// <para><b>InvoiceFrequency (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_invoicefrequency</para>
/// </summary>
public List<InvoiceFrequency> GetInvoiceFrequencies_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceFrequency>(Service, this.Id, "msdyn_invoicefrequency", "organizationid", Columns); }
/// <summary>
/// <para><b>InvoiceFrequencyDetail (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_invoicefrequencydetail</para>
/// </summary>
public List<InvoiceFrequencyDetail> GetInvoiceFrequencyDetails_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceFrequencyDetail>(Service, this.Id, "msdyn_invoicefrequencydetail", "organizationid", Columns); }
/// <summary>
/// <para><b>InvoiceFrequencyDetail (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_invoicefrequencydetail</para>
/// </summary>
public List<InvoiceFrequencyDetail> GetInvoiceFrequencyDetails_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceFrequencyDetail>(Service, this.Id, "msdyn_invoicefrequencydetail", "organizationid", Columns); }
/// <summary>
/// <para><b>ResultCache (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_mlresultcache</para>
/// </summary>
public List<ResultCache> GetResultCaches_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResultCache>(Service, this.Id, "msdyn_mlresultcache", "organizationid", Columns); }
/// <summary>
/// <para><b>ResultCache (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_mlresultcache</para>
/// </summary>
public List<ResultCache> GetResultCaches_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResultCache>(Service, this.Id, "msdyn_mlresultcache", "organizationid", Columns); }
/// <summary>
/// <para><b>OrganizationalUnit (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_organizationalunit</para>
/// </summary>
public List<OrganizationalUnit> GetOrganizationalUnits_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrganizationalUnit>(Service, this.Id, "msdyn_organizationalunit", "organizationid", Columns); }
/// <summary>
/// <para><b>OrganizationalUnit (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_organizationalunit</para>
/// </summary>
public List<OrganizationalUnit> GetOrganizationalUnits_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrganizationalUnit>(Service, this.Id, "msdyn_organizationalunit", "organizationid", Columns); }
/// <summary>
/// <para><b>PostConfiguration (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_postconfig</para>
/// </summary>
public List<PostConfiguration> GetPostConfigurations_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostConfiguration>(Service, this.Id, "msdyn_postconfig", "organizationid", Columns); }
/// <summary>
/// <para><b>PostConfiguration (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_postconfig</para>
/// </summary>
public List<PostConfiguration> GetPostConfigurations_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostConfiguration>(Service, this.Id, "msdyn_postconfig", "organizationid", Columns); }
/// <summary>
/// <para><b>PostRuleConfiguration (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_postruleconfig</para>
/// </summary>
public List<PostRuleConfiguration> GetPostRuleConfigurations_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostRuleConfiguration>(Service, this.Id, "msdyn_postruleconfig", "organizationid", Columns); }
/// <summary>
/// <para><b>PostRuleConfiguration (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_postruleconfig</para>
/// </summary>
public List<PostRuleConfiguration> GetPostRuleConfigurations_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostRuleConfiguration>(Service, this.Id, "msdyn_postruleconfig", "organizationid", Columns); }
/// <summary>
/// <para><b>ProcessNotes (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_processnotes</para>
/// </summary>
public List<ProcessNotes> GetProcessNotes_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessNotes>(Service, this.Id, "msdyn_processnotes", "organizationid", Columns); }
/// <summary>
/// <para><b>ProcessNotes (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_processnotes</para>
/// </summary>
public List<ProcessNotes> GetProcessNotes_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessNotes>(Service, this.Id, "msdyn_processnotes", "organizationid", Columns); }
/// <summary>
/// <para><b>ProductInventory (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_productinventory</para>
/// </summary>
public List<ProductInventory> GetProductInventory_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProductInventory>(Service, this.Id, "msdyn_productinventory", "organizationid", Columns); }
/// <summary>
/// <para><b>ProductInventory (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_productinventory</para>
/// </summary>
public List<ProductInventory> GetProductInventory_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProductInventory>(Service, this.Id, "msdyn_productinventory", "organizationid", Columns); }
/// <summary>
/// <para><b>ProjectParameter (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_projectparameter</para>
/// </summary>
public List<ProjectParameter> GetProjectParameters_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectParameter>(Service, this.Id, "msdyn_projectparameter", "organizationid", Columns); }
/// <summary>
/// <para><b>ProjectParameter (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_projectparameter</para>
/// </summary>
public List<ProjectParameter> GetProjectParameters_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectParameter>(Service, this.Id, "msdyn_projectparameter", "organizationid", Columns); }
/// <summary>
/// <para><b>ProjectParameterPriceList (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_projectparameterpricelist</para>
/// </summary>
public List<ProjectParameterPriceList> GetProjectParameterPriceLists_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectParameterPriceList>(Service, this.Id, "msdyn_projectparameterpricelist", "organizationid", Columns); }
/// <summary>
/// <para><b>ProjectParameterPriceList (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_projectparameterpricelist</para>
/// </summary>
public List<ProjectParameterPriceList> GetProjectParameterPriceLists_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectParameterPriceList>(Service, this.Id, "msdyn_projectparameterpricelist", "organizationid", Columns); }
/// <summary>
/// <para><b>ProjectTeamMemberSign_Up (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_projectteammembersignup</para>
/// </summary>
public List<ProjectTeamMemberSign_Up> GetProjectTeamMembersSign_Up_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTeamMemberSign_Up>(Service, this.Id, "msdyn_projectteammembersignup", "organizationid", Columns); }
/// <summary>
/// <para><b>ProjectTeamMemberSign_Up (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_projectteammembersignup</para>
/// </summary>
public List<ProjectTeamMemberSign_Up> GetProjectTeamMembersSign_Up_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTeamMemberSign_Up>(Service, this.Id, "msdyn_projectteammembersignup", "organizationid", Columns); }
/// <summary>
/// <para><b>QuoteLineInvoiceSchedule (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_quotelineinvoiceschedule</para>
/// </summary>
public List<QuoteLineInvoiceSchedule> GetQuoteLineInvoiceSchedule_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineInvoiceSchedule>(Service, this.Id, "msdyn_quotelineinvoiceschedule", "organizationid", Columns); }
/// <summary>
/// <para><b>QuoteLineInvoiceSchedule (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_quotelineinvoiceschedule</para>
/// </summary>
public List<QuoteLineInvoiceSchedule> GetQuoteLineInvoiceSchedule_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineInvoiceSchedule>(Service, this.Id, "msdyn_quotelineinvoiceschedule", "organizationid", Columns); }
/// <summary>
/// <para><b>RolePrice (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_resourcecategorypricelevel</para>
/// </summary>
public List<RolePrice> GetRolePrices_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RolePrice>(Service, this.Id, "msdyn_resourcecategorypricelevel", "organizationid", Columns); }
/// <summary>
/// <para><b>RolePrice (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_resourcecategorypricelevel</para>
/// </summary>
public List<RolePrice> GetRolePrices_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RolePrice>(Service, this.Id, "msdyn_resourcecategorypricelevel", "organizationid", Columns); }
/// <summary>
/// <para><b>SchedulingParameter (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_schedulingparameter</para>
/// </summary>
public List<SchedulingParameter> GetSchedulingParameters_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SchedulingParameter>(Service, this.Id, "msdyn_schedulingparameter", "organizationid", Columns); }
/// <summary>
/// <para><b>SchedulingParameter (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_schedulingparameter</para>
/// </summary>
public List<SchedulingParameter> GetSchedulingParameters_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SchedulingParameter>(Service, this.Id, "msdyn_schedulingparameter", "organizationid", Columns); }
/// <summary>
/// <para><b>TransactionCategory (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_transactioncategory</para>
/// </summary>
public List<TransactionCategory> GetTransactionCategories_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TransactionCategory>(Service, this.Id, "msdyn_transactioncategory", "organizationid", Columns); }
/// <summary>
/// <para><b>TransactionCategory (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_transactioncategory</para>
/// </summary>
public List<TransactionCategory> GetTransactionCategories_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TransactionCategory>(Service, this.Id, "msdyn_transactioncategory", "organizationid", Columns); }
/// <summary>
/// <para><b>TransactionCategoryClassification (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_transactioncategoryclassification</para>
/// </summary>
public List<TransactionCategoryClassification> GetTransactionCategoryClassifications_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TransactionCategoryClassification>(Service, this.Id, "msdyn_transactioncategoryclassification", "organizationid", Columns); }
/// <summary>
/// <para><b>TransactionCategoryClassification (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_transactioncategoryclassification</para>
/// </summary>
public List<TransactionCategoryClassification> GetTransactionCategoryClassifications_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TransactionCategoryClassification>(Service, this.Id, "msdyn_transactioncategoryclassification", "organizationid", Columns); }
/// <summary>
/// <para><b>TransactionCategoryHierarchyElement (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_transactioncategoryhierarchyelement</para>
/// </summary>
public List<TransactionCategoryHierarchyElement> GetTransactionCategoryHierarchyElements_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TransactionCategoryHierarchyElement>(Service, this.Id, "msdyn_transactioncategoryhierarchyelement", "organizationid", Columns); }
/// <summary>
/// <para><b>TransactionCategoryHierarchyElement (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_transactioncategoryhierarchyelement</para>
/// </summary>
public List<TransactionCategoryHierarchyElement> GetTransactionCategoryHierarchyElements_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TransactionCategoryHierarchyElement>(Service, this.Id, "msdyn_transactioncategoryhierarchyelement", "organizationid", Columns); }
/// <summary>
/// <para><b>TransactionCategoryPrice (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_transactioncategorypricelevel</para>
/// </summary>
public List<TransactionCategoryPrice> GetTransactionCategoryPrices_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TransactionCategoryPrice>(Service, this.Id, "msdyn_transactioncategorypricelevel", "organizationid", Columns); }
/// <summary>
/// <para><b>TransactionCategoryPrice (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_transactioncategorypricelevel</para>
/// </summary>
public List<TransactionCategoryPrice> GetTransactionCategoryPrices_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TransactionCategoryPrice>(Service, this.Id, "msdyn_transactioncategorypricelevel", "organizationid", Columns); }
/// <summary>
/// <para><b>TransactionType (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_transactiontype</para>
/// </summary>
public List<TransactionType> GetTransactionTypes_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TransactionType>(Service, this.Id, "msdyn_transactiontype", "organizationid", Columns); }
/// <summary>
/// <para><b>TransactionType (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_transactiontype</para>
/// </summary>
public List<TransactionType> GetTransactionTypes_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TransactionType>(Service, this.Id, "msdyn_transactiontype", "organizationid", Columns); }
/// <summary>
/// <para><b>UniqueNumber (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_uniquenumber</para>
/// </summary>
public List<UniqueNumber> GetUniqueNumbers_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UniqueNumber>(Service, this.Id, "msdyn_uniquenumber", "organizationid", Columns); }
/// <summary>
/// <para><b>UniqueNumber (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_uniquenumber</para>
/// </summary>
public List<UniqueNumber> GetUniqueNumbers_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UniqueNumber>(Service, this.Id, "msdyn_uniquenumber", "organizationid", Columns); }
/// <summary>
/// <para><b>WallView (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_wallsavedquery</para>
/// </summary>
public List<WallView> GetWallViews_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WallView>(Service, this.Id, "msdyn_wallsavedquery", "organizationid", Columns); }
/// <summary>
/// <para><b>WallView (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_wallsavedquery</para>
/// </summary>
public List<WallView> GetWallViews_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WallView>(Service, this.Id, "msdyn_wallsavedquery", "organizationid", Columns); }
/// <summary>
/// <para><b>WorkOrderDetailsGenerationQueue_Deprecated (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_workorderdetailsgenerationqueue</para>
/// </summary>
public List<WorkOrderDetailsGenerationQueue_Deprecated> GetWorkOrderDetailsGenerationQueue_Deprecated__OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderDetailsGenerationQueue_Deprecated>(Service, this.Id, "msdyn_workorderdetailsgenerationqueue", "organizationid", Columns); }
/// <summary>
/// <para><b>WorkOrderDetailsGenerationQueue_Deprecated (Organization Id)</b></para>
/// <para>Schema Name: organization_msdyn_workorderdetailsgenerationqueue</para>
/// </summary>
public List<WorkOrderDetailsGenerationQueue_Deprecated> GetWorkOrderDetailsGenerationQueue_Deprecated__OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderDetailsGenerationQueue_Deprecated>(Service, this.Id, "msdyn_workorderdetailsgenerationqueue", "organizationid", Columns); }
/// <summary>
/// <para><b>MarketingSiteMap (Organization Id)</b></para>
/// <para>Schema Name: organization_msdynsm_marketingsitemap</para>
/// </summary>
public List<MarketingSiteMap> GetMarketingSiteMap_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MarketingSiteMap>(Service, this.Id, "msdynsm_marketingsitemap", "organizationid", Columns); }
/// <summary>
/// <para><b>MarketingSiteMap (Organization Id)</b></para>
/// <para>Schema Name: organization_msdynsm_marketingsitemap</para>
/// </summary>
public List<MarketingSiteMap> GetMarketingSiteMap_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MarketingSiteMap>(Service, this.Id, "msdynsm_marketingsitemap", "organizationid", Columns); }
/// <summary>
/// <para><b>SalesSiteMap (Organization Id)</b></para>
/// <para>Schema Name: organization_msdynsm_salessitemap</para>
/// </summary>
public List<SalesSiteMap> GetSalesSiteMap_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SalesSiteMap>(Service, this.Id, "msdynsm_salessitemap", "organizationid", Columns); }
/// <summary>
/// <para><b>SalesSiteMap (Organization Id)</b></para>
/// <para>Schema Name: organization_msdynsm_salessitemap</para>
/// </summary>
public List<SalesSiteMap> GetSalesSiteMap_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SalesSiteMap>(Service, this.Id, "msdynsm_salessitemap", "organizationid", Columns); }
/// <summary>
/// <para><b>ServicesSiteMap (Organization Id)</b></para>
/// <para>Schema Name: organization_msdynsm_servicessitemap</para>
/// </summary>
public List<ServicesSiteMap> GetServicesSiteMap_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServicesSiteMap>(Service, this.Id, "msdynsm_servicessitemap", "organizationid", Columns); }
/// <summary>
/// <para><b>ServicesSiteMap (Organization Id)</b></para>
/// <para>Schema Name: organization_msdynsm_servicessitemap</para>
/// </summary>
public List<ServicesSiteMap> GetServicesSiteMap_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServicesSiteMap>(Service, this.Id, "msdynsm_servicessitemap", "organizationid", Columns); }
/// <summary>
/// <para><b>SettingsSiteMap (Organization Id)</b></para>
/// <para>Schema Name: organization_msdynsm_settingssitemap</para>
/// </summary>
public List<SettingsSiteMap> GetSettingsSiteMap_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SettingsSiteMap>(Service, this.Id, "msdynsm_settingssitemap", "organizationid", Columns); }
/// <summary>
/// <para><b>SettingsSiteMap (Organization Id)</b></para>
/// <para>Schema Name: organization_msdynsm_settingssitemap</para>
/// </summary>
public List<SettingsSiteMap> GetSettingsSiteMap_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SettingsSiteMap>(Service, this.Id, "msdynsm_settingssitemap", "organizationid", Columns); }
/// <summary>
/// <para><b>NewProcess (Organization Id)</b></para>
/// <para>Schema Name: organization_newprocess</para>
/// </summary>
public List<NewProcess> GetNewProcess_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<NewProcess>(Service, this.Id, "newprocess", "organizationid", Columns); }
/// <summary>
/// <para><b>NewProcess (Organization Id)</b></para>
/// <para>Schema Name: organization_newprocess</para>
/// </summary>
public List<NewProcess> GetNewProcess_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<NewProcess>(Service, this.Id, "newprocess", "organizationid", Columns); }
/// <summary>
/// <para><b>OfficeGraphDocument (Organization Id)</b></para>
/// <para>Schema Name: organization_officegraphdocument</para>
/// </summary>
public List<OfficeGraphDocument> GetOfficeGraphDocuments_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OfficeGraphDocument>(Service, this.Id, "officegraphdocument", "organizationid", Columns); }
/// <summary>
/// <para><b>OfficeGraphDocument (Organization Id)</b></para>
/// <para>Schema Name: organization_officegraphdocument</para>
/// </summary>
public List<OfficeGraphDocument> GetOfficeGraphDocuments_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OfficeGraphDocument>(Service, this.Id, "officegraphdocument", "organizationid", Columns); }
/// <summary>
/// <para><b>OpportunitySalesProcess (Organization)</b></para>
/// <para>Schema Name: organization_opportunitysalesprocess</para>
/// </summary>
public List<OpportunitySalesProcess> GetOpportunitySalesProcess_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunitySalesProcess>(Service, this.Id, "opportunitysalesprocess", "organizationid", Columns); }
/// <summary>
/// <para><b>OpportunitySalesProcess (Organization)</b></para>
/// <para>Schema Name: organization_opportunitysalesprocess</para>
/// </summary>
public List<OpportunitySalesProcess> GetOpportunitySalesProcess_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunitySalesProcess>(Service, this.Id, "opportunitysalesprocess", "organizationid", Columns); }
/// <summary>
/// <para><b>OrganizationUI ()</b></para>
/// <para>Schema Name: lk_organizationui_organizationid</para>
/// </summary>
public List<OrganizationUI> GetOrganizationUISettings (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrganizationUI>(Service, this.Id, "organizationui", "organizationid", Columns); }
/// <summary>
/// <para><b>OrganizationUI ()</b></para>
/// <para>Schema Name: lk_organizationui_organizationid</para>
/// </summary>
public List<OrganizationUI> GetOrganizationUISettings (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrganizationUI>(Service, this.Id, "organizationui", "organizationid", Columns); }
/// <summary>
/// <para><b>OrganizationInsightsMetric (Organization)</b></para>
/// <para>Schema Name: organization_orginsightsmetric</para>
/// </summary>
public List<OrganizationInsightsMetric> GetOrganizationInsightsMetric_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrganizationInsightsMetric>(Service, this.Id, "orginsightsmetric", "organizationid", Columns); }
/// <summary>
/// <para><b>OrganizationInsightsMetric (Organization)</b></para>
/// <para>Schema Name: organization_orginsightsmetric</para>
/// </summary>
public List<OrganizationInsightsMetric> GetOrganizationInsightsMetric_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrganizationInsightsMetric>(Service, this.Id, "orginsightsmetric", "organizationid", Columns); }
/// <summary>
/// <para><b>PartnerApplication (Organization Id)</b></para>
/// <para>Schema Name: lk_partnerapplication_organizationid</para>
/// </summary>
public List<PartnerApplication> GetPartnerApplications_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PartnerApplication>(Service, this.Id, "partnerapplication", "organizationid", Columns); }
/// <summary>
/// <para><b>PartnerApplication (Organization Id)</b></para>
/// <para>Schema Name: lk_partnerapplication_organizationid</para>
/// </summary>
public List<PartnerApplication> GetPartnerApplications_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PartnerApplication>(Service, this.Id, "partnerapplication", "organizationid", Columns); }
/// <summary>
/// <para><b>PhoneToCaseProcess (Organization Id)</b></para>
/// <para>Schema Name: organization_phonetocaseprocess</para>
/// </summary>
public List<PhoneToCaseProcess> GetPhoneToCaseProcess_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneToCaseProcess>(Service, this.Id, "phonetocaseprocess", "organizationid", Columns); }
/// <summary>
/// <para><b>PhoneToCaseProcess (Organization Id)</b></para>
/// <para>Schema Name: organization_phonetocaseprocess</para>
/// </summary>
public List<PhoneToCaseProcess> GetPhoneToCaseProcess_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneToCaseProcess>(Service, this.Id, "phonetocaseprocess", "organizationid", Columns); }
/// <summary>
/// <para><b>Plug_inAssembly ()</b></para>
/// <para>Schema Name: organization_pluginassembly</para>
/// </summary>
public List<Plug_inAssembly> GetPlug_inAssemblies (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Plug_inAssembly>(Service, this.Id, "pluginassembly", "organizationid", Columns); }
/// <summary>
/// <para><b>Plug_inAssembly ()</b></para>
/// <para>Schema Name: organization_pluginassembly</para>
/// </summary>
public List<Plug_inAssembly> GetPlug_inAssemblies (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Plug_inAssembly>(Service, this.Id, "pluginassembly", "organizationid", Columns); }
/// <summary>
/// <para><b>Plug_inType ()</b></para>
/// <para>Schema Name: organization_plugintype</para>
/// </summary>
public List<Plug_inType> GetPlug_inTypes (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Plug_inType>(Service, this.Id, "plugintype", "organizationid", Columns); }
/// <summary>
/// <para><b>Plug_inType ()</b></para>
/// <para>Schema Name: organization_plugintype</para>
/// </summary>
public List<Plug_inType> GetPlug_inTypes (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Plug_inType>(Service, this.Id, "plugintype", "organizationid", Columns); }
/// <summary>
/// <para><b>Plug_inTypeStatistic ()</b></para>
/// <para>Schema Name: organization_plugintypestatistic</para>
/// </summary>
public List<Plug_inTypeStatistic> GetPlug_inTypeStatistics (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Plug_inTypeStatistic>(Service, this.Id, "plugintypestatistic", "organizationid", Columns); }
/// <summary>
/// <para><b>Plug_inTypeStatistic ()</b></para>
/// <para>Schema Name: organization_plugintypestatistic</para>
/// </summary>
public List<Plug_inTypeStatistic> GetPlug_inTypeStatistics (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Plug_inTypeStatistic>(Service, this.Id, "plugintypestatistic", "organizationid", Columns); }
/// <summary>
/// <para><b>Position (Organization Id)</b></para>
/// <para>Schema Name: organization_position</para>
/// </summary>
public List<Position> GetPositions_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Position>(Service, this.Id, "position", "organizationid", Columns); }
/// <summary>
/// <para><b>Position (Organization Id)</b></para>
/// <para>Schema Name: organization_position</para>
/// </summary>
public List<Position> GetPositions_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Position>(Service, this.Id, "position", "organizationid", Columns); }
/// <summary>
/// <para><b>Post (Organization)</b></para>
/// <para>Schema Name: organization_post</para>
/// </summary>
public List<Post> GetPosts_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Post>(Service, this.Id, "post", "organizationid", Columns); }
/// <summary>
/// <para><b>Post (Organization)</b></para>
/// <para>Schema Name: organization_post</para>
/// </summary>
public List<Post> GetPosts_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Post>(Service, this.Id, "post", "organizationid", Columns); }
/// <summary>
/// <para><b>Comment (Organization)</b></para>
/// <para>Schema Name: organization_PostComment</para>
/// </summary>
public List<Comment> GetComments_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Comment>(Service, this.Id, "postcomment", "organizationid", Columns); }
/// <summary>
/// <para><b>Comment (Organization)</b></para>
/// <para>Schema Name: organization_PostComment</para>
/// </summary>
public List<Comment> GetComments_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Comment>(Service, this.Id, "postcomment", "organizationid", Columns); }
/// <summary>
/// <para><b>Like (Organization)</b></para>
/// <para>Schema Name: organization_postlike</para>
/// </summary>
public List<Like> GetLikes_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Like>(Service, this.Id, "postlike", "organizationid", Columns); }
/// <summary>
/// <para><b>Like (Organization)</b></para>
/// <para>Schema Name: organization_postlike</para>
/// </summary>
public List<Like> GetLikes_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Like>(Service, this.Id, "postlike", "organizationid", Columns); }
/// <summary>
/// <para><b>PostRole (Organization)</b></para>
/// <para>Schema Name: organization_postrole</para>
/// </summary>
public List<PostRole> GetPostRoles_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostRole>(Service, this.Id, "postrole", "organizationid", Columns); }
/// <summary>
/// <para><b>PostRole (Organization)</b></para>
/// <para>Schema Name: organization_postrole</para>
/// </summary>
public List<PostRole> GetPostRoles_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostRole>(Service, this.Id, "postrole", "organizationid", Columns); }
/// <summary>
/// <para><b>PriceList (Organization)</b></para>
/// <para>Schema Name: organization_price_levels</para>
/// </summary>
public List<PriceList> GetPriceLists_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PriceList>(Service, this.Id, "pricelevel", "organizationid", Columns); }
/// <summary>
/// <para><b>PriceList (Organization)</b></para>
/// <para>Schema Name: organization_price_levels</para>
/// </summary>
public List<PriceList> GetPriceLists_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PriceList>(Service, this.Id, "pricelevel", "organizationid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Organization)</b></para>
/// <para>Schema Name: lk_principalobjectattributeaccess_organizationid</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "organizationid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Organization)</b></para>
/// <para>Schema Name: lk_principalobjectattributeaccess_organizationid</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "organizationid", Columns); }
/// <summary>
/// <para><b>Product (Organization)</b></para>
/// <para>Schema Name: organization_products</para>
/// </summary>
public List<Product> GetProducts_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Product>(Service, this.Id, "product", "organizationid", Columns); }
/// <summary>
/// <para><b>Product (Organization)</b></para>
/// <para>Schema Name: organization_products</para>
/// </summary>
public List<Product> GetProducts_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Product>(Service, this.Id, "product", "organizationid", Columns); }
/// <summary>
/// <para><b>ProductAssociation (Organization)</b></para>
/// <para>Schema Name: organization_ProductAssociation</para>
/// </summary>
public List<ProductAssociation> GetProductAssociations_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProductAssociation>(Service, this.Id, "productassociation", "organizationid", Columns); }
/// <summary>
/// <para><b>ProductAssociation (Organization)</b></para>
/// <para>Schema Name: organization_ProductAssociation</para>
/// </summary>
public List<ProductAssociation> GetProductAssociations_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProductAssociation>(Service, this.Id, "productassociation", "organizationid", Columns); }
/// <summary>
/// <para><b>ProductRelationship (Organization)</b></para>
/// <para>Schema Name: organization_ProductSubstitute</para>
/// </summary>
public List<ProductRelationship> GetProductRelationships_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProductRelationship>(Service, this.Id, "productsubstitute", "organizationid", Columns); }
/// <summary>
/// <para><b>ProductRelationship (Organization)</b></para>
/// <para>Schema Name: organization_ProductSubstitute</para>
/// </summary>
public List<ProductRelationship> GetProductRelationships_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProductRelationship>(Service, this.Id, "productsubstitute", "organizationid", Columns); }
/// <summary>
/// <para><b>Publisher (Organization)</b></para>
/// <para>Schema Name: organization_publisher</para>
/// </summary>
public List<Publisher> GetPublishers_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Publisher>(Service, this.Id, "publisher", "organizationid", Columns); }
/// <summary>
/// <para><b>Publisher (Organization)</b></para>
/// <para>Schema Name: organization_publisher</para>
/// </summary>
public List<Publisher> GetPublishers_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Publisher>(Service, this.Id, "publisher", "organizationid", Columns); }
/// <summary>
/// <para><b>Queue (Organization)</b></para>
/// <para>Schema Name: organization_queues</para>
/// </summary>
public List<Queue> GetQueues_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Queue>(Service, this.Id, "queue", "organizationid", Columns); }
/// <summary>
/// <para><b>Queue (Organization)</b></para>
/// <para>Schema Name: organization_queues</para>
/// </summary>
public List<Queue> GetQueues_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Queue>(Service, this.Id, "queue", "organizationid", Columns); }
/// <summary>
/// <para><b>QueueItem (Organization)</b></para>
/// <para>Schema Name: organization_queueitems</para>
/// </summary>
public List<QueueItem> GetQueueItems_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QueueItem>(Service, this.Id, "queueitem", "organizationid", Columns); }
/// <summary>
/// <para><b>QueueItem (Organization)</b></para>
/// <para>Schema Name: organization_queueitems</para>
/// </summary>
public List<QueueItem> GetQueueItems_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QueueItem>(Service, this.Id, "queueitem", "organizationid", Columns); }
/// <summary>
/// <para><b>ProductRecommendationModel (Organization)</b></para>
/// <para>Schema Name: organization_recommendationmodel</para>
/// </summary>
public List<ProductRecommendationModel> GetProductRecommendationModels_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProductRecommendationModel>(Service, this.Id, "recommendationmodel", "organizationid", Columns); }
/// <summary>
/// <para><b>ProductRecommendationModel (Organization)</b></para>
/// <para>Schema Name: organization_recommendationmodel</para>
/// </summary>
public List<ProductRecommendationModel> GetProductRecommendationModels_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProductRecommendationModel>(Service, this.Id, "recommendationmodel", "organizationid", Columns); }
/// <summary>
/// <para><b>ModelEntityMapping (Organization)</b></para>
/// <para>Schema Name: organization_recommendationmodelmapping</para>
/// </summary>
public List<ModelEntityMapping> GetModelEntityMappings_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ModelEntityMapping>(Service, this.Id, "recommendationmodelmapping", "organizationid", Columns); }
/// <summary>
/// <para><b>ModelEntityMapping (Organization)</b></para>
/// <para>Schema Name: organization_recommendationmodelmapping</para>
/// </summary>
public List<ModelEntityMapping> GetModelEntityMappings_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ModelEntityMapping>(Service, this.Id, "recommendationmodelmapping", "organizationid", Columns); }
/// <summary>
/// <para><b>RecommendationModelVersion (Organization)</b></para>
/// <para>Schema Name: organization_recommendationmodelversion</para>
/// </summary>
public List<RecommendationModelVersion> GetRecommendationModelVersions_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecommendationModelVersion>(Service, this.Id, "recommendationmodelversion", "organizationid", Columns); }
/// <summary>
/// <para><b>RecommendationModelVersion (Organization)</b></para>
/// <para>Schema Name: organization_recommendationmodelversion</para>
/// </summary>
public List<RecommendationModelVersion> GetRecommendationModelVersions_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecommendationModelVersion>(Service, this.Id, "recommendationmodelversion", "organizationid", Columns); }
/// <summary>
/// <para><b>RecommendationModelVersionExecutionHistory (Organization)</b></para>
/// <para>Schema Name: organization_recommendationmodelversionhistory</para>
/// </summary>
public List<RecommendationModelVersionExecutionHistory> GetRecommendationModelVersionExecutionHistoryRecords_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecommendationModelVersionExecutionHistory>(Service, this.Id, "recommendationmodelversionhistory", "organizationid", Columns); }
/// <summary>
/// <para><b>RecommendationModelVersionExecutionHistory (Organization)</b></para>
/// <para>Schema Name: organization_recommendationmodelversionhistory</para>
/// </summary>
public List<RecommendationModelVersionExecutionHistory> GetRecommendationModelVersionExecutionHistoryRecords_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecommendationModelVersionExecutionHistory>(Service, this.Id, "recommendationmodelversionhistory", "organizationid", Columns); }
/// <summary>
/// <para><b>DocumentSuggestions (Organization ID)</b></para>
/// <para>Schema Name: organization_recommendeddocument</para>
/// </summary>
public List<DocumentSuggestions> GetDocumentSuggestions_OrganizationID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DocumentSuggestions>(Service, this.Id, "recommendeddocument", "organizationid", Columns); }
/// <summary>
/// <para><b>DocumentSuggestions (Organization ID)</b></para>
/// <para>Schema Name: organization_recommendeddocument</para>
/// </summary>
public List<DocumentSuggestions> GetDocumentSuggestions_OrganizationID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DocumentSuggestions>(Service, this.Id, "recommendeddocument", "organizationid", Columns); }
/// <summary>
/// <para><b>RelationshipRole (Organization)</b></para>
/// <para>Schema Name: organization_relationship_roles</para>
/// </summary>
public List<RelationshipRole> GetRelationshipRoles_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RelationshipRole>(Service, this.Id, "relationshiprole", "organizationid", Columns); }
/// <summary>
/// <para><b>RelationshipRole (Organization)</b></para>
/// <para>Schema Name: organization_relationship_roles</para>
/// </summary>
public List<RelationshipRole> GetRelationshipRoles_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RelationshipRole>(Service, this.Id, "relationshiprole", "organizationid", Columns); }
/// <summary>
/// <para><b>Resource (Organization)</b></para>
/// <para>Schema Name: organization_resources</para>
/// </summary>
public List<Resource> GetResources_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Resource>(Service, this.Id, "resource", "organizationid", Columns); }
/// <summary>
/// <para><b>Resource (Organization)</b></para>
/// <para>Schema Name: organization_resources</para>
/// </summary>
public List<Resource> GetResources_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Resource>(Service, this.Id, "resource", "organizationid", Columns); }
/// <summary>
/// <para><b>SchedulingGroup (Organization)</b></para>
/// <para>Schema Name: organization_resource_groups</para>
/// </summary>
public List<SchedulingGroup> GetSchedulingGroups_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SchedulingGroup>(Service, this.Id, "resourcegroup", "organizationid", Columns); }
/// <summary>
/// <para><b>SchedulingGroup (Organization)</b></para>
/// <para>Schema Name: organization_resource_groups</para>
/// </summary>
public List<SchedulingGroup> GetSchedulingGroups_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SchedulingGroup>(Service, this.Id, "resourcegroup", "organizationid", Columns); }
/// <summary>
/// <para><b>ResourceSpecification (Organization)</b></para>
/// <para>Schema Name: organization_resource_specs</para>
/// </summary>
public List<ResourceSpecification> GetResourceSpecifications_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceSpecification>(Service, this.Id, "resourcespec", "organizationid", Columns); }
/// <summary>
/// <para><b>ResourceSpecification (Organization)</b></para>
/// <para>Schema Name: organization_resource_specs</para>
/// </summary>
public List<ResourceSpecification> GetResourceSpecifications_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceSpecification>(Service, this.Id, "resourcespec", "organizationid", Columns); }
/// <summary>
/// <para><b>RibbonCommand ()</b></para>
/// <para>Schema Name: organization_ribbon_command</para>
/// </summary>
public List<RibbonCommand> GetRibbonCommands (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RibbonCommand>(Service, this.Id, "ribboncommand", "organizationid", Columns); }
/// <summary>
/// <para><b>RibbonCommand ()</b></para>
/// <para>Schema Name: organization_ribbon_command</para>
/// </summary>
public List<RibbonCommand> GetRibbonCommands (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RibbonCommand>(Service, this.Id, "ribboncommand", "organizationid", Columns); }
/// <summary>
/// <para><b>RibbonContextGroup ()</b></para>
/// <para>Schema Name: organization_ribbon_context_group</para>
/// </summary>
public List<RibbonContextGroup> GetRibbonContextGroups (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RibbonContextGroup>(Service, this.Id, "ribboncontextgroup", "organizationid", Columns); }
/// <summary>
/// <para><b>RibbonContextGroup ()</b></para>
/// <para>Schema Name: organization_ribbon_context_group</para>
/// </summary>
public List<RibbonContextGroup> GetRibbonContextGroups (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RibbonContextGroup>(Service, this.Id, "ribboncontextgroup", "organizationid", Columns); }
/// <summary>
/// <para><b>ApplicationRibbons ()</b></para>
/// <para>Schema Name: organization_ribbon_customization</para>
/// </summary>
public List<ApplicationRibbons> GetApplicationRibbons (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ApplicationRibbons>(Service, this.Id, "ribboncustomization", "organizationid", Columns); }
/// <summary>
/// <para><b>ApplicationRibbons ()</b></para>
/// <para>Schema Name: organization_ribbon_customization</para>
/// </summary>
public List<ApplicationRibbons> GetApplicationRibbons (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ApplicationRibbons>(Service, this.Id, "ribboncustomization", "organizationid", Columns); }
/// <summary>
/// <para><b>RibbonDifference ()</b></para>
/// <para>Schema Name: organization_ribbon_diff</para>
/// </summary>
public List<RibbonDifference> GetRibbonDifferences (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RibbonDifference>(Service, this.Id, "ribbondiff", "organizationid", Columns); }
/// <summary>
/// <para><b>RibbonDifference ()</b></para>
/// <para>Schema Name: organization_ribbon_diff</para>
/// </summary>
public List<RibbonDifference> GetRibbonDifferences (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RibbonDifference>(Service, this.Id, "ribbondiff", "organizationid", Columns); }
/// <summary>
/// <para><b>RibbonRule ()</b></para>
/// <para>Schema Name: organization_ribbon_rule</para>
/// </summary>
public List<RibbonRule> GetRibbonRules (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RibbonRule>(Service, this.Id, "ribbonrule", "organizationid", Columns); }
/// <summary>
/// <para><b>RibbonRule ()</b></para>
/// <para>Schema Name: organization_ribbon_rule</para>
/// </summary>
public List<RibbonRule> GetRibbonRules (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RibbonRule>(Service, this.Id, "ribbonrule", "organizationid", Columns); }
/// <summary>
/// <para><b>RibbonTabToCommandMapping ()</b></para>
/// <para>Schema Name: organization_ribbon_tab_to_command_map</para>
/// </summary>
public List<RibbonTabToCommandMapping> GetRibbonTabToCommandMap (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RibbonTabToCommandMapping>(Service, this.Id, "ribbontabtocommandmap", "organizationid", Columns); }
/// <summary>
/// <para><b>RibbonTabToCommandMapping ()</b></para>
/// <para>Schema Name: organization_ribbon_tab_to_command_map</para>
/// </summary>
public List<RibbonTabToCommandMapping> GetRibbonTabToCommandMap (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RibbonTabToCommandMapping>(Service, this.Id, "ribbontabtocommandmap", "organizationid", Columns); }
/// <summary>
/// <para><b>SecurityRole (Organization)</b></para>
/// <para>Schema Name: organization_roles</para>
/// </summary>
public List<SecurityRole> GetSecurityRoles_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SecurityRole>(Service, this.Id, "role", "organizationid", Columns); }
/// <summary>
/// <para><b>SecurityRole (Organization)</b></para>
/// <para>Schema Name: organization_roles</para>
/// </summary>
public List<SecurityRole> GetSecurityRoles_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SecurityRole>(Service, this.Id, "role", "organizationid", Columns); }
/// <summary>
/// <para><b>RoutingRuleSet (Organization)</b></para>
/// <para>Schema Name: organization_RoutingRules</para>
/// </summary>
public List<RoutingRuleSet> GetRoutingRuleSets_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RoutingRuleSet>(Service, this.Id, "routingrule", "organizationid", Columns); }
/// <summary>
/// <para><b>RoutingRuleSet (Organization)</b></para>
/// <para>Schema Name: organization_RoutingRules</para>
/// </summary>
public List<RoutingRuleSet> GetRoutingRuleSets_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RoutingRuleSet>(Service, this.Id, "routingrule", "organizationid", Columns); }
/// <summary>
/// <para><b>RuleItem (Organization)</b></para>
/// <para>Schema Name: organization_routingruleitems</para>
/// </summary>
public List<RuleItem> GetRuleItems_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RuleItem>(Service, this.Id, "routingruleitem", "organizationid", Columns); }
/// <summary>
/// <para><b>RuleItem (Organization)</b></para>
/// <para>Schema Name: organization_routingruleitems</para>
/// </summary>
public List<RuleItem> GetRuleItems_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RuleItem>(Service, this.Id, "routingruleitem", "organizationid", Columns); }
/// <summary>
/// <para><b>SalesLiterature (Organization)</b></para>
/// <para>Schema Name: organization_sales_literature</para>
/// </summary>
public List<SalesLiterature> GetSalesLiterature_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SalesLiterature>(Service, this.Id, "salesliterature", "organizationid", Columns); }
/// <summary>
/// <para><b>SalesLiterature (Organization)</b></para>
/// <para>Schema Name: organization_sales_literature</para>
/// </summary>
public List<SalesLiterature> GetSalesLiterature_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SalesLiterature>(Service, this.Id, "salesliterature", "organizationid", Columns); }
/// <summary>
/// <para><b>SavedOrganizationInsightsConfiguration (Organization)</b></para>
/// <para>Schema Name: organization_savedorginsightsconfiguration</para>
/// </summary>
public List<SavedOrganizationInsightsConfiguration> GetSavedOrganizationInsightsConfigurations_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SavedOrganizationInsightsConfiguration>(Service, this.Id, "savedorginsightsconfiguration", "organizationid", Columns); }
/// <summary>
/// <para><b>SavedOrganizationInsightsConfiguration (Organization)</b></para>
/// <para>Schema Name: organization_savedorginsightsconfiguration</para>
/// </summary>
public List<SavedOrganizationInsightsConfiguration> GetSavedOrganizationInsightsConfigurations_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SavedOrganizationInsightsConfiguration>(Service, this.Id, "savedorginsightsconfiguration", "organizationid", Columns); }
/// <summary>
/// <para><b>View (Organization)</b></para>
/// <para>Schema Name: organization_saved_queries</para>
/// </summary>
public List<View> GetViews_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<View>(Service, this.Id, "savedquery", "organizationid", Columns); }
/// <summary>
/// <para><b>View (Organization)</b></para>
/// <para>Schema Name: organization_saved_queries</para>
/// </summary>
public List<View> GetViews_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<View>(Service, this.Id, "savedquery", "organizationid", Columns); }
/// <summary>
/// <para><b>SystemChart (Organization)</b></para>
/// <para>Schema Name: organization_saved_query_visualizations</para>
/// </summary>
public List<SystemChart> GetSystemCharts_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemChart>(Service, this.Id, "savedqueryvisualization", "organizationid", Columns); }
/// <summary>
/// <para><b>SystemChart (Organization)</b></para>
/// <para>Schema Name: organization_saved_query_visualizations</para>
/// </summary>
public List<SystemChart> GetSystemCharts_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemChart>(Service, this.Id, "savedqueryvisualization", "organizationid", Columns); }
/// <summary>
/// <para><b>SdkMessage ()</b></para>
/// <para>Schema Name: organization_sdkmessage</para>
/// </summary>
public List<SdkMessage> GetSdkMessages (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SdkMessage>(Service, this.Id, "sdkmessage", "organizationid", Columns); }
/// <summary>
/// <para><b>SdkMessage ()</b></para>
/// <para>Schema Name: organization_sdkmessage</para>
/// </summary>
public List<SdkMessage> GetSdkMessages (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SdkMessage>(Service, this.Id, "sdkmessage", "organizationid", Columns); }
/// <summary>
/// <para><b>SdkMessageFilter ()</b></para>
/// <para>Schema Name: organization_sdkmessagefilter</para>
/// </summary>
public List<SdkMessageFilter> GetSdkMessageFilters (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SdkMessageFilter>(Service, this.Id, "sdkmessagefilter", "organizationid", Columns); }
/// <summary>
/// <para><b>SdkMessageFilter ()</b></para>
/// <para>Schema Name: organization_sdkmessagefilter</para>
/// </summary>
public List<SdkMessageFilter> GetSdkMessageFilters (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SdkMessageFilter>(Service, this.Id, "sdkmessagefilter", "organizationid", Columns); }
/// <summary>
/// <para><b>SdkMessagePair ()</b></para>
/// <para>Schema Name: organization_sdkmessagepair</para>
/// </summary>
public List<SdkMessagePair> GetSdkMessagePairs (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SdkMessagePair>(Service, this.Id, "sdkmessagepair", "organizationid", Columns); }
/// <summary>
/// <para><b>SdkMessagePair ()</b></para>
/// <para>Schema Name: organization_sdkmessagepair</para>
/// </summary>
public List<SdkMessagePair> GetSdkMessagePairs (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SdkMessagePair>(Service, this.Id, "sdkmessagepair", "organizationid", Columns); }
/// <summary>
/// <para><b>SdkMessageProcessingStep ()</b></para>
/// <para>Schema Name: organization_sdkmessageprocessingstep</para>
/// </summary>
public List<SdkMessageProcessingStep> GetSdkMessageProcessingSteps (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SdkMessageProcessingStep>(Service, this.Id, "sdkmessageprocessingstep", "organizationid", Columns); }
/// <summary>
/// <para><b>SdkMessageProcessingStep ()</b></para>
/// <para>Schema Name: organization_sdkmessageprocessingstep</para>
/// </summary>
public List<SdkMessageProcessingStep> GetSdkMessageProcessingSteps (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SdkMessageProcessingStep>(Service, this.Id, "sdkmessageprocessingstep", "organizationid", Columns); }
/// <summary>
/// <para><b>SdkMessageProcessingStepImage ()</b></para>
/// <para>Schema Name: organization_sdkmessageprocessingstepimage</para>
/// </summary>
public List<SdkMessageProcessingStepImage> GetSdkMessageProcessingStepImages (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SdkMessageProcessingStepImage>(Service, this.Id, "sdkmessageprocessingstepimage", "organizationid", Columns); }
/// <summary>
/// <para><b>SdkMessageProcessingStepImage ()</b></para>
/// <para>Schema Name: organization_sdkmessageprocessingstepimage</para>
/// </summary>
public List<SdkMessageProcessingStepImage> GetSdkMessageProcessingStepImages (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SdkMessageProcessingStepImage>(Service, this.Id, "sdkmessageprocessingstepimage", "organizationid", Columns); }
/// <summary>
/// <para><b>SdkMessageProcessingStepSecureConfiguration ()</b></para>
/// <para>Schema Name: organization_sdkmessageprocessingstepsecureconfig</para>
/// </summary>
public List<SdkMessageProcessingStepSecureConfiguration> GetSdkMessageProcessingStepSecureConfigurations (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SdkMessageProcessingStepSecureConfiguration>(Service, this.Id, "sdkmessageprocessingstepsecureconfig", "organizationid", Columns); }
/// <summary>
/// <para><b>SdkMessageProcessingStepSecureConfiguration ()</b></para>
/// <para>Schema Name: organization_sdkmessageprocessingstepsecureconfig</para>
/// </summary>
public List<SdkMessageProcessingStepSecureConfiguration> GetSdkMessageProcessingStepSecureConfigurations (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SdkMessageProcessingStepSecureConfiguration>(Service, this.Id, "sdkmessageprocessingstepsecureconfig", "organizationid", Columns); }
/// <summary>
/// <para><b>SdkMessageRequest ()</b></para>
/// <para>Schema Name: organization_sdkmessagerequest</para>
/// </summary>
public List<SdkMessageRequest> GetSdkMessageRequests (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SdkMessageRequest>(Service, this.Id, "sdkmessagerequest", "organizationid", Columns); }
/// <summary>
/// <para><b>SdkMessageRequest ()</b></para>
/// <para>Schema Name: organization_sdkmessagerequest</para>
/// </summary>
public List<SdkMessageRequest> GetSdkMessageRequests (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SdkMessageRequest>(Service, this.Id, "sdkmessagerequest", "organizationid", Columns); }
/// <summary>
/// <para><b>SdkMessageRequestField ()</b></para>
/// <para>Schema Name: organization_sdkmessagerequestfield</para>
/// </summary>
public List<SdkMessageRequestField> GetSdkMessageRequestFields (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SdkMessageRequestField>(Service, this.Id, "sdkmessagerequestfield", "organizationid", Columns); }
/// <summary>
/// <para><b>SdkMessageRequestField ()</b></para>
/// <para>Schema Name: organization_sdkmessagerequestfield</para>
/// </summary>
public List<SdkMessageRequestField> GetSdkMessageRequestFields (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SdkMessageRequestField>(Service, this.Id, "sdkmessagerequestfield", "organizationid", Columns); }
/// <summary>
/// <para><b>SdkMessageResponse ()</b></para>
/// <para>Schema Name: organization_sdkmessageresponse</para>
/// </summary>
public List<SdkMessageResponse> GetSdkMessageResponses (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SdkMessageResponse>(Service, this.Id, "sdkmessageresponse", "organizationid", Columns); }
/// <summary>
/// <para><b>SdkMessageResponse ()</b></para>
/// <para>Schema Name: organization_sdkmessageresponse</para>
/// </summary>
public List<SdkMessageResponse> GetSdkMessageResponses (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SdkMessageResponse>(Service, this.Id, "sdkmessageresponse", "organizationid", Columns); }
/// <summary>
/// <para><b>SdkMessageResponseField ()</b></para>
/// <para>Schema Name: organization_sdkmessageresponsefield</para>
/// </summary>
public List<SdkMessageResponseField> GetSdkMessageResponseFields (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SdkMessageResponseField>(Service, this.Id, "sdkmessageresponsefield", "organizationid", Columns); }
/// <summary>
/// <para><b>SdkMessageResponseField ()</b></para>
/// <para>Schema Name: organization_sdkmessageresponsefield</para>
/// </summary>
public List<SdkMessageResponseField> GetSdkMessageResponseFields (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SdkMessageResponseField>(Service, this.Id, "sdkmessageresponsefield", "organizationid", Columns); }
/// <summary>
/// <para><b>Service (Organization)</b></para>
/// <para>Schema Name: organization_services</para>
/// </summary>
public List<Service> GetServices_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Service>(Service, this.Id, "service", "organizationid", Columns); }
/// <summary>
/// <para><b>Service (Organization)</b></para>
/// <para>Schema Name: organization_services</para>
/// </summary>
public List<Service> GetServices_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Service>(Service, this.Id, "service", "organizationid", Columns); }
/// <summary>
/// <para><b>ServiceEndpoint ()</b></para>
/// <para>Schema Name: organization_serviceendpoint</para>
/// </summary>
public List<ServiceEndpoint> GetServiceEndpoints (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceEndpoint>(Service, this.Id, "serviceendpoint", "organizationid", Columns); }
/// <summary>
/// <para><b>ServiceEndpoint ()</b></para>
/// <para>Schema Name: organization_serviceendpoint</para>
/// </summary>
public List<ServiceEndpoint> GetServiceEndpoints (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceEndpoint>(Service, this.Id, "serviceendpoint", "organizationid", Columns); }
/// <summary>
/// <para><b>SharePointData (Organization)</b></para>
/// <para>Schema Name: organization_sharepointdata</para>
/// </summary>
public List<SharePointData> GetSharePointData_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SharePointData>(Service, this.Id, "sharepointdata", "organizationid", Columns); }
/// <summary>
/// <para><b>SharePointData (Organization)</b></para>
/// <para>Schema Name: organization_sharepointdata</para>
/// </summary>
public List<SharePointData> GetSharePointData_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SharePointData>(Service, this.Id, "sharepointdata", "organizationid", Columns); }
/// <summary>
/// <para><b>SharepointDocument (Organization)</b></para>
/// <para>Schema Name: organization_sharepointdocument</para>
/// </summary>
public List<SharepointDocument> GetDocuments_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SharepointDocument>(Service, this.Id, "sharepointdocument", "organizationid", Columns); }
/// <summary>
/// <para><b>SharepointDocument (Organization)</b></para>
/// <para>Schema Name: organization_sharepointdocument</para>
/// </summary>
public List<SharepointDocument> GetDocuments_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SharepointDocument>(Service, this.Id, "sharepointdocument", "organizationid", Columns); }
/// <summary>
/// <para><b>SimilarityRule (Organization Id)</b></para>
/// <para>Schema Name: organization_similarityrule</para>
/// </summary>
public List<SimilarityRule> GetSimilarityRules_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SimilarityRule>(Service, this.Id, "similarityrule", "organizationid", Columns); }
/// <summary>
/// <para><b>SimilarityRule (Organization Id)</b></para>
/// <para>Schema Name: organization_similarityrule</para>
/// </summary>
public List<SimilarityRule> GetSimilarityRules_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SimilarityRule>(Service, this.Id, "similarityrule", "organizationid", Columns); }
/// <summary>
/// <para><b>Site (Organization )</b></para>
/// <para>Schema Name: organization_sites</para>
/// </summary>
public List<Site> GetSites_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Site>(Service, this.Id, "site", "organizationid", Columns); }
/// <summary>
/// <para><b>Site (Organization )</b></para>
/// <para>Schema Name: organization_sites</para>
/// </summary>
public List<Site> GetSites_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Site>(Service, this.Id, "site", "organizationid", Columns); }
/// <summary>
/// <para><b>SiteMap ()</b></para>
/// <para>Schema Name: organization_sitemap</para>
/// </summary>
public List<SiteMap> GetSiteMaps (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SiteMap>(Service, this.Id, "sitemap", "organizationid", Columns); }
/// <summary>
/// <para><b>SiteMap ()</b></para>
/// <para>Schema Name: organization_sitemap</para>
/// </summary>
public List<SiteMap> GetSiteMaps (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SiteMap>(Service, this.Id, "sitemap", "organizationid", Columns); }
/// <summary>
/// <para><b>SocialInsightsConfiguration (Organization)</b></para>
/// <para>Schema Name: organization_socialinsightsconfiguration</para>
/// </summary>
public List<SocialInsightsConfiguration> GetSocialInsightsConfigurations_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialInsightsConfiguration>(Service, this.Id, "socialinsightsconfiguration", "organizationid", Columns); }
/// <summary>
/// <para><b>SocialInsightsConfiguration (Organization)</b></para>
/// <para>Schema Name: organization_socialinsightsconfiguration</para>
/// </summary>
public List<SocialInsightsConfiguration> GetSocialInsightsConfigurations_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialInsightsConfiguration>(Service, this.Id, "socialinsightsconfiguration", "organizationid", Columns); }
/// <summary>
/// <para><b>Solution (Organization)</b></para>
/// <para>Schema Name: organization_solution</para>
/// </summary>
public List<Solution> GetSolutions_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Solution>(Service, this.Id, "solution", "organizationid", Columns); }
/// <summary>
/// <para><b>Solution (Organization)</b></para>
/// <para>Schema Name: organization_solution</para>
/// </summary>
public List<Solution> GetSolutions_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Solution>(Service, this.Id, "solution", "organizationid", Columns); }
/// <summary>
/// <para><b>StatusMap ()</b></para>
/// <para>Schema Name: organization_status_maps</para>
/// </summary>
public List<StatusMap> GetStatusMaps (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<StatusMap>(Service, this.Id, "statusmap", "organizationid", Columns); }
/// <summary>
/// <para><b>StatusMap ()</b></para>
/// <para>Schema Name: organization_status_maps</para>
/// </summary>
public List<StatusMap> GetStatusMaps (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<StatusMap>(Service, this.Id, "statusmap", "organizationid", Columns); }
/// <summary>
/// <para><b>StringMap ()</b></para>
/// <para>Schema Name: organization_string_maps</para>
/// </summary>
public List<StringMap> GetStringMaps (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<StringMap>(Service, this.Id, "stringmap", "organizationid", Columns); }
/// <summary>
/// <para><b>StringMap ()</b></para>
/// <para>Schema Name: organization_string_maps</para>
/// </summary>
public List<StringMap> GetStringMaps (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<StringMap>(Service, this.Id, "stringmap", "organizationid", Columns); }
/// <summary>
/// <para><b>Subject (Organization)</b></para>
/// <para>Schema Name: organization_subjects</para>
/// </summary>
public List<Subject> GetSubjects_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Subject>(Service, this.Id, "subject", "organizationid", Columns); }
/// <summary>
/// <para><b>Subject (Organization)</b></para>
/// <para>Schema Name: organization_subjects</para>
/// </summary>
public List<Subject> GetSubjects_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Subject>(Service, this.Id, "subject", "organizationid", Columns); }
/// <summary>
/// <para><b>SyncAttributeMappingProfile (Organization)</b></para>
/// <para>Schema Name: lk_syncattributemappingprofile_organizationid</para>
/// </summary>
public List<SyncAttributeMappingProfile> GetSyncAttributeMappingProfiles_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncAttributeMappingProfile>(Service, this.Id, "syncattributemappingprofile", "organizationid", Columns); }
/// <summary>
/// <para><b>SyncAttributeMappingProfile (Organization)</b></para>
/// <para>Schema Name: lk_syncattributemappingprofile_organizationid</para>
/// </summary>
public List<SyncAttributeMappingProfile> GetSyncAttributeMappingProfiles_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncAttributeMappingProfile>(Service, this.Id, "syncattributemappingprofile", "organizationid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: Organization_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: Organization_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemApplicationMetadata (Organization Id)</b></para>
/// <para>Schema Name: organization_systemapplicationmetadata</para>
/// </summary>
public List<SystemApplicationMetadata> GetSystemApplicationMetadataCollection_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemApplicationMetadata>(Service, this.Id, "systemapplicationmetadata", "organizationid", Columns); }
/// <summary>
/// <para><b>SystemApplicationMetadata (Organization Id)</b></para>
/// <para>Schema Name: organization_systemapplicationmetadata</para>
/// </summary>
public List<SystemApplicationMetadata> GetSystemApplicationMetadataCollection_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemApplicationMetadata>(Service, this.Id, "systemapplicationmetadata", "organizationid", Columns); }
/// <summary>
/// <para><b>SystemForm ()</b></para>
/// <para>Schema Name: organization_systemforms</para>
/// </summary>
public List<SystemForm> GetSystemForms (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemForm>(Service, this.Id, "systemform", "organizationid", Columns); }
/// <summary>
/// <para><b>SystemForm ()</b></para>
/// <para>Schema Name: organization_systemforms</para>
/// </summary>
public List<SystemForm> GetSystemForms (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemForm>(Service, this.Id, "systemform", "organizationid", Columns); }
/// <summary>
/// <para><b>User (Organization )</b></para>
/// <para>Schema Name: organization_system_users</para>
/// </summary>
public List<User> GetUsers_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<User>(Service, this.Id, "systemuser", "organizationid", Columns); }
/// <summary>
/// <para><b>User (Organization )</b></para>
/// <para>Schema Name: organization_system_users</para>
/// </summary>
public List<User> GetUsers_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<User>(Service, this.Id, "systemuser", "organizationid", Columns); }
/// <summary>
/// <para><b>Team (Organization )</b></para>
/// <para>Schema Name: organization_teams</para>
/// </summary>
public List<Team> GetTeams_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Team>(Service, this.Id, "team", "organizationid", Columns); }
/// <summary>
/// <para><b>Team (Organization )</b></para>
/// <para>Schema Name: organization_teams</para>
/// </summary>
public List<Team> GetTeams_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Team>(Service, this.Id, "team", "organizationid", Columns); }
/// <summary>
/// <para><b>Territory (Organization)</b></para>
/// <para>Schema Name: organization_territories</para>
/// </summary>
public List<Territory> GetTerritories_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Territory>(Service, this.Id, "territory", "organizationid", Columns); }
/// <summary>
/// <para><b>Territory (Organization)</b></para>
/// <para>Schema Name: organization_territories</para>
/// </summary>
public List<Territory> GetTerritories_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Territory>(Service, this.Id, "territory", "organizationid", Columns); }
/// <summary>
/// <para><b>TextAnalyticsEntityMapping (Organization)</b></para>
/// <para>Schema Name: organization_textanalyticsentitymapping</para>
/// </summary>
public List<TextAnalyticsEntityMapping> GetTextAnalyticsEntityMappings_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TextAnalyticsEntityMapping>(Service, this.Id, "textanalyticsentitymapping", "organizationid", Columns); }
/// <summary>
/// <para><b>TextAnalyticsEntityMapping (Organization)</b></para>
/// <para>Schema Name: organization_textanalyticsentitymapping</para>
/// </summary>
public List<TextAnalyticsEntityMapping> GetTextAnalyticsEntityMappings_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TextAnalyticsEntityMapping>(Service, this.Id, "textanalyticsentitymapping", "organizationid", Columns); }
/// <summary>
/// <para><b>Theme (Organization Id)</b></para>
/// <para>Schema Name: organization_theme</para>
/// </summary>
public List<Theme> GetThemes_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Theme>(Service, this.Id, "theme", "organizationid", Columns); }
/// <summary>
/// <para><b>Theme (Organization Id)</b></para>
/// <para>Schema Name: organization_theme</para>
/// </summary>
public List<Theme> GetThemes_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Theme>(Service, this.Id, "theme", "organizationid", Columns); }
/// <summary>
/// <para><b>TopicModel (Organization)</b></para>
/// <para>Schema Name: organization_topicmodel</para>
/// </summary>
public List<TopicModel> GetTopicModel_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TopicModel>(Service, this.Id, "topicmodel", "organizationid", Columns); }
/// <summary>
/// <para><b>TopicModel (Organization)</b></para>
/// <para>Schema Name: organization_topicmodel</para>
/// </summary>
public List<TopicModel> GetTopicModel_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TopicModel>(Service, this.Id, "topicmodel", "organizationid", Columns); }
/// <summary>
/// <para><b>TopicModelConfiguration (Organization)</b></para>
/// <para>Schema Name: organization_topicmodelconfiguration</para>
/// </summary>
public List<TopicModelConfiguration> GetTopicModelConfigurations_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TopicModelConfiguration>(Service, this.Id, "topicmodelconfiguration", "organizationid", Columns); }
/// <summary>
/// <para><b>TopicModelConfiguration (Organization)</b></para>
/// <para>Schema Name: organization_topicmodelconfiguration</para>
/// </summary>
public List<TopicModelConfiguration> GetTopicModelConfigurations_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TopicModelConfiguration>(Service, this.Id, "topicmodelconfiguration", "organizationid", Columns); }
/// <summary>
/// <para><b>TopicModelExecutionHistory (Organization)</b></para>
/// <para>Schema Name: organization_topicmodelexecutionhistory</para>
/// </summary>
public List<TopicModelExecutionHistory> GetTopicModelExecutionHistories_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TopicModelExecutionHistory>(Service, this.Id, "topicmodelexecutionhistory", "organizationid", Columns); }
/// <summary>
/// <para><b>TopicModelExecutionHistory (Organization)</b></para>
/// <para>Schema Name: organization_topicmodelexecutionhistory</para>
/// </summary>
public List<TopicModelExecutionHistory> GetTopicModelExecutionHistories_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TopicModelExecutionHistory>(Service, this.Id, "topicmodelexecutionhistory", "organizationid", Columns); }
/// <summary>
/// <para><b>TraceAssociation (Organization)</b></para>
/// <para>Schema Name: organization_traceassociation</para>
/// </summary>
public List<TraceAssociation> GetTraceAssociations_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TraceAssociation>(Service, this.Id, "traceassociation", "organizationid", Columns); }
/// <summary>
/// <para><b>TraceAssociation (Organization)</b></para>
/// <para>Schema Name: organization_traceassociation</para>
/// </summary>
public List<TraceAssociation> GetTraceAssociations_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TraceAssociation>(Service, this.Id, "traceassociation", "organizationid", Columns); }
/// <summary>
/// <para><b>Trace (Organization)</b></para>
/// <para>Schema Name: organization_tracelog</para>
/// </summary>
public List<Trace> GetTraces_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Trace>(Service, this.Id, "tracelog", "organizationid", Columns); }
/// <summary>
/// <para><b>Trace (Organization)</b></para>
/// <para>Schema Name: organization_tracelog</para>
/// </summary>
public List<Trace> GetTraces_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Trace>(Service, this.Id, "tracelog", "organizationid", Columns); }
/// <summary>
/// <para><b>Currency (Organization)</b></para>
/// <para>Schema Name: organization_transactioncurrencies</para>
/// </summary>
public List<Currency> GetCurrencies_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Currency>(Service, this.Id, "transactioncurrency", "organizationid", Columns); }
/// <summary>
/// <para><b>Currency (Organization)</b></para>
/// <para>Schema Name: organization_transactioncurrencies</para>
/// </summary>
public List<Currency> GetCurrencies_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Currency>(Service, this.Id, "transactioncurrency", "organizationid", Columns); }
/// <summary>
/// <para><b>TranslationProcess (Organization Id)</b></para>
/// <para>Schema Name: organization_translationprocess</para>
/// </summary>
public List<TranslationProcess> GetTranslationProcess_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TranslationProcess>(Service, this.Id, "translationprocess", "organizationid", Columns); }
/// <summary>
/// <para><b>TranslationProcess (Organization Id)</b></para>
/// <para>Schema Name: organization_translationprocess</para>
/// </summary>
public List<TranslationProcess> GetTranslationProcess_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TranslationProcess>(Service, this.Id, "translationprocess", "organizationid", Columns); }
/// <summary>
/// <para><b>UnitGroup (Organization)</b></para>
/// <para>Schema Name: organization_uof_schedules</para>
/// </summary>
public List<UnitGroup> GetUnitGroups_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UnitGroup>(Service, this.Id, "uomschedule", "organizationid", Columns); }
/// <summary>
/// <para><b>UnitGroup (Organization)</b></para>
/// <para>Schema Name: organization_uof_schedules</para>
/// </summary>
public List<UnitGroup> GetUnitGroups_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UnitGroup>(Service, this.Id, "uomschedule", "organizationid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_organization</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_organization</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserMapping (Organization Id)</b></para>
/// <para>Schema Name: organization_UserMapping</para>
/// </summary>
public List<UserMapping> GetUserMappings_OrganizationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserMapping>(Service, this.Id, "usermapping", "organizationid", Columns); }
/// <summary>
/// <para><b>UserMapping (Organization Id)</b></para>
/// <para>Schema Name: organization_UserMapping</para>
/// </summary>
public List<UserMapping> GetUserMappings_OrganizationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserMapping>(Service, this.Id, "usermapping", "organizationid", Columns); }
/// <summary>
/// <para><b>WebResource (Organization)</b></para>
/// <para>Schema Name: webresource_organization</para>
/// </summary>
public List<WebResource> GetWebResources_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WebResource>(Service, this.Id, "webresource", "organizationid", Columns); }
/// <summary>
/// <para><b>WebResource (Organization)</b></para>
/// <para>Schema Name: webresource_organization</para>
/// </summary>
public List<WebResource> GetWebResources_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WebResource>(Service, this.Id, "webresource", "organizationid", Columns); }
/// <summary>
/// <para><b>WebWizard (Organization)</b></para>
/// <para>Schema Name: organization_webwizard</para>
/// </summary>
public List<WebWizard> GetWebWizards_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WebWizard>(Service, this.Id, "webwizard", "organizationid", Columns); }
/// <summary>
/// <para><b>WebWizard (Organization)</b></para>
/// <para>Schema Name: organization_webwizard</para>
/// </summary>
public List<WebWizard> GetWebWizards_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WebWizard>(Service, this.Id, "webwizard", "organizationid", Columns); }
/// <summary>
/// <para><b>WebWizardAccessPrivilege (Organization)</b></para>
/// <para>Schema Name: organization_wizardaccessprivilege</para>
/// </summary>
public List<WebWizardAccessPrivilege> GetWebWizardAccessPrivileges_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WebWizardAccessPrivilege>(Service, this.Id, "wizardaccessprivilege", "organizationid", Columns); }
/// <summary>
/// <para><b>WebWizardAccessPrivilege (Organization)</b></para>
/// <para>Schema Name: organization_wizardaccessprivilege</para>
/// </summary>
public List<WebWizardAccessPrivilege> GetWebWizardAccessPrivileges_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WebWizardAccessPrivilege>(Service, this.Id, "wizardaccessprivilege", "organizationid", Columns); }
/// <summary>
/// <para><b>WizardPage (Organization)</b></para>
/// <para>Schema Name: organization_wizardpage</para>
/// </summary>
public List<WizardPage> GetWizardPages_Organization (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WizardPage>(Service, this.Id, "wizardpage", "organizationid", Columns); }
/// <summary>
/// <para><b>WizardPage (Organization)</b></para>
/// <para>Schema Name: organization_wizardpage</para>
/// </summary>
public List<WizardPage> GetWizardPages_Organization (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WizardPage>(Service, this.Id, "wizardpage", "organizationid", Columns); }


        

        

        public enum eDefaultRecurrenceEndRangeType
{
	///<summary><para>No End Date</para>
	///<para>Value = 1</para></summary>
	[Description("No End Date")]
	NoEndDate = 1, 
	///<summary><para>Number of Occurrences</para>
	///<para>Value = 2</para></summary>
	[Description("Number of Occurrences")]
	NumberOfOccurrences = 2, 
	///<summary><para>End By Date</para>
	///<para>Value = 3</para></summary>
	[Description("End By Date")]
	EndByDate = 3
}
public enum eDiscountCalculationMethod
{
	///<summary><para>Line item</para>
	///<para>Value = 0</para></summary>
	[Description("Line item")]
	LineItem = 0, 
	///<summary><para>Per unit</para>
	///<para>Value = 1</para></summary>
	[Description("Per unit")]
	PerUnit = 1
}
public enum eDisplayCurrenciesUsing
{
	///<summary><para>Currency symbol</para>
	///<para>Value = 0</para></summary>
	[Description("Currency symbol")]
	CurrencySymbol = 0, 
	///<summary><para>Currency code</para>
	///<para>Value = 1</para></summary>
	[Description("Currency code")]
	CurrencyCode = 1
}
public enum eFiscalYearFormat
{
	///<summary><para>YYYY</para>
	///<para>Value = 1</para></summary>
	[Description("YYYY")]
	YYYY = 1, 
	///<summary><para>YY</para>
	///<para>Value = 2</para></summary>
	[Description("YY")]
	YY = 2, 
	///<summary><para>GGYY</para>
	///<para>Value = 3</para></summary>
	[Description("GGYY")]
	GGYY = 3
}
public enum eFiscalPeriodFormat
{
	///<summary><para>Quarter {0}</para>
	///<para>Value = 1</para></summary>
	[Description("Quarter {0}")]
	Quarter_0 = 1, 
	///<summary><para>Q{0}</para>
	///<para>Value = 2</para></summary>
	[Description("Q{0}")]
	Q_0 = 2, 
	///<summary><para>P{0}</para>
	///<para>Value = 3</para></summary>
	[Description("P{0}")]
	P_0 = 3, 
	///<summary><para>Month {0}</para>
	///<para>Value = 4</para></summary>
	[Description("Month {0}")]
	Month_0 = 4, 
	///<summary><para>M{0}</para>
	///<para>Value = 5</para></summary>
	[Description("M{0}")]
	M_0 = 5, 
	///<summary><para>Semester {0}</para>
	///<para>Value = 6</para></summary>
	[Description("Semester {0}")]
	Semester_0 = 6, 
	///<summary><para>Month Name</para>
	///<para>Value = 7</para></summary>
	[Description("Month Name")]
	MonthName = 7
}
public enum eFiscalYearFormatPrefix
{
	///<summary><para>FY</para>
	///<para>Value = 1</para></summary>
	[Description("FY")]
	FY = 1
}
public enum eReportScriptErrors
{
	///<summary><para>No preference for sending an error report to Microsoft about Microsoft Dynamics 365</para>
	///<para>Value = 0</para></summary>
	[Description("No preference for sending an error report to Microsoft about Microsoft Dynamics 365")]
	NoPreferenceForSendingAnErrorReportToMicrosoftAboutMicrosoftDynamics365 = 0, 
	///<summary><para>Ask me for permission to send an error report to Microsoft</para>
	///<para>Value = 1</para></summary>
	[Description("Ask me for permission to send an error report to Microsoft")]
	AskMeForPermissionToSendAnErrorReportToMicrosoft = 1, 
	///<summary><para>Automatically send an error report to Microsoft without asking me for permission</para>
	///<para>Value = 2</para></summary>
	[Description("Automatically send an error report to Microsoft without asking me for permission")]
	AutomaticallySendAnErrorReportToMicrosoftWithoutAskingMeForPermission = 2, 
	///<summary><para>Never send an error report to Microsoft about Microsoft Dynamics 365</para>
	///<para>Value = 3</para></summary>
	[Description("Never send an error report to Microsoft about Microsoft Dynamics 365")]
	NeverSendAnErrorReportToMicrosoftAboutMicrosoftDynamics365 = 3
}
public enum eFiscalYearFormatSuffix
{
	///<summary><para>FY</para>
	///<para>Value = 1</para></summary>
	[Description("FY")]
	FY = 1, 
	///<summary><para> Fiscal Year</para>
	///<para>Value = 2</para></summary>
	[Description(" Fiscal Year")]
	FiscalYear = 2
}


        public static class Properties
{
	/// <summary><para>defaultemailserverprofileidname</para>
	/// <para>defaultemailserverprofileidname</para></summary>
	public const string DefaultEmailServerProfileIdName = "defaultemailserverprofileidname";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>entityimage_url</para>
	/// <para>entityimage_url</para></summary>
	public const string EntityImage_URL = "entityimage_url";
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>basecurrencyidname</para>
	/// <para>basecurrencyidname</para></summary>
	public const string BaseCurrencyIdName = "basecurrencyidname";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>entityimage_timestamp</para>
	/// <para>entityimage_timestamp</para></summary>
	public const string EntityImage_Timestamp = "entityimage_timestamp";
	/// <summary><para>defaultmobileofflineprofileidname</para>
	/// <para>defaultmobileofflineprofileidname</para></summary>
	public const string DefaultMobileOfflineProfileIdName = "defaultmobileofflineprofileidname";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>acknowledgementtemplateidname</para>
	/// <para>acknowledgementtemplateidname</para></summary>
	public const string AcknowledgementTemplateIdName = "acknowledgementtemplateidname";
	/// <summary><para>pinpointlanguagecode</para>
	/// <para>pinpointlanguagecode</para></summary>
	public const string PinpointLanguageCode = "pinpointlanguagecode";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>ACI Tenant URL.</para>
	/// <para>aciwebendpointurl</para></summary>
	public const string ACITenantURL = "aciwebendpointurl";
	/// <summary><para>Acknowledgement Template</para>
	/// <para>acknowledgementtemplateid</para></summary>
	public const string AcknowledgementTemplate = "acknowledgementtemplateid";
	/// <summary><para>Allow Address Book Synchronization</para>
	/// <para>allowaddressbooksyncs</para></summary>
	public const string AllowAddressBookSynchronization = "allowaddressbooksyncs";
	/// <summary><para>Allow Automatic Response Creation</para>
	/// <para>allowautoresponsecreation</para></summary>
	public const string AllowAutomaticResponseCreation = "allowautoresponsecreation";
	/// <summary><para>Allow Automatic Unsubscribe</para>
	/// <para>allowautounsubscribe</para></summary>
	public const string AllowAutomaticUnsubscribe = "allowautounsubscribe";
	/// <summary><para>Allow Automatic Unsubscribe Acknowledgement</para>
	/// <para>allowautounsubscribeacknowledgement</para></summary>
	public const string AllowAutomaticUnsubscribeAcknowledgement = "allowautounsubscribeacknowledgement";
	/// <summary><para>Allow Entity Level Auditing</para>
	/// <para>allowentityonlyaudit</para></summary>
	public const string AllowEntityLevelAuditing = "allowentityonlyaudit";
	/// <summary><para>Allow Export to Excel</para>
	/// <para>allowwebexcelexport</para></summary>
	public const string AllowExportToExcel = "allowwebexcelexport";
	/// <summary><para>Allow Marketing Email Execution</para>
	/// <para>allowmarketingemailexecution</para></summary>
	public const string AllowMarketingEmailExecution = "allowmarketingemailexecution";
	/// <summary><para>Allow Offline Scheduled Synchronization</para>
	/// <para>allowofflinescheduledsyncs</para></summary>
	public const string AllowOfflineScheduledSynchronization = "allowofflinescheduledsyncs";
	/// <summary><para>Allow Outlook Client Message Bar Advertisement</para>
	/// <para>allowclientmessagebarad</para></summary>
	public const string AllowOutlookClientMessageBarAdvertisement = "allowclientmessagebarad";
	/// <summary><para>Allow Scheduled Synchronization</para>
	/// <para>allowoutlookscheduledsyncs</para></summary>
	public const string AllowScheduledSynchronization = "allowoutlookscheduledsyncs";
	/// <summary><para>Allow the showing tablet application notification bars in a browser.</para>
	/// <para>allowusersseeappdownloadmessage</para></summary>
	public const string AllowTheShowingTabletApplicationNotificationBarsInABrowser = "allowusersseeappdownloadmessage";
	/// <summary><para>Allow tracking recipient activity on sent emails</para>
	/// <para>isemailmonitoringallowed</para></summary>
	public const string AllowTrackingRecipientActivityOnSentEmails = "isemailmonitoringallowed";
	/// <summary><para>Allow Unresolved Address Email Send</para>
	/// <para>allowunresolvedpartiesonemailsend</para></summary>
	public const string AllowUnresolvedAddressEmailSend = "allowunresolvedpartiesonemailsend";
	/// <summary><para>Allow User Form Mode Preference</para>
	/// <para>allowuserformmodepreference</para></summary>
	public const string AllowUserFormModePreference = "allowuserformmodepreference";
	/// <summary><para>Allows Preview For Email Monitoring</para>
	/// <para>ispreviewforemailmonitoringallowed</para></summary>
	public const string AllowsPreviewForEmailMonitoring = "ispreviewforemailmonitoringallowed";
	/// <summary><para>AM Designator</para>
	/// <para>amdesignator</para></summary>
	public const string AMDesignator = "amdesignator";
	/// <summary><para>Article Prefix</para>
	/// <para>kbprefix</para></summary>
	public const string ArticlePrefix = "kbprefix";
	/// <summary><para>Auto Apply Default Entitlement on Case Create</para>
	/// <para>autoapplydefaultoncasecreate</para></summary>
	public const string AutoApplyDefaultEntitlementOnCaseCreate = "autoapplydefaultoncasecreate";
	/// <summary><para>Auto Apply Default Entitlement on Case Update</para>
	/// <para>autoapplydefaultoncaseupdate</para></summary>
	public const string AutoApplyDefaultEntitlementOnCaseUpdate = "autoapplydefaultoncaseupdate";
	/// <summary><para>Auto Save Enabled</para>
	/// <para>isautosaveenabled</para></summary>
	public const string AutoSaveEnabled = "isautosaveenabled";
	/// <summary><para>Automatic Rollup Frequency for Goal</para>
	/// <para>goalrollupfrequency</para></summary>
	public const string AutomaticRollupFrequencyForGoal = "goalrollupfrequency";
	/// <summary><para>Automatically create folders</para>
	/// <para>isfolderautocreatedonsp</para></summary>
	public const string AutomaticallyCreateFolders = "isfolderautocreatedonsp";
	/// <summary><para>Auto-Tag Interval</para>
	/// <para>tagpollingperiod</para></summary>
	public const string Auto_TagInterval = "tagpollingperiod";
	/// <summary><para>Auto-Tag Max Cycles</para>
	/// <para>tagmaxaggressivecycles</para></summary>
	public const string Auto_TagMaxCycles = "tagmaxaggressivecycles";
	/// <summary><para>Base Currency Precision</para>
	/// <para>basecurrencyprecision</para></summary>
	public const string BaseCurrencyPrecision = "basecurrencyprecision";
	/// <summary><para>Base Currency Symbol</para>
	/// <para>basecurrencysymbol</para></summary>
	public const string BaseCurrencySymbol = "basecurrencysymbol";
	/// <summary><para>Base ISO Currency Code</para>
	/// <para>baseisocurrencycode</para></summary>
	public const string BaseISOCurrencyCode = "baseisocurrencycode";
	/// <summary><para>Bing Maps API Key</para>
	/// <para>bingmapsapikey</para></summary>
	public const string BingMapsAPIKey = "bingmapsapikey";
	/// <summary><para>Block Attachments</para>
	/// <para>blockedattachments</para></summary>
	public const string BlockAttachments = "blockedattachments";
	/// <summary><para>Bulk Operation Prefix</para>
	/// <para>bulkoperationprefix</para></summary>
	public const string BulkOperationPrefix = "bulkoperationprefix";
	/// <summary><para>Bundle Item Limit</para>
	/// <para>maxproductsinbundle</para></summary>
	public const string BundleItemLimit = "maxproductsinbundle";
	/// <summary><para>Business Closure Calendar</para>
	/// <para>businessclosurecalendarid</para></summary>
	public const string BusinessClosureCalendar = "businessclosurecalendarid";
	/// <summary><para>Calendar Type</para>
	/// <para>calendartype</para></summary>
	public const string CalendarType = "calendartype";
	/// <summary><para>Campaign Prefix</para>
	/// <para>campaignprefix</para></summary>
	public const string CampaignPrefix = "campaignprefix";
	/// <summary><para>Cascade Status Update</para>
	/// <para>cascadestatusupdate</para></summary>
	public const string CascadeStatusUpdate = "cascadestatusupdate";
	/// <summary><para>Case Prefix</para>
	/// <para>caseprefix</para></summary>
	public const string CasePrefix = "caseprefix";
	/// <summary><para>Category Prefix</para>
	/// <para>categoryprefix</para></summary>
	public const string CategoryPrefix = "categoryprefix";
	/// <summary><para>Choose SharePoint Deployment Type</para>
	/// <para>sharepointdeploymenttype</para></summary>
	public const string ChooseSharePointDeploymentType = "sharepointdeploymenttype";
	/// <summary><para>Contract Prefix</para>
	/// <para>contractprefix</para></summary>
	public const string ContractPrefix = "contractprefix";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>CRMForOutlookDownloadURL</para>
	/// <para>signupoutlookdownloadfwlink</para></summary>
	public const string CRMForOutlookDownloadURL = "signupoutlookdownloadfwlink";
	/// <summary><para>Currency</para>
	/// <para>basecurrencyid</para></summary>
	public const string Currency = "basecurrencyid";
	/// <summary><para>Currency Decimal Precision</para>
	/// <para>currencydecimalprecision</para></summary>
	public const string CurrencyDecimalPrecision = "currencydecimalprecision";
	/// <summary><para>Currency Format Code</para>
	/// <para>currencyformatcode</para></summary>
	public const string CurrencyFormatCode = "currencyformatcode";
	/// <summary><para>Currency Symbol</para>
	/// <para>currencysymbol</para></summary>
	public const string CurrencySymbol = "currencysymbol";
	/// <summary><para>Current Article Number</para>
	/// <para>currentkbnumber</para></summary>
	public const string CurrentArticleNumber = "currentkbnumber";
	/// <summary><para>Current Bulk Operation Number</para>
	/// <para>currentbulkoperationnumber</para></summary>
	public const string CurrentBulkOperationNumber = "currentbulkoperationnumber";
	/// <summary><para>Current Campaign Number</para>
	/// <para>currentcampaignnumber</para></summary>
	public const string CurrentCampaignNumber = "currentcampaignnumber";
	/// <summary><para>Current Case Number</para>
	/// <para>currentcasenumber</para></summary>
	public const string CurrentCaseNumber = "currentcasenumber";
	/// <summary><para>Current Category Number</para>
	/// <para>currentcategorynumber</para></summary>
	public const string CurrentCategoryNumber = "currentcategorynumber";
	/// <summary><para>Current Contract Number</para>
	/// <para>currentcontractnumber</para></summary>
	public const string CurrentContractNumber = "currentcontractnumber";
	/// <summary><para>Current Import Sequence Number</para>
	/// <para>currentimportsequencenumber</para></summary>
	public const string CurrentImportSequenceNumber = "currentimportsequencenumber";
	/// <summary><para>Current Invoice Number</para>
	/// <para>currentinvoicenumber</para></summary>
	public const string CurrentInvoiceNumber = "currentinvoicenumber";
	/// <summary><para>Current Knowledge Article Number</para>
	/// <para>currentkanumber</para></summary>
	public const string CurrentKnowledgeArticleNumber = "currentkanumber";
	/// <summary><para>Current Order Number</para>
	/// <para>currentordernumber</para></summary>
	public const string CurrentOrderNumber = "currentordernumber";
	/// <summary><para>Current Parsed Table Number</para>
	/// <para>currentparsedtablenumber</para></summary>
	public const string CurrentParsedTableNumber = "currentparsedtablenumber";
	/// <summary><para>Current Quote Number</para>
	/// <para>currentquotenumber</para></summary>
	public const string CurrentQuoteNumber = "currentquotenumber";
	/// <summary><para>Customization Name Prefix</para>
	/// <para>schemanameprefix</para></summary>
	public const string CustomizationNamePrefix = "schemanameprefix";
	/// <summary><para>Date Format Code</para>
	/// <para>dateformatcode</para></summary>
	public const string DateFormatCode = "dateformatcode";
	/// <summary><para>Date Format String</para>
	/// <para>dateformatstring</para></summary>
	public const string DateFormatString = "dateformatstring";
	/// <summary><para>Date Separator</para>
	/// <para>dateseparator</para></summary>
	public const string DateSeparator = "dateseparator";
	/// <summary><para>Days to Expire Change Tracking Deleted Records</para>
	/// <para>expirechangetrackingindays</para></summary>
	public const string DaysToExpireChangeTrackingDeletedRecords = "expirechangetrackingindays";
	/// <summary><para>Days to Expire Subscriptions</para>
	/// <para>expiresubscriptionsindays</para></summary>
	public const string DaysToExpireSubscriptions = "expiresubscriptionsindays";
	/// <summary><para>Decimal Symbol</para>
	/// <para>decimalsymbol</para></summary>
	public const string DecimalSymbol = "decimalsymbol";
	/// <summary><para>Default Country Code</para>
	/// <para>defaultcountrycode</para></summary>
	public const string DefaultCountryCode = "defaultcountrycode";
	/// <summary><para>Default Email Settings</para>
	/// <para>defaultemailsettings</para></summary>
	public const string DefaultEmailSettings = "defaultemailsettings";
	/// <summary><para>Default Mobile Offline Profile</para>
	/// <para>defaultmobileofflineprofileid</para></summary>
	public const string DefaultMobileOfflineProfile = "defaultmobileofflineprofileid";
	/// <summary><para>Default Recurrence End Range Type</para>
	/// <para>defaultrecurrenceendrangetype</para></summary>
	public const string DefaultRecurrenceEndRangeType = "defaultrecurrenceendrangetype";
	/// <summary><para>Default Theme Data</para>
	/// <para>defaultthemedata</para></summary>
	public const string DefaultThemeData = "defaultthemedata";
	/// <summary><para>Delegated Admin</para>
	/// <para>delegatedadminuserid</para></summary>
	public const string DelegatedAdmin = "delegatedadminuserid";
	/// <summary><para>Disabled Reason</para>
	/// <para>disabledreason</para></summary>
	public const string DisabledReason = "disabledreason";
	/// <summary><para>Discount calculation method</para>
	/// <para>discountcalculationmethod</para></summary>
	public const string DiscountCalculationMethod = "discountcalculationmethod";
	/// <summary><para>Display Currencies Using</para>
	/// <para>currencydisplayoption</para></summary>
	public const string DisplayCurrenciesUsing = "currencydisplayoption";
	/// <summary><para>Display Navigation Tour</para>
	/// <para>displaynavigationtour</para></summary>
	public const string DisplayNavigationTour = "displaynavigationtour";
	/// <summary><para>Email Connection Channel</para>
	/// <para>emailconnectionchannel</para></summary>
	public const string EmailConnectionChannel = "emailconnectionchannel";
	/// <summary><para>Email Send Polling Frequency</para>
	/// <para>emailsendpollingperiod</para></summary>
	public const string EmailSendPollingFrequency = "emailsendpollingperiod";
	/// <summary><para>Email Server Profile</para>
	/// <para>defaultemailserverprofileid</para></summary>
	public const string EmailServerProfile = "defaultemailserverprofileid";
	/// <summary><para>Enable Action Card for this Organization</para>
	/// <para>isactioncardenabled</para></summary>
	public const string EnableActionCardForThisOrganization = "isactioncardenabled";
	/// <summary><para>Enable Action Hub for this Organization</para>
	/// <para>isdelveactionhubintegrationenabled</para></summary>
	public const string EnableActionHubForThisOrganization = "isdelveactionhubintegrationenabled";
	/// <summary><para>Enable Active Initial Product State</para>
	/// <para>createproductswithoutparentinactivestate</para></summary>
	public const string EnableActiveInitialProductState = "createproductswithoutparentinactivestate";
	/// <summary><para>Enable App Designer Experience for this Organization</para>
	/// <para>appdesignerexperienceenabled</para></summary>
	public const string EnableAppDesignerExperienceForThisOrganization = "appdesignerexperienceenabled";
	/// <summary><para>Enable Auto Capture for this Organization</para>
	/// <para>isautodatacaptureenabled</para></summary>
	public const string EnableAutoCaptureForThisOrganization = "isautodatacaptureenabled";
	/// <summary><para>Enable Auto Capture for this Organization at Preview Settings</para>
	/// <para>ispreviewforautocaptureenabled</para></summary>
	public const string EnableAutoCaptureForThisOrganizationAtPreviewSettings = "ispreviewforautocaptureenabled";
	/// <summary><para>Enable Cortana Proactive Experience Flow processes for this Organization</para>
	/// <para>cortanaproactiveexperienceenabled</para></summary>
	public const string EnableCortanaProactiveExperienceFlowProcessesForThisOrganization = "cortanaproactiveexperienceenabled";
	/// <summary><para>Enable external search data syncing</para>
	/// <para>isexternalsearchindexenabled</para></summary>
	public const string EnableExternalSearchDataSyncing = "isexternalsearchindexenabled";
	/// <summary><para>Enable Full-text search for Quick Find</para>
	/// <para>isfulltextsearchenabled</para></summary>
	public const string EnableFull_textSearchForQuickFind = "isfulltextsearchenabled";
	/// <summary><para>Enable Hierarchical Security Model</para>
	/// <para>ishierarchicalsecuritymodelenabled</para></summary>
	public const string EnableHierarchicalSecurityModel = "ishierarchicalsecuritymodelenabled";
	/// <summary><para>Enable Integration with Bing Maps</para>
	/// <para>enablebingmapsintegration</para></summary>
	public const string EnableIntegrationWithBingMaps = "enablebingmapsintegration";
	/// <summary><para>Enable Integration with Microsoft Flow</para>
	/// <para>enablemicrosoftflowintegration</para></summary>
	public const string EnableIntegrationWithMicrosoftFlow = "enablemicrosoftflowintegration";
	/// <summary><para>Enable Learning Path Authoring</para>
	/// <para>enablelpauthoring</para></summary>
	public const string EnableLearningPathAuthoring = "enablelpauthoring";
	/// <summary><para>Enable MobileOffline for this Organization</para>
	/// <para>ismobileofflineenabled</para></summary>
	public const string EnableMobileOfflineForThisOrganization = "ismobileofflineenabled";
	/// <summary><para>Enable Office Apps Auto Deployment for this Organization</para>
	/// <para>officeappsautodeploymentenabled</para></summary>
	public const string EnableOfficeAppsAutoDeploymentForThisOrganization = "officeappsautodeploymentenabled";
	/// <summary><para>Enable OfficeGraph for this Organization</para>
	/// <para>isofficegraphenabled</para></summary>
	public const string EnableOfficeGraphForThisOrganization = "isofficegraphenabled";
	/// <summary><para>Enable One Drive for this Organization</para>
	/// <para>isonedriveenabled</para></summary>
	public const string EnableOneDriveForThisOrganization = "isonedriveenabled";
	/// <summary><para>Enable OOB Price calculation</para>
	/// <para>oobpricecalculationenabled</para></summary>
	public const string EnableOOBPriceCalculation = "oobpricecalculationenabled";
	/// <summary><para>Enable or disable country code selection</para>
	/// <para>isdefaultcountrycodecheckenabled</para></summary>
	public const string EnableOrDisableCountryCodeSelection = "isdefaultcountrycodecheckenabled";
	/// <summary><para>Enable OrgInsights for this Organization</para>
	/// <para>orginsightsenabled</para></summary>
	public const string EnableOrgInsightsForThisOrganization = "orginsightsenabled";
	/// <summary><para>Enable Power BI feature for this Organization</para>
	/// <para>powerbifeatureenabled</para></summary>
	public const string EnablePowerBIFeatureForThisOrganization = "powerbifeatureenabled";
	/// <summary><para>Enable Preview Action Card feature for this Organization</para>
	/// <para>ispreviewenabledforactioncard</para></summary>
	public const string EnablePreviewActionCardFeatureForThisOrganization = "ispreviewenabledforactioncard";
	/// <summary><para>Enable Pricing On Create</para>
	/// <para>enablepricingoncreate</para></summary>
	public const string EnablePricingOnCreate = "enablepricingoncreate";
	/// <summary><para>Enable Product Recommendations for this Organization</para>
	/// <para>productrecommendationsenabled</para></summary>
	public const string EnableProductRecommendationsForThisOrganization = "productrecommendationsenabled";
	/// <summary><para>Enable Relationship Analytics for this Organization</para>
	/// <para>isactivityanalysisenabled</para></summary>
	public const string EnableRelationshipAnalyticsForThisOrganization = "isactivityanalysisenabled";
	/// <summary><para>Enable Relationship Insights for this Organization</para>
	/// <para>isrelationshipinsightsenabled</para></summary>
	public const string EnableRelationshipInsightsForThisOrganization = "isrelationshipinsightsenabled";
	/// <summary><para>Enable Smart Matching</para>
	/// <para>enablesmartmatching</para></summary>
	public const string EnableSmartMatching = "enablesmartmatching";
	/// <summary><para>Enable Task Flow processes for this Organization</para>
	/// <para>taskbasedflowenabled</para></summary>
	public const string EnableTaskFlowProcessesForThisOrganization = "taskbasedflowenabled";
	/// <summary><para>Enable Text Analytics for this Organization</para>
	/// <para>textanalyticsenabled</para></summary>
	public const string EnableTextAnalyticsForThisOrganization = "textanalyticsenabled";
	/// <summary><para>Entity Image Id</para>
	/// <para>entityimageid</para></summary>
	public const string EntityImageId = "entityimageid";
	/// <summary><para>Error status of Relationship Insights provisioning.</para>
	/// <para>rierrorstatus</para></summary>
	public const string ErrorStatusOfRelationshipInsightsProvisioning = "rierrorstatus";
	/// <summary><para>Exchange Email Retrieval Batch Size</para>
	/// <para>incomingemailexchangeemailretrievalbatchsize</para></summary>
	public const string ExchangeEmailRetrievalBatchSize = "incomingemailexchangeemailretrievalbatchsize";
	/// <summary><para>External Base URL</para>
	/// <para>externalbaseurl</para></summary>
	public const string ExternalBaseURL = "externalbaseurl";
	/// <summary><para>ExternalPartyEnabled Entities correlation Keys</para>
	/// <para>externalpartycorrelationkeys</para></summary>
	public const string ExternalPartyEnabledEntitiesCorrelationKeys = "externalpartycorrelationkeys";
	/// <summary><para>ExternalPartyEnabled Entities Settings.For internal use only</para>
	/// <para>externalpartyentitysettings</para></summary>
	public const string ExternalPartyEnabledEntitiesSettings_ForInternalUseOnly = "externalpartyentitysettings";
	/// <summary><para>Feature Set</para>
	/// <para>featureset</para></summary>
	public const string FeatureSet = "featureset";
	/// <summary><para>Fiscal Calendar Start</para>
	/// <para>fiscalcalendarstart</para></summary>
	public const string FiscalCalendarStart = "fiscalcalendarstart";
	/// <summary><para>Fiscal Period Format</para>
	/// <para>fiscalperiodformat</para></summary>
	public const string FiscalPeriodFormat = "fiscalperiodformat";
	/// <summary><para>Fiscal Period Type</para>
	/// <para>fiscalperiodtype</para></summary>
	public const string FiscalPeriodType = "fiscalperiodtype";
	/// <summary><para>Fiscal Year Display</para>
	/// <para>fiscalyeardisplaycode</para></summary>
	public const string FiscalYearDisplay = "fiscalyeardisplaycode";
	/// <summary><para>Fiscal Year Format</para>
	/// <para>fiscalyearformat</para></summary>
	public const string FiscalYearFormat = "fiscalyearformat";
	/// <summary><para>Fiscal Year Format Year</para>
	/// <para>fiscalyearformatyear</para></summary>
	public const string FiscalYearFormatYear = "fiscalyearformatyear";
	/// <summary><para>Fiscal Year Period Connector</para>
	/// <para>fiscalyearperiodconnect</para></summary>
	public const string FiscalYearPeriodConnector = "fiscalyearperiodconnect";
	/// <summary><para>For internal use only.</para>
	/// <para>postmessagewhitelistdomains</para></summary>
	public const string ForInternalUseOnly = "postmessagewhitelistdomains";
	/// <summary><para>For internal use only.</para>
	/// <para>azureschedulerjobcollectionname</para></summary>
	public const string ForInternalUseOnly2 = "azureschedulerjobcollectionname";
	/// <summary><para>For Internal use only.</para>
	/// <para>widgetproperties</para></summary>
	public const string ForInternalUseOnly3 = "widgetproperties";
	/// <summary><para>Format for Fiscal Period</para>
	/// <para>fiscalperiodformatperiod</para></summary>
	public const string FormatForFiscalPeriod = "fiscalperiodformatperiod";
	/// <summary><para>Full Name Display Order</para>
	/// <para>fullnameconventioncode</para></summary>
	public const string FullNameDisplayOrder = "fullnameconventioncode";
	/// <summary><para>Future Expansion Window</para>
	/// <para>futureexpansionwindow</para></summary>
	public const string FutureExpansionWindow = "futureexpansionwindow";
	/// <summary><para>Generate Alerts For Errors</para>
	/// <para>generatealertsforerrors</para></summary>
	public const string GenerateAlertsForErrors = "generatealertsforerrors";
	/// <summary><para>Generate Alerts For Information</para>
	/// <para>generatealertsforinformation</para></summary>
	public const string GenerateAlertsForInformation = "generatealertsforinformation";
	/// <summary><para>Generate Alerts For Warnings</para>
	/// <para>generatealertsforwarnings</para></summary>
	public const string GenerateAlertsForWarnings = "generatealertsforwarnings";
	/// <summary><para>Global Help URL.</para>
	/// <para>globalhelpurl</para></summary>
	public const string GlobalHelpURL = "globalhelpurl";
	/// <summary><para>Grant Access To Network Service</para>
	/// <para>grantaccesstonetworkservice</para></summary>
	public const string GrantAccessToNetworkService = "grantaccesstonetworkservice";
	/// <summary><para>Hash Delta Subject Count</para>
	/// <para>hashdeltasubjectcount</para></summary>
	public const string HashDeltaSubjectCount = "hashdeltasubjectcount";
	/// <summary><para>Hash Filter Keywords</para>
	/// <para>hashfilterkeywords</para></summary>
	public const string HashFilterKeywords = "hashfilterkeywords";
	/// <summary><para>Hash Max Count</para>
	/// <para>hashmaxcount</para></summary>
	public const string HashMaxCount = "hashmaxcount";
	/// <summary><para>Hash Min Address Count</para>
	/// <para>hashminaddresscount</para></summary>
	public const string HashMinAddressCount = "hashminaddresscount";
	/// <summary><para>High contrast Theme Data</para>
	/// <para>highcontrastthemedata</para></summary>
	public const string HighContrastThemeData = "highcontrastthemedata";
	/// <summary><para>Ignore Internal Email</para>
	/// <para>ignoreinternalemail</para></summary>
	public const string IgnoreInternalEmail = "ignoreinternalemail";
	/// <summary><para>Initial Version</para>
	/// <para>initialversion</para></summary>
	public const string InitialVersion = "initialversion";
	/// <summary><para>Integration User</para>
	/// <para>integrationuserid</para></summary>
	public const string IntegrationUser = "integrationuserid";
	/// <summary><para>Internal Use Only</para>
	/// <para>yammerpostmethod</para></summary>
	public const string InternalUseOnly = "yammerpostmethod";
	/// <summary><para>Invoice Prefix</para>
	/// <para>invoiceprefix</para></summary>
	public const string InvoicePrefix = "invoiceprefix";
	/// <summary><para>Is AppendUrl Parameters enabled</para>
	/// <para>globalappendurlparametersenabled</para></summary>
	public const string IsAppendUrlParametersEnabled = "globalappendurlparametersenabled";
	/// <summary><para>Is Application Mode Enabled</para>
	/// <para>isappmode</para></summary>
	public const string IsApplicationModeEnabled = "isappmode";
	/// <summary><para>Is Approval For Queue Email Required</para>
	/// <para>requireapprovalforqueueemail</para></summary>
	public const string IsApprovalForQueueEmailRequired = "requireapprovalforqueueemail";
	/// <summary><para>Is Approval For User Email Required</para>
	/// <para>requireapprovalforuseremail</para></summary>
	public const string IsApprovalForUserEmailRequired = "requireapprovalforuseremail";
	/// <summary><para>Is Assigned Tasks Sync Enabled</para>
	/// <para>isassignedtaskssyncenabled</para></summary>
	public const string IsAssignedTasksSyncEnabled = "isassignedtaskssyncenabled";
	/// <summary><para>Is Attachment Sync Enabled</para>
	/// <para>isappointmentattachmentsyncenabled</para></summary>
	public const string IsAttachmentSyncEnabled = "isappointmentattachmentsyncenabled";
	/// <summary><para>Is Auditing Enabled</para>
	/// <para>isauditenabled</para></summary>
	public const string IsAuditingEnabled = "isauditenabled";
	/// <summary><para>Is Auto-apply SLA After Manually Over-riding</para>
	/// <para>autoapplysla</para></summary>
	public const string IsAuto_applySLAAfterManuallyOver_riding = "autoapplysla";
	/// <summary><para>Is Conflict Detection for Mobile Client enabled</para>
	/// <para>isconflictdetectionenabledformobileclient</para></summary>
	public const string IsConflictDetectionForMobileClientEnabled = "isconflictdetectionenabledformobileclient";
	/// <summary><para>Is Customizable Global Help enabled</para>
	/// <para>globalhelpurlenabled</para></summary>
	public const string IsCustomizableGlobalHelpEnabled = "globalhelpurlenabled";
	/// <summary><para>Is Delegation Access Enabled</para>
	/// <para>isdelegateaccessenabled</para></summary>
	public const string IsDelegationAccessEnabled = "isdelegateaccessenabled";
	/// <summary><para>Is Duplicate Detection Enabled</para>
	/// <para>isduplicatedetectionenabled</para></summary>
	public const string IsDuplicateDetectionEnabled = "isduplicatedetectionenabled";
	/// <summary><para>Is Duplicate Detection Enabled For Import</para>
	/// <para>isduplicatedetectionenabledforimport</para></summary>
	public const string IsDuplicateDetectionEnabledForImport = "isduplicatedetectionenabledforimport";
	/// <summary><para>Is Duplicate Detection Enabled For Offline Synchronization</para>
	/// <para>isduplicatedetectionenabledforofflinesync</para></summary>
	public const string IsDuplicateDetectionEnabledForOfflineSynchronization = "isduplicatedetectionenabledforofflinesync";
	/// <summary><para>Is Duplicate Detection Enabled for Online Create/Update</para>
	/// <para>isduplicatedetectionenabledforonlinecreateupdate</para></summary>
	public const string IsDuplicateDetectionEnabledForOnlineCreate_Update = "isduplicatedetectionenabledforonlinecreateupdate";
	/// <summary><para>Is Email Server Profile Content Filtering Enabled</para>
	/// <para>isemailserverprofilecontentfilteringenabled</para></summary>
	public const string IsEmailServerProfileContentFilteringEnabled = "isemailserverprofilecontentfilteringenabled";
	/// <summary><para>Is Fiscal Period Monthly</para>
	/// <para>isfiscalperiodmonthbased</para></summary>
	public const string IsFiscalPeriodMonthly = "isfiscalperiodmonthbased";
	/// <summary><para>Is Fiscal Settings Updated</para>
	/// <para>fiscalsettingsupdated</para></summary>
	public const string IsFiscalSettingsUpdated = "fiscalsettingsupdated";
	/// <summary><para>Is Folder Based Tracking Enabled</para>
	/// <para>isfolderbasedtrackingenabled</para></summary>
	public const string IsFolderBasedTrackingEnabled = "isfolderbasedtrackingenabled";
	/// <summary><para>Is Get Started Pane Content Enabled</para>
	/// <para>getstartedpanecontentenabled</para></summary>
	public const string IsGetStartedPaneContentEnabled = "getstartedpanecontentenabled";
	/// <summary><para>Is Mailbox Forced Unlocking Enabled</para>
	/// <para>ismailboxforcedunlockingenabled</para></summary>
	public const string IsMailboxForcedUnlockingEnabled = "ismailboxforcedunlockingenabled";
	/// <summary><para>Is Mailbox Keep Alive Enabled</para>
	/// <para>ismailboxinactivebackoffenabled</para></summary>
	public const string IsMailboxKeepAliveEnabled = "ismailboxinactivebackoffenabled";
	/// <summary><para>Is Mailing Address Sync Enabled</para>
	/// <para>iscontactmailingaddresssyncenabled</para></summary>
	public const string IsMailingAddressSyncEnabled = "iscontactmailingaddresssyncenabled";
	/// <summary><para>Is Mobile Client On Demand Sync enabled</para>
	/// <para>ismobileclientondemandsyncenabled</para></summary>
	public const string IsMobileClientOnDemandSyncEnabled = "ismobileclientondemandsyncenabled";
	/// <summary><para>Is Organization Disabled</para>
	/// <para>isdisabled</para></summary>
	public const string IsOrganizationDisabled = "isdisabled";
	/// <summary><para>Is Sales Order Integration Enabled</para>
	/// <para>issopintegrationenabled</para></summary>
	public const string IsSalesOrderIntegrationEnabled = "issopintegrationenabled";
	/// <summary><para>Is SLA suppressed</para>
	/// <para>suppresssla</para></summary>
	public const string IsSLASuppressed = "suppresssla";
	/// <summary><para>Is Social Care disabled</para>
	/// <para>disablesocialcare</para></summary>
	public const string IsSocialCareDisabled = "disablesocialcare";
	/// <summary><para>Is SQM Enabled</para>
	/// <para>sqmenabled</para></summary>
	public const string IsSQMEnabled = "sqmenabled";
	/// <summary><para>Is User Access Auditing Enabled</para>
	/// <para>isuseraccessauditenabled</para></summary>
	public const string IsUserAccessAuditingEnabled = "isuseraccessauditenabled";
	/// <summary><para>ISV Integration Mode</para>
	/// <para>isvintegrationcode</para></summary>
	public const string ISVIntegrationMode = "isvintegrationcode";
	/// <summary><para>Knowledge Article Prefix</para>
	/// <para>kaprefix</para></summary>
	public const string KnowledgeArticlePrefix = "kaprefix";
	/// <summary><para>Knowledge Management Settings</para>
	/// <para>kmsettings</para></summary>
	public const string KnowledgeManagementSettings = "kmsettings";
	/// <summary><para>Language</para>
	/// <para>languagecode</para></summary>
	public const string Language = "languagecode";
	/// <summary><para>Legacy Form Rendering</para>
	/// <para>uselegacyrendering</para></summary>
	public const string LegacyFormRendering = "uselegacyrendering";
	/// <summary><para>Locale</para>
	/// <para>localeid</para></summary>
	public const string Locale = "localeid";
	/// <summary><para>Long Date Format</para>
	/// <para>longdateformatcode</para></summary>
	public const string LongDateFormat = "longdateformatcode";
	/// <summary><para>Lower Threshold For Mailbox Intermittent Issue</para>
	/// <para>mailboxintermittentissueminrange</para></summary>
	public const string LowerThresholdForMailboxIntermittentIssue = "mailboxintermittentissueminrange";
	/// <summary><para>Lower Threshold For Mailbox Permanent Issue.</para>
	/// <para>mailboxpermanentissueminrange</para></summary>
	public const string LowerThresholdForMailboxPermanentIssue = "mailboxpermanentissueminrange";
	/// <summary><para>Max Appointment Duration</para>
	/// <para>maxappointmentdurationdays</para></summary>
	public const string MaxAppointmentDuration = "maxappointmentdurationdays";
	/// <summary><para>Max Folder Based Tracking Mappings</para>
	/// <para>maxfolderbasedtrackingmappings</para></summary>
	public const string MaxFolderBasedTrackingMappings = "maxfolderbasedtrackingmappings";
	/// <summary><para>Max No Of Mailboxes To Enable For Verbose Logging</para>
	/// <para>maxverboseloggingmailbox</para></summary>
	public const string MaxNoOfMailboxesToEnableForVerboseLogging = "maxverboseloggingmailbox";
	/// <summary><para>Max Records Filter Selection</para>
	/// <para>maxrecordsforlookupfilters</para></summary>
	public const string MaxRecordsFilterSelection = "maxrecordsforlookupfilters";
	/// <summary><para>Max Records For Excel Export</para>
	/// <para>maxrecordsforexporttoexcel</para></summary>
	public const string MaxRecordsForExcelExport = "maxrecordsforexporttoexcel";
	/// <summary><para>Max supported IE version</para>
	/// <para>maxsupportedinternetexplorerversion</para></summary>
	public const string MaxSupportedIEVersion = "maxsupportedinternetexplorerversion";
	/// <summary><para>Max Tracking Number</para>
	/// <para>maximumtrackingnumber</para></summary>
	public const string MaxTrackingNumber = "maximumtrackingnumber";
	/// <summary><para>Max Upload File Size</para>
	/// <para>maxuploadfilesize</para></summary>
	public const string MaxUploadFileSize = "maxuploadfilesize";
	/// <summary><para>Max value of Days since record last modified</para>
	/// <para>dayssincerecordlastmodifiedmaxvalue</para></summary>
	public const string MaxValueOfDaysSinceRecordLastModified = "dayssincerecordlastmodifiedmaxvalue";
	/// <summary><para>Maximum active business process flows per entity</para>
	/// <para>maximumactivebusinessprocessflowsallowedperentity</para></summary>
	public const string MaximumActiveBusinessProcessFlowsPerEntity = "maximumactivebusinessprocessflowsallowedperentity";
	/// <summary><para>Maximum depth for hierarchy security propagation.</para>
	/// <para>maxdepthforhierarchicalsecuritymodel</para></summary>
	public const string MaximumDepthForHierarchySecurityPropagation = "maxdepthforhierarchicalsecuritymodel";
	/// <summary><para>Maximum number of active SLA allowed per entity in online</para>
	/// <para>maximumentitieswithactivesla</para></summary>
	public const string MaximumNumberOfActiveSLAAllowedPerEntityInOnline = "maximumentitieswithactivesla";
	/// <summary><para>Maximum number of active SLA KPI allowed per entity in online</para>
	/// <para>maximumslakpiperentitywithactivesla</para></summary>
	public const string MaximumNumberOfActiveSLAKPIAllowedPerEntityInOnline = "maximumslakpiperentitywithactivesla";
	/// <summary><para>Maximum number of conditions allowed for mobile offline filters</para>
	/// <para>maxconditionsformobileofflinefilters</para></summary>
	public const string MaximumNumberOfConditionsAllowedForMobileOfflineFilters = "maxconditionsformobileofflinefilters";
	/// <summary><para>Maximum number of sync cycles for which verbose logging will be enabled by default</para>
	/// <para>maxverboseloggingsynccycles</para></summary>
	public const string MaximumNumberOfSyncCyclesForWhichVerboseLoggingWillBeEnabledByDefault = "maxverboseloggingsynccycles";
	/// <summary><para>Metadata sync version</para>
	/// <para>metadatasynctimestamp</para></summary>
	public const string MetadataSyncVersion = "metadatasynctimestamp";
	/// <summary><para>Min Address Synchronization Frequency</para>
	/// <para>minaddressbooksyncinterval</para></summary>
	public const string MinAddressSynchronizationFrequency = "minaddressbooksyncinterval";
	/// <summary><para>Min Offline Synchronization Frequency</para>
	/// <para>minofflinesyncinterval</para></summary>
	public const string MinOfflineSynchronizationFrequency = "minofflinesyncinterval";
	/// <summary><para>Min Synchronization Frequency</para>
	/// <para>minoutlooksyncinterval</para></summary>
	public const string MinSynchronizationFrequency = "minoutlooksyncinterval";
	/// <summary><para>Minimum number of user license required for mobile offline service by production/preview organization</para>
	/// <para>mobileofflineminlicenseprod</para></summary>
	public const string MinimumNumberOfUserLicenseRequiredForMobileOfflineServiceByProduction_previewOrganization = "mobileofflineminlicenseprod";
	/// <summary><para>Minimum number of user license required for mobile offline service by trial organization</para>
	/// <para>mobileofflineminlicensetrial</para></summary>
	public const string MinimumNumberOfUserLicenseRequiredForMobileOfflineServiceByTrialOrganization = "mobileofflineminlicensetrial";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>Name of the default app</para>
	/// <para>defaultcrmcustomname</para></summary>
	public const string NameOfTheDefaultApp = "defaultcrmcustomname";
	/// <summary><para>Negative Currency Format</para>
	/// <para>negativecurrencyformatcode</para></summary>
	public const string NegativeCurrencyFormat = "negativecurrencyformatcode";
	/// <summary><para>Negative Format</para>
	/// <para>negativeformatcode</para></summary>
	public const string NegativeFormat = "negativeformatcode";
	/// <summary><para>Next Entity Type Code</para>
	/// <para>nextcustomobjecttypecode</para></summary>
	public const string NextEntityTypeCode = "nextcustomobjecttypecode";
	/// <summary><para>Next Tracking Number</para>
	/// <para>nexttrackingnumber</para></summary>
	public const string NextTrackingNumber = "nexttrackingnumber";
	/// <summary><para>Notify Mailbox Owner Of Email Server Level Alerts</para>
	/// <para>notifymailboxownerofemailserverlevelalerts</para></summary>
	public const string NotifyMailboxOwnerOfEmailServerLevelAlerts = "notifymailboxownerofemailserverlevelalerts";
	/// <summary><para>Number Format</para>
	/// <para>numberformat</para></summary>
	public const string NumberFormat = "numberformat";
	/// <summary><para>Number Grouping Format</para>
	/// <para>numbergroupformat</para></summary>
	public const string NumberGroupingFormat = "numbergroupformat";
	/// <summary><para>Number Separator</para>
	/// <para>numberseparator</para></summary>
	public const string NumberSeparator = "numberseparator";
	/// <summary><para>option set values for isenabledforallroles</para>
	/// <para>isenabledforallroles</para></summary>
	public const string OptionSetValuesForIsenabledforallroles = "isenabledforallroles";
	/// <summary><para>Order Prefix</para>
	/// <para>orderprefix</para></summary>
	public const string OrderPrefix = "orderprefix";
	/// <summary><para>Organization</para>
	/// <para>organizationid</para></summary>
	public const string OrganizationId = "organizationid";
	/// <summary><para>Organization Database Organization Settings</para>
	/// <para>orgdborgsettings</para></summary>
	public const string OrganizationDatabaseOrganizationSettings = "orgdborgsettings";
	/// <summary><para>Organization Name</para>
	/// <para>name</para></summary>
	public const string OrganizationName = "name";
	/// <summary><para>Organization setting to enforce read only plugins.</para>
	/// <para>enforcereadonlyplugins</para></summary>
	public const string OrganizationSettingToEnforceReadOnlyPlugins = "enforcereadonlyplugins";
	/// <summary><para>Parsed Table Column Prefix</para>
	/// <para>parsedtablecolumnprefix</para></summary>
	public const string ParsedTableColumnPrefix = "parsedtablecolumnprefix";
	/// <summary><para>Parsed Table Prefix</para>
	/// <para>parsedtableprefix</para></summary>
	public const string ParsedTablePrefix = "parsedtableprefix";
	/// <summary><para>Past Expansion Window</para>
	/// <para>pastexpansionwindow</para></summary>
	public const string PastExpansionWindow = "pastexpansionwindow";
	/// <summary><para>Picture</para>
	/// <para>picture</para></summary>
	public const string Picture = "picture";
	/// <summary><para>Plug-in Trace Log Setting</para>
	/// <para>plugintracelogsetting</para></summary>
	public const string Plug_inTraceLogSetting = "plugintracelogsetting";
	/// <summary><para>PM Designator</para>
	/// <para>pmdesignator</para></summary>
	public const string PMDesignator = "pmdesignator";
	/// <summary><para>Prefix for Fiscal Year</para>
	/// <para>fiscalyearformatprefix</para></summary>
	public const string PrefixForFiscalYear = "fiscalyearformatprefix";
	/// <summary><para>Presence Enabled</para>
	/// <para>ispresenceenabled</para></summary>
	public const string PresenceEnabled = "ispresenceenabled";
	/// <summary><para>Pricing Decimal Precision</para>
	/// <para>pricingdecimalprecision</para></summary>
	public const string PricingDecimalPrecision = "pricingdecimalprecision";
	/// <summary><para>Privacy Statement URL</para>
	/// <para>privacystatementurl</para></summary>
	public const string PrivacyStatementURL = "privacystatementurl";
	/// <summary><para>Privilege Reporting Group</para>
	/// <para>privreportinggroupid</para></summary>
	public const string PrivilegeReportingGroup = "privreportinggroupid";
	/// <summary><para>Privilege Reporting Group Name</para>
	/// <para>privreportinggroupname</para></summary>
	public const string PrivilegeReportingGroupName = "privreportinggroupname";
	/// <summary><para>Privilege User Group</para>
	/// <para>privilegeusergroupid</para></summary>
	public const string PrivilegeUserGroup = "privilegeusergroupid";
	/// <summary><para>Product Properties Item Limit</para>
	/// <para>maximumdynamicpropertiesallowed</para></summary>
	public const string ProductPropertiesItemLimit = "maximumdynamicpropertiesallowed";
	/// <summary><para>Quick Find Record Limit Enabled</para>
	/// <para>quickfindrecordlimitenabled</para></summary>
	public const string QuickFindRecordLimitEnabled = "quickfindrecordlimitenabled";
	/// <summary><para>Quote Prefix</para>
	/// <para>quoteprefix</para></summary>
	public const string QuotePrefix = "quoteprefix";
	/// <summary><para>Recurrence Default Number of Occurrences</para>
	/// <para>recurrencedefaultnumberofoccurrences</para></summary>
	public const string RecurrenceDefaultNumberOfOccurrences = "recurrencedefaultnumberofoccurrences";
	/// <summary><para>Recurrence Expansion Job Batch Interval</para>
	/// <para>recurrenceexpansionjobbatchinterval</para></summary>
	public const string RecurrenceExpansionJobBatchInterval = "recurrenceexpansionjobbatchinterval";
	/// <summary><para>Recurrence Expansion On Demand Job Batch Size</para>
	/// <para>recurrenceexpansionjobbatchsize</para></summary>
	public const string RecurrenceExpansionOnDemandJobBatchSize = "recurrenceexpansionjobbatchsize";
	/// <summary><para>Recurrence Expansion Synchronization Create Maximum</para>
	/// <para>recurrenceexpansionsynchcreatemax</para></summary>
	public const string RecurrenceExpansionSynchronizationCreateMaximum = "recurrenceexpansionsynchcreatemax";
	/// <summary><para>Reference SiteMap XML</para>
	/// <para>referencesitemapxml</para></summary>
	public const string ReferenceSiteMapXML = "referencesitemapxml";
	/// <summary><para>Render Secure Frame For Email</para>
	/// <para>rendersecureiframeforemail</para></summary>
	public const string RenderSecureFrameForEmail = "rendersecureiframeforemail";
	/// <summary><para>Report Script Errors</para>
	/// <para>reportscripterrors</para></summary>
	public const string ReportScriptErrors = "reportscripterrors";
	/// <summary><para>Reporting Group</para>
	/// <para>reportinggroupid</para></summary>
	public const string ReportingGroup = "reportinggroupid";
	/// <summary><para>Reporting Group Name</para>
	/// <para>reportinggroupname</para></summary>
	public const string ReportingGroupName = "reportinggroupname";
	/// <summary><para>Resource booking synchronization enabled</para>
	/// <para>isresourcebookingexchangesyncenabled</para></summary>
	public const string ResourceBookingSynchronizationEnabled = "isresourcebookingexchangesyncenabled";
	/// <summary><para>Restrict Status Update</para>
	/// <para>restrictstatusupdate</para></summary>
	public const string RestrictStatusUpdate = "restrictstatusupdate";
	/// <summary><para>Rollup Expiration Time for Goal</para>
	/// <para>goalrollupexpirytime</para></summary>
	public const string RollupExpirationTimeForGoal = "goalrollupexpirytime";
	/// <summary><para>Sample Data Import</para>
	/// <para>sampledataimportid</para></summary>
	public const string SampleDataImport = "sampledataimportid";
	/// <summary><para>Set To,cc,bcc fields as unresolved if multiple matches are found</para>
	/// <para>unresolveemailaddressifmultiplematch</para></summary>
	public const string SetTo_cc_bccFieldsAsUnresolvedIfMultipleMatchesAreFound = "unresolveemailaddressifmultiplematch";
	/// <summary><para>Share To Previous Owner On Assign</para>
	/// <para>sharetopreviousowneronassign</para></summary>
	public const string ShareToPreviousOwnerOnAssign = "sharetopreviousowneronassign";
	/// <summary><para>Show KBArticle deprecation message to user</para>
	/// <para>showkbarticledeprecationnotification</para></summary>
	public const string ShowKBArticleDeprecationMessageToUser = "showkbarticledeprecationnotification";
	/// <summary><para>Show Week Number</para>
	/// <para>showweeknumber</para></summary>
	public const string ShowWeekNumber = "showweeknumber";
	/// <summary><para>SiteMap XML</para>
	/// <para>sitemapxml</para></summary>
	public const string SiteMapXML = "sitemapxml";
	/// <summary><para>SLA pause states</para>
	/// <para>slapausestates</para></summary>
	public const string SLAPauseStates = "slapausestates";
	/// <summary><para>Social Insights Enabled</para>
	/// <para>socialinsightsenabled</para></summary>
	public const string SocialInsightsEnabled = "socialinsightsenabled";
	/// <summary><para>Social Insights instance identifier</para>
	/// <para>socialinsightsinstance</para></summary>
	public const string SocialInsightsInstanceIdentifier = "socialinsightsinstance";
	/// <summary><para>Social Insights Terms of Use</para>
	/// <para>socialinsightstermsaccepted</para></summary>
	public const string SocialInsightsTermsOfUse = "socialinsightstermsaccepted";
	/// <summary><para>Sort</para>
	/// <para>sortid</para></summary>
	public const string Sort = "sortid";
	/// <summary><para>SQL Access Group</para>
	/// <para>sqlaccessgroupid</para></summary>
	public const string SQLAccessGroup = "sqlaccessgroupid";
	/// <summary><para>SQL Access Group Name</para>
	/// <para>sqlaccessgroupname</para></summary>
	public const string SQLAccessGroupName = "sqlaccessgroupname";
	/// <summary><para>Suffix for Fiscal Year</para>
	/// <para>fiscalyearformatsuffix</para></summary>
	public const string SuffixForFiscalYear = "fiscalyearformatsuffix";
	/// <summary><para>Support User</para>
	/// <para>supportuserid</para></summary>
	public const string SupportUser = "supportuserid";
	/// <summary><para>Sync interval for mobile offline.</para>
	/// <para>mobileofflinesyncinterval</para></summary>
	public const string SyncIntervalForMobileOffline = "mobileofflinesyncinterval";
	/// <summary><para>System User</para>
	/// <para>systemuserid</para></summary>
	public const string SystemUser = "systemuserid";
	/// <summary><para>The last date/time for never expired metadata tracking deleted objects</para>
	/// <para>metadatasynclasttimeofneverexpireddeletedobjects</para></summary>
	public const string TheLastDate_timeForNeverExpiredMetadataTrackingDeletedObjects = "metadatasynclasttimeofneverexpireddeletedobjects";
	/// <summary><para>The url to open the Delve</para>
	/// <para>officegraphdelveurl</para></summary>
	public const string TheUrlToOpenTheDelve = "officegraphdelveurl";
	/// <summary><para>Time Format Code</para>
	/// <para>timeformatcode</para></summary>
	public const string TimeFormatCode = "timeformatcode";
	/// <summary><para>Time Format String</para>
	/// <para>timeformatstring</para></summary>
	public const string TimeFormatString = "timeformatstring";
	/// <summary><para>Time Separator</para>
	/// <para>timeseparator</para></summary>
	public const string TimeSeparator = "timeseparator";
	/// <summary><para>Time Zone Rule Version Number</para>
	/// <para>timezoneruleversionnumber</para></summary>
	public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
	/// <summary><para>Token Expiration Duration</para>
	/// <para>tokenexpiry</para></summary>
	public const string TokenExpirationDuration = "tokenexpiry";
	/// <summary><para>Token Key</para>
	/// <para>tokenkey</para></summary>
	public const string TokenKey = "tokenkey";
	/// <summary><para>Tracking Prefix</para>
	/// <para>trackingprefix</para></summary>
	public const string TrackingPrefix = "trackingprefix";
	/// <summary><para>Tracking Token Base</para>
	/// <para>trackingtokenidbase</para></summary>
	public const string TrackingTokenBase = "trackingtokenidbase";
	/// <summary><para>Tracking Token Digits</para>
	/// <para>trackingtokeniddigits</para></summary>
	public const string TrackingTokenDigits = "trackingtokeniddigits";
	/// <summary><para>Unique String Length</para>
	/// <para>uniquespecifierlength</para></summary>
	public const string UniqueStringLength = "uniquespecifierlength";
	/// <summary><para>Use Email Correlation</para>
	/// <para>emailcorrelationenabled</para></summary>
	public const string UseEmailCorrelation = "emailcorrelationenabled";
	/// <summary><para>Use Inbuilt Rule For Default Pricelist Selection</para>
	/// <para>useinbuiltrulefordefaultpricelistselection</para></summary>
	public const string UseInbuiltRuleForDefaultPricelistSelection = "useinbuiltrulefordefaultpricelistselection";
	/// <summary><para>Use position hierarchy</para>
	/// <para>usepositionhierarchy</para></summary>
	public const string UsePositionHierarchy = "usepositionhierarchy";
	/// <summary><para>Use Read-Optimized Form</para>
	/// <para>usereadform</para></summary>
	public const string UseRead_OptimizedForm = "usereadform";
	/// <summary><para>User Authentication Auditing Interval</para>
	/// <para>useraccessauditinginterval</para></summary>
	public const string UserAuthenticationAuditingInterval = "useraccessauditinginterval";
	/// <summary><para>User Group</para>
	/// <para>usergroupid</para></summary>
	public const string UserGroup = "usergroupid";
	/// <summary><para>User Skype Protocol</para>
	/// <para>useskypeprotocol</para></summary>
	public const string UserSkypeProtocol = "useskypeprotocol";
	/// <summary><para>UTC Conversion Time Zone Code</para>
	/// <para>utcconversiontimezonecode</para></summary>
	public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
	/// <summary><para>V3 Callout Hash</para>
	/// <para>v3calloutconfighash</para></summary>
	public const string V3CalloutHash = "v3calloutconfighash";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
	/// <summary><para>Web resource hash</para>
	/// <para>webresourcehash</para></summary>
	public const string WebResourceHash = "webresourcehash";
	/// <summary><para>Week Start Day Code</para>
	/// <para>weekstartdaycode</para></summary>
	public const string WeekStartDayCode = "weekstartdaycode";
	/// <summary><para>Yammer Group Id</para>
	/// <para>yammergroupid</para></summary>
	public const string YammerGroupId = "yammergroupid";
	/// <summary><para>Yammer Network Permalink</para>
	/// <para>yammernetworkpermalink</para></summary>
	public const string YammerNetworkPermalink = "yammernetworkpermalink";
	/// <summary><para>Yammer OAuth Access Token Expired</para>
	/// <para>yammeroauthaccesstokenexpired</para></summary>
	public const string YammerOAuthAccessTokenExpired = "yammeroauthaccesstokenexpired";
	/// <summary><para>Year Start Week Code</para>
	/// <para>yearstartweekcode</para></summary>
	public const string YearStartWeekCode = "yearstartweekcode";
}

    }
}

// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("knowledgearticle")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class KnowledgeArticle : BaseProxyClass
    {
        public new const string LogicalName = "knowledgearticle";
        public const int ObjectTypeCode = 9953;
        public const string PrimaryIdAttribute = "knowledgearticleid";
        public const string PrimaryNameAttribute = "title";
        
        static KnowledgeArticle()
        {
            BaseProxyClass.RegisterProxyType(typeof(KnowledgeArticle), "knowledgearticle");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public KnowledgeArticle() : base(new Entity("knowledgearticle")) { }
        public KnowledgeArticle(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<KnowledgeArticle>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: primaryauthoridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("primaryauthoridname")]
public string PrimaryauthoridName
{
	get { return this.GetPropertyValue<string>("primaryauthoridname"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: languagelocaleidlocaleid</para>
///<para>Minimum Value: 1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("languagelocaleidlocaleid")]
public int? LanguageLocaleIdLocaleId
{
	get { return this.GetPropertyValue<int?>("languagelocaleidlocaleid"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: languagelocaleidname</para>
///<para>Max Length: 500 characters</para>
///</summary>
[AttributeLogicalNameAttribute("languagelocaleidname")]
public string LanguageLocaleIdName
{
	get { return this.GetPropertyValue<string>("languagelocaleidname"); }
}
///<summary>
///<para>Logical Name: owneridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridname")]
public string OwnerIdName
{
	get { return this.GetPropertyValue<string>("owneridname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: subjectiddsc</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("subjectiddsc")]
public int? SubjectIdDsc
{
	get { return this.GetPropertyValue<int?>("subjectiddsc"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: previousarticlecontentidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("previousarticlecontentidname")]
public string PreviousArticleContentIdName
{
	get { return this.GetPropertyValue<string>("previousarticlecontentidname"); }
}
///<summary>
///<para>Logical Name: owneridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridyominame")]
public string OwnerIdYomiName
{
	get { return this.GetPropertyValue<string>("owneridyominame"); }
}
///<summary>
///<para>Logical Name: subjectidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("subjectidname")]
public string SubjectIdName
{
	get { return this.GetPropertyValue<string>("subjectidname"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: owneridtype</para>
///</summary>
[AttributeLogicalNameAttribute("owneridtype")]
public string OwnerIdType
{
	get { return this.GetPropertyValue<string>("owneridtype"); }
	set { this.SetPropertyValue<string>("owneridtype", value, "OwnerIdType"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyidname")]
public string TransactionCurrencyIdName
{
	get { return this.GetPropertyValue<string>("transactioncurrencyidname"); }
}
///<summary>
///<para>Logical Name: rootarticleidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("rootarticleidname")]
public string RootArticleIdName
{
	get { return this.GetPropertyValue<string>("rootarticleidname"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: parentarticlecontentidname</para>
///<para>Max Length: 500 characters</para>
///</summary>
[AttributeLogicalNameAttribute("parentarticlecontentidname")]
public string ParentArticleContentIdName
{
	get { return this.GetPropertyValue<string>("parentarticlecontentidname"); }
}
///<summary>
///<para>Logical Name: articlepublicnumber</para>
///<para>Max Length: 4000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("articlepublicnumber")]
public string ArticlePublicNumber
{
	get { return this.GetPropertyValue<string>("articlepublicnumber"); }
	set { this.SetPropertyValue("articlepublicnumber", value, 4000, "ArticlePublicNumber"); }
}
///<summary>
///<para>Logical Name: content</para>
///<para>Max Length: 1073741823 characters</para>
///</summary>
[AttributeLogicalNameAttribute("content")]
public string Content
{
	get { return this.GetPropertyValue<string>("content"); }
	set { this.SetPropertyValue("content", value, 1073741823, "Content"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyid</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyid")]
public EntityReference Currency
{
	get { return this.GetPropertyValue<EntityReference>("transactioncurrencyid"); }
	set { this.SetPropertyValue<EntityReference>("transactioncurrencyid", value, "Currency"); }
}
///<summary>
///<para>Logical Name: description</para>
///<para>Max Length: 155 characters</para>
///</summary>
[AttributeLogicalNameAttribute("description")]
public string Description
{
	get { return this.GetPropertyValue<string>("description"); }
	set { this.SetPropertyValue("description", value, 155, "Description"); }
}
///<summary>
///<para>Logical Name: exchangerate</para>
///<para>Minimum Value: 0.0000000001</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 10</para>
///</summary>
[AttributeLogicalNameAttribute("exchangerate")]
public decimal? ExchangeRate
{
	get { return this.GetPropertyValue<decimal?>("exchangerate"); }
}
///<summary>
///<para>Logical Name: expirationdate</para>
///</summary>
[AttributeLogicalNameAttribute("expirationdate")]
public DateTime? ExpirationDate
{
	get { return this.GetPropertyValue<DateTime?>("expirationdate"); }
	set { this.SetPropertyValue<DateTime?>("expirationdate", value, "ExpirationDate"); }
}
///<summary>
///<para>Logical Name: expirationstateid</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("expirationstateid")]
public int? ExpirationStateId
{
	get { return this.GetPropertyValue<int?>("expirationstateid"); }
	set { this.SetPropertyValue("expirationstateid", (int?)value, (int)0, (int)2147483647, "ExpirationStateId"); }
}
/// <summary>
///Logical Name: expiredreviewoptions
/// </summary>
[AttributeLogicalNameAttribute("expiredreviewoptions")]
public eExpiredReviewOptions? ExpiredReviewOptions
{
	get
	{
		if (ExpiredReviewOptions_OptionSetValue != null) { return (eExpiredReviewOptions)ExpiredReviewOptions_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ExpiredReviewOptions_OptionSetValue = new OptionSetValue((int)value); }
		else this.ExpiredReviewOptions_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: expiredreviewoptions</para>
///</summary>
[AttributeLogicalNameAttribute("expiredreviewoptions")]
public OptionSetValue ExpiredReviewOptions_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("expiredreviewoptions"); }
	set { this.SetPropertyValue<OptionSetValue>("expiredreviewoptions", value, "ExpiredReviewOptions_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ExpiredReviewOptions_Text(IOrganizationService Service)
{
	return this.ExpiredReviewOptions_OptionSetValue.GetOptionSetText(Service, this, "expiredreviewoptions");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ExpiredReviewOptions_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ExpiredReviewOptions_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: expirationstatusid</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("expirationstatusid")]
public int? ExpiredStatus
{
	get { return this.GetPropertyValue<int?>("expirationstatusid"); }
	set { this.SetPropertyValue("expirationstatusid", (int?)value, (int)0, (int)2147483647, "ExpiredStatus"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? ImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "ImportSequenceNumber"); }
}
///<summary>
///<para>Logical Name: isinternal</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isinternal")]
public bool? @Internal
{
	get { return this.GetPropertyValue<bool?>("isinternal"); }
	set { this.SetPropertyValue<bool?>("isinternal", value, "@Internal"); }
}
///<summary>
///<para>Logical Name: islatestversion</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("islatestversion")]
public bool? IsLatestVersion
{
	get { return this.GetPropertyValue<bool?>("islatestversion"); }
	set { this.SetPropertyValue<bool?>("islatestversion", value, "IsLatestVersion"); }
}
///<summary>
///<para>Logical Name: keywords</para>
///<para>Max Length: 4000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("keywords")]
public string Keywords
{
	get { return this.GetPropertyValue<string>("keywords"); }
	set { this.SetPropertyValue("keywords", value, 4000, "Keywords"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: knowledgearticleid</para>
///</summary>
[AttributeLogicalNameAttribute("knowledgearticleid")]
public Guid KnowledgeArticleId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: knowledgearticleviews_date</para>
///</summary>
[AttributeLogicalNameAttribute("knowledgearticleviews_date")]
public DateTime? KnowledgeArticleView_LastUpdatedTime
{
	get { return this.GetPropertyValue<DateTime?>("knowledgearticleviews_date"); }
}
///<summary>
///<para>Logical Name: knowledgearticleviews_state</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("knowledgearticleviews_state")]
public int? KnowledgeArticleView_State
{
	get { return this.GetPropertyValue<int?>("knowledgearticleviews_state"); }
}
///<summary>
///<para>Logical Name: knowledgearticleviews</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("knowledgearticleviews")]
public int? KnowledgeArticleViews
{
	get { return this.GetPropertyValue<int?>("knowledgearticleviews"); }
}
///<summary>
///<para>Logical Name: languagelocaleid</para>
///</summary>
[AttributeLogicalNameAttribute("languagelocaleid")]
public EntityReference Language
{
	get { return this.GetPropertyValue<EntityReference>("languagelocaleid"); }
	set { this.SetPropertyValue<EntityReference>("languagelocaleid", value, "Language"); }
}
///<summary>
///<para>Logical Name: majorversionnumber</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("majorversionnumber")]
public int? MajorVersionNumber
{
	get { return this.GetPropertyValue<int?>("majorversionnumber"); }
	set { this.SetPropertyValue("majorversionnumber", (int?)value, (int)0, (int)2147483647, "MajorVersionNumber"); }
}
///<summary>
///<para>Logical Name: minorversionnumber</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("minorversionnumber")]
public int? MinorVersionNumber
{
	get { return this.GetPropertyValue<int?>("minorversionnumber"); }
	set { this.SetPropertyValue("minorversionnumber", (int?)value, (int)0, (int)2147483647, "MinorVersionNumber"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: ownerid</para>
///</summary>
[AttributeLogicalNameAttribute("ownerid")]
public EntityReference Owner
{
	get { return this.GetPropertyValue<EntityReference>("ownerid"); }
	set { this.SetPropertyValue<EntityReference>("ownerid", value, "Owner"); }
}
///<summary>
///<para>Logical Name: owningbusinessunit</para>
///</summary>
[AttributeLogicalNameAttribute("owningbusinessunit")]
public EntityReference OwningBusinessUnit
{
	get { return this.GetPropertyValue<EntityReference>("owningbusinessunit"); }
}
///<summary>
///<para>Logical Name: owningteam</para>
///</summary>
[AttributeLogicalNameAttribute("owningteam")]
public EntityReference OwningTeam
{
	get { return this.GetPropertyValue<EntityReference>("owningteam"); }
}
///<summary>
///<para>Logical Name: owninguser</para>
///</summary>
[AttributeLogicalNameAttribute("owninguser")]
public EntityReference OwningUser
{
	get { return this.GetPropertyValue<EntityReference>("owninguser"); }
}
///<summary>
///<para>Logical Name: parentarticlecontentid</para>
///</summary>
[AttributeLogicalNameAttribute("parentarticlecontentid")]
public EntityReference ParentArticleContentId
{
	get { return this.GetPropertyValue<EntityReference>("parentarticlecontentid"); }
	set { this.SetPropertyValue<EntityReference>("parentarticlecontentid", value, "ParentArticleContentId"); }
}
///<summary>
///<para>Logical Name: previousarticlecontentid</para>
///</summary>
[AttributeLogicalNameAttribute("previousarticlecontentid")]
public EntityReference PreviousArticleContentID
{
	get { return this.GetPropertyValue<EntityReference>("previousarticlecontentid"); }
	set { this.SetPropertyValue<EntityReference>("previousarticlecontentid", value, "PreviousArticleContentID"); }
}
///<summary>
///<para>Logical Name: isprimary</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isprimary")]
public bool? PrimaryArticle
{
	get { return this.GetPropertyValue<bool?>("isprimary"); }
	set { this.SetPropertyValue<bool?>("isprimary", value, "PrimaryArticle"); }
}
///<summary>
///<para>Logical Name: primaryauthorid</para>
///</summary>
[AttributeLogicalNameAttribute("primaryauthorid")]
public EntityReference PrimaryAuthorId
{
	get { return this.GetPropertyValue<EntityReference>("primaryauthorid"); }
	set { this.SetPropertyValue<EntityReference>("primaryauthorid", value, "PrimaryAuthorId"); }
}
///<summary>
///<para>Logical Name: processid</para>
///</summary>
[AttributeLogicalNameAttribute("processid")]
public Guid ProcessId
{
	get { return this.GetPropertyValue<Guid>("processid"); }
	set { this.SetPropertyValue<Guid>("processid", value, "ProcessId"); }
}
///<summary>
///<para>Logical Name: publishon</para>
///</summary>
[AttributeLogicalNameAttribute("publishon")]
public DateTime? PublishOn
{
	get { return this.GetPropertyValue<DateTime?>("publishon"); }
	set { this.SetPropertyValue<DateTime?>("publishon", value, "PublishOn"); }
}
///<summary>
///<para>Logical Name: publishstatusid</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("publishstatusid")]
public int? PublishedStatus
{
	get { return this.GetPropertyValue<int?>("publishstatusid"); }
	set { this.SetPropertyValue("publishstatusid", (int?)value, (int)-2147483648, (int)2147483647, "PublishedStatus"); }
}
///<summary>
///<para>Logical Name: rating</para>
///<para>Minimum Value: -100000000000</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("rating")]
public decimal? Rating
{
	get { return this.GetPropertyValue<decimal?>("rating"); }
}
///<summary>
///<para>Logical Name: rating_count</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("rating_count")]
public int? Rating_Count
{
	get { return this.GetPropertyValue<int?>("rating_count"); }
}
///<summary>
///<para>Logical Name: rating_date</para>
///</summary>
[AttributeLogicalNameAttribute("rating_date")]
public DateTime? Rating_LastUpdatedTime
{
	get { return this.GetPropertyValue<DateTime?>("rating_date"); }
}
///<summary>
///<para>Logical Name: rating_state</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("rating_state")]
public int? Rating_State
{
	get { return this.GetPropertyValue<int?>("rating_state"); }
}
///<summary>
///<para>Logical Name: rating_sum</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("rating_sum")]
public decimal? Rating_sum
{
	get { return this.GetPropertyValue<decimal?>("rating_sum"); }
}
///<summary>
///<para>Logical Name: readyforreview</para>
///<para>True = Completed</para>
///<para>False = Mark Complete</para>
///</summary>
[AttributeLogicalNameAttribute("readyforreview")]
public bool? ReadyForReview
{
	get { return this.GetPropertyValue<bool?>("readyforreview"); }
	set { this.SetPropertyValue<bool?>("readyforreview", value, "ReadyForReview"); }
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? RecordCreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "RecordCreatedOn"); }
}
/// <summary>
///Logical Name: review
/// </summary>
[AttributeLogicalNameAttribute("review")]
public eReview? Review
{
	get
	{
		if (Review_OptionSetValue != null) { return (eReview)Review_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Review_OptionSetValue = new OptionSetValue((int)value); }
		else this.Review_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: review</para>
///</summary>
[AttributeLogicalNameAttribute("review")]
public OptionSetValue Review_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("review"); }
	set { this.SetPropertyValue<OptionSetValue>("review", value, "Review_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Review_Text(IOrganizationService Service)
{
	return this.Review_OptionSetValue.GetOptionSetText(Service, this, "review");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Review_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Review_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: isrootarticle</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isrootarticle")]
public bool? RootArticle
{
	get { return this.GetPropertyValue<bool?>("isrootarticle"); }
	set { this.SetPropertyValue<bool?>("isrootarticle", value, "RootArticle"); }
}
///<summary>
///<para>Logical Name: rootarticleid</para>
///</summary>
[AttributeLogicalNameAttribute("rootarticleid")]
public EntityReference RootArticleId
{
	get { return this.GetPropertyValue<EntityReference>("rootarticleid"); }
	set { this.SetPropertyValue<EntityReference>("rootarticleid", value, "RootArticleId"); }
}
///<summary>
///<para>Logical Name: scheduledstatusid</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("scheduledstatusid")]
public int? ScheduledStatus
{
	get { return this.GetPropertyValue<int?>("scheduledstatusid"); }
	set { this.SetPropertyValue("scheduledstatusid", (int?)value, (int)-2147483648, (int)2147483647, "ScheduledStatus"); }
}
///<summary>
///<para>Logical Name: setcategoryassociations</para>
///<para>True = Completed</para>
///<para>False = Mark as Complete</para>
///</summary>
[AttributeLogicalNameAttribute("setcategoryassociations")]
public bool? SetCategoryAssociations
{
	get { return this.GetPropertyValue<bool?>("setcategoryassociations"); }
	set { this.SetPropertyValue<bool?>("setcategoryassociations", value, "SetCategoryAssociations"); }
}
///<summary>
///<para>Logical Name: setproductassociations</para>
///<para>True = Completed</para>
///<para>False = Mark As Complete</para>
///</summary>
[AttributeLogicalNameAttribute("setproductassociations")]
public bool? SetProductAssociations
{
	get { return this.GetPropertyValue<bool?>("setproductassociations"); }
	set { this.SetPropertyValue<bool?>("setproductassociations", value, "SetProductAssociations"); }
}
///<summary>
///<para>Logical Name: stageid</para>
///</summary>
[AttributeLogicalNameAttribute("stageid")]
public Guid StageId
{
	get { return this.GetPropertyValue<Guid>("stageid"); }
	set { this.SetPropertyValue<Guid>("stageid", value, "StageId"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eStatus? Status
{
	get
	{
		if (Status_OptionSetValue != null) { return (eStatus)Status_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Status_OptionSetValue = new OptionSetValue((int)value); }
		else this.Status_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue Status_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
	set { this.SetPropertyValue<OptionSetValue>("statecode", value, "Status_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Status_Text(IOrganizationService Service)
{
	return this.Status_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Status_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Status_OptionSetValue.Value);
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? StatusReason
{
	get
	{
		if (StatusReason_OptionSetValue != null) { return (eStatusReason)StatusReason_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StatusReason_OptionSetValue = new OptionSetValue((int)value); }
		else this.StatusReason_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue StatusReason_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "StatusReason_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string StatusReason_Text(IOrganizationService Service)
{
	return this.StatusReason_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string StatusReason_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.StatusReason_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: subjectid</para>
///</summary>
[AttributeLogicalNameAttribute("subjectid")]
public EntityReference Subject
{
	get { return this.GetPropertyValue<EntityReference>("subjectid"); }
	set { this.SetPropertyValue<EntityReference>("subjectid", value, "Subject"); }
}
///<summary>
///<para>Logical Name: timezoneruleversionnumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("timezoneruleversionnumber")]
public int? TimeZoneRuleVersionNumber
{
	get { return this.GetPropertyValue<int?>("timezoneruleversionnumber"); }
	set { this.SetPropertyValue("timezoneruleversionnumber", (int?)value, (int)-1, (int)2147483647, "TimeZoneRuleVersionNumber"); }
}
///<summary>
///<para>Logical Name: title</para>
///<para>Max Length: 4000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("title")]
public string Title
{
	get { return this.GetPropertyValue<string>("title"); }
	set { this.SetPropertyValue("title", value, 4000, "Title"); }
}
///<summary>
///<para>Logical Name: traversedpath</para>
///<para>Max Length: 1250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("traversedpath")]
public string TraversedPath
{
	get { return this.GetPropertyValue<string>("traversedpath"); }
	set { this.SetPropertyValue("traversedpath", value, 1250, "TraversedPath"); }
}
///<summary>
///<para>Logical Name: updatecontent</para>
///<para>True = Content Updated</para>
///<para>False = Mark When Completed</para>
///</summary>
[AttributeLogicalNameAttribute("updatecontent")]
public bool? UpdateContent
{
	get { return this.GetPropertyValue<bool?>("updatecontent"); }
	set { this.SetPropertyValue<bool?>("updatecontent", value, "UpdateContent"); }
}
///<summary>
///<para>Logical Name: utcconversiontimezonecode</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utcconversiontimezonecode")]
public int? UTCConversionTimeZoneCode
{
	get { return this.GetPropertyValue<int?>("utcconversiontimezonecode"); }
	set { this.SetPropertyValue("utcconversiontimezonecode", (int?)value, (int)-1, (int)2147483647, "UTCConversionTimeZoneCode"); }
}


        /// <summary>
/// <para><b>ActivityParty (Party)</b></para>
/// <para>Schema Name: knowledgearticle_activity_parties</para>
/// </summary>
public List<ActivityParty> GetActivityParties_Party (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActivityParty>(Service, this.Id, "activityparty", "partyid", Columns); }
/// <summary>
/// <para><b>ActivityParty (Party)</b></para>
/// <para>Schema Name: knowledgearticle_activity_parties</para>
/// </summary>
public List<ActivityParty> GetActivityParties_Party (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActivityParty>(Service, this.Id, "activityparty", "partyid", Columns); }
/// <summary>
/// <para><b>Activity (Regarding)</b></para>
/// <para>Schema Name: KnowledgeArticle_ActivityPointers</para>
/// </summary>
public List<Activity> GetActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Activity>(Service, this.Id, "activitypointer", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Activity (Regarding)</b></para>
/// <para>Schema Name: KnowledgeArticle_ActivityPointers</para>
/// </summary>
public List<Activity> GetActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Activity>(Service, this.Id, "activitypointer", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: knowledgearticle_Annotations</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: knowledgearticle_Annotations</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Appointment (Regarding)</b></para>
/// <para>Schema Name: KnowledgeArticle_Appointments</para>
/// </summary>
public List<Appointment> GetAppointments_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Appointment>(Service, this.Id, "appointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Appointment (Regarding)</b></para>
/// <para>Schema Name: KnowledgeArticle_Appointments</para>
/// </summary>
public List<Appointment> GetAppointments_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Appointment>(Service, this.Id, "appointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: knowledgearticle_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: knowledgearticle_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: knowledgearticle_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: knowledgearticle_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: knowledgearticle_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: knowledgearticle_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: knowledgearticle_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: knowledgearticle_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>IndexedArticle (Document)</b></para>
/// <para>Schema Name: knowledgearticle_documentindex</para>
/// </summary>
public List<IndexedArticle> GetIndexedArticles_Document (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IndexedArticle>(Service, this.Id, "documentindex", "documentid", Columns); }
/// <summary>
/// <para><b>IndexedArticle (Document)</b></para>
/// <para>Schema Name: knowledgearticle_documentindex</para>
/// </summary>
public List<IndexedArticle> GetIndexedArticles_Document (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IndexedArticle>(Service, this.Id, "documentindex", "documentid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: knowledgearticle_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: knowledgearticle_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: knowledgearticle_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: knowledgearticle_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>Email (Regarding)</b></para>
/// <para>Schema Name: KnowledgeArticle_Emails</para>
/// </summary>
public List<Email> GetEmailMessages_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Email (Regarding)</b></para>
/// <para>Schema Name: KnowledgeArticle_Emails</para>
/// </summary>
public List<Email> GetEmailMessages_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ExpiredProcess (Related Knowledge Article)</b></para>
/// <para>Schema Name: lk_expiredprocess_knowledgearticleid</para>
/// </summary>
public List<ExpiredProcess> GetExpiredProcess_RelatedKnowledgeArticle (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ExpiredProcess>(Service, this.Id, "expiredprocess", "knowledgearticleid", Columns); }
/// <summary>
/// <para><b>ExpiredProcess (Related Knowledge Article)</b></para>
/// <para>Schema Name: lk_expiredprocess_knowledgearticleid</para>
/// </summary>
public List<ExpiredProcess> GetExpiredProcess_RelatedKnowledgeArticle (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ExpiredProcess>(Service, this.Id, "expiredprocess", "knowledgearticleid", Columns); }
/// <summary>
/// <para><b>Fax (Regarding)</b></para>
/// <para>Schema Name: KnowledgeArticle_Faxes</para>
/// </summary>
public List<Fax> GetFaxes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fax>(Service, this.Id, "fax", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Fax (Regarding)</b></para>
/// <para>Schema Name: KnowledgeArticle_Faxes</para>
/// </summary>
public List<Fax> GetFaxes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fax>(Service, this.Id, "fax", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Feedback (Regarding)</b></para>
/// <para>Schema Name: KnowledgeArticle_Feedback</para>
/// </summary>
public List<Feedback> GetFeedback_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Feedback>(Service, this.Id, "feedback", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Feedback (Regarding)</b></para>
/// <para>Schema Name: KnowledgeArticle_Feedback</para>
/// </summary>
public List<Feedback> GetFeedback_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Feedback>(Service, this.Id, "feedback", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>KnowledgeArticle (Parent Article Content Id)</b></para>
/// <para>Schema Name: knowledgearticle_parentarticle_contentid</para>
/// </summary>
public List<KnowledgeArticle> GetKnowledgeArticles_ParentArticleContentId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<KnowledgeArticle>(Service, this.Id, "knowledgearticle", "parentarticlecontentid", Columns); }
/// <summary>
/// <para><b>KnowledgeArticle (Parent Article Content Id)</b></para>
/// <para>Schema Name: knowledgearticle_parentarticle_contentid</para>
/// </summary>
public List<KnowledgeArticle> GetKnowledgeArticles_ParentArticleContentId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<KnowledgeArticle>(Service, this.Id, "knowledgearticle", "parentarticlecontentid", Columns); }
/// <summary>
/// <para><b>KnowledgeArticle (Previous Article Content ID)</b></para>
/// <para>Schema Name: knowledgearticle_previousarticle_contentid</para>
/// </summary>
public List<KnowledgeArticle> GetKnowledgeArticles_PreviousArticleContentID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<KnowledgeArticle>(Service, this.Id, "knowledgearticle", "previousarticlecontentid", Columns); }
/// <summary>
/// <para><b>KnowledgeArticle (Previous Article Content ID)</b></para>
/// <para>Schema Name: knowledgearticle_previousarticle_contentid</para>
/// </summary>
public List<KnowledgeArticle> GetKnowledgeArticles_PreviousArticleContentID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<KnowledgeArticle>(Service, this.Id, "knowledgearticle", "previousarticlecontentid", Columns); }
/// <summary>
/// <para><b>KnowledgeArticle (Root Article Id)</b></para>
/// <para>Schema Name: knowledgearticle_rootarticle_id</para>
/// </summary>
public List<KnowledgeArticle> GetKnowledgeArticles_RootArticleId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<KnowledgeArticle>(Service, this.Id, "knowledgearticle", "rootarticleid", Columns); }
/// <summary>
/// <para><b>KnowledgeArticle (Root Article Id)</b></para>
/// <para>Schema Name: knowledgearticle_rootarticle_id</para>
/// </summary>
public List<KnowledgeArticle> GetKnowledgeArticles_RootArticleId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<KnowledgeArticle>(Service, this.Id, "knowledgearticle", "rootarticleid", Columns); }
/// <summary>
/// <para><b>KnowledgeArticleIncident (Knowledge Article)</b></para>
/// <para>Schema Name: incident_knowledgearticles</para>
/// </summary>
public List<KnowledgeArticleIncident> GetKnowledgeArticleIncidents_KnowledgeArticle (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<KnowledgeArticleIncident>(Service, this.Id, "knowledgearticleincident", "knowledgearticleid", Columns); }
/// <summary>
/// <para><b>KnowledgeArticleIncident (Knowledge Article)</b></para>
/// <para>Schema Name: incident_knowledgearticles</para>
/// </summary>
public List<KnowledgeArticleIncident> GetKnowledgeArticleIncidents_KnowledgeArticle (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<KnowledgeArticleIncident>(Service, this.Id, "knowledgearticleincident", "knowledgearticleid", Columns); }
/// <summary>
/// <para><b>KnowledgeArticleViews (Knowledge Article)</b></para>
/// <para>Schema Name: knowledgearticle_views</para>
/// </summary>
public List<KnowledgeArticleViews> GetKnowledgeArticleViews_KnowledgeArticle (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<KnowledgeArticleViews>(Service, this.Id, "knowledgearticleviews", "knowledgearticleid", Columns); }
/// <summary>
/// <para><b>KnowledgeArticleViews (Knowledge Article)</b></para>
/// <para>Schema Name: knowledgearticle_views</para>
/// </summary>
public List<KnowledgeArticleViews> GetKnowledgeArticleViews_KnowledgeArticle (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<KnowledgeArticleViews>(Service, this.Id, "knowledgearticleviews", "knowledgearticleid", Columns); }
/// <summary>
/// <para><b>Letter (Regarding)</b></para>
/// <para>Schema Name: KnowledgeArticle_Letters</para>
/// </summary>
public List<Letter> GetLetters_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Letter>(Service, this.Id, "letter", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Letter (Regarding)</b></para>
/// <para>Schema Name: KnowledgeArticle_Letters</para>
/// </summary>
public List<Letter> GetLetters_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Letter>(Service, this.Id, "letter", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Approval (Regarding)</b></para>
/// <para>Schema Name: knowledgearticle_msdyn_approvals</para>
/// </summary>
public List<Approval> GetApprovals_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Approval>(Service, this.Id, "msdyn_approval", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Approval (Regarding)</b></para>
/// <para>Schema Name: knowledgearticle_msdyn_approvals</para>
/// </summary>
public List<Approval> GetApprovals_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Approval>(Service, this.Id, "msdyn_approval", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BookingAlert (Regarding)</b></para>
/// <para>Schema Name: knowledgearticle_msdyn_bookingalerts</para>
/// </summary>
public List<BookingAlert> GetBookingAlerts_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlert>(Service, this.Id, "msdyn_bookingalert", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BookingAlert (Regarding)</b></para>
/// <para>Schema Name: knowledgearticle_msdyn_bookingalerts</para>
/// </summary>
public List<BookingAlert> GetBookingAlerts_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlert>(Service, this.Id, "msdyn_bookingalert", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>NewProcess (KnowledgeArticleId)</b></para>
/// <para>Schema Name: lk_newprocess_knowledgearticleid</para>
/// </summary>
public List<NewProcess> GetNewProcess_KnowledgeArticleId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<NewProcess>(Service, this.Id, "newprocess", "knowledgearticleid", Columns); }
/// <summary>
/// <para><b>NewProcess (KnowledgeArticleId)</b></para>
/// <para>Schema Name: lk_newprocess_knowledgearticleid</para>
/// </summary>
public List<NewProcess> GetNewProcess_KnowledgeArticleId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<NewProcess>(Service, this.Id, "newprocess", "knowledgearticleid", Columns); }
/// <summary>
/// <para><b>PhoneCall (Regarding)</b></para>
/// <para>Schema Name: KnowledgeArticle_Phonecalls</para>
/// </summary>
public List<PhoneCall> GetPhoneCalls_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneCall>(Service, this.Id, "phonecall", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PhoneCall (Regarding)</b></para>
/// <para>Schema Name: KnowledgeArticle_Phonecalls</para>
/// </summary>
public List<PhoneCall> GetPhoneCalls_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneCall>(Service, this.Id, "phonecall", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Follow (Regarding)</b></para>
/// <para>Schema Name: knowledgearticle_PostFollows</para>
/// </summary>
public List<Follow> GetFollows_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Follow>(Service, this.Id, "postfollow", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Follow (Regarding)</b></para>
/// <para>Schema Name: knowledgearticle_PostFollows</para>
/// </summary>
public List<Follow> GetFollows_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Follow>(Service, this.Id, "postfollow", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PostRegarding (RegardingObjectId)</b></para>
/// <para>Schema Name: knowledgearticle_PostRegardings</para>
/// </summary>
public List<PostRegarding> GetPostRegarding_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostRegarding>(Service, this.Id, "postregarding", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PostRegarding (RegardingObjectId)</b></para>
/// <para>Schema Name: knowledgearticle_PostRegardings</para>
/// </summary>
public List<PostRegarding> GetPostRegarding_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostRegarding>(Service, this.Id, "postregarding", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PostRole (RegardingObjectId)</b></para>
/// <para>Schema Name: knowledgearticle_PostRoles</para>
/// </summary>
public List<PostRole> GetPostRoles_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostRole>(Service, this.Id, "postrole", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PostRole (RegardingObjectId)</b></para>
/// <para>Schema Name: knowledgearticle_PostRoles</para>
/// </summary>
public List<PostRole> GetPostRoles_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostRole>(Service, this.Id, "postrole", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: knowledgearticle_PrincipalObjectAttributeAccess</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: knowledgearticle_PrincipalObjectAttributeAccess</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: knowledgearticle_ProcessSession</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: knowledgearticle_ProcessSession</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>QueueItem (Object)</b></para>
/// <para>Schema Name: knowledgearticle_QueueItems</para>
/// </summary>
public List<QueueItem> GetQueueItems_Object (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QueueItem>(Service, this.Id, "queueitem", "objectid", Columns); }
/// <summary>
/// <para><b>QueueItem (Object)</b></para>
/// <para>Schema Name: knowledgearticle_QueueItems</para>
/// </summary>
public List<QueueItem> GetQueueItems_Object (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QueueItem>(Service, this.Id, "queueitem", "objectid", Columns); }
/// <summary>
/// <para><b>RecurringAppointment (Regarding)</b></para>
/// <para>Schema Name: KnowledgeArticle_RecurringAppointmentMasters</para>
/// </summary>
public List<RecurringAppointment> GetRecurringAppointments_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecurringAppointment>(Service, this.Id, "recurringappointmentmaster", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>RecurringAppointment (Regarding)</b></para>
/// <para>Schema Name: KnowledgeArticle_RecurringAppointmentMasters</para>
/// </summary>
public List<RecurringAppointment> GetRecurringAppointments_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecurringAppointment>(Service, this.Id, "recurringappointmentmaster", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ServiceActivity (Regarding)</b></para>
/// <para>Schema Name: KnowledgeArticle_ServiceAppointments</para>
/// </summary>
public List<ServiceActivity> GetServiceActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceActivity>(Service, this.Id, "serviceappointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ServiceActivity (Regarding)</b></para>
/// <para>Schema Name: KnowledgeArticle_ServiceAppointments</para>
/// </summary>
public List<ServiceActivity> GetServiceActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceActivity>(Service, this.Id, "serviceappointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>DocumentLocation (Regarding)</b></para>
/// <para>Schema Name: knowledgearticle_SharePointDocumentLocations</para>
/// </summary>
public List<DocumentLocation> GetDocumentLocations_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DocumentLocation>(Service, this.Id, "sharepointdocumentlocation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>DocumentLocation (Regarding)</b></para>
/// <para>Schema Name: knowledgearticle_SharePointDocumentLocations</para>
/// </summary>
public List<DocumentLocation> GetDocumentLocations_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DocumentLocation>(Service, this.Id, "sharepointdocumentlocation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SocialActivity (Regarding)</b></para>
/// <para>Schema Name: KnowledgeArticle_SocialActivities</para>
/// </summary>
public List<SocialActivity> GetSocialActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialActivity>(Service, this.Id, "socialactivity", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SocialActivity (Regarding)</b></para>
/// <para>Schema Name: KnowledgeArticle_SocialActivities</para>
/// </summary>
public List<SocialActivity> GetSocialActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialActivity>(Service, this.Id, "socialactivity", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: KnowledgeArticle_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: KnowledgeArticle_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Task (Regarding)</b></para>
/// <para>Schema Name: KnowledgeArticle_Tasks</para>
/// </summary>
public List<Task> GetTasks_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Task>(Service, this.Id, "task", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Task (Regarding)</b></para>
/// <para>Schema Name: KnowledgeArticle_Tasks</para>
/// </summary>
public List<Task> GetTasks_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Task>(Service, this.Id, "task", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Team (Regarding Object Id)</b></para>
/// <para>Schema Name: knowledgearticle_Teams</para>
/// </summary>
public List<Team> GetTeams_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Team>(Service, this.Id, "team", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Team (Regarding Object Id)</b></para>
/// <para>Schema Name: knowledgearticle_Teams</para>
/// </summary>
public List<Team> GetTeams_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Team>(Service, this.Id, "team", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>TranslationProcess (Knowledge Article Id)</b></para>
/// <para>Schema Name: lk_translationprocess_knowledgearticleid</para>
/// </summary>
public List<TranslationProcess> GetTranslationProcess_KnowledgeArticleId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TranslationProcess>(Service, this.Id, "translationprocess", "knowledgearticleid", Columns); }
/// <summary>
/// <para><b>TranslationProcess (Knowledge Article Id)</b></para>
/// <para>Schema Name: lk_translationprocess_knowledgearticleid</para>
/// </summary>
public List<TranslationProcess> GetTranslationProcess_KnowledgeArticleId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TranslationProcess>(Service, this.Id, "translationprocess", "knowledgearticleid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: knowledgearticle_UserEntityInstanceDatas</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: knowledgearticle_UserEntityInstanceDatas</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        /// <summary>
/// <para>Related Entity: <b>Category</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: knowledgearticle_category</para>
/// </summary>
public List<Category> GetCategories (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<Category>(Service, this, "knowledgearticle", "knowledgearticleid", "category", "categoryid", "knowledgearticlescategories", "knowledgearticleid", "categoryid", Columns); }
public List<Category> GetCategories (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<Category>(Service, this, "knowledgearticle", "knowledgearticleid", "category", "categoryid", "knowledgearticlescategories", "knowledgearticleid", "categoryid", Columns); }
public void RelateCategories (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "knowledgearticle_category", Items); }
public void RelateCategories (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "knowledgearticle_category", Items); }
public void UnRelateCategories (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "knowledgearticle_category", Items); }
public void UnRelateCategories (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "knowledgearticle_category", Items); }


        

        public enum eExpiredReviewOptions
{
	///<summary><para>Needs Updating</para>
	///<para>Value = 0</para></summary>
	[Description("Needs Updating")]
	NeedsUpdating = 0, 
	///<summary><para>Republish</para>
	///<para>Value = 1</para></summary>
	[Description("Republish")]
	Republish = 1, 
	///<summary><para>Archive</para>
	///<para>Value = 2</para></summary>
	[Description("Archive")]
	Archive = 2
}
public enum eReview
{
	///<summary><para>Approved</para>
	///<para>Value = 0</para></summary>
	[Description("Approved")]
	Approved = 0, 
	///<summary><para>Rejected</para>
	///<para>Value = 1</para></summary>
	[Description("Rejected")]
	Rejected = 1
}
public enum eStatus
{
	///<summary><para>Draft</para>
	///<para>Value = 0</para></summary>
	[Description("Draft")]
	Draft = 0, 
	///<summary><para>Approved</para>
	///<para>Value = 1</para></summary>
	[Description("Approved")]
	Approved = 1, 
	///<summary><para>Scheduled</para>
	///<para>Value = 2</para></summary>
	[Description("Scheduled")]
	Scheduled = 2, 
	///<summary><para>Published</para>
	///<para>Value = 3</para></summary>
	[Description("Published")]
	Published = 3, 
	///<summary><para>Expired</para>
	///<para>Value = 4</para></summary>
	[Description("Expired")]
	Expired = 4, 
	///<summary><para>Archived</para>
	///<para>Value = 5</para></summary>
	[Description("Archived")]
	Archived = 5, 
	///<summary><para>Discarded</para>
	///<para>Value = 6</para></summary>
	[Description("Discarded")]
	Discarded = 6
}
public enum eStatusReason
{
	///<summary><para>Proposed</para>
	///<para>Value = 1</para></summary>
	[Description("Proposed")]
	Proposed_Draft = 1, 
	///<summary><para>Draft</para>
	///<para>Value = 2</para></summary>
	[Description("Draft")]
	Draft_Draft = 2, 
	///<summary><para>Needs review</para>
	///<para>Value = 3</para></summary>
	[Description("Needs review")]
	NeedsReview_Draft = 3, 
	///<summary><para>In review</para>
	///<para>Value = 4</para></summary>
	[Description("In review")]
	InReview_Draft = 4, 
	///<summary><para>Approved</para>
	///<para>Value = 5</para></summary>
	[Description("Approved")]
	Approved_Approved = 5, 
	///<summary><para>Scheduled</para>
	///<para>Value = 6</para></summary>
	[Description("Scheduled")]
	Scheduled_Scheduled = 6, 
	///<summary><para>Published</para>
	///<para>Value = 7</para></summary>
	[Description("Published")]
	Published_Published = 7, 
	///<summary><para>Needs review</para>
	///<para>Value = 8</para></summary>
	[Description("Needs review")]
	NeedsReview_Published = 8, 
	///<summary><para>Updating</para>
	///<para>Value = 9</para></summary>
	[Description("Updating")]
	Updating_Published = 9, 
	///<summary><para>Expired</para>
	///<para>Value = 10</para></summary>
	[Description("Expired")]
	Expired_Expired = 10, 
	///<summary><para>Rejected</para>
	///<para>Value = 11</para></summary>
	[Description("Rejected")]
	Rejected_Expired = 11, 
	///<summary><para>Archived</para>
	///<para>Value = 12</para></summary>
	[Description("Archived")]
	Archived_Archived = 12, 
	///<summary><para>Discarded</para>
	///<para>Value = 13</para></summary>
	[Description("Discarded")]
	Discarded_Discarded = 13, 
	///<summary><para>Rejected</para>
	///<para>Value = 14</para></summary>
	[Description("Rejected")]
	Rejected_Discarded = 14
}
public void SetState(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>primaryauthoridname</para>
	/// <para>primaryauthoridname</para></summary>
	public const string PrimaryauthoridName = "primaryauthoridname";
	/// <summary><para>versionnumber</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>languagelocaleidlocaleid</para>
	/// <para>languagelocaleidlocaleid</para></summary>
	public const string LanguageLocaleIdLocaleId = "languagelocaleidlocaleid";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>languagelocaleidname</para>
	/// <para>languagelocaleidname</para></summary>
	public const string LanguageLocaleIdName = "languagelocaleidname";
	/// <summary><para>owneridname</para>
	/// <para>owneridname</para></summary>
	public const string OwnerIdName = "owneridname";
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>subjectiddsc</para>
	/// <para>subjectiddsc</para></summary>
	public const string SubjectIdDsc = "subjectiddsc";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>previousarticlecontentidname</para>
	/// <para>previousarticlecontentidname</para></summary>
	public const string PreviousArticleContentIdName = "previousarticlecontentidname";
	/// <summary><para>owneridyominame</para>
	/// <para>owneridyominame</para></summary>
	public const string OwnerIdYomiName = "owneridyominame";
	/// <summary><para>subjectidname</para>
	/// <para>subjectidname</para></summary>
	public const string SubjectIdName = "subjectidname";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>owneridtype</para>
	/// <para>owneridtype</para></summary>
	public const string OwnerIdType = "owneridtype";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>transactioncurrencyidname</para>
	/// <para>transactioncurrencyidname</para></summary>
	public const string TransactionCurrencyIdName = "transactioncurrencyidname";
	/// <summary><para>rootarticleidname</para>
	/// <para>rootarticleidname</para></summary>
	public const string RootArticleIdName = "rootarticleidname";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>parentarticlecontentidname</para>
	/// <para>parentarticlecontentidname</para></summary>
	public const string ParentArticleContentIdName = "parentarticlecontentidname";
	/// <summary><para>Article Public Number</para>
	/// <para>articlepublicnumber</para></summary>
	public const string ArticlePublicNumber = "articlepublicnumber";
	/// <summary><para>Content</para>
	/// <para>content</para></summary>
	public const string Content = "content";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Currency</para>
	/// <para>transactioncurrencyid</para></summary>
	public const string Currency = "transactioncurrencyid";
	/// <summary><para>Description</para>
	/// <para>description</para></summary>
	public const string Description = "description";
	/// <summary><para>ExchangeRate</para>
	/// <para>exchangerate</para></summary>
	public const string ExchangeRate = "exchangerate";
	/// <summary><para>Expiration Date</para>
	/// <para>expirationdate</para></summary>
	public const string ExpirationDate = "expirationdate";
	/// <summary><para>Expiration State Id</para>
	/// <para>expirationstateid</para></summary>
	public const string ExpirationStateId = "expirationstateid";
	/// <summary><para>Expired Review Options</para>
	/// <para>expiredreviewoptions</para></summary>
	public const string ExpiredReviewOptions = "expiredreviewoptions";
	/// <summary><para>Expired Status</para>
	/// <para>expirationstatusid</para></summary>
	public const string ExpiredStatus = "expirationstatusid";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string ImportSequenceNumber = "importsequencenumber";
	/// <summary><para>Internal</para>
	/// <para>isinternal</para></summary>
	public const string @Internal = "isinternal";
	/// <summary><para>Is Latest Version</para>
	/// <para>islatestversion</para></summary>
	public const string IsLatestVersion = "islatestversion";
	/// <summary><para>Keywords</para>
	/// <para>keywords</para></summary>
	public const string Keywords = "keywords";
	/// <summary><para>Knowledge Article</para>
	/// <para>knowledgearticleid</para></summary>
	public const string KnowledgeArticleId = "knowledgearticleid";
	/// <summary><para>Knowledge Article View(Last Updated Time)</para>
	/// <para>knowledgearticleviews_date</para></summary>
	public const string KnowledgeArticleView_LastUpdatedTime = "knowledgearticleviews_date";
	/// <summary><para>Knowledge Article View(State)</para>
	/// <para>knowledgearticleviews_state</para></summary>
	public const string KnowledgeArticleView_State = "knowledgearticleviews_state";
	/// <summary><para>Knowledge Article Views</para>
	/// <para>knowledgearticleviews</para></summary>
	public const string KnowledgeArticleViews = "knowledgearticleviews";
	/// <summary><para>Language</para>
	/// <para>languagelocaleid</para></summary>
	public const string Language = "languagelocaleid";
	/// <summary><para>Major Version Number</para>
	/// <para>majorversionnumber</para></summary>
	public const string MajorVersionNumber = "majorversionnumber";
	/// <summary><para>Minor Version Number</para>
	/// <para>minorversionnumber</para></summary>
	public const string MinorVersionNumber = "minorversionnumber";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>Owner</para>
	/// <para>ownerid</para></summary>
	public const string Owner = "ownerid";
	/// <summary><para>Owning Business Unit</para>
	/// <para>owningbusinessunit</para></summary>
	public const string OwningBusinessUnit = "owningbusinessunit";
	/// <summary><para>Owning Team</para>
	/// <para>owningteam</para></summary>
	public const string OwningTeam = "owningteam";
	/// <summary><para>Owning User</para>
	/// <para>owninguser</para></summary>
	public const string OwningUser = "owninguser";
	/// <summary><para>Parent Article Content Id</para>
	/// <para>parentarticlecontentid</para></summary>
	public const string ParentArticleContentId = "parentarticlecontentid";
	/// <summary><para>Previous Article Content ID</para>
	/// <para>previousarticlecontentid</para></summary>
	public const string PreviousArticleContentID = "previousarticlecontentid";
	/// <summary><para>Primary Article</para>
	/// <para>isprimary</para></summary>
	public const string PrimaryArticle = "isprimary";
	/// <summary><para>Primary Author Id</para>
	/// <para>primaryauthorid</para></summary>
	public const string PrimaryAuthorId = "primaryauthorid";
	/// <summary><para>Process Id</para>
	/// <para>processid</para></summary>
	public const string ProcessId = "processid";
	/// <summary><para>Publish On</para>
	/// <para>publishon</para></summary>
	public const string PublishOn = "publishon";
	/// <summary><para>Published Status</para>
	/// <para>publishstatusid</para></summary>
	public const string PublishedStatus = "publishstatusid";
	/// <summary><para>Rating</para>
	/// <para>rating</para></summary>
	public const string Rating = "rating";
	/// <summary><para>Rating(Count)</para>
	/// <para>rating_count</para></summary>
	public const string Rating_Count = "rating_count";
	/// <summary><para>Rating(Last Updated Time)</para>
	/// <para>rating_date</para></summary>
	public const string Rating_LastUpdatedTime = "rating_date";
	/// <summary><para>Rating(State)</para>
	/// <para>rating_state</para></summary>
	public const string Rating_State = "rating_state";
	/// <summary><para>Rating(sum)</para>
	/// <para>rating_sum</para></summary>
	public const string Rating_sum = "rating_sum";
	/// <summary><para>Ready For Review</para>
	/// <para>readyforreview</para></summary>
	public const string ReadyForReview = "readyforreview";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string RecordCreatedOn = "overriddencreatedon";
	/// <summary><para>Review</para>
	/// <para>review</para></summary>
	public const string Review = "review";
	/// <summary><para>Root Article</para>
	/// <para>isrootarticle</para></summary>
	public const string RootArticle = "isrootarticle";
	/// <summary><para>Root Article Id</para>
	/// <para>rootarticleid</para></summary>
	public const string RootArticleId = "rootarticleid";
	/// <summary><para>Scheduled Status</para>
	/// <para>scheduledstatusid</para></summary>
	public const string ScheduledStatus = "scheduledstatusid";
	/// <summary><para>Set Category Associations</para>
	/// <para>setcategoryassociations</para></summary>
	public const string SetCategoryAssociations = "setcategoryassociations";
	/// <summary><para>Set Product Associations</para>
	/// <para>setproductassociations</para></summary>
	public const string SetProductAssociations = "setproductassociations";
	/// <summary><para>Stage Id</para>
	/// <para>stageid</para></summary>
	public const string StageId = "stageid";
	/// <summary><para>Status</para>
	/// <para>statecode</para></summary>
	public const string Status = "statecode";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string StatusReason = "statuscode";
	/// <summary><para>Subject</para>
	/// <para>subjectid</para></summary>
	public const string Subject = "subjectid";
	/// <summary><para>Time Zone Rule Version Number</para>
	/// <para>timezoneruleversionnumber</para></summary>
	public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
	/// <summary><para>Title</para>
	/// <para>title</para></summary>
	public const string Title = "title";
	/// <summary><para>Traversed Path</para>
	/// <para>traversedpath</para></summary>
	public const string TraversedPath = "traversedpath";
	/// <summary><para>Update Content</para>
	/// <para>updatecontent</para></summary>
	public const string UpdateContent = "updatecontent";
	/// <summary><para>UTC Conversion Time Zone Code</para>
	/// <para>utcconversiontimezonecode</para></summary>
	public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
}

    }
}

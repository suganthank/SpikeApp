// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("incident")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class @Case : BaseProxyClass
    {
        public new const string LogicalName = "incident";
        public const int ObjectTypeCode = 112;
        public const string PrimaryIdAttribute = "incidentid";
        public const string PrimaryNameAttribute = "title";
        
        static @Case()
        {
            BaseProxyClass.RegisterProxyType(typeof(@Case), "incident");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public @Case() : base(new Entity("incident")) { }
        public @Case(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<@Case>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: primarycontactidyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("primarycontactidyominame")]
public string PrimaryContactIdYomiName
{
	get { return this.GetPropertyValue<string>("primarycontactidyominame"); }
}
///<summary>
///<para>Logical Name: createdbyexternalpartyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyexternalpartyname")]
public string CreatedByExternalPartyName
{
	get { return this.GetPropertyValue<string>("createdbyexternalpartyname"); }
}
///<summary>
///<para>Logical Name: entityimage_timestamp</para>
///</summary>
[AttributeLogicalNameAttribute("entityimage_timestamp")]
public int? EntityImage_Timestamp
{
	get { return this.GetPropertyValue<int?>("entityimage_timestamp"); }
}
///<summary>
///<para>Logical Name: contactidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("contactidname")]
public string ContactIdName
{
	get { return this.GetPropertyValue<string>("contactidname"); }
}
///<summary>
///<para>Logical Name: responsiblecontactidyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("responsiblecontactidyominame")]
public string ResponsibleContactIdYomiName
{
	get { return this.GetPropertyValue<string>("responsiblecontactidyominame"); }
}
///<summary>
///<para>Logical Name: customeridyominame</para>
///<para>Max Length: 450 characters</para>
///</summary>
[AttributeLogicalNameAttribute("customeridyominame")]
public string CustomerIdYomiName
{
	get { return this.GetPropertyValue<string>("customeridyominame"); }
}
///<summary>
///<para>Logical Name: primarycontactidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("primarycontactidname")]
public string PrimaryContactIdName
{
	get { return this.GetPropertyValue<string>("primarycontactidname"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyidname")]
public string TransactionCurrencyIdName
{
	get { return this.GetPropertyValue<string>("transactioncurrencyidname"); }
}
///<summary>
///<para>Logical Name: msdyn_incidenttypename</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_incidenttypename")]
public string Msdyn_IncidentTypeName
{
	get { return this.GetPropertyValue<string>("msdyn_incidenttypename"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: modifiedbyexternalpartyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyexternalpartyyominame")]
public string ModifiedByExternalPartyYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyexternalpartyyominame"); }
}
///<summary>
///<para>Logical Name: socialprofileidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("socialprofileidname")]
public string SocialProfileIdName
{
	get { return this.GetPropertyValue<string>("socialprofileidname"); }
}
///<summary>
///<para>Logical Name: responsiblecontactidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("responsiblecontactidname")]
public string ResponsibleContactIdName
{
	get { return this.GetPropertyValue<string>("responsiblecontactidname"); }
}
///<summary>
///<para>Logical Name: contractdetailidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("contractdetailidname")]
public string ContractDetailIdName
{
	get { return this.GetPropertyValue<string>("contractdetailidname"); }
}
///<summary>
///<para>Logical Name: contactidyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("contactidyominame")]
public string ContactIdYomiName
{
	get { return this.GetPropertyValue<string>("contactidyominame"); }
}
///<summary>
///<para>Logical Name: modifiedbyexternalpartyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyexternalpartyname")]
public string ModifiedByExternalPartyName
{
	get { return this.GetPropertyValue<string>("modifiedbyexternalpartyname"); }
}
///<summary>
///<para>Logical Name: productidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("productidname")]
public string ProductIdName
{
	get { return this.GetPropertyValue<string>("productidname"); }
}
///<summary>
///<para>Logical Name: owneridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridyominame")]
public string OwnerIdYomiName
{
	get { return this.GetPropertyValue<string>("owneridyominame"); }
}
///<summary>
///<para>Logical Name: entityimage_url</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("entityimage_url")]
public string EntityImage_URL
{
	get { return this.GetPropertyValue<string>("entityimage_url"); }
}
///<summary>
///<para>Logical Name: accountidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("accountidname")]
public string AccountIdName
{
	get { return this.GetPropertyValue<string>("accountidname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: owneridtype</para>
///</summary>
[AttributeLogicalNameAttribute("owneridtype")]
public string OwnerIdType
{
	get { return this.GetPropertyValue<string>("owneridtype"); }
	set { this.SetPropertyValue<string>("owneridtype", value, "OwnerIdType"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: createdbyexternalpartyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyexternalpartyyominame")]
public string CreatedByExternalPartyYomiName
{
	get { return this.GetPropertyValue<string>("createdbyexternalpartyyominame"); }
}
///<summary>
///<para>Logical Name: slainvokedidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("slainvokedidname")]
public string SLAInvokedIdName
{
	get { return this.GetPropertyValue<string>("slainvokedidname"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: accountidyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("accountidyominame")]
public string AccountIdYomiName
{
	get { return this.GetPropertyValue<string>("accountidyominame"); }
}
///<summary>
///<para>Logical Name: subjectidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("subjectidname")]
public string SubjectIdName
{
	get { return this.GetPropertyValue<string>("subjectidname"); }
}
///<summary>
///<para>Logical Name: contractidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("contractidname")]
public string ContractIdName
{
	get { return this.GetPropertyValue<string>("contractidname"); }
}
///<summary>
///<para>Logical Name: masteridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("masteridname")]
public string MasterIdName
{
	get { return this.GetPropertyValue<string>("masteridname"); }
}
///<summary>
///<para>Logical Name: kbarticleidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("kbarticleidname")]
public string KbArticleIdName
{
	get { return this.GetPropertyValue<string>("kbarticleidname"); }
}
///<summary>
///<para>Logical Name: customeridname</para>
///<para>Max Length: 160 characters</para>
///</summary>
[AttributeLogicalNameAttribute("customeridname")]
public string CustomerIdName
{
	get { return this.GetPropertyValue<string>("customeridname"); }
}
///<summary>
///<para>Logical Name: entitlementidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("entitlementidname")]
public string EntitlementIdName
{
	get { return this.GetPropertyValue<string>("entitlementidname"); }
}
///<summary>
///<para>Logical Name: firstresponsebykpiidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("firstresponsebykpiidname")]
public string FirstResponseByKPIIdName
{
	get { return this.GetPropertyValue<string>("firstresponsebykpiidname"); }
}
///<summary>
///<para>Logical Name: resolvebykpiidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("resolvebykpiidname")]
public string ResolveByKPIIdName
{
	get { return this.GetPropertyValue<string>("resolvebykpiidname"); }
}
///<summary>
///<para>Logical Name: parentcaseidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("parentcaseidname")]
public string ParentCaseIdName
{
	get { return this.GetPropertyValue<string>("parentcaseidname"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: owneridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridname")]
public string OwnerIdName
{
	get { return this.GetPropertyValue<string>("owneridname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: slaname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("slaname")]
public string SLAName
{
	get { return this.GetPropertyValue<string>("slaname"); }
}
///<summary>
///<para>Logical Name: accountid</para>
///</summary>
[AttributeLogicalNameAttribute("accountid")]
public EntityReference Account
{
	get { return this.GetPropertyValue<EntityReference>("accountid"); }
}
///<summary>
///<para>Logical Name: activitiescomplete</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("activitiescomplete")]
public bool? ActivitiesComplete
{
	get { return this.GetPropertyValue<bool?>("activitiescomplete"); }
	set { this.SetPropertyValue<bool?>("activitiescomplete", value, "ActivitiesComplete"); }
}
///<summary>
///<para>Logical Name: actualserviceunits</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///</summary>
[AttributeLogicalNameAttribute("actualserviceunits")]
public int? ActualServiceUnits
{
	get { return this.GetPropertyValue<int?>("actualserviceunits"); }
	set { this.SetPropertyValue("actualserviceunits", (int?)value, (int)0, (int)1000000000, "ActualServiceUnits"); }
}
///<summary>
///<para>Logical Name: billedserviceunits</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///</summary>
[AttributeLogicalNameAttribute("billedserviceunits")]
public int? BilledServiceUnits
{
	get { return this.GetPropertyValue<int?>("billedserviceunits"); }
	set { this.SetPropertyValue("billedserviceunits", (int?)value, (int)0, (int)1000000000, "BilledServiceUnits"); }
}
///<summary>
///<para>Logical Name: blockedprofile</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("blockedprofile")]
public bool? BlockedProfile
{
	get { return this.GetPropertyValue<bool?>("blockedprofile"); }
	set { this.SetPropertyValue<bool?>("blockedprofile", value, "BlockedProfile"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: incidentid</para>
///</summary>
[AttributeLogicalNameAttribute("incidentid")]
public Guid CaseId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: ticketnumber</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("ticketnumber")]
public string CaseNumber
{
	get { return this.GetPropertyValue<string>("ticketnumber"); }
	set { this.SetPropertyValue("ticketnumber", value, 100, "CaseNumber"); }
}
/// <summary>
///Logical Name: incidentstagecode
/// </summary>
[AttributeLogicalNameAttribute("incidentstagecode")]
public eCaseStage? CaseStage
{
	get
	{
		if (CaseStage_OptionSetValue != null) { return (eCaseStage)CaseStage_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.CaseStage_OptionSetValue = new OptionSetValue((int)value); }
		else this.CaseStage_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: incidentstagecode</para>
///</summary>
[AttributeLogicalNameAttribute("incidentstagecode")]
public OptionSetValue CaseStage_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("incidentstagecode"); }
	set { this.SetPropertyValue<OptionSetValue>("incidentstagecode", value, "CaseStage_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string CaseStage_Text(IOrganizationService Service)
{
	return this.CaseStage_OptionSetValue.GetOptionSetText(Service, this, "incidentstagecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string CaseStage_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.CaseStage_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: title</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("title")]
public string CaseTitle
{
	get { return this.GetPropertyValue<string>("title"); }
	set { this.SetPropertyValue("title", value, 200, "CaseTitle"); }
}
/// <summary>
///Logical Name: casetypecode
/// </summary>
[AttributeLogicalNameAttribute("casetypecode")]
public eCaseType? CaseType
{
	get
	{
		if (CaseType_OptionSetValue != null) { return (eCaseType)CaseType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.CaseType_OptionSetValue = new OptionSetValue((int)value); }
		else this.CaseType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: casetypecode</para>
///</summary>
[AttributeLogicalNameAttribute("casetypecode")]
public OptionSetValue CaseType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("casetypecode"); }
	set { this.SetPropertyValue<OptionSetValue>("casetypecode", value, "CaseType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string CaseType_Text(IOrganizationService Service)
{
	return this.CaseType_OptionSetValue.GetOptionSetText(Service, this, "casetypecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string CaseType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.CaseType_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: checkemail</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("checkemail")]
public bool? CheckEmail
{
	get { return this.GetPropertyValue<bool?>("checkemail"); }
	set { this.SetPropertyValue<bool?>("checkemail", value, "CheckEmail"); }
}
///<summary>
///<para>Logical Name: numberofchildincidents</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("numberofchildincidents")]
public int? ChildCases
{
	get { return this.GetPropertyValue<int?>("numberofchildincidents"); }
}
///<summary>
///<para>Logical Name: contactid</para>
///</summary>
[AttributeLogicalNameAttribute("contactid")]
public EntityReference Contact
{
	get { return this.GetPropertyValue<EntityReference>("contactid"); }
}
///<summary>
///<para>Logical Name: primarycontactid</para>
///</summary>
[AttributeLogicalNameAttribute("primarycontactid")]
public EntityReference Contact2
{
	get { return this.GetPropertyValue<EntityReference>("primarycontactid"); }
	set { this.SetPropertyValue<EntityReference>("primarycontactid", value, "Contact2"); }
}
///<summary>
///<para>Logical Name: contractid</para>
///</summary>
[AttributeLogicalNameAttribute("contractid")]
public EntityReference Contract
{
	get { return this.GetPropertyValue<EntityReference>("contractid"); }
	set { this.SetPropertyValue<EntityReference>("contractid", value, "Contract"); }
}
///<summary>
///<para>Logical Name: contractdetailid</para>
///</summary>
[AttributeLogicalNameAttribute("contractdetailid")]
public EntityReference ContractLine
{
	get { return this.GetPropertyValue<EntityReference>("contractdetailid"); }
	set { this.SetPropertyValue<EntityReference>("contractdetailid", value, "ContractLine"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdbyexternalparty</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyexternalparty")]
public EntityReference CreatedBy_ExternalParty
{
	get { return this.GetPropertyValue<EntityReference>("createdbyexternalparty"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyid</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyid")]
public EntityReference Currency
{
	get { return this.GetPropertyValue<EntityReference>("transactioncurrencyid"); }
	set { this.SetPropertyValue<EntityReference>("transactioncurrencyid", value, "Currency"); }
}
///<summary>
///<para>Logical Name: customerid</para>
///</summary>
[AttributeLogicalNameAttribute("customerid")]
public EntityReference Customer
{
	get { return this.GetPropertyValue<EntityReference>("customerid"); }
	set { this.SetPropertyValue<EntityReference>("customerid", value, "Customer"); }
}
///<summary>
///<para>Logical Name: customercontacted</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("customercontacted")]
public bool? CustomerContacted
{
	get { return this.GetPropertyValue<bool?>("customercontacted"); }
	set { this.SetPropertyValue<bool?>("customercontacted", value, "CustomerContacted"); }
}
/// <summary>
///Logical Name: int_customereffort
/// </summary>
[AttributeLogicalNameAttribute("int_customereffort")]
public eCustomerEffort? CustomerEffort
{
	get
	{
		if (CustomerEffort_OptionSetValue != null) { return (eCustomerEffort)CustomerEffort_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.CustomerEffort_OptionSetValue = new OptionSetValue((int)value); }
		else this.CustomerEffort_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: int_customereffort</para>
///</summary>
[AttributeLogicalNameAttribute("int_customereffort")]
public OptionSetValue CustomerEffort_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("int_customereffort"); }
	set { this.SetPropertyValue<OptionSetValue>("int_customereffort", value, "CustomerEffort_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string CustomerEffort_Text(IOrganizationService Service)
{
	return this.CustomerEffort_OptionSetValue.GetOptionSetText(Service, this, "int_customereffort");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string CustomerEffort_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.CustomerEffort_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: customeridtype</para>
///</summary>
[AttributeLogicalNameAttribute("customeridtype")]
public string CustomerType
{
	get { return this.GetPropertyValue<string>("customeridtype"); }
	set { this.SetPropertyValue<string>("customeridtype", value, "CustomerType"); }
}
///<summary>
///<para>Logical Name: decremententitlementterm</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("decremententitlementterm")]
public bool? DecrementEntitlementTerms
{
	get { return this.GetPropertyValue<bool?>("decremententitlementterm"); }
	set { this.SetPropertyValue<bool?>("decremententitlementterm", value, "DecrementEntitlementTerms"); }
}
///<summary>
///<para>Logical Name: isdecrementing</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isdecrementing")]
public bool? Decrementing
{
	get { return this.GetPropertyValue<bool?>("isdecrementing"); }
	set { this.SetPropertyValue<bool?>("isdecrementing", value, "Decrementing"); }
}
///<summary>
///<para>Logical Name: description</para>
///<para>Max Length: 2000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("description")]
public string Description
{
	get { return this.GetPropertyValue<string>("description"); }
	set { this.SetPropertyValue("description", value, 2000, "Description"); }
}
///<summary>
///<para>Logical Name: entitlementid</para>
///</summary>
[AttributeLogicalNameAttribute("entitlementid")]
public EntityReference Entitlement
{
	get { return this.GetPropertyValue<EntityReference>("entitlementid"); }
	set { this.SetPropertyValue<EntityReference>("entitlementid", value, "Entitlement"); }
}
///<summary>
///<para>Logical Name: entityimageid</para>
///</summary>
[AttributeLogicalNameAttribute("entityimageid")]
public Guid EntityImageId
{
	get { return this.GetPropertyValue<Guid>("entityimageid"); }
}
///<summary>
///<para>Logical Name: escalatedon</para>
///</summary>
[AttributeLogicalNameAttribute("escalatedon")]
public DateTime? EscalatedOn
{
	get { return this.GetPropertyValue<DateTime?>("escalatedon"); }
}
///<summary>
///<para>Logical Name: exchangerate</para>
///<para>Minimum Value: 0.0000000001</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 10</para>
///</summary>
[AttributeLogicalNameAttribute("exchangerate")]
public decimal? ExchangeRate
{
	get { return this.GetPropertyValue<decimal?>("exchangerate"); }
}
///<summary>
///<para>Logical Name: existingcase</para>
///</summary>
[AttributeLogicalNameAttribute("existingcase")]
public EntityReference ExistingCase
{
	get { return this.GetPropertyValue<EntityReference>("existingcase"); }
	set { this.SetPropertyValue<EntityReference>("existingcase", value, "ExistingCase"); }
}
///<summary>
///<para>Logical Name: responseby</para>
///</summary>
[AttributeLogicalNameAttribute("responseby")]
public DateTime? FirstResponseBy
{
	get { return this.GetPropertyValue<DateTime?>("responseby"); }
	set { this.SetPropertyValue<DateTime?>("responseby", value, "FirstResponseBy"); }
}
///<summary>
///<para>Logical Name: firstresponsebykpiid</para>
///</summary>
[AttributeLogicalNameAttribute("firstresponsebykpiid")]
public EntityReference FirstResponseByKPI
{
	get { return this.GetPropertyValue<EntityReference>("firstresponsebykpiid"); }
	set { this.SetPropertyValue<EntityReference>("firstresponsebykpiid", value, "FirstResponseByKPI"); }
}
///<summary>
///<para>Logical Name: firstresponsesent</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("firstresponsesent")]
public bool? FirstResponseSent
{
	get { return this.GetPropertyValue<bool?>("firstresponsesent"); }
	set { this.SetPropertyValue<bool?>("firstresponsesent", value, "FirstResponseSent"); }
}
/// <summary>
///Logical Name: firstresponseslastatus
/// </summary>
[AttributeLogicalNameAttribute("firstresponseslastatus")]
public eFirstResponseSLAStatus? FirstResponseSLAStatus
{
	get
	{
		if (FirstResponseSLAStatus_OptionSetValue != null) { return (eFirstResponseSLAStatus)FirstResponseSLAStatus_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.FirstResponseSLAStatus_OptionSetValue = new OptionSetValue((int)value); }
		else this.FirstResponseSLAStatus_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: firstresponseslastatus</para>
///</summary>
[AttributeLogicalNameAttribute("firstresponseslastatus")]
public OptionSetValue FirstResponseSLAStatus_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("firstresponseslastatus"); }
	set { this.SetPropertyValue<OptionSetValue>("firstresponseslastatus", value, "FirstResponseSLAStatus_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string FirstResponseSLAStatus_Text(IOrganizationService Service)
{
	return this.FirstResponseSLAStatus_OptionSetValue.GetOptionSetText(Service, this, "firstresponseslastatus");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string FirstResponseSLAStatus_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.FirstResponseSLAStatus_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: followupby</para>
///</summary>
[AttributeLogicalNameAttribute("followupby")]
public DateTime? FollowUpBy
{
	get { return this.GetPropertyValue<DateTime?>("followupby"); }
	set { this.SetPropertyValue<DateTime?>("followupby", value, "FollowUpBy"); }
}
///<summary>
///<para>Logical Name: followuptaskcreated</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("followuptaskcreated")]
public bool? FollowUpTaskCreated
{
	get { return this.GetPropertyValue<bool?>("followuptaskcreated"); }
	set { this.SetPropertyValue<bool?>("followuptaskcreated", value, "FollowUpTaskCreated"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? ImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "ImportSequenceNumber"); }
}
///<summary>
///<para>Logical Name: msdyn_incidenttype</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_incidenttype")]
public EntityReference IncidentType
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_incidenttype"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_incidenttype", value, "IncidentType"); }
}
///<summary>
///<para>Logical Name: influencescore</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("influencescore")]
public double? InfluenceScore
{
	get { return this.GetPropertyValue<double?>("influencescore"); }
	set { this.SetPropertyValue("influencescore", (double?)value, (double)0, (double)1000000000, "InfluenceScore"); }
}
///<summary>
///<para>Logical Name: merged</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("merged")]
public bool? InternalUseOnly
{
	get { return this.GetPropertyValue<bool?>("merged"); }
}
///<summary>
///<para>Logical Name: isescalated</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isescalated")]
public bool? IsEscalated
{
	get { return this.GetPropertyValue<bool?>("isescalated"); }
	set { this.SetPropertyValue<bool?>("isescalated", value, "IsEscalated"); }
}
///<summary>
///<para>Logical Name: kbarticleid</para>
///</summary>
[AttributeLogicalNameAttribute("kbarticleid")]
public EntityReference KnowledgeBaseArticle
{
	get { return this.GetPropertyValue<EntityReference>("kbarticleid"); }
	set { this.SetPropertyValue<EntityReference>("kbarticleid", value, "KnowledgeBaseArticle"); }
}
///<summary>
///<para>Logical Name: lastonholdtime</para>
///</summary>
[AttributeLogicalNameAttribute("lastonholdtime")]
public DateTime? LastOnHoldTime
{
	get { return this.GetPropertyValue<DateTime?>("lastonholdtime"); }
	set { this.SetPropertyValue<DateTime?>("lastonholdtime", value, "LastOnHoldTime"); }
}
///<summary>
///<para>Logical Name: slainvokedid</para>
///</summary>
[AttributeLogicalNameAttribute("slainvokedid")]
public EntityReference LastSLAApplied
{
	get { return this.GetPropertyValue<EntityReference>("slainvokedid"); }
}
///<summary>
///<para>Logical Name: masterid</para>
///</summary>
[AttributeLogicalNameAttribute("masterid")]
public EntityReference MasterCase
{
	get { return this.GetPropertyValue<EntityReference>("masterid"); }
	set { this.SetPropertyValue<EntityReference>("masterid", value, "MasterCase"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedbyexternalparty</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyexternalparty")]
public EntityReference ModifiedBy_ExternalParty
{
	get { return this.GetPropertyValue<EntityReference>("modifiedbyexternalparty"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: onholdtime</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("onholdtime")]
public int? OnHoldTime_Minutes
{
	get { return this.GetPropertyValue<int?>("onholdtime"); }
}
/// <summary>
///Logical Name: caseorigincode
/// </summary>
[AttributeLogicalNameAttribute("caseorigincode")]
public eCaseOrigin? Origin
{
	get
	{
		if (Origin_OptionSetValue != null) { return (eCaseOrigin)Origin_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Origin_OptionSetValue = new OptionSetValue((int)value); }
		else this.Origin_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: caseorigincode</para>
///</summary>
[AttributeLogicalNameAttribute("caseorigincode")]
public OptionSetValue Origin_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("caseorigincode"); }
	set { this.SetPropertyValue<OptionSetValue>("caseorigincode", value, "Origin_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Origin_Text(IOrganizationService Service)
{
	return this.Origin_OptionSetValue.GetOptionSetText(Service, this, "caseorigincode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Origin_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Origin_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: ownerid</para>
///</summary>
[AttributeLogicalNameAttribute("ownerid")]
public EntityReference Owner
{
	get { return this.GetPropertyValue<EntityReference>("ownerid"); }
	set { this.SetPropertyValue<EntityReference>("ownerid", value, "Owner"); }
}
///<summary>
///<para>Logical Name: owningbusinessunit</para>
///</summary>
[AttributeLogicalNameAttribute("owningbusinessunit")]
public EntityReference OwningBusinessUnit
{
	get { return this.GetPropertyValue<EntityReference>("owningbusinessunit"); }
}
///<summary>
///<para>Logical Name: owningteam</para>
///</summary>
[AttributeLogicalNameAttribute("owningteam")]
public EntityReference OwningTeam
{
	get { return this.GetPropertyValue<EntityReference>("owningteam"); }
}
///<summary>
///<para>Logical Name: owninguser</para>
///</summary>
[AttributeLogicalNameAttribute("owninguser")]
public EntityReference OwningUser
{
	get { return this.GetPropertyValue<EntityReference>("owninguser"); }
}
///<summary>
///<para>Logical Name: parentcaseid</para>
///</summary>
[AttributeLogicalNameAttribute("parentcaseid")]
public EntityReference ParentCase
{
	get { return this.GetPropertyValue<EntityReference>("parentcaseid"); }
	set { this.SetPropertyValue<EntityReference>("parentcaseid", value, "ParentCase"); }
}
/// <summary>
///Logical Name: prioritycode
/// </summary>
[AttributeLogicalNameAttribute("prioritycode")]
public ePriority? Priority
{
	get
	{
		if (Priority_OptionSetValue != null) { return (ePriority)Priority_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Priority_OptionSetValue = new OptionSetValue((int)value); }
		else this.Priority_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: prioritycode</para>
///</summary>
[AttributeLogicalNameAttribute("prioritycode")]
public OptionSetValue Priority_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("prioritycode"); }
	set { this.SetPropertyValue<OptionSetValue>("prioritycode", value, "Priority_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Priority_Text(IOrganizationService Service)
{
	return this.Priority_OptionSetValue.GetOptionSetText(Service, this, "prioritycode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Priority_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Priority_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: processid</para>
///</summary>
[AttributeLogicalNameAttribute("processid")]
public Guid Process
{
	get { return this.GetPropertyValue<Guid>("processid"); }
	set { this.SetPropertyValue<Guid>("processid", value, "Process"); }
}
///<summary>
///<para>Logical Name: stageid</para>
///</summary>
[AttributeLogicalNameAttribute("stageid")]
public Guid ProcessStage
{
	get { return this.GetPropertyValue<Guid>("stageid"); }
	set { this.SetPropertyValue<Guid>("stageid", value, "ProcessStage"); }
}
///<summary>
///<para>Logical Name: productid</para>
///</summary>
[AttributeLogicalNameAttribute("productid")]
public EntityReference Product
{
	get { return this.GetPropertyValue<EntityReference>("productid"); }
	set { this.SetPropertyValue<EntityReference>("productid", value, "Product"); }
}
/// <summary>
///Logical Name: messagetypecode
/// </summary>
[AttributeLogicalNameAttribute("messagetypecode")]
public ePostMessageType? ReceivedAs
{
	get
	{
		if (ReceivedAs_OptionSetValue != null) { return (ePostMessageType)ReceivedAs_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ReceivedAs_OptionSetValue = new OptionSetValue((int)value); }
		else this.ReceivedAs_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: messagetypecode</para>
///</summary>
[AttributeLogicalNameAttribute("messagetypecode")]
public OptionSetValue ReceivedAs_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("messagetypecode"); }
	set { this.SetPropertyValue<OptionSetValue>("messagetypecode", value, "ReceivedAs_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ReceivedAs_Text(IOrganizationService Service)
{
	return this.ReceivedAs_OptionSetValue.GetOptionSetText(Service, this, "messagetypecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ReceivedAs_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ReceivedAs_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? RecordCreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "RecordCreatedOn"); }
}
///<summary>
///<para>Logical Name: resolveby</para>
///</summary>
[AttributeLogicalNameAttribute("resolveby")]
public DateTime? ResolveBy
{
	get { return this.GetPropertyValue<DateTime?>("resolveby"); }
	set { this.SetPropertyValue<DateTime?>("resolveby", value, "ResolveBy"); }
}
///<summary>
///<para>Logical Name: resolvebykpiid</para>
///</summary>
[AttributeLogicalNameAttribute("resolvebykpiid")]
public EntityReference ResolveByKPI
{
	get { return this.GetPropertyValue<EntityReference>("resolvebykpiid"); }
	set { this.SetPropertyValue<EntityReference>("resolvebykpiid", value, "ResolveByKPI"); }
}
/// <summary>
///Logical Name: resolvebyslastatus
/// </summary>
[AttributeLogicalNameAttribute("resolvebyslastatus")]
public eResolveBySLAStatus? ResolveBySLAStatus
{
	get
	{
		if (ResolveBySLAStatus_OptionSetValue != null) { return (eResolveBySLAStatus)ResolveBySLAStatus_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ResolveBySLAStatus_OptionSetValue = new OptionSetValue((int)value); }
		else this.ResolveBySLAStatus_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: resolvebyslastatus</para>
///</summary>
[AttributeLogicalNameAttribute("resolvebyslastatus")]
public OptionSetValue ResolveBySLAStatus_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("resolvebyslastatus"); }
	set { this.SetPropertyValue<OptionSetValue>("resolvebyslastatus", value, "ResolveBySLAStatus_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ResolveBySLAStatus_Text(IOrganizationService Service)
{
	return this.ResolveBySLAStatus_OptionSetValue.GetOptionSetText(Service, this, "resolvebyslastatus");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ResolveBySLAStatus_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ResolveBySLAStatus_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: responsiblecontactid</para>
///</summary>
[AttributeLogicalNameAttribute("responsiblecontactid")]
public EntityReference ResponsibleContact
{
	get { return this.GetPropertyValue<EntityReference>("responsiblecontactid"); }
	set { this.SetPropertyValue<EntityReference>("responsiblecontactid", value, "ResponsibleContact"); }
}
///<summary>
///<para>Logical Name: routecase</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("routecase")]
public bool? RouteCase
{
	get { return this.GetPropertyValue<bool?>("routecase"); }
	set { this.SetPropertyValue<bool?>("routecase", value, "RouteCase"); }
}
/// <summary>
///Logical Name: customersatisfactioncode
/// </summary>
[AttributeLogicalNameAttribute("customersatisfactioncode")]
public eSatisfaction? Satisfaction
{
	get
	{
		if (Satisfaction_OptionSetValue != null) { return (eSatisfaction)Satisfaction_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Satisfaction_OptionSetValue = new OptionSetValue((int)value); }
		else this.Satisfaction_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: customersatisfactioncode</para>
///</summary>
[AttributeLogicalNameAttribute("customersatisfactioncode")]
public OptionSetValue Satisfaction_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("customersatisfactioncode"); }
	set { this.SetPropertyValue<OptionSetValue>("customersatisfactioncode", value, "Satisfaction_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Satisfaction_Text(IOrganizationService Service)
{
	return this.Satisfaction_OptionSetValue.GetOptionSetText(Service, this, "customersatisfactioncode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Satisfaction_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Satisfaction_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: sentimentvalue</para>
///<para>Minimum Value: -100000000000</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("sentimentvalue")]
public double? SentimentValue
{
	get { return this.GetPropertyValue<double?>("sentimentvalue"); }
	set { this.SetPropertyValue("sentimentvalue", (double?)value, (double)-100000000000, (double)100000000000, "SentimentValue"); }
}
///<summary>
///<para>Logical Name: productserialnumber</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("productserialnumber")]
public string SerialNumber
{
	get { return this.GetPropertyValue<string>("productserialnumber"); }
	set { this.SetPropertyValue("productserialnumber", value, 100, "SerialNumber"); }
}
/// <summary>
///Logical Name: contractservicelevelcode
/// </summary>
[AttributeLogicalNameAttribute("contractservicelevelcode")]
public eServiceLevel? ServiceLevel
{
	get
	{
		if (ServiceLevel_OptionSetValue != null) { return (eServiceLevel)ServiceLevel_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ServiceLevel_OptionSetValue = new OptionSetValue((int)value); }
		else this.ServiceLevel_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: contractservicelevelcode</para>
///</summary>
[AttributeLogicalNameAttribute("contractservicelevelcode")]
public OptionSetValue ServiceLevel_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("contractservicelevelcode"); }
	set { this.SetPropertyValue<OptionSetValue>("contractservicelevelcode", value, "ServiceLevel_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ServiceLevel_Text(IOrganizationService Service)
{
	return this.ServiceLevel_OptionSetValue.GetOptionSetText(Service, this, "contractservicelevelcode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ServiceLevel_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ServiceLevel_OptionSetValue.Value);
}
/// <summary>
///Logical Name: servicestage
/// </summary>
[AttributeLogicalNameAttribute("servicestage")]
public eServiceStage? ServiceStage
{
	get
	{
		if (ServiceStage_OptionSetValue != null) { return (eServiceStage)ServiceStage_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ServiceStage_OptionSetValue = new OptionSetValue((int)value); }
		else this.ServiceStage_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: servicestage</para>
///</summary>
[AttributeLogicalNameAttribute("servicestage")]
public OptionSetValue ServiceStage_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("servicestage"); }
	set { this.SetPropertyValue<OptionSetValue>("servicestage", value, "ServiceStage_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ServiceStage_Text(IOrganizationService Service)
{
	return this.ServiceStage_OptionSetValue.GetOptionSetText(Service, this, "servicestage");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ServiceStage_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ServiceStage_OptionSetValue.Value);
}
/// <summary>
///Logical Name: severitycode
/// </summary>
[AttributeLogicalNameAttribute("severitycode")]
public eSeverity? Severity
{
	get
	{
		if (Severity_OptionSetValue != null) { return (eSeverity)Severity_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Severity_OptionSetValue = new OptionSetValue((int)value); }
		else this.Severity_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: severitycode</para>
///</summary>
[AttributeLogicalNameAttribute("severitycode")]
public OptionSetValue Severity_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("severitycode"); }
	set { this.SetPropertyValue<OptionSetValue>("severitycode", value, "Severity_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Severity_Text(IOrganizationService Service)
{
	return this.Severity_OptionSetValue.GetOptionSetText(Service, this, "severitycode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Severity_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Severity_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: slaid</para>
///</summary>
[AttributeLogicalNameAttribute("slaid")]
public EntityReference SLA
{
	get { return this.GetPropertyValue<EntityReference>("slaid"); }
	set { this.SetPropertyValue<EntityReference>("slaid", value, "SLA"); }
}
///<summary>
///<para>Logical Name: socialprofileid</para>
///</summary>
[AttributeLogicalNameAttribute("socialprofileid")]
public EntityReference SocialProfile
{
	get { return this.GetPropertyValue<EntityReference>("socialprofileid"); }
	set { this.SetPropertyValue<EntityReference>("socialprofileid", value, "SocialProfile"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eStatus? Status
{
	get
	{
		if (Status_OptionSetValue != null) { return (eStatus)Status_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Status_OptionSetValue = new OptionSetValue((int)value); }
		else this.Status_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue Status_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
	set { this.SetPropertyValue<OptionSetValue>("statecode", value, "Status_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Status_Text(IOrganizationService Service)
{
	return this.Status_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Status_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Status_OptionSetValue.Value);
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? StatusReason
{
	get
	{
		if (StatusReason_OptionSetValue != null) { return (eStatusReason)StatusReason_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StatusReason_OptionSetValue = new OptionSetValue((int)value); }
		else this.StatusReason_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue StatusReason_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "StatusReason_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string StatusReason_Text(IOrganizationService Service)
{
	return this.StatusReason_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string StatusReason_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.StatusReason_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: subjectid</para>
///</summary>
[AttributeLogicalNameAttribute("subjectid")]
public EntityReference Subject
{
	get { return this.GetPropertyValue<EntityReference>("subjectid"); }
	set { this.SetPropertyValue<EntityReference>("subjectid", value, "Subject"); }
}
///<summary>
///<para>Logical Name: int_surveryparticipation</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("int_surveryparticipation")]
public bool? SurveyParticipation
{
	get { return this.GetPropertyValue<bool?>("int_surveryparticipation"); }
	set { this.SetPropertyValue<bool?>("int_surveryparticipation", value, "SurveyParticipation"); }
}
///<summary>
///<para>Logical Name: int_surveyparticipation</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("int_surveyparticipation")]
public bool? SurveyParticipation2
{
	get { return this.GetPropertyValue<bool?>("int_surveyparticipation"); }
	set { this.SetPropertyValue<bool?>("int_surveyparticipation", value, "SurveyParticipation2"); }
}
///<summary>
///<para>Logical Name: timezoneruleversionnumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("timezoneruleversionnumber")]
public int? TimeZoneRuleVersionNumber
{
	get { return this.GetPropertyValue<int?>("timezoneruleversionnumber"); }
	set { this.SetPropertyValue("timezoneruleversionnumber", (int?)value, (int)-1, (int)2147483647, "TimeZoneRuleVersionNumber"); }
}
///<summary>
///<para>Logical Name: traversedpath</para>
///<para>Max Length: 1250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("traversedpath")]
public string TraversedPath
{
	get { return this.GetPropertyValue<string>("traversedpath"); }
	set { this.SetPropertyValue("traversedpath", value, 1250, "TraversedPath"); }
}
///<summary>
///<para>Logical Name: int_upsellreferral</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("int_upsellreferral")]
public bool? UpSellReferral
{
	get { return this.GetPropertyValue<bool?>("int_upsellreferral"); }
	set { this.SetPropertyValue<bool?>("int_upsellreferral", value, "UpSellReferral"); }
}
///<summary>
///<para>Logical Name: utcconversiontimezonecode</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utcconversiontimezonecode")]
public int? UTCConversionTimeZoneCode
{
	get { return this.GetPropertyValue<int?>("utcconversiontimezonecode"); }
	set { this.SetPropertyValue("utcconversiontimezonecode", (int?)value, (int)-1, (int)2147483647, "UTCConversionTimeZoneCode"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}


        /// <summary>
/// <para><b>ActionCard (Regarding)</b></para>
/// <para>Schema Name: incident_actioncard</para>
/// </summary>
public List<ActionCard> GetActionCards_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActionCard>(Service, this.Id, "actioncard", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ActionCard (Regarding)</b></para>
/// <para>Schema Name: incident_actioncard</para>
/// </summary>
public List<ActionCard> GetActionCards_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActionCard>(Service, this.Id, "actioncard", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ActivityParty (Party)</b></para>
/// <para>Schema Name: incident_activity_parties</para>
/// </summary>
public List<ActivityParty> GetActivityParties_Party (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActivityParty>(Service, this.Id, "activityparty", "partyid", Columns); }
/// <summary>
/// <para><b>ActivityParty (Party)</b></para>
/// <para>Schema Name: incident_activity_parties</para>
/// </summary>
public List<ActivityParty> GetActivityParties_Party (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActivityParty>(Service, this.Id, "activityparty", "partyid", Columns); }
/// <summary>
/// <para><b>Activity (Regarding)</b></para>
/// <para>Schema Name: Incident_ActivityPointers</para>
/// </summary>
public List<Activity> GetActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Activity>(Service, this.Id, "activitypointer", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Activity (Regarding)</b></para>
/// <para>Schema Name: Incident_ActivityPointers</para>
/// </summary>
public List<Activity> GetActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Activity>(Service, this.Id, "activitypointer", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: Incident_Annotation</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: Incident_Annotation</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Appointment (Regarding)</b></para>
/// <para>Schema Name: Incident_Appointments</para>
/// </summary>
public List<Appointment> GetAppointments_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Appointment>(Service, this.Id, "appointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Appointment (Regarding)</b></para>
/// <para>Schema Name: Incident_Appointments</para>
/// </summary>
public List<Appointment> GetAppointments_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Appointment>(Service, this.Id, "appointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: Incident_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: Incident_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: Incident_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: Incident_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: incident_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: incident_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: incident_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: incident_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: Incident_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: Incident_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: Incident_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: Incident_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>Email (Regarding)</b></para>
/// <para>Schema Name: Incident_Emails</para>
/// </summary>
public List<Email> GetEmailMessages_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Email (Regarding)</b></para>
/// <para>Schema Name: Incident_Emails</para>
/// </summary>
public List<Email> GetEmailMessages_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Fax (Regarding)</b></para>
/// <para>Schema Name: Incident_Faxes</para>
/// </summary>
public List<Fax> GetFaxes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fax>(Service, this.Id, "fax", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Fax (Regarding)</b></para>
/// <para>Schema Name: Incident_Faxes</para>
/// </summary>
public List<Fax> GetFaxes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fax>(Service, this.Id, "fax", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>@Case (Existing Case)</b></para>
/// <para>Schema Name: incident_existingcase</para>
/// </summary>
public List<@Case> GetCases_ExistingCase (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<@Case>(Service, this.Id, "incident", "existingcase", Columns); }
/// <summary>
/// <para><b>@Case (Existing Case)</b></para>
/// <para>Schema Name: incident_existingcase</para>
/// </summary>
public List<@Case> GetCases_ExistingCase (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<@Case>(Service, this.Id, "incident", "existingcase", Columns); }
/// <summary>
/// <para><b>@Case (Master Case)</b></para>
/// <para>Schema Name: incident_master_incident</para>
/// </summary>
public List<@Case> GetCases_MasterCase (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<@Case>(Service, this.Id, "incident", "masterid", Columns); }
/// <summary>
/// <para><b>@Case (Master Case)</b></para>
/// <para>Schema Name: incident_master_incident</para>
/// </summary>
public List<@Case> GetCases_MasterCase (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<@Case>(Service, this.Id, "incident", "masterid", Columns); }
/// <summary>
/// <para><b>@Case (Parent Case)</b></para>
/// <para>Schema Name: incident_parent_incident</para>
/// </summary>
public List<@Case> GetCases_ParentCase (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<@Case>(Service, this.Id, "incident", "parentcaseid", Columns); }
/// <summary>
/// <para><b>@Case (Parent Case)</b></para>
/// <para>Schema Name: incident_parent_incident</para>
/// </summary>
public List<@Case> GetCases_ParentCase (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<@Case>(Service, this.Id, "incident", "parentcaseid", Columns); }
/// <summary>
/// <para><b>CaseResolution (Case)</b></para>
/// <para>Schema Name: Incident_IncidentResolutions</para>
/// </summary>
public List<CaseResolution> GetCaseResolutions_Case (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CaseResolution>(Service, this.Id, "incidentresolution", "incidentid", Columns); }
/// <summary>
/// <para><b>CaseResolution (Case)</b></para>
/// <para>Schema Name: Incident_IncidentResolutions</para>
/// </summary>
public List<CaseResolution> GetCaseResolutions_Case (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CaseResolution>(Service, this.Id, "incidentresolution", "incidentid", Columns); }
/// <summary>
/// <para><b>KnowledgeArticleIncident (Incident)</b></para>
/// <para>Schema Name: knowledgearticle_incidents</para>
/// </summary>
public List<KnowledgeArticleIncident> GetKnowledgeArticleIncidents_Incident (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<KnowledgeArticleIncident>(Service, this.Id, "knowledgearticleincident", "incidentid", Columns); }
/// <summary>
/// <para><b>KnowledgeArticleIncident (Incident)</b></para>
/// <para>Schema Name: knowledgearticle_incidents</para>
/// </summary>
public List<KnowledgeArticleIncident> GetKnowledgeArticleIncidents_Incident (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<KnowledgeArticleIncident>(Service, this.Id, "knowledgearticleincident", "incidentid", Columns); }
/// <summary>
/// <para><b>Lead (Originating Case)</b></para>
/// <para>Schema Name: OriginatingCase_Lead</para>
/// </summary>
public List<Lead> GetLeads_OriginatingCase (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Lead>(Service, this.Id, "lead", "originatingcaseid", Columns); }
/// <summary>
/// <para><b>Lead (Originating Case)</b></para>
/// <para>Schema Name: OriginatingCase_Lead</para>
/// </summary>
public List<Lead> GetLeads_OriginatingCase (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Lead>(Service, this.Id, "lead", "originatingcaseid", Columns); }
/// <summary>
/// <para><b>Letter (Regarding)</b></para>
/// <para>Schema Name: Incident_Letters</para>
/// </summary>
public List<Letter> GetLetters_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Letter>(Service, this.Id, "letter", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Letter (Regarding)</b></para>
/// <para>Schema Name: Incident_Letters</para>
/// </summary>
public List<Letter> GetLetters_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Letter>(Service, this.Id, "letter", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: Incident_MailboxTrackingFolder</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: Incident_MailboxTrackingFolder</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Approval (Regarding)</b></para>
/// <para>Schema Name: incident_msdyn_approvals</para>
/// </summary>
public List<Approval> GetApprovals_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Approval>(Service, this.Id, "msdyn_approval", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Approval (Regarding)</b></para>
/// <para>Schema Name: incident_msdyn_approvals</para>
/// </summary>
public List<Approval> GetApprovals_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Approval>(Service, this.Id, "msdyn_approval", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BookingAlert (Regarding)</b></para>
/// <para>Schema Name: incident_msdyn_bookingalerts</para>
/// </summary>
public List<BookingAlert> GetBookingAlerts_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlert>(Service, this.Id, "msdyn_bookingalert", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BookingAlert (Regarding)</b></para>
/// <para>Schema Name: incident_msdyn_bookingalerts</para>
/// </summary>
public List<BookingAlert> GetBookingAlerts_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlert>(Service, this.Id, "msdyn_bookingalert", "regardingobjectid", Columns); }
/// <summary>
/// <para>incident</para>
/// <para><b>CaseToWorkOrderBusinessProcess (Incident)</b></para>
/// <para>Schema Name: bpf_incident_msdyn_bpf_989e9b1857e24af18787d5143b67523b</para>
/// </summary>
public List<CaseToWorkOrderBusinessProcess> Getincident_Incident (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CaseToWorkOrderBusinessProcess>(Service, this.Id, "msdyn_bpf_989e9b1857e24af18787d5143b67523b", "bpf_incidentid", Columns); }
/// <summary>
/// <para>incident</para>
/// <para><b>CaseToWorkOrderBusinessProcess (Incident)</b></para>
/// <para>Schema Name: bpf_incident_msdyn_bpf_989e9b1857e24af18787d5143b67523b</para>
/// </summary>
public List<CaseToWorkOrderBusinessProcess> Getincident_Incident (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CaseToWorkOrderBusinessProcess>(Service, this.Id, "msdyn_bpf_989e9b1857e24af18787d5143b67523b", "bpf_incidentid", Columns); }
/// <summary>
/// <para><b>WorkOrder (Case)</b></para>
/// <para>Schema Name: msdyn_incident_msdyn_workorder_ServiceRequest</para>
/// </summary>
public List<WorkOrder> GetWorkOrders_Case (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrder>(Service, this.Id, "msdyn_workorder", "msdyn_servicerequest", Columns); }
/// <summary>
/// <para><b>WorkOrder (Case)</b></para>
/// <para>Schema Name: msdyn_incident_msdyn_workorder_ServiceRequest</para>
/// </summary>
public List<WorkOrder> GetWorkOrders_Case (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrder>(Service, this.Id, "msdyn_workorder", "msdyn_servicerequest", Columns); }
/// <summary>
/// <para><b>PhoneCall (Regarding)</b></para>
/// <para>Schema Name: Incident_Phonecalls</para>
/// </summary>
public List<PhoneCall> GetPhoneCalls_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneCall>(Service, this.Id, "phonecall", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PhoneCall (Regarding)</b></para>
/// <para>Schema Name: Incident_Phonecalls</para>
/// </summary>
public List<PhoneCall> GetPhoneCalls_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneCall>(Service, this.Id, "phonecall", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PhoneToCaseProcess (Incident Id)</b></para>
/// <para>Schema Name: lk_phonetocaseprocess_incidentid</para>
/// </summary>
public List<PhoneToCaseProcess> GetPhoneToCaseProcess_IncidentId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneToCaseProcess>(Service, this.Id, "phonetocaseprocess", "incidentid", Columns); }
/// <summary>
/// <para><b>PhoneToCaseProcess (Incident Id)</b></para>
/// <para>Schema Name: lk_phonetocaseprocess_incidentid</para>
/// </summary>
public List<PhoneToCaseProcess> GetPhoneToCaseProcess_IncidentId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneToCaseProcess>(Service, this.Id, "phonetocaseprocess", "incidentid", Columns); }
/// <summary>
/// <para><b>Follow (Regarding)</b></para>
/// <para>Schema Name: incident_PostFollows</para>
/// </summary>
public List<Follow> GetFollows_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Follow>(Service, this.Id, "postfollow", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Follow (Regarding)</b></para>
/// <para>Schema Name: incident_PostFollows</para>
/// </summary>
public List<Follow> GetFollows_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Follow>(Service, this.Id, "postfollow", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PostRegarding (RegardingObjectId)</b></para>
/// <para>Schema Name: incident_PostRegardings</para>
/// </summary>
public List<PostRegarding> GetPostRegarding_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostRegarding>(Service, this.Id, "postregarding", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PostRegarding (RegardingObjectId)</b></para>
/// <para>Schema Name: incident_PostRegardings</para>
/// </summary>
public List<PostRegarding> GetPostRegarding_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostRegarding>(Service, this.Id, "postregarding", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PostRole (RegardingObjectId)</b></para>
/// <para>Schema Name: incident_PostRoles</para>
/// </summary>
public List<PostRole> GetPostRoles_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostRole>(Service, this.Id, "postrole", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PostRole (RegardingObjectId)</b></para>
/// <para>Schema Name: incident_PostRoles</para>
/// </summary>
public List<PostRole> GetPostRoles_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostRole>(Service, this.Id, "postrole", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: incident_principalobjectattributeaccess</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: incident_principalobjectattributeaccess</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: Incident_ProcessSessions</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: Incident_ProcessSessions</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>QueueItem (Object)</b></para>
/// <para>Schema Name: Incident_QueueItem</para>
/// </summary>
public List<QueueItem> GetQueueItems_Object (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QueueItem>(Service, this.Id, "queueitem", "objectid", Columns); }
/// <summary>
/// <para><b>QueueItem (Object)</b></para>
/// <para>Schema Name: Incident_QueueItem</para>
/// </summary>
public List<QueueItem> GetQueueItems_Object (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QueueItem>(Service, this.Id, "queueitem", "objectid", Columns); }
/// <summary>
/// <para><b>RecurringAppointment (Regarding)</b></para>
/// <para>Schema Name: Incident_RecurringAppointmentMasters</para>
/// </summary>
public List<RecurringAppointment> GetRecurringAppointments_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecurringAppointment>(Service, this.Id, "recurringappointmentmaster", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>RecurringAppointment (Regarding)</b></para>
/// <para>Schema Name: Incident_RecurringAppointmentMasters</para>
/// </summary>
public List<RecurringAppointment> GetRecurringAppointments_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecurringAppointment>(Service, this.Id, "recurringappointmentmaster", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ServiceActivity (Regarding)</b></para>
/// <para>Schema Name: Incident_ServiceAppointments</para>
/// </summary>
public List<ServiceActivity> GetServiceActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceActivity>(Service, this.Id, "serviceappointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ServiceActivity (Regarding)</b></para>
/// <para>Schema Name: Incident_ServiceAppointments</para>
/// </summary>
public List<ServiceActivity> GetServiceActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceActivity>(Service, this.Id, "serviceappointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SLAKPIInstance (Regarding)</b></para>
/// <para>Schema Name: slakpiinstance_incident</para>
/// </summary>
public List<SLAKPIInstance> GetSLAKPIInstances_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SLAKPIInstance>(Service, this.Id, "slakpiinstance", "regarding", Columns); }
/// <summary>
/// <para><b>SLAKPIInstance (Regarding)</b></para>
/// <para>Schema Name: slakpiinstance_incident</para>
/// </summary>
public List<SLAKPIInstance> GetSLAKPIInstances_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SLAKPIInstance>(Service, this.Id, "slakpiinstance", "regarding", Columns); }
/// <summary>
/// <para><b>SocialActivity (Regarding)</b></para>
/// <para>Schema Name: Incident_SocialActivities</para>
/// </summary>
public List<SocialActivity> GetSocialActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialActivity>(Service, this.Id, "socialactivity", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SocialActivity (Regarding)</b></para>
/// <para>Schema Name: Incident_SocialActivities</para>
/// </summary>
public List<SocialActivity> GetSocialActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialActivity>(Service, this.Id, "socialactivity", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: Incident_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: Incident_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Task (Regarding)</b></para>
/// <para>Schema Name: Incident_Tasks</para>
/// </summary>
public List<Task> GetTasks_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Task>(Service, this.Id, "task", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Task (Regarding)</b></para>
/// <para>Schema Name: Incident_Tasks</para>
/// </summary>
public List<Task> GetTasks_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Task>(Service, this.Id, "task", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>TextAnalyticsTopic (Incident Id)</b></para>
/// <para>Schema Name: incident_topic</para>
/// </summary>
public List<TextAnalyticsTopic> GetTextAnalyticsTopics_IncidentId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TextAnalyticsTopic>(Service, this.Id, "topic", "incidentid", Columns); }
/// <summary>
/// <para><b>TextAnalyticsTopic (Incident Id)</b></para>
/// <para>Schema Name: incident_topic</para>
/// </summary>
public List<TextAnalyticsTopic> GetTextAnalyticsTopics_IncidentId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TextAnalyticsTopic>(Service, this.Id, "topic", "incidentid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_incident</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_incident</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        /// <summary>
/// <para>Related Entity: <b>Knowledge Base Record</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: KnowledgeBaseRecord_Incident</para>
/// </summary>
public List<KnowledgeBaseRecord> GetKnowledgeBaseRecords (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<KnowledgeBaseRecord>(Service, this, "incident", "incidentid", "knowledgebaserecord", "knowledgebaserecordid", "incidentknowledgebaserecord", "incidentid", "knowledgebaserecordid", Columns); }
public List<KnowledgeBaseRecord> GetKnowledgeBaseRecords (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<KnowledgeBaseRecord>(Service, this, "incident", "incidentid", "knowledgebaserecord", "knowledgebaserecordid", "incidentknowledgebaserecord", "incidentid", "knowledgebaserecordid", Columns); }
public void RelateKnowledgeBaseRecords (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "KnowledgeBaseRecord_Incident", Items); }
public void RelateKnowledgeBaseRecords (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "KnowledgeBaseRecord_Incident", Items); }
public void UnRelateKnowledgeBaseRecords (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "KnowledgeBaseRecord_Incident", Items); }
public void UnRelateKnowledgeBaseRecords (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "KnowledgeBaseRecord_Incident", Items); }


        

        public enum eCaseStage
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eCaseType
{
	///<summary><para>Question</para>
	///<para>Value = 1</para></summary>
	[Description("Question")]
	Question = 1, 
	///<summary><para>Problem</para>
	///<para>Value = 2</para></summary>
	[Description("Problem")]
	Problem = 2, 
	///<summary><para>Request</para>
	///<para>Value = 3</para></summary>
	[Description("Request")]
	Request = 3
}
public enum eCustomerEffort
{
	///<summary><para>Low</para>
	///<para>Value = 121590000</para></summary>
	[Description("Low")]
	Low = 121590000, 
	///<summary><para>Medium</para>
	///<para>Value = 121590001</para></summary>
	[Description("Medium")]
	Medium = 121590001, 
	///<summary><para>High</para>
	///<para>Value = 121590002</para></summary>
	[Description("High")]
	High = 121590002
}
public enum eFirstResponseSLAStatus
{
	///<summary><para>In Progress</para>
	///<para>Value = 1</para></summary>
	[Description("In Progress")]
	InProgress = 1, 
	///<summary><para>Nearing Noncompliance</para>
	///<para>Value = 2</para></summary>
	[Description("Nearing Noncompliance")]
	NearingNoncompliance = 2, 
	///<summary><para>Succeeded</para>
	///<para>Value = 3</para></summary>
	[Description("Succeeded")]
	Succeeded = 3, 
	///<summary><para>Noncompliant</para>
	///<para>Value = 4</para></summary>
	[Description("Noncompliant")]
	Noncompliant = 4
}
public enum eCaseOrigin
{
	///<summary><para>Phone</para>
	///<para>Value = 1</para></summary>
	[Description("Phone")]
	Phone = 1, 
	///<summary><para>Email</para>
	///<para>Value = 2</para></summary>
	[Description("Email")]
	Email = 2, 
	///<summary><para>Web</para>
	///<para>Value = 3</para></summary>
	[Description("Web")]
	Web = 3, 
	///<summary><para>Facebook</para>
	///<para>Value = 2483</para></summary>
	[Description("Facebook")]
	Facebook = 2483, 
	///<summary><para>Twitter</para>
	///<para>Value = 3986</para></summary>
	[Description("Twitter")]
	Twitter = 3986
}
public enum ePriority
{
	///<summary><para>High</para>
	///<para>Value = 1</para></summary>
	[Description("High")]
	High = 1, 
	///<summary><para>Normal</para>
	///<para>Value = 2</para></summary>
	[Description("Normal")]
	Normal = 2, 
	///<summary><para>Low</para>
	///<para>Value = 3</para></summary>
	[Description("Low")]
	Low = 3, 
	///<summary><para>Critical</para>
	///<para>Value = 0</para></summary>
	[Description("Critical")]
	Critical = 0
}
public enum ePostMessageType
{
	///<summary><para>Public Message</para>
	///<para>Value = 0</para></summary>
	[Description("Public Message")]
	PublicMessage = 0, 
	///<summary><para>Private Message</para>
	///<para>Value = 1</para></summary>
	[Description("Private Message")]
	PrivateMessage = 1
}
public enum eResolveBySLAStatus
{
	///<summary><para>In Progress</para>
	///<para>Value = 1</para></summary>
	[Description("In Progress")]
	InProgress = 1, 
	///<summary><para>Nearing Noncompliance</para>
	///<para>Value = 2</para></summary>
	[Description("Nearing Noncompliance")]
	NearingNoncompliance = 2, 
	///<summary><para>Succeeded</para>
	///<para>Value = 3</para></summary>
	[Description("Succeeded")]
	Succeeded = 3, 
	///<summary><para>Noncompliant</para>
	///<para>Value = 4</para></summary>
	[Description("Noncompliant")]
	Noncompliant = 4
}
public enum eSatisfaction
{
	///<summary><para>Very Satisfied</para>
	///<para>Value = 5</para></summary>
	[Description("Very Satisfied")]
	VerySatisfied = 5, 
	///<summary><para>Satisfied</para>
	///<para>Value = 4</para></summary>
	[Description("Satisfied")]
	Satisfied = 4, 
	///<summary><para>Neutral</para>
	///<para>Value = 3</para></summary>
	[Description("Neutral")]
	Neutral = 3, 
	///<summary><para>Dissatisfied</para>
	///<para>Value = 2</para></summary>
	[Description("Dissatisfied")]
	Dissatisfied = 2, 
	///<summary><para>Very Dissatisfied</para>
	///<para>Value = 1</para></summary>
	[Description("Very Dissatisfied")]
	VeryDissatisfied = 1
}
public enum eServiceLevel
{
	///<summary><para>Gold</para>
	///<para>Value = 1</para></summary>
	[Description("Gold")]
	Gold = 1, 
	///<summary><para>Silver</para>
	///<para>Value = 2</para></summary>
	[Description("Silver")]
	Silver = 2, 
	///<summary><para>Bronze</para>
	///<para>Value = 3</para></summary>
	[Description("Bronze")]
	Bronze = 3
}
public enum eServiceStage
{
	///<summary><para>Identify</para>
	///<para>Value = 0</para></summary>
	[Description("Identify")]
	Identify = 0, 
	///<summary><para>Research</para>
	///<para>Value = 1</para></summary>
	[Description("Research")]
	Research = 1, 
	///<summary><para>Resolve</para>
	///<para>Value = 2</para></summary>
	[Description("Resolve")]
	Resolve = 2
}
public enum eSeverity
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eStatus
{
	///<summary><para>Active</para>
	///<para>Value = 0</para></summary>
	[Description("Active")]
	Active = 0, 
	///<summary><para>Resolved</para>
	///<para>Value = 1</para></summary>
	[Description("Resolved")]
	Resolved = 1, 
	///<summary><para>Canceled</para>
	///<para>Value = 2</para></summary>
	[Description("Canceled")]
	Canceled = 2
}
public enum eStatusReason
{
	///<summary><para>Problem Solved</para>
	///<para>Value = 5</para></summary>
	[Description("Problem Solved")]
	ProblemSolved_Resolved = 5, 
	///<summary><para>Information Provided</para>
	///<para>Value = 1000</para></summary>
	[Description("Information Provided")]
	InformationProvided_Resolved = 1000, 
	///<summary><para>Canceled</para>
	///<para>Value = 6</para></summary>
	[Description("Canceled")]
	Canceled_Canceled = 6, 
	///<summary><para>Merged</para>
	///<para>Value = 2000</para></summary>
	[Description("Merged")]
	Merged_Canceled = 2000, 
	///<summary><para>In Progress</para>
	///<para>Value = 1</para></summary>
	[Description("In Progress")]
	InProgress_Active = 1, 
	///<summary><para>On Hold</para>
	///<para>Value = 2</para></summary>
	[Description("On Hold")]
	OnHold_Active = 2, 
	///<summary><para>Waiting for Details</para>
	///<para>Value = 3</para></summary>
	[Description("Waiting for Details")]
	WaitingForDetails_Active = 3, 
	///<summary><para>Researching</para>
	///<para>Value = 4</para></summary>
	[Description("Researching")]
	Researching_Active = 4
}
public void SetState(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>primarycontactidyominame</para>
	/// <para>primarycontactidyominame</para></summary>
	public const string PrimaryContactIdYomiName = "primarycontactidyominame";
	/// <summary><para>createdbyexternalpartyname</para>
	/// <para>createdbyexternalpartyname</para></summary>
	public const string CreatedByExternalPartyName = "createdbyexternalpartyname";
	/// <summary><para>entityimage_timestamp</para>
	/// <para>entityimage_timestamp</para></summary>
	public const string EntityImage_Timestamp = "entityimage_timestamp";
	/// <summary><para>contactidname</para>
	/// <para>contactidname</para></summary>
	public const string ContactIdName = "contactidname";
	/// <summary><para>responsiblecontactidyominame</para>
	/// <para>responsiblecontactidyominame</para></summary>
	public const string ResponsibleContactIdYomiName = "responsiblecontactidyominame";
	/// <summary><para>customeridyominame</para>
	/// <para>customeridyominame</para></summary>
	public const string CustomerIdYomiName = "customeridyominame";
	/// <summary><para>primarycontactidname</para>
	/// <para>primarycontactidname</para></summary>
	public const string PrimaryContactIdName = "primarycontactidname";
	/// <summary><para>transactioncurrencyidname</para>
	/// <para>transactioncurrencyidname</para></summary>
	public const string TransactionCurrencyIdName = "transactioncurrencyidname";
	/// <summary><para>msdyn_incidenttypename</para>
	/// <para>msdyn_incidenttypename</para></summary>
	public const string Msdyn_IncidentTypeName = "msdyn_incidenttypename";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>modifiedbyexternalpartyyominame</para>
	/// <para>modifiedbyexternalpartyyominame</para></summary>
	public const string ModifiedByExternalPartyYomiName = "modifiedbyexternalpartyyominame";
	/// <summary><para>socialprofileidname</para>
	/// <para>socialprofileidname</para></summary>
	public const string SocialProfileIdName = "socialprofileidname";
	/// <summary><para>responsiblecontactidname</para>
	/// <para>responsiblecontactidname</para></summary>
	public const string ResponsibleContactIdName = "responsiblecontactidname";
	/// <summary><para>contractdetailidname</para>
	/// <para>contractdetailidname</para></summary>
	public const string ContractDetailIdName = "contractdetailidname";
	/// <summary><para>contactidyominame</para>
	/// <para>contactidyominame</para></summary>
	public const string ContactIdYomiName = "contactidyominame";
	/// <summary><para>modifiedbyexternalpartyname</para>
	/// <para>modifiedbyexternalpartyname</para></summary>
	public const string ModifiedByExternalPartyName = "modifiedbyexternalpartyname";
	/// <summary><para>productidname</para>
	/// <para>productidname</para></summary>
	public const string ProductIdName = "productidname";
	/// <summary><para>owneridyominame</para>
	/// <para>owneridyominame</para></summary>
	public const string OwnerIdYomiName = "owneridyominame";
	/// <summary><para>entityimage_url</para>
	/// <para>entityimage_url</para></summary>
	public const string EntityImage_URL = "entityimage_url";
	/// <summary><para>accountidname</para>
	/// <para>accountidname</para></summary>
	public const string AccountIdName = "accountidname";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>owneridtype</para>
	/// <para>owneridtype</para></summary>
	public const string OwnerIdType = "owneridtype";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>createdbyexternalpartyyominame</para>
	/// <para>createdbyexternalpartyyominame</para></summary>
	public const string CreatedByExternalPartyYomiName = "createdbyexternalpartyyominame";
	/// <summary><para>slainvokedidname</para>
	/// <para>slainvokedidname</para></summary>
	public const string SLAInvokedIdName = "slainvokedidname";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>accountidyominame</para>
	/// <para>accountidyominame</para></summary>
	public const string AccountIdYomiName = "accountidyominame";
	/// <summary><para>subjectidname</para>
	/// <para>subjectidname</para></summary>
	public const string SubjectIdName = "subjectidname";
	/// <summary><para>contractidname</para>
	/// <para>contractidname</para></summary>
	public const string ContractIdName = "contractidname";
	/// <summary><para>masteridname</para>
	/// <para>masteridname</para></summary>
	public const string MasterIdName = "masteridname";
	/// <summary><para>kbarticleidname</para>
	/// <para>kbarticleidname</para></summary>
	public const string KbArticleIdName = "kbarticleidname";
	/// <summary><para>customeridname</para>
	/// <para>customeridname</para></summary>
	public const string CustomerIdName = "customeridname";
	/// <summary><para>entitlementidname</para>
	/// <para>entitlementidname</para></summary>
	public const string EntitlementIdName = "entitlementidname";
	/// <summary><para>firstresponsebykpiidname</para>
	/// <para>firstresponsebykpiidname</para></summary>
	public const string FirstResponseByKPIIdName = "firstresponsebykpiidname";
	/// <summary><para>resolvebykpiidname</para>
	/// <para>resolvebykpiidname</para></summary>
	public const string ResolveByKPIIdName = "resolvebykpiidname";
	/// <summary><para>parentcaseidname</para>
	/// <para>parentcaseidname</para></summary>
	public const string ParentCaseIdName = "parentcaseidname";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>owneridname</para>
	/// <para>owneridname</para></summary>
	public const string OwnerIdName = "owneridname";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>slaname</para>
	/// <para>slaname</para></summary>
	public const string SLAName = "slaname";
	/// <summary><para>Account</para>
	/// <para>accountid</para></summary>
	public const string Account = "accountid";
	/// <summary><para>Activities Complete</para>
	/// <para>activitiescomplete</para></summary>
	public const string ActivitiesComplete = "activitiescomplete";
	/// <summary><para>Actual Service Units</para>
	/// <para>actualserviceunits</para></summary>
	public const string ActualServiceUnits = "actualserviceunits";
	/// <summary><para>Billed Service Units</para>
	/// <para>billedserviceunits</para></summary>
	public const string BilledServiceUnits = "billedserviceunits";
	/// <summary><para>Blocked Profile</para>
	/// <para>blockedprofile</para></summary>
	public const string BlockedProfile = "blockedprofile";
	/// <summary><para>Case</para>
	/// <para>incidentid</para></summary>
	public const string CaseId = "incidentid";
	/// <summary><para>Case Number</para>
	/// <para>ticketnumber</para></summary>
	public const string CaseNumber = "ticketnumber";
	/// <summary><para>Case Stage</para>
	/// <para>incidentstagecode</para></summary>
	public const string CaseStage = "incidentstagecode";
	/// <summary><para>Case Title</para>
	/// <para>title</para></summary>
	public const string CaseTitle = "title";
	/// <summary><para>Case Type</para>
	/// <para>casetypecode</para></summary>
	public const string CaseType = "casetypecode";
	/// <summary><para>Check Email</para>
	/// <para>checkemail</para></summary>
	public const string CheckEmail = "checkemail";
	/// <summary><para>Child Cases</para>
	/// <para>numberofchildincidents</para></summary>
	public const string ChildCases = "numberofchildincidents";
	/// <summary><para>Contact</para>
	/// <para>contactid</para></summary>
	public const string Contact = "contactid";
	/// <summary><para>Contact</para>
	/// <para>primarycontactid</para></summary>
	public const string Contact2 = "primarycontactid";
	/// <summary><para>Contract</para>
	/// <para>contractid</para></summary>
	public const string Contract = "contractid";
	/// <summary><para>Contract Line</para>
	/// <para>contractdetailid</para></summary>
	public const string ContractLine = "contractdetailid";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created By (External Party)</para>
	/// <para>createdbyexternalparty</para></summary>
	public const string CreatedBy_ExternalParty = "createdbyexternalparty";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Currency</para>
	/// <para>transactioncurrencyid</para></summary>
	public const string Currency = "transactioncurrencyid";
	/// <summary><para>Customer</para>
	/// <para>customerid</para></summary>
	public const string Customer = "customerid";
	/// <summary><para>Customer Contacted</para>
	/// <para>customercontacted</para></summary>
	public const string CustomerContacted = "customercontacted";
	/// <summary><para>Customer Effort</para>
	/// <para>int_customereffort</para></summary>
	public const string CustomerEffort = "int_customereffort";
	/// <summary><para>Customer Type</para>
	/// <para>customeridtype</para></summary>
	public const string CustomerType = "customeridtype";
	/// <summary><para>Decrement Entitlement Terms</para>
	/// <para>decremententitlementterm</para></summary>
	public const string DecrementEntitlementTerms = "decremententitlementterm";
	/// <summary><para>Decrementing</para>
	/// <para>isdecrementing</para></summary>
	public const string Decrementing = "isdecrementing";
	/// <summary><para>Description</para>
	/// <para>description</para></summary>
	public const string Description = "description";
	/// <summary><para>Entitlement</para>
	/// <para>entitlementid</para></summary>
	public const string Entitlement = "entitlementid";
	/// <summary><para>Entity Image Id</para>
	/// <para>entityimageid</para></summary>
	public const string EntityImageId = "entityimageid";
	/// <summary><para>Escalated On</para>
	/// <para>escalatedon</para></summary>
	public const string EscalatedOn = "escalatedon";
	/// <summary><para>Exchange Rate</para>
	/// <para>exchangerate</para></summary>
	public const string ExchangeRate = "exchangerate";
	/// <summary><para>Existing Case</para>
	/// <para>existingcase</para></summary>
	public const string ExistingCase = "existingcase";
	/// <summary><para>First Response By</para>
	/// <para>responseby</para></summary>
	public const string FirstResponseBy = "responseby";
	/// <summary><para>First Response By KPI</para>
	/// <para>firstresponsebykpiid</para></summary>
	public const string FirstResponseByKPI = "firstresponsebykpiid";
	/// <summary><para>First Response Sent</para>
	/// <para>firstresponsesent</para></summary>
	public const string FirstResponseSent = "firstresponsesent";
	/// <summary><para>First Response SLA Status</para>
	/// <para>firstresponseslastatus</para></summary>
	public const string FirstResponseSLAStatus = "firstresponseslastatus";
	/// <summary><para>Follow Up By</para>
	/// <para>followupby</para></summary>
	public const string FollowUpBy = "followupby";
	/// <summary><para>Follow up Task Created</para>
	/// <para>followuptaskcreated</para></summary>
	public const string FollowUpTaskCreated = "followuptaskcreated";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string ImportSequenceNumber = "importsequencenumber";
	/// <summary><para>Incident Type</para>
	/// <para>msdyn_incidenttype</para></summary>
	public const string IncidentType = "msdyn_incidenttype";
	/// <summary><para>Influence Score</para>
	/// <para>influencescore</para></summary>
	public const string InfluenceScore = "influencescore";
	/// <summary><para>Internal Use Only</para>
	/// <para>merged</para></summary>
	public const string InternalUseOnly = "merged";
	/// <summary><para>IsEscalated</para>
	/// <para>isescalated</para></summary>
	public const string IsEscalated = "isescalated";
	/// <summary><para>Knowledge Base Article</para>
	/// <para>kbarticleid</para></summary>
	public const string KnowledgeBaseArticle = "kbarticleid";
	/// <summary><para>Last On Hold Time</para>
	/// <para>lastonholdtime</para></summary>
	public const string LastOnHoldTime = "lastonholdtime";
	/// <summary><para>Last SLA applied</para>
	/// <para>slainvokedid</para></summary>
	public const string LastSLAApplied = "slainvokedid";
	/// <summary><para>Master Case</para>
	/// <para>masterid</para></summary>
	public const string MasterCase = "masterid";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified By (External Party)</para>
	/// <para>modifiedbyexternalparty</para></summary>
	public const string ModifiedBy_ExternalParty = "modifiedbyexternalparty";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>On Hold Time (Minutes)</para>
	/// <para>onholdtime</para></summary>
	public const string OnHoldTime_Minutes = "onholdtime";
	/// <summary><para>Origin</para>
	/// <para>caseorigincode</para></summary>
	public const string Origin = "caseorigincode";
	/// <summary><para>Owner</para>
	/// <para>ownerid</para></summary>
	public const string Owner = "ownerid";
	/// <summary><para>Owning Business Unit</para>
	/// <para>owningbusinessunit</para></summary>
	public const string OwningBusinessUnit = "owningbusinessunit";
	/// <summary><para>Owning Team</para>
	/// <para>owningteam</para></summary>
	public const string OwningTeam = "owningteam";
	/// <summary><para>Owning User</para>
	/// <para>owninguser</para></summary>
	public const string OwningUser = "owninguser";
	/// <summary><para>Parent Case</para>
	/// <para>parentcaseid</para></summary>
	public const string ParentCase = "parentcaseid";
	/// <summary><para>Priority</para>
	/// <para>prioritycode</para></summary>
	public const string Priority = "prioritycode";
	/// <summary><para>Process</para>
	/// <para>processid</para></summary>
	public const string Process = "processid";
	/// <summary><para>Process Stage</para>
	/// <para>stageid</para></summary>
	public const string ProcessStage = "stageid";
	/// <summary><para>Product</para>
	/// <para>productid</para></summary>
	public const string Product = "productid";
	/// <summary><para>Received As</para>
	/// <para>messagetypecode</para></summary>
	public const string ReceivedAs = "messagetypecode";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string RecordCreatedOn = "overriddencreatedon";
	/// <summary><para>Resolve By</para>
	/// <para>resolveby</para></summary>
	public const string ResolveBy = "resolveby";
	/// <summary><para>Resolve By KPI</para>
	/// <para>resolvebykpiid</para></summary>
	public const string ResolveByKPI = "resolvebykpiid";
	/// <summary><para>Resolve By SLA Status</para>
	/// <para>resolvebyslastatus</para></summary>
	public const string ResolveBySLAStatus = "resolvebyslastatus";
	/// <summary><para>Responsible Contact</para>
	/// <para>responsiblecontactid</para></summary>
	public const string ResponsibleContact = "responsiblecontactid";
	/// <summary><para>Route Case</para>
	/// <para>routecase</para></summary>
	public const string RouteCase = "routecase";
	/// <summary><para>Satisfaction</para>
	/// <para>customersatisfactioncode</para></summary>
	public const string Satisfaction = "customersatisfactioncode";
	/// <summary><para>Sentiment Value</para>
	/// <para>sentimentvalue</para></summary>
	public const string SentimentValue = "sentimentvalue";
	/// <summary><para>Serial Number</para>
	/// <para>productserialnumber</para></summary>
	public const string SerialNumber = "productserialnumber";
	/// <summary><para>Service Level</para>
	/// <para>contractservicelevelcode</para></summary>
	public const string ServiceLevel = "contractservicelevelcode";
	/// <summary><para>Service Stage</para>
	/// <para>servicestage</para></summary>
	public const string ServiceStage = "servicestage";
	/// <summary><para>Severity</para>
	/// <para>severitycode</para></summary>
	public const string Severity = "severitycode";
	/// <summary><para>SLA</para>
	/// <para>slaid</para></summary>
	public const string SLA = "slaid";
	/// <summary><para>Social Profile</para>
	/// <para>socialprofileid</para></summary>
	public const string SocialProfile = "socialprofileid";
	/// <summary><para>Status</para>
	/// <para>statecode</para></summary>
	public const string Status = "statecode";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string StatusReason = "statuscode";
	/// <summary><para>Subject</para>
	/// <para>subjectid</para></summary>
	public const string Subject = "subjectid";
	/// <summary><para>Survey Participation</para>
	/// <para>int_surveryparticipation</para></summary>
	public const string SurveyParticipation = "int_surveryparticipation";
	/// <summary><para>Survey Participation</para>
	/// <para>int_surveyparticipation</para></summary>
	public const string SurveyParticipation2 = "int_surveyparticipation";
	/// <summary><para>Time Zone Rule Version Number</para>
	/// <para>timezoneruleversionnumber</para></summary>
	public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
	/// <summary><para>Traversed Path</para>
	/// <para>traversedpath</para></summary>
	public const string TraversedPath = "traversedpath";
	/// <summary><para>UpSell Referral</para>
	/// <para>int_upsellreferral</para></summary>
	public const string UpSellReferral = "int_upsellreferral";
	/// <summary><para>UTC Conversion Time Zone Code</para>
	/// <para>utcconversiontimezonecode</para></summary>
	public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
}

    }
}

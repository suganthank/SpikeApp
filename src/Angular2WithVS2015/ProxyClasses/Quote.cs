// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("quote")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class Quote : BaseProxyClass
    {
        public new const string LogicalName = "quote";
        public const int ObjectTypeCode = 1084;
        public const string PrimaryIdAttribute = "quoteid";
        public const string PrimaryNameAttribute = "name";
        
        static Quote()
        {
            BaseProxyClass.RegisterProxyType(typeof(Quote), "quote");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public Quote() : base(new Entity("quote")) { }
        public Quote(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<Quote>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: contactidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("contactidname")]
public string ContactIdName
{
	get { return this.GetPropertyValue<string>("contactidname"); }
}
///<summary>
///<para>Logical Name: customeridyominame</para>
///<para>Max Length: 450 characters</para>
///</summary>
[AttributeLogicalNameAttribute("customeridyominame")]
public string CustomerIdYomiName
{
	get { return this.GetPropertyValue<string>("customeridyominame"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyidname")]
public string TransactionCurrencyIdName
{
	get { return this.GetPropertyValue<string>("transactioncurrencyidname"); }
}
///<summary>
///<para>Logical Name: campaignidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("campaignidname")]
public string CampaignIdName
{
	get { return this.GetPropertyValue<string>("campaignidname"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_contractorganizationalunitidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_contractorganizationalunitidname")]
public string Msdyn_ContractOrganizationalUnitIdName
{
	get { return this.GetPropertyValue<string>("msdyn_contractorganizationalunitidname"); }
}
///<summary>
///<para>Logical Name: msdyn_accountmanageridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_accountmanageridyominame")]
public string Msdyn_AccountManagerIdYomiName
{
	get { return this.GetPropertyValue<string>("msdyn_accountmanageridyominame"); }
}
///<summary>
///<para>Logical Name: contactidyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("contactidyominame")]
public string ContactIdYomiName
{
	get { return this.GetPropertyValue<string>("contactidyominame"); }
}
///<summary>
///<para>Logical Name: opportunityidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("opportunityidname")]
public string OpportunityIdName
{
	get { return this.GetPropertyValue<string>("opportunityidname"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_accountname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_accountname")]
public string Msdyn_AccountName
{
	get { return this.GetPropertyValue<string>("msdyn_accountname"); }
}
///<summary>
///<para>Logical Name: msdyn_accountyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_accountyominame")]
public string Msdyn_AccountYomiName
{
	get { return this.GetPropertyValue<string>("msdyn_accountyominame"); }
}
///<summary>
///<para>Logical Name: owneridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridyominame")]
public string OwnerIdYomiName
{
	get { return this.GetPropertyValue<string>("owneridyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_accountmanageridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_accountmanageridname")]
public string Msdyn_AccountManagerIdName
{
	get { return this.GetPropertyValue<string>("msdyn_accountmanageridname"); }
}
///<summary>
///<para>Logical Name: accountidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("accountidname")]
public string AccountIdName
{
	get { return this.GetPropertyValue<string>("accountidname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: slainvokedidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("slainvokedidname")]
public string SLAInvokedIdName
{
	get { return this.GetPropertyValue<string>("slainvokedidname"); }
}
///<summary>
///<para>Logical Name: accountidyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("accountidyominame")]
public string AccountIdYomiName
{
	get { return this.GetPropertyValue<string>("accountidyominame"); }
}
///<summary>
///<para>Logical Name: owneridtype</para>
///</summary>
[AttributeLogicalNameAttribute("owneridtype")]
public string OwnerIdType
{
	get { return this.GetPropertyValue<string>("owneridtype"); }
	set { this.SetPropertyValue<string>("owneridtype", value, "OwnerIdType"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: customeridname</para>
///<para>Max Length: 160 characters</para>
///</summary>
[AttributeLogicalNameAttribute("customeridname")]
public string CustomerIdName
{
	get { return this.GetPropertyValue<string>("customeridname"); }
}
///<summary>
///<para>Logical Name: pricelevelidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("pricelevelidname")]
public string PriceLevelIdName
{
	get { return this.GetPropertyValue<string>("pricelevelidname"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: owneridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridname")]
public string OwnerIdName
{
	get { return this.GetPropertyValue<string>("owneridname"); }
}
///<summary>
///<para>Logical Name: slaname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("slaname")]
public string SLAName
{
	get { return this.GetPropertyValue<string>("slaname"); }
}
///<summary>
///<para>Logical Name: accountid</para>
///</summary>
[AttributeLogicalNameAttribute("accountid")]
public EntityReference Account
{
	get { return this.GetPropertyValue<EntityReference>("accountid"); }
}
///<summary>
///<para>Logical Name: msdyn_accountmanagerid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_accountmanagerid")]
public EntityReference AccountManager
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_accountmanagerid"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_accountmanagerid", value, "AccountManager"); }
}
///<summary>
///<para>Logical Name: msdyn_adjustedgrossmargin</para>
///<para>Minimum Value: -100000000000</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_adjustedgrossmargin")]
public decimal? AdjustedGrossMargin
{
	get { return this.GetPropertyValue<decimal?>("msdyn_adjustedgrossmargin"); }
}
///<summary>
///<para>Logical Name: billto_composite</para>
///<para>Max Length: 1000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("billto_composite")]
public string BillToAddress
{
	get { return this.GetPropertyValue<string>("billto_composite"); }
}
///<summary>
///<para>Logical Name: billto_addressid</para>
///</summary>
[AttributeLogicalNameAttribute("billto_addressid")]
public Guid BillToAddressID
{
	get { return this.GetPropertyValue<Guid>("billto_addressid"); }
	set { this.SetPropertyValue<Guid>("billto_addressid", value, "BillToAddressID"); }
}
///<summary>
///<para>Logical Name: billto_city</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("billto_city")]
public string BillToCity
{
	get { return this.GetPropertyValue<string>("billto_city"); }
	set { this.SetPropertyValue("billto_city", value, 80, "BillToCity"); }
}
///<summary>
///<para>Logical Name: billto_contactname</para>
///<para>Max Length: 150 characters</para>
///</summary>
[AttributeLogicalNameAttribute("billto_contactname")]
public string BillToContactName
{
	get { return this.GetPropertyValue<string>("billto_contactname"); }
	set { this.SetPropertyValue("billto_contactname", value, 150, "BillToContactName"); }
}
///<summary>
///<para>Logical Name: billto_country</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("billto_country")]
public string BillToCountry_Region
{
	get { return this.GetPropertyValue<string>("billto_country"); }
	set { this.SetPropertyValue("billto_country", value, 80, "BillToCountry_Region"); }
}
///<summary>
///<para>Logical Name: billto_fax</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("billto_fax")]
public string BillToFax
{
	get { return this.GetPropertyValue<string>("billto_fax"); }
	set { this.SetPropertyValue("billto_fax", value, 50, "BillToFax"); }
}
///<summary>
///<para>Logical Name: billto_name</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("billto_name")]
public string BillToName
{
	get { return this.GetPropertyValue<string>("billto_name"); }
	set { this.SetPropertyValue("billto_name", value, 200, "BillToName"); }
}
///<summary>
///<para>Logical Name: billto_telephone</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("billto_telephone")]
public string BillToPhone
{
	get { return this.GetPropertyValue<string>("billto_telephone"); }
	set { this.SetPropertyValue("billto_telephone", value, 50, "BillToPhone"); }
}
///<summary>
///<para>Logical Name: billto_stateorprovince</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("billto_stateorprovince")]
public string BillToState_Province
{
	get { return this.GetPropertyValue<string>("billto_stateorprovince"); }
	set { this.SetPropertyValue("billto_stateorprovince", value, 50, "BillToState_Province"); }
}
///<summary>
///<para>Logical Name: billto_line1</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("billto_line1")]
public string BillToStreet1
{
	get { return this.GetPropertyValue<string>("billto_line1"); }
	set { this.SetPropertyValue("billto_line1", value, 250, "BillToStreet1"); }
}
///<summary>
///<para>Logical Name: billto_line2</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("billto_line2")]
public string BillToStreet2
{
	get { return this.GetPropertyValue<string>("billto_line2"); }
	set { this.SetPropertyValue("billto_line2", value, 250, "BillToStreet2"); }
}
///<summary>
///<para>Logical Name: billto_line3</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("billto_line3")]
public string BillToStreet3
{
	get { return this.GetPropertyValue<string>("billto_line3"); }
	set { this.SetPropertyValue("billto_line3", value, 250, "BillToStreet3"); }
}
///<summary>
///<para>Logical Name: billto_postalcode</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("billto_postalcode")]
public string BillToZIP_PostalCode
{
	get { return this.GetPropertyValue<string>("billto_postalcode"); }
	set { this.SetPropertyValue("billto_postalcode", value, 20, "BillToZIP_PostalCode"); }
}
///<summary>
///<para>Logical Name: closedon</para>
///</summary>
[AttributeLogicalNameAttribute("closedon")]
public DateTime? ClosedOn
{
	get { return this.GetPropertyValue<DateTime?>("closedon"); }
	set { this.SetPropertyValue<DateTime?>("closedon", value, "ClosedOn"); }
}
/// <summary>
///Logical Name: msdyn_competitive
/// </summary>
[AttributeLogicalNameAttribute("msdyn_competitive")]
public eCustomerBudget? Competitive
{
	get
	{
		if (Competitive_OptionSetValue != null) { return (eCustomerBudget)Competitive_OptionSetValue.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_competitive</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_competitive")]
public OptionSetValue Competitive_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_competitive"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Competitive_Text(IOrganizationService Service)
{
	return this.Competitive_OptionSetValue.GetOptionSetText(Service, this, "msdyn_competitive");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Competitive_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Competitive_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: contactid</para>
///</summary>
[AttributeLogicalNameAttribute("contactid")]
public EntityReference Contact
{
	get { return this.GetPropertyValue<EntityReference>("contactid"); }
}
///<summary>
///<para>Logical Name: msdyn_contractorganizationalunitid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_contractorganizationalunitid")]
public EntityReference ContractingUnit
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_contractorganizationalunitid"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_contractorganizationalunitid", value, "ContractingUnit"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyid</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyid")]
public EntityReference Currency
{
	get { return this.GetPropertyValue<EntityReference>("transactioncurrencyid"); }
	set { this.SetPropertyValue<EntityReference>("transactioncurrencyid", value, "Currency"); }
}
///<summary>
///<para>Logical Name: msdyn_customerbudgetrollup</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? CustomerBudget
{
	get
	{
		if (CustomerBudgetMoney != null) { return CustomerBudgetMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_customerbudgetrollup</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_customerbudgetrollup")]
public Money CustomerBudgetMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_customerbudgetrollup"); }
}
///<summary>
///<para>Logical Name: msdyn_customerbudgetrollup_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? CustomerBudget_Base
{
	get
	{
		if (CustomerBudget_BaseMoney != null) { return CustomerBudget_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_customerbudgetrollup_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_customerbudgetrollup_base")]
public Money CustomerBudget_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_customerbudgetrollup_base"); }
}
///<summary>
///<para>Logical Name: msdyn_customerbudgetrollup_date</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_customerbudgetrollup_date")]
public DateTime? CustomerBudget_LastUpdatedOn
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_customerbudgetrollup_date"); }
}
///<summary>
///<para>Logical Name: msdyn_customerbudgetrollup_state</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_customerbudgetrollup_state")]
public int? CustomerBudget_State
{
	get { return this.GetPropertyValue<int?>("msdyn_customerbudgetrollup_state"); }
}
///<summary>
///<para>Logical Name: description</para>
///<para>Max Length: 2000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("description")]
public string Description
{
	get { return this.GetPropertyValue<string>("description"); }
	set { this.SetPropertyValue("description", value, 2000, "Description"); }
}
///<summary>
///<para>Logical Name: expireson</para>
///</summary>
[AttributeLogicalNameAttribute("expireson")]
public DateTime? DueBy
{
	get { return this.GetPropertyValue<DateTime?>("expireson"); }
	set { this.SetPropertyValue<DateTime?>("expireson", value, "DueBy"); }
}
///<summary>
///<para>Logical Name: msdyn_quotelinestartdate</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_quotelinestartdate")]
public DateTime? EarliestQuoteLineStartDate
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_quotelinestartdate"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_quotelinestartdate", value, "EarliestQuoteLineStartDate"); }
}
///<summary>
///<para>Logical Name: effectivefrom</para>
///</summary>
[AttributeLogicalNameAttribute("effectivefrom")]
public DateTime? EffectiveFrom
{
	get { return this.GetPropertyValue<DateTime?>("effectivefrom"); }
	set { this.SetPropertyValue<DateTime?>("effectivefrom", value, "EffectiveFrom"); }
}
///<summary>
///<para>Logical Name: effectiveto</para>
///</summary>
[AttributeLogicalNameAttribute("effectiveto")]
public DateTime? EffectiveTo
{
	get { return this.GetPropertyValue<DateTime?>("effectiveto"); }
	set { this.SetPropertyValue<DateTime?>("effectiveto", value, "EffectiveTo"); }
}
/// <summary>
///Logical Name: msdyn_estimatedbudget
/// </summary>
[AttributeLogicalNameAttribute("msdyn_estimatedbudget")]
public eBudgetEstimate? EstimatedBudget
{
	get
	{
		if (EstimatedBudget_OptionSetValue != null) { return (eBudgetEstimate)EstimatedBudget_OptionSetValue.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimatedbudget</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatedbudget")]
public OptionSetValue EstimatedBudget_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_estimatedbudget"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string EstimatedBudget_Text(IOrganizationService Service)
{
	return this.EstimatedBudget_OptionSetValue.GetOptionSetText(Service, this, "msdyn_estimatedbudget");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string EstimatedBudget_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.EstimatedBudget_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_estimatedcompletionrollup</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatedcompletionrollup")]
public DateTime? EstimatedCompletion
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_estimatedcompletionrollup"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatedcompletionrollup_date</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatedcompletionrollup_date")]
public DateTime? EstimatedCompletion_LastUpdatedOn
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_estimatedcompletionrollup_date"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatedcompletionrollup_state</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatedcompletionrollup_state")]
public int? EstimatedCompletion_State
{
	get { return this.GetPropertyValue<int?>("msdyn_estimatedcompletionrollup_state"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatedcost</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? EstimatedCost
{
	get
	{
		if (EstimatedCostMoney != null) { return EstimatedCostMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.EstimatedCostMoney = new Money(value.Value); }
		else this.EstimatedCostMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimatedcost</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatedcost")]
public Money EstimatedCostMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimatedcost"); }
	set { this.SetPropertyValue("msdyn_estimatedcost", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "EstimatedCostMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatedcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? EstimatedCost_Base
{
	get
	{
		if (EstimatedCost_BaseMoney != null) { return EstimatedCost_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimatedcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatedcost_base")]
public Money EstimatedCost_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimatedcost_base"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatedquotemargin</para>
///<para>Minimum Value: -100000000000</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatedquotemargin")]
public decimal? EstimatedMargin
{
	get { return this.GetPropertyValue<decimal?>("msdyn_estimatedquotemargin"); }
}
/// <summary>
///Logical Name: msdyn_estimatedschedule
/// </summary>
[AttributeLogicalNameAttribute("msdyn_estimatedschedule")]
public eSchedule? EstimatedSchedule
{
	get
	{
		if (EstimatedSchedule_OptionSetValue != null) { return (eSchedule)EstimatedSchedule_OptionSetValue.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimatedschedule</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatedschedule")]
public OptionSetValue EstimatedSchedule_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_estimatedschedule"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string EstimatedSchedule_Text(IOrganizationService Service)
{
	return this.EstimatedSchedule_OptionSetValue.GetOptionSetText(Service, this, "msdyn_estimatedschedule");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string EstimatedSchedule_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.EstimatedSchedule_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: exchangerate</para>
///<para>Minimum Value: 0.0000000001</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 10</para>
///</summary>
[AttributeLogicalNameAttribute("exchangerate")]
public decimal? ExchangeRate
{
	get { return this.GetPropertyValue<decimal?>("exchangerate"); }
}
/// <summary>
///Logical Name: msdyn_feasible
/// </summary>
[AttributeLogicalNameAttribute("msdyn_feasible")]
public eFeasibility? Feasibility
{
	get
	{
		if (Feasibility_OptionSetValue != null) { return (eFeasibility)Feasibility_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Feasibility_OptionSetValue = new OptionSetValue((int)value); }
		else this.Feasibility_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_feasible</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_feasible")]
public OptionSetValue Feasibility_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_feasible"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_feasible", value, "Feasibility_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Feasibility_Text(IOrganizationService Service)
{
	return this.Feasibility_OptionSetValue.GetOptionSetText(Service, this, "msdyn_feasible");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Feasibility_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Feasibility_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: freightamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? FreightAmount
{
	get
	{
		if (FreightAmountMoney != null) { return FreightAmountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.FreightAmountMoney = new Money(value.Value); }
		else this.FreightAmountMoney = null;
	}
}
///<summary>
///<para>Logical Name: freightamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("freightamount")]
public Money FreightAmountMoney
{
	get { return this.GetPropertyValue<Money>("freightamount"); }
	set { this.SetPropertyValue("freightamount", (Money)value, (decimal)0, (decimal)1000000000000, "FreightAmountMoney"); }
}
///<summary>
///<para>Logical Name: freightamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? FreightAmount_Base
{
	get
	{
		if (FreightAmount_BaseMoney != null) { return FreightAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: freightamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("freightamount_base")]
public Money FreightAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("freightamount_base"); }
}
/// <summary>
///Logical Name: freighttermscode
/// </summary>
[AttributeLogicalNameAttribute("freighttermscode")]
public eFreightTerms? FreightTerms
{
	get
	{
		if (FreightTerms_OptionSetValue != null) { return (eFreightTerms)FreightTerms_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.FreightTerms_OptionSetValue = new OptionSetValue((int)value); }
		else this.FreightTerms_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: freighttermscode</para>
///</summary>
[AttributeLogicalNameAttribute("freighttermscode")]
public OptionSetValue FreightTerms_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("freighttermscode"); }
	set { this.SetPropertyValue<OptionSetValue>("freighttermscode", value, "FreightTerms_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string FreightTerms_Text(IOrganizationService Service)
{
	return this.FreightTerms_OptionSetValue.GetOptionSetText(Service, this, "freighttermscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string FreightTerms_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.FreightTerms_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_grossmargin</para>
///<para>Minimum Value: -100000000000</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_grossmargin")]
public decimal? GrossMargin
{
	get { return this.GetPropertyValue<decimal?>("msdyn_grossmargin"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? ImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "ImportSequenceNumber"); }
}
///<summary>
///<para>Logical Name: msdyn_invoicesetuptotals</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? InvoiceSetupTotals
{
	get
	{
		if (InvoiceSetupTotalsMoney != null) { return InvoiceSetupTotalsMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.InvoiceSetupTotalsMoney = new Money(value.Value); }
		else this.InvoiceSetupTotalsMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_invoicesetuptotals</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_invoicesetuptotals")]
public Money InvoiceSetupTotalsMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_invoicesetuptotals"); }
	set { this.SetPropertyValue("msdyn_invoicesetuptotals", (Money)value, (decimal)0, (decimal)922337203685477, "InvoiceSetupTotalsMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_invoicesetuptotals_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? InvoiceSetupTotals_Base
{
	get
	{
		if (InvoiceSetupTotals_BaseMoney != null) { return InvoiceSetupTotals_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_invoicesetuptotals_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_invoicesetuptotals_base")]
public Money InvoiceSetupTotals_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_invoicesetuptotals_base"); }
}
///<summary>
///<para>Logical Name: lastonholdtime</para>
///</summary>
[AttributeLogicalNameAttribute("lastonholdtime")]
public DateTime? LastOnHoldTime
{
	get { return this.GetPropertyValue<DateTime?>("lastonholdtime"); }
	set { this.SetPropertyValue<DateTime?>("lastonholdtime", value, "LastOnHoldTime"); }
}
///<summary>
///<para>Logical Name: slainvokedid</para>
///</summary>
[AttributeLogicalNameAttribute("slainvokedid")]
public EntityReference LastSLAApplied
{
	get { return this.GetPropertyValue<EntityReference>("slainvokedid"); }
}
///<summary>
///<para>Logical Name: msdyn_quotelineenddate</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_quotelineenddate")]
public DateTime? LatestQuoteLineEndDate
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_quotelineenddate"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_quotelineenddate", value, "LatestQuoteLineEndDate"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: name</para>
///<para>Max Length: 300 characters</para>
///</summary>
[AttributeLogicalNameAttribute("name")]
public string Name
{
	get { return this.GetPropertyValue<string>("name"); }
	set { this.SetPropertyValue("name", value, 300, "Name"); }
}
///<summary>
///<para>Logical Name: onholdtime</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("onholdtime")]
public int? OnHoldTime_Minutes
{
	get { return this.GetPropertyValue<int?>("onholdtime"); }
}
///<summary>
///<para>Logical Name: opportunityid</para>
///</summary>
[AttributeLogicalNameAttribute("opportunityid")]
public EntityReference Opportunity
{
	get { return this.GetPropertyValue<EntityReference>("opportunityid"); }
	set { this.SetPropertyValue<EntityReference>("opportunityid", value, "Opportunity"); }
}
/// <summary>
///Logical Name: msdyn_ordertype
/// </summary>
[AttributeLogicalNameAttribute("msdyn_ordertype")]
public eOrderType? OrderType
{
	get
	{
		if (OrderType_OptionSetValue != null) { return (eOrderType)OrderType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.OrderType_OptionSetValue = new OptionSetValue((int)value); }
		else this.OrderType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_ordertype</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_ordertype")]
public OptionSetValue OrderType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_ordertype"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_ordertype", value, "OrderType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string OrderType_Text(IOrganizationService Service)
{
	return this.OrderType_OptionSetValue.GetOptionSetText(Service, this, "msdyn_ordertype");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string OrderType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.OrderType_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: ownerid</para>
///</summary>
[AttributeLogicalNameAttribute("ownerid")]
public EntityReference Owner
{
	get { return this.GetPropertyValue<EntityReference>("ownerid"); }
	set { this.SetPropertyValue<EntityReference>("ownerid", value, "Owner"); }
}
///<summary>
///<para>Logical Name: owningbusinessunit</para>
///</summary>
[AttributeLogicalNameAttribute("owningbusinessunit")]
public EntityReference OwningBusinessUnit
{
	get { return this.GetPropertyValue<EntityReference>("owningbusinessunit"); }
}
///<summary>
///<para>Logical Name: owningteam</para>
///</summary>
[AttributeLogicalNameAttribute("owningteam")]
public EntityReference OwningTeam
{
	get { return this.GetPropertyValue<EntityReference>("owningteam"); }
}
///<summary>
///<para>Logical Name: owninguser</para>
///</summary>
[AttributeLogicalNameAttribute("owninguser")]
public EntityReference OwningUser
{
	get { return this.GetPropertyValue<EntityReference>("owninguser"); }
}
/// <summary>
///Logical Name: paymenttermscode
/// </summary>
[AttributeLogicalNameAttribute("paymenttermscode")]
public ePaymentTerms? PaymentTerms
{
	get
	{
		if (PaymentTerms_OptionSetValue != null) { return (ePaymentTerms)PaymentTerms_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.PaymentTerms_OptionSetValue = new OptionSetValue((int)value); }
		else this.PaymentTerms_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: paymenttermscode</para>
///</summary>
[AttributeLogicalNameAttribute("paymenttermscode")]
public OptionSetValue PaymentTerms_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("paymenttermscode"); }
	set { this.SetPropertyValue<OptionSetValue>("paymenttermscode", value, "PaymentTerms_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string PaymentTerms_Text(IOrganizationService Service)
{
	return this.PaymentTerms_OptionSetValue.GetOptionSetText(Service, this, "paymenttermscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string PaymentTerms_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.PaymentTerms_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: customerid</para>
///</summary>
[AttributeLogicalNameAttribute("customerid")]
public EntityReference PotentialCustomer
{
	get { return this.GetPropertyValue<EntityReference>("customerid"); }
	set { this.SetPropertyValue<EntityReference>("customerid", value, "PotentialCustomer"); }
}
///<summary>
///<para>Logical Name: msdyn_account</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_account")]
public EntityReference PotentialCustomer2
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_account"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_account", value, "PotentialCustomer2"); }
}
///<summary>
///<para>Logical Name: customeridtype</para>
///</summary>
[AttributeLogicalNameAttribute("customeridtype")]
public string PotentialCustomerType
{
	get { return this.GetPropertyValue<string>("customeridtype"); }
	set { this.SetPropertyValue<string>("customeridtype", value, "PotentialCustomerType"); }
}
///<summary>
///<para>Logical Name: pricelevelid</para>
///</summary>
[AttributeLogicalNameAttribute("pricelevelid")]
public EntityReference PriceList
{
	get { return this.GetPropertyValue<EntityReference>("pricelevelid"); }
	set { this.SetPropertyValue<EntityReference>("pricelevelid", value, "PriceList"); }
}
/// <summary>
///Logical Name: pricingerrorcode
/// </summary>
[AttributeLogicalNameAttribute("pricingerrorcode")]
public ePricingError? PricingError
{
	get
	{
		if (PricingError_OptionSetValue != null) { return (ePricingError)PricingError_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.PricingError_OptionSetValue = new OptionSetValue((int)value); }
		else this.PricingError_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: pricingerrorcode</para>
///</summary>
[AttributeLogicalNameAttribute("pricingerrorcode")]
public OptionSetValue PricingError_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("pricingerrorcode"); }
	set { this.SetPropertyValue<OptionSetValue>("pricingerrorcode", value, "PricingError_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string PricingError_Text(IOrganizationService Service)
{
	return this.PricingError_OptionSetValue.GetOptionSetText(Service, this, "pricingerrorcode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string PricingError_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.PricingError_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: processid</para>
///</summary>
[AttributeLogicalNameAttribute("processid")]
public Guid Process
{
	get { return this.GetPropertyValue<Guid>("processid"); }
	set { this.SetPropertyValue<Guid>("processid", value, "Process"); }
}
///<summary>
///<para>Logical Name: stageid</para>
///</summary>
[AttributeLogicalNameAttribute("stageid")]
public Guid ProcessStage
{
	get { return this.GetPropertyValue<Guid>("stageid"); }
	set { this.SetPropertyValue<Guid>("stageid", value, "ProcessStage"); }
}
/// <summary>
///Logical Name: msdyn_profitability
/// </summary>
[AttributeLogicalNameAttribute("msdyn_profitability")]
public eProfitable? Profitability
{
	get
	{
		if (Profitability_OptionSetValue != null) { return (eProfitable)Profitability_OptionSetValue.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_profitability</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_profitability")]
public OptionSetValue Profitability_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_profitability"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Profitability_Text(IOrganizationService Service)
{
	return this.Profitability_OptionSetValue.GetOptionSetText(Service, this, "msdyn_profitability");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Profitability_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Profitability_OptionSetValue.Value);
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: quoteid</para>
///</summary>
[AttributeLogicalNameAttribute("quoteid")]
public Guid QuoteId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: discountpercentage</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("discountpercentage")]
public decimal? QuoteDiscount
{
	get { return this.GetPropertyValue<decimal?>("discountpercentage"); }
	set { this.SetPropertyValue("discountpercentage", (decimal?)value, (decimal)0, (decimal)100, "QuoteDiscount"); }
}
///<summary>
///<para>Logical Name: discountamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? QuoteDiscountAmount
{
	get
	{
		if (QuoteDiscountAmountMoney != null) { return QuoteDiscountAmountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.QuoteDiscountAmountMoney = new Money(value.Value); }
		else this.QuoteDiscountAmountMoney = null;
	}
}
///<summary>
///<para>Logical Name: discountamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("discountamount")]
public Money QuoteDiscountAmountMoney
{
	get { return this.GetPropertyValue<Money>("discountamount"); }
	set { this.SetPropertyValue("discountamount", (Money)value, (decimal)0, (decimal)1000000000000, "QuoteDiscountAmountMoney"); }
}
///<summary>
///<para>Logical Name: discountamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? QuoteDiscountAmount_Base
{
	get
	{
		if (QuoteDiscountAmount_BaseMoney != null) { return QuoteDiscountAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: discountamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("discountamount_base")]
public Money QuoteDiscountAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("discountamount_base"); }
}
///<summary>
///<para>Logical Name: quotenumber</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("quotenumber")]
public string QuoteID
{
	get { return this.GetPropertyValue<string>("quotenumber"); }
	set { this.SetPropertyValue("quotenumber", value, 100, "QuoteID"); }
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? RecordCreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "RecordCreatedOn"); }
}
///<summary>
///<para>Logical Name: requestdeliveryby</para>
///</summary>
[AttributeLogicalNameAttribute("requestdeliveryby")]
public DateTime? RequestedDeliveryDate
{
	get { return this.GetPropertyValue<DateTime?>("requestdeliveryby"); }
	set { this.SetPropertyValue<DateTime?>("requestdeliveryby", value, "RequestedDeliveryDate"); }
}
///<summary>
///<para>Logical Name: revisionnumber</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("revisionnumber")]
public int? RevisionID
{
	get { return this.GetPropertyValue<int?>("revisionnumber"); }
}
///<summary>
///<para>Logical Name: willcall</para>
///<para>True = Will Call</para>
///<para>False = Address</para>
///</summary>
[AttributeLogicalNameAttribute("willcall")]
public bool? ShipTo
{
	get { return this.GetPropertyValue<bool?>("willcall"); }
	set { this.SetPropertyValue<bool?>("willcall", value, "ShipTo"); }
}
///<summary>
///<para>Logical Name: shipto_composite</para>
///<para>Max Length: 1000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_composite")]
public string ShipToAddress
{
	get { return this.GetPropertyValue<string>("shipto_composite"); }
}
///<summary>
///<para>Logical Name: shipto_addressid</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_addressid")]
public Guid ShipToAddressID
{
	get { return this.GetPropertyValue<Guid>("shipto_addressid"); }
	set { this.SetPropertyValue<Guid>("shipto_addressid", value, "ShipToAddressID"); }
}
///<summary>
///<para>Logical Name: shipto_city</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_city")]
public string ShipToCity
{
	get { return this.GetPropertyValue<string>("shipto_city"); }
	set { this.SetPropertyValue("shipto_city", value, 80, "ShipToCity"); }
}
///<summary>
///<para>Logical Name: shipto_contactname</para>
///<para>Max Length: 150 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_contactname")]
public string ShipToContactName
{
	get { return this.GetPropertyValue<string>("shipto_contactname"); }
	set { this.SetPropertyValue("shipto_contactname", value, 150, "ShipToContactName"); }
}
///<summary>
///<para>Logical Name: shipto_country</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_country")]
public string ShipToCountry_Region
{
	get { return this.GetPropertyValue<string>("shipto_country"); }
	set { this.SetPropertyValue("shipto_country", value, 80, "ShipToCountry_Region"); }
}
///<summary>
///<para>Logical Name: shipto_fax</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_fax")]
public string ShipToFax
{
	get { return this.GetPropertyValue<string>("shipto_fax"); }
	set { this.SetPropertyValue("shipto_fax", value, 50, "ShipToFax"); }
}
/// <summary>
///Logical Name: shipto_freighttermscode
/// </summary>
[AttributeLogicalNameAttribute("shipto_freighttermscode")]
public eShipToFreightTerms? ShipToFreightTerms
{
	get
	{
		if (ShipToFreightTerms_OptionSetValue != null) { return (eShipToFreightTerms)ShipToFreightTerms_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ShipToFreightTerms_OptionSetValue = new OptionSetValue((int)value); }
		else this.ShipToFreightTerms_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: shipto_freighttermscode</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_freighttermscode")]
public OptionSetValue ShipToFreightTerms_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("shipto_freighttermscode"); }
	set { this.SetPropertyValue<OptionSetValue>("shipto_freighttermscode", value, "ShipToFreightTerms_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ShipToFreightTerms_Text(IOrganizationService Service)
{
	return this.ShipToFreightTerms_OptionSetValue.GetOptionSetText(Service, this, "shipto_freighttermscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ShipToFreightTerms_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ShipToFreightTerms_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: shipto_name</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_name")]
public string ShipToName
{
	get { return this.GetPropertyValue<string>("shipto_name"); }
	set { this.SetPropertyValue("shipto_name", value, 200, "ShipToName"); }
}
///<summary>
///<para>Logical Name: shipto_telephone</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_telephone")]
public string ShipToPhone
{
	get { return this.GetPropertyValue<string>("shipto_telephone"); }
	set { this.SetPropertyValue("shipto_telephone", value, 50, "ShipToPhone"); }
}
///<summary>
///<para>Logical Name: shipto_stateorprovince</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_stateorprovince")]
public string ShipToState_Province
{
	get { return this.GetPropertyValue<string>("shipto_stateorprovince"); }
	set { this.SetPropertyValue("shipto_stateorprovince", value, 50, "ShipToState_Province"); }
}
///<summary>
///<para>Logical Name: shipto_line1</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_line1")]
public string ShipToStreet1
{
	get { return this.GetPropertyValue<string>("shipto_line1"); }
	set { this.SetPropertyValue("shipto_line1", value, 250, "ShipToStreet1"); }
}
///<summary>
///<para>Logical Name: shipto_line2</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_line2")]
public string ShipToStreet2
{
	get { return this.GetPropertyValue<string>("shipto_line2"); }
	set { this.SetPropertyValue("shipto_line2", value, 250, "ShipToStreet2"); }
}
///<summary>
///<para>Logical Name: shipto_line3</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_line3")]
public string ShipToStreet3
{
	get { return this.GetPropertyValue<string>("shipto_line3"); }
	set { this.SetPropertyValue("shipto_line3", value, 250, "ShipToStreet3"); }
}
///<summary>
///<para>Logical Name: shipto_postalcode</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_postalcode")]
public string ShipToZIP_PostalCode
{
	get { return this.GetPropertyValue<string>("shipto_postalcode"); }
	set { this.SetPropertyValue("shipto_postalcode", value, 20, "ShipToZIP_PostalCode"); }
}
/// <summary>
///Logical Name: shippingmethodcode
/// </summary>
[AttributeLogicalNameAttribute("shippingmethodcode")]
public eShippingMethod? ShippingMethod
{
	get
	{
		if (ShippingMethod_OptionSetValue != null) { return (eShippingMethod)ShippingMethod_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ShippingMethod_OptionSetValue = new OptionSetValue((int)value); }
		else this.ShippingMethod_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: shippingmethodcode</para>
///</summary>
[AttributeLogicalNameAttribute("shippingmethodcode")]
public OptionSetValue ShippingMethod_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("shippingmethodcode"); }
	set { this.SetPropertyValue<OptionSetValue>("shippingmethodcode", value, "ShippingMethod_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ShippingMethod_Text(IOrganizationService Service)
{
	return this.ShippingMethod_OptionSetValue.GetOptionSetText(Service, this, "shippingmethodcode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ShippingMethod_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ShippingMethod_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: slaid</para>
///</summary>
[AttributeLogicalNameAttribute("slaid")]
public EntityReference SLA
{
	get { return this.GetPropertyValue<EntityReference>("slaid"); }
	set { this.SetPropertyValue<EntityReference>("slaid", value, "SLA"); }
}
///<summary>
///<para>Logical Name: campaignid</para>
///</summary>
[AttributeLogicalNameAttribute("campaignid")]
public EntityReference SourceCampaign
{
	get { return this.GetPropertyValue<EntityReference>("campaignid"); }
	set { this.SetPropertyValue<EntityReference>("campaignid", value, "SourceCampaign"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eStatus? Status
{
	get
	{
		if (Status_OptionSetValue != null) { return (eStatus)Status_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Status_OptionSetValue = new OptionSetValue((int)value); }
		else this.Status_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue Status_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
	set { this.SetPropertyValue<OptionSetValue>("statecode", value, "Status_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Status_Text(IOrganizationService Service)
{
	return this.Status_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Status_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Status_OptionSetValue.Value);
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? StatusReason
{
	get
	{
		if (StatusReason_OptionSetValue != null) { return (eStatusReason)StatusReason_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StatusReason_OptionSetValue = new OptionSetValue((int)value); }
		else this.StatusReason_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue StatusReason_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "StatusReason_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string StatusReason_Text(IOrganizationService Service)
{
	return this.StatusReason_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string StatusReason_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.StatusReason_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: timezoneruleversionnumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("timezoneruleversionnumber")]
public int? TimeZoneRuleVersionNumber
{
	get { return this.GetPropertyValue<int?>("timezoneruleversionnumber"); }
	set { this.SetPropertyValue("timezoneruleversionnumber", (int?)value, (int)-1, (int)2147483647, "TimeZoneRuleVersionNumber"); }
}
///<summary>
///<para>Logical Name: totalamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalAmount
{
	get
	{
		if (TotalAmountMoney != null) { return TotalAmountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.TotalAmountMoney = new Money(value.Value); }
		else this.TotalAmountMoney = null;
	}
}
///<summary>
///<para>Logical Name: totalamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("totalamount")]
public Money TotalAmountMoney
{
	get { return this.GetPropertyValue<Money>("totalamount"); }
	set { this.SetPropertyValue("totalamount", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "TotalAmountMoney"); }
}
///<summary>
///<para>Logical Name: totalamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? TotalAmount_Base
{
	get
	{
		if (TotalAmount_BaseMoney != null) { return TotalAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: totalamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("totalamount_base")]
public Money TotalAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("totalamount_base"); }
}
///<summary>
///<para>Logical Name: msdyn_totalchargeablecostrollup</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalChargeableCost
{
	get
	{
		if (TotalChargeableCostMoney != null) { return TotalChargeableCostMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_totalchargeablecostrollup</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totalchargeablecostrollup")]
public Money TotalChargeableCostMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_totalchargeablecostrollup"); }
}
///<summary>
///<para>Logical Name: msdyn_totalchargeablecostrollup_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalChargeableCost_Base
{
	get
	{
		if (TotalChargeableCost_BaseMoney != null) { return TotalChargeableCost_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_totalchargeablecostrollup_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totalchargeablecostrollup_base")]
public Money TotalChargeableCost_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_totalchargeablecostrollup_base"); }
}
///<summary>
///<para>Logical Name: msdyn_totalchargeablecostrollup_date</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totalchargeablecostrollup_date")]
public DateTime? TotalChargeableCost_LastUpdatedOn
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_totalchargeablecostrollup_date"); }
}
///<summary>
///<para>Logical Name: msdyn_totalchargeablecostrollup_state</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totalchargeablecostrollup_state")]
public int? TotalChargeableCost_State
{
	get { return this.GetPropertyValue<int?>("msdyn_totalchargeablecostrollup_state"); }
}
///<summary>
///<para>Logical Name: totallineitemamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalDetailAmount
{
	get
	{
		if (TotalDetailAmountMoney != null) { return TotalDetailAmountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.TotalDetailAmountMoney = new Money(value.Value); }
		else this.TotalDetailAmountMoney = null;
	}
}
///<summary>
///<para>Logical Name: totallineitemamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("totallineitemamount")]
public Money TotalDetailAmountMoney
{
	get { return this.GetPropertyValue<Money>("totallineitemamount"); }
	set { this.SetPropertyValue("totallineitemamount", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "TotalDetailAmountMoney"); }
}
///<summary>
///<para>Logical Name: totallineitemamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? TotalDetailAmount_Base
{
	get
	{
		if (TotalDetailAmount_BaseMoney != null) { return TotalDetailAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: totallineitemamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("totallineitemamount_base")]
public Money TotalDetailAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("totallineitemamount_base"); }
}
///<summary>
///<para>Logical Name: totaldiscountamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalDiscountAmount
{
	get
	{
		if (TotalDiscountAmountMoney != null) { return TotalDiscountAmountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.TotalDiscountAmountMoney = new Money(value.Value); }
		else this.TotalDiscountAmountMoney = null;
	}
}
///<summary>
///<para>Logical Name: totaldiscountamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("totaldiscountamount")]
public Money TotalDiscountAmountMoney
{
	get { return this.GetPropertyValue<Money>("totaldiscountamount"); }
	set { this.SetPropertyValue("totaldiscountamount", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "TotalDiscountAmountMoney"); }
}
///<summary>
///<para>Logical Name: totaldiscountamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? TotalDiscountAmount_Base
{
	get
	{
		if (TotalDiscountAmount_BaseMoney != null) { return TotalDiscountAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: totaldiscountamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("totaldiscountamount_base")]
public Money TotalDiscountAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("totaldiscountamount_base"); }
}
///<summary>
///<para>Logical Name: totallineitemdiscountamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalLineItemDiscountAmount
{
	get
	{
		if (TotalLineItemDiscountAmountMoney != null) { return TotalLineItemDiscountAmountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.TotalLineItemDiscountAmountMoney = new Money(value.Value); }
		else this.TotalLineItemDiscountAmountMoney = null;
	}
}
///<summary>
///<para>Logical Name: totallineitemdiscountamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("totallineitemdiscountamount")]
public Money TotalLineItemDiscountAmountMoney
{
	get { return this.GetPropertyValue<Money>("totallineitemdiscountamount"); }
	set { this.SetPropertyValue("totallineitemdiscountamount", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "TotalLineItemDiscountAmountMoney"); }
}
///<summary>
///<para>Logical Name: totallineitemdiscountamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? TotalLineItemDiscountAmount_Base
{
	get
	{
		if (TotalLineItemDiscountAmount_BaseMoney != null) { return TotalLineItemDiscountAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: totallineitemdiscountamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("totallineitemdiscountamount_base")]
public Money TotalLineItemDiscountAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("totallineitemdiscountamount_base"); }
}
///<summary>
///<para>Logical Name: msdyn_totalnonchargeablecostrollup</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalNon_chargeableCost
{
	get
	{
		if (TotalNon_chargeableCostMoney != null) { return TotalNon_chargeableCostMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_totalnonchargeablecostrollup</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totalnonchargeablecostrollup")]
public Money TotalNon_chargeableCostMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_totalnonchargeablecostrollup"); }
}
///<summary>
///<para>Logical Name: msdyn_totalnonchargeablecostrollup_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalNon_chargeableCost_Base
{
	get
	{
		if (TotalNon_chargeableCost_BaseMoney != null) { return TotalNon_chargeableCost_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_totalnonchargeablecostrollup_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totalnonchargeablecostrollup_base")]
public Money TotalNon_chargeableCost_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_totalnonchargeablecostrollup_base"); }
}
///<summary>
///<para>Logical Name: msdyn_totalnonchargeablecostrollup_date</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totalnonchargeablecostrollup_date")]
public DateTime? TotalNon_chargeableCost_LastUpdatedOn
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_totalnonchargeablecostrollup_date"); }
}
///<summary>
///<para>Logical Name: msdyn_totalnonchargeablecostrollup_state</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totalnonchargeablecostrollup_state")]
public int? TotalNon_chargeableCost_State
{
	get { return this.GetPropertyValue<int?>("msdyn_totalnonchargeablecostrollup_state"); }
}
///<summary>
///<para>Logical Name: totalamountlessfreight</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalPre_FreightAmount
{
	get
	{
		if (TotalPre_FreightAmountMoney != null) { return TotalPre_FreightAmountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.TotalPre_FreightAmountMoney = new Money(value.Value); }
		else this.TotalPre_FreightAmountMoney = null;
	}
}
///<summary>
///<para>Logical Name: totalamountlessfreight</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("totalamountlessfreight")]
public Money TotalPre_FreightAmountMoney
{
	get { return this.GetPropertyValue<Money>("totalamountlessfreight"); }
	set { this.SetPropertyValue("totalamountlessfreight", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "TotalPre_FreightAmountMoney"); }
}
///<summary>
///<para>Logical Name: totalamountlessfreight_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? TotalPre_FreightAmount_Base
{
	get
	{
		if (TotalPre_FreightAmount_BaseMoney != null) { return TotalPre_FreightAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: totalamountlessfreight_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("totalamountlessfreight_base")]
public Money TotalPre_FreightAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("totalamountlessfreight_base"); }
}
///<summary>
///<para>Logical Name: totaltax</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalTax
{
	get
	{
		if (TotalTaxMoney != null) { return TotalTaxMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.TotalTaxMoney = new Money(value.Value); }
		else this.TotalTaxMoney = null;
	}
}
///<summary>
///<para>Logical Name: totaltax</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("totaltax")]
public Money TotalTaxMoney
{
	get { return this.GetPropertyValue<Money>("totaltax"); }
	set { this.SetPropertyValue("totaltax", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "TotalTaxMoney"); }
}
///<summary>
///<para>Logical Name: totaltax_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? TotalTax_Base
{
	get
	{
		if (TotalTax_BaseMoney != null) { return TotalTax_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: totaltax_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("totaltax_base")]
public Money TotalTax_BaseMoney
{
	get { return this.GetPropertyValue<Money>("totaltax_base"); }
}
///<summary>
///<para>Logical Name: msdyn_totalamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalAmount2
{
	get
	{
		if (TotalAmount2Money != null) { return TotalAmount2Money.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_totalamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totalamount")]
public Money TotalAmount2Money
{
	get { return this.GetPropertyValue<Money>("msdyn_totalamount"); }
}
///<summary>
///<para>Logical Name: msdyn_totalamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalAmount_Base2
{
	get
	{
		if (TotalAmount_Base2Money != null) { return TotalAmount_Base2Money.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_totalamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totalamount_base")]
public Money TotalAmount_Base2Money
{
	get { return this.GetPropertyValue<Money>("msdyn_totalamount_base"); }
}
///<summary>
///<para>Logical Name: traversedpath</para>
///<para>Max Length: 1250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("traversedpath")]
public string TraversedPath
{
	get { return this.GetPropertyValue<string>("traversedpath"); }
	set { this.SetPropertyValue("traversedpath", value, 1250, "TraversedPath"); }
}
///<summary>
///<para>Logical Name: uniquedscid</para>
///</summary>
[AttributeLogicalNameAttribute("uniquedscid")]
public Guid UniqueDscID
{
	get { return this.GetPropertyValue<Guid>("uniquedscid"); }
}
///<summary>
///<para>Logical Name: utcconversiontimezonecode</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utcconversiontimezonecode")]
public int? UTCConversionTimeZoneCode
{
	get { return this.GetPropertyValue<int?>("utcconversiontimezonecode"); }
	set { this.SetPropertyValue("utcconversiontimezonecode", (int?)value, (int)-1, (int)2147483647, "UTCConversionTimeZoneCode"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}


        /// <summary>
/// <para><b>ActivityParty (Party)</b></para>
/// <para>Schema Name: quote_activity_parties</para>
/// </summary>
public List<ActivityParty> GetActivityParties_Party (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActivityParty>(Service, this.Id, "activityparty", "partyid", Columns); }
/// <summary>
/// <para><b>ActivityParty (Party)</b></para>
/// <para>Schema Name: quote_activity_parties</para>
/// </summary>
public List<ActivityParty> GetActivityParties_Party (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActivityParty>(Service, this.Id, "activityparty", "partyid", Columns); }
/// <summary>
/// <para><b>Activity (Regarding)</b></para>
/// <para>Schema Name: Quote_ActivityPointers</para>
/// </summary>
public List<Activity> GetActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Activity>(Service, this.Id, "activitypointer", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Activity (Regarding)</b></para>
/// <para>Schema Name: Quote_ActivityPointers</para>
/// </summary>
public List<Activity> GetActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Activity>(Service, this.Id, "activitypointer", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: Quote_Annotation</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: Quote_Annotation</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Appointment (Regarding)</b></para>
/// <para>Schema Name: Quote_Appointments</para>
/// </summary>
public List<Appointment> GetAppointments_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Appointment>(Service, this.Id, "appointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Appointment (Regarding)</b></para>
/// <para>Schema Name: Quote_Appointments</para>
/// </summary>
public List<Appointment> GetAppointments_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Appointment>(Service, this.Id, "appointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: Quote_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: Quote_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: Quote_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: Quote_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: quote_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: quote_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: quote_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: quote_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: Quote_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: Quote_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: Quote_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: Quote_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>Email (Regarding)</b></para>
/// <para>Schema Name: Quote_Emails</para>
/// </summary>
public List<Email> GetEmailMessages_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Email (Regarding)</b></para>
/// <para>Schema Name: Quote_Emails</para>
/// </summary>
public List<Email> GetEmailMessages_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Fax (Regarding)</b></para>
/// <para>Schema Name: Quote_Faxes</para>
/// </summary>
public List<Fax> GetFaxes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fax>(Service, this.Id, "fax", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Fax (Regarding)</b></para>
/// <para>Schema Name: Quote_Faxes</para>
/// </summary>
public List<Fax> GetFaxes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fax>(Service, this.Id, "fax", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Letter (Regarding)</b></para>
/// <para>Schema Name: Quote_Letters</para>
/// </summary>
public List<Letter> GetLetters_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Letter>(Service, this.Id, "letter", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Letter (Regarding)</b></para>
/// <para>Schema Name: Quote_Letters</para>
/// </summary>
public List<Letter> GetLetters_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Letter>(Service, this.Id, "letter", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: Quote_MailboxTrackingFolder</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: Quote_MailboxTrackingFolder</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Approval (Regarding)</b></para>
/// <para>Schema Name: quote_msdyn_approvals</para>
/// </summary>
public List<Approval> GetApprovals_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Approval>(Service, this.Id, "msdyn_approval", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Approval (Regarding)</b></para>
/// <para>Schema Name: quote_msdyn_approvals</para>
/// </summary>
public List<Approval> GetApprovals_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Approval>(Service, this.Id, "msdyn_approval", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BookingAlert (Regarding)</b></para>
/// <para>Schema Name: quote_msdyn_bookingalerts</para>
/// </summary>
public List<BookingAlert> GetBookingAlerts_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlert>(Service, this.Id, "msdyn_bookingalert", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BookingAlert (Regarding)</b></para>
/// <para>Schema Name: quote_msdyn_bookingalerts</para>
/// </summary>
public List<BookingAlert> GetBookingAlerts_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlert>(Service, this.Id, "msdyn_bookingalert", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>QuoteBookingIncident (Quote)</b></para>
/// <para>Schema Name: msdyn_quote_msdyn_quotebookingincident_Quote</para>
/// </summary>
public List<QuoteBookingIncident> GetQuoteBookingIncidents_Quote (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingIncident>(Service, this.Id, "msdyn_quotebookingincident", "msdyn_quote", Columns); }
/// <summary>
/// <para><b>QuoteBookingIncident (Quote)</b></para>
/// <para>Schema Name: msdyn_quote_msdyn_quotebookingincident_Quote</para>
/// </summary>
public List<QuoteBookingIncident> GetQuoteBookingIncidents_Quote (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingIncident>(Service, this.Id, "msdyn_quotebookingincident", "msdyn_quote", Columns); }
/// <summary>
/// <para><b>QuoteBookingProduct (Quote)</b></para>
/// <para>Schema Name: msdyn_quote_msdyn_quotebookingproduct_Quote</para>
/// </summary>
public List<QuoteBookingProduct> GetQuoteBookingProducts_Quote (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingProduct>(Service, this.Id, "msdyn_quotebookingproduct", "msdyn_quote", Columns); }
/// <summary>
/// <para><b>QuoteBookingProduct (Quote)</b></para>
/// <para>Schema Name: msdyn_quote_msdyn_quotebookingproduct_Quote</para>
/// </summary>
public List<QuoteBookingProduct> GetQuoteBookingProducts_Quote (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingProduct>(Service, this.Id, "msdyn_quotebookingproduct", "msdyn_quote", Columns); }
/// <summary>
/// <para><b>QuoteBookingService (Quote)</b></para>
/// <para>Schema Name: msdyn_quote_msdyn_quotebookingservice_Quote</para>
/// </summary>
public List<QuoteBookingService> GetQuoteBookingServices_Quote (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingService>(Service, this.Id, "msdyn_quotebookingservice", "msdyn_quote", Columns); }
/// <summary>
/// <para><b>QuoteBookingService (Quote)</b></para>
/// <para>Schema Name: msdyn_quote_msdyn_quotebookingservice_Quote</para>
/// </summary>
public List<QuoteBookingService> GetQuoteBookingServices_Quote (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingService>(Service, this.Id, "msdyn_quotebookingservice", "msdyn_quote", Columns); }
/// <summary>
/// <para><b>QuoteBookingServiceTask (Quote)</b></para>
/// <para>Schema Name: msdyn_quote_msdyn_quotebookingservicetask_Quote</para>
/// </summary>
public List<QuoteBookingServiceTask> GetQuoteBookingServiceTasks_Quote (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingServiceTask>(Service, this.Id, "msdyn_quotebookingservicetask", "msdyn_quote", Columns); }
/// <summary>
/// <para><b>QuoteBookingServiceTask (Quote)</b></para>
/// <para>Schema Name: msdyn_quote_msdyn_quotebookingservicetask_Quote</para>
/// </summary>
public List<QuoteBookingServiceTask> GetQuoteBookingServiceTasks_Quote (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingServiceTask>(Service, this.Id, "msdyn_quotebookingservicetask", "msdyn_quote", Columns); }
/// <summary>
/// <para><b>QuoteBookingSetup (Quote)</b></para>
/// <para>Schema Name: msdyn_quote_msdyn_quotebookingsetup_Quote</para>
/// </summary>
public List<QuoteBookingSetup> GetQuoteBookingSetups_Quote (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingSetup>(Service, this.Id, "msdyn_quotebookingsetup", "msdyn_quote", Columns); }
/// <summary>
/// <para><b>QuoteBookingSetup (Quote)</b></para>
/// <para>Schema Name: msdyn_quote_msdyn_quotebookingsetup_Quote</para>
/// </summary>
public List<QuoteBookingSetup> GetQuoteBookingSetups_Quote (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingSetup>(Service, this.Id, "msdyn_quotebookingsetup", "msdyn_quote", Columns); }
/// <summary>
/// <para><b>QuoteInvoicingSetup (Quote)</b></para>
/// <para>Schema Name: msdyn_quote_msdyn_quoteinvoicingsetup_Quote</para>
/// </summary>
public List<QuoteInvoicingSetup> GetQuoteInvoicingSetups_Quote (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteInvoicingSetup>(Service, this.Id, "msdyn_quoteinvoicingsetup", "msdyn_quote", Columns); }
/// <summary>
/// <para><b>QuoteInvoicingSetup (Quote)</b></para>
/// <para>Schema Name: msdyn_quote_msdyn_quoteinvoicingsetup_Quote</para>
/// </summary>
public List<QuoteInvoicingSetup> GetQuoteInvoicingSetups_Quote (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteInvoicingSetup>(Service, this.Id, "msdyn_quoteinvoicingsetup", "msdyn_quote", Columns); }
/// <summary>
/// <para><b>QuoteLineAnalyticsBreakdown (Quote)</b></para>
/// <para>Schema Name: msdyn_quote_msdyn_quotelineanalyticsbreakdown_Quote</para>
/// </summary>
public List<QuoteLineAnalyticsBreakdown> GetQuoteLineAnalyticsBreakdown_Quote (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineAnalyticsBreakdown>(Service, this.Id, "msdyn_quotelineanalyticsbreakdown", "msdyn_quote", Columns); }
/// <summary>
/// <para><b>QuoteLineAnalyticsBreakdown (Quote)</b></para>
/// <para>Schema Name: msdyn_quote_msdyn_quotelineanalyticsbreakdown_Quote</para>
/// </summary>
public List<QuoteLineAnalyticsBreakdown> GetQuoteLineAnalyticsBreakdown_Quote (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineAnalyticsBreakdown>(Service, this.Id, "msdyn_quotelineanalyticsbreakdown", "msdyn_quote", Columns); }
/// <summary>
/// <para><b>QuoteLineDetail (Quote)</b></para>
/// <para>Schema Name: msdyn_quote_msdyn_quotelinetransaction</para>
/// </summary>
public List<QuoteLineDetail> GetQuoteLineDetail_Quote (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineDetail>(Service, this.Id, "msdyn_quotelinetransaction", "msdyn_quoteid", Columns); }
/// <summary>
/// <para><b>QuoteLineDetail (Quote)</b></para>
/// <para>Schema Name: msdyn_quote_msdyn_quotelinetransaction</para>
/// </summary>
public List<QuoteLineDetail> GetQuoteLineDetail_Quote (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineDetail>(Service, this.Id, "msdyn_quotelinetransaction", "msdyn_quoteid", Columns); }
/// <summary>
/// <para><b>QuoteProjectPriceList (Quote)</b></para>
/// <para>Schema Name: msdyn_quote_msdyn_quotepricelist_Quote</para>
/// </summary>
public List<QuoteProjectPriceList> GetProjectPriceLists_Quote (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteProjectPriceList>(Service, this.Id, "msdyn_quotepricelist", "msdyn_quote", Columns); }
/// <summary>
/// <para><b>QuoteProjectPriceList (Quote)</b></para>
/// <para>Schema Name: msdyn_quote_msdyn_quotepricelist_Quote</para>
/// </summary>
public List<QuoteProjectPriceList> GetProjectPriceLists_Quote (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteProjectPriceList>(Service, this.Id, "msdyn_quotepricelist", "msdyn_quote", Columns); }
/// <summary>
/// <para>quote</para>
/// <para><b>OpportunitySalesProcess (quote)</b></para>
/// <para>Schema Name: bpf_quote_OpportunitySalesProcess</para>
/// </summary>
public List<OpportunitySalesProcess> Getquote_quote (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunitySalesProcess>(Service, this.Id, "opportunitysalesprocess", "bpf_quoteid", Columns); }
/// <summary>
/// <para>quote</para>
/// <para><b>OpportunitySalesProcess (quote)</b></para>
/// <para>Schema Name: bpf_quote_OpportunitySalesProcess</para>
/// </summary>
public List<OpportunitySalesProcess> Getquote_quote (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunitySalesProcess>(Service, this.Id, "opportunitysalesprocess", "bpf_quoteid", Columns); }
/// <summary>
/// <para><b>OpportunitySalesProcess (Related Quote)</b></para>
/// <para>Schema Name: lk_opportunitysalesprocess_quoteid</para>
/// </summary>
public List<OpportunitySalesProcess> GetOpportunitySalesProcess_RelatedQuote (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunitySalesProcess>(Service, this.Id, "opportunitysalesprocess", "quoteid", Columns); }
/// <summary>
/// <para><b>OpportunitySalesProcess (Related Quote)</b></para>
/// <para>Schema Name: lk_opportunitysalesprocess_quoteid</para>
/// </summary>
public List<OpportunitySalesProcess> GetOpportunitySalesProcess_RelatedQuote (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunitySalesProcess>(Service, this.Id, "opportunitysalesprocess", "quoteid", Columns); }
/// <summary>
/// <para><b>PhoneCall (Regarding)</b></para>
/// <para>Schema Name: Quote_Phonecalls</para>
/// </summary>
public List<PhoneCall> GetPhoneCalls_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneCall>(Service, this.Id, "phonecall", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PhoneCall (Regarding)</b></para>
/// <para>Schema Name: Quote_Phonecalls</para>
/// </summary>
public List<PhoneCall> GetPhoneCalls_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneCall>(Service, this.Id, "phonecall", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: quote_principalobjectattributeaccess</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: quote_principalobjectattributeaccess</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: Quote_ProcessSessions</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: Quote_ProcessSessions</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>QuoteClose (Quote)</b></para>
/// <para>Schema Name: Quote_QuoteClose</para>
/// </summary>
public List<QuoteClose> GetQuoteCloseActivities_Quote (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteClose>(Service, this.Id, "quoteclose", "quoteid", Columns); }
/// <summary>
/// <para><b>QuoteClose (Quote)</b></para>
/// <para>Schema Name: Quote_QuoteClose</para>
/// </summary>
public List<QuoteClose> GetQuoteCloseActivities_Quote (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteClose>(Service, this.Id, "quoteclose", "quoteid", Columns); }
/// <summary>
/// <para><b>QuoteLine (Quote)</b></para>
/// <para>Schema Name: quote_details</para>
/// </summary>
public List<QuoteLine> GetQuoteLines_Quote (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLine>(Service, this.Id, "quotedetail", "quoteid", Columns); }
/// <summary>
/// <para><b>QuoteLine (Quote)</b></para>
/// <para>Schema Name: quote_details</para>
/// </summary>
public List<QuoteLine> GetQuoteLines_Quote (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLine>(Service, this.Id, "quotedetail", "quoteid", Columns); }
/// <summary>
/// <para><b>RecurringAppointment (Regarding)</b></para>
/// <para>Schema Name: Quote_RecurringAppointmentMasters</para>
/// </summary>
public List<RecurringAppointment> GetRecurringAppointments_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecurringAppointment>(Service, this.Id, "recurringappointmentmaster", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>RecurringAppointment (Regarding)</b></para>
/// <para>Schema Name: Quote_RecurringAppointmentMasters</para>
/// </summary>
public List<RecurringAppointment> GetRecurringAppointments_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecurringAppointment>(Service, this.Id, "recurringappointmentmaster", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Order (Quote)</b></para>
/// <para>Schema Name: quote_orders</para>
/// </summary>
public List<Order> GetOrders_Quote (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Order>(Service, this.Id, "salesorder", "quoteid", Columns); }
/// <summary>
/// <para><b>Order (Quote)</b></para>
/// <para>Schema Name: quote_orders</para>
/// </summary>
public List<Order> GetOrders_Quote (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Order>(Service, this.Id, "salesorder", "quoteid", Columns); }
/// <summary>
/// <para><b>ServiceActivity (Regarding)</b></para>
/// <para>Schema Name: Quote_ServiceAppointments</para>
/// </summary>
public List<ServiceActivity> GetServiceActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceActivity>(Service, this.Id, "serviceappointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ServiceActivity (Regarding)</b></para>
/// <para>Schema Name: Quote_ServiceAppointments</para>
/// </summary>
public List<ServiceActivity> GetServiceActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceActivity>(Service, this.Id, "serviceappointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SharepointDocument (Regarding)</b></para>
/// <para>Schema Name: Quote_SharepointDocument</para>
/// </summary>
public List<SharepointDocument> GetDocuments_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SharepointDocument>(Service, this.Id, "sharepointdocument", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SharepointDocument (Regarding)</b></para>
/// <para>Schema Name: Quote_SharepointDocument</para>
/// </summary>
public List<SharepointDocument> GetDocuments_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SharepointDocument>(Service, this.Id, "sharepointdocument", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>DocumentLocation (Regarding)</b></para>
/// <para>Schema Name: Quote_SharepointDocumentLocation</para>
/// </summary>
public List<DocumentLocation> GetDocumentLocations_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DocumentLocation>(Service, this.Id, "sharepointdocumentlocation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>DocumentLocation (Regarding)</b></para>
/// <para>Schema Name: Quote_SharepointDocumentLocation</para>
/// </summary>
public List<DocumentLocation> GetDocumentLocations_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DocumentLocation>(Service, this.Id, "sharepointdocumentlocation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SLAKPIInstance (Regarding)</b></para>
/// <para>Schema Name: slakpiinstance_quote</para>
/// </summary>
public List<SLAKPIInstance> GetSLAKPIInstances_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SLAKPIInstance>(Service, this.Id, "slakpiinstance", "regarding", Columns); }
/// <summary>
/// <para><b>SLAKPIInstance (Regarding)</b></para>
/// <para>Schema Name: slakpiinstance_quote</para>
/// </summary>
public List<SLAKPIInstance> GetSLAKPIInstances_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SLAKPIInstance>(Service, this.Id, "slakpiinstance", "regarding", Columns); }
/// <summary>
/// <para><b>SocialActivity (Regarding)</b></para>
/// <para>Schema Name: Quote_SocialActivities</para>
/// </summary>
public List<SocialActivity> GetSocialActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialActivity>(Service, this.Id, "socialactivity", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SocialActivity (Regarding)</b></para>
/// <para>Schema Name: Quote_SocialActivities</para>
/// </summary>
public List<SocialActivity> GetSocialActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialActivity>(Service, this.Id, "socialactivity", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: Quote_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: Quote_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Task (Regarding)</b></para>
/// <para>Schema Name: Quote_Tasks</para>
/// </summary>
public List<Task> GetTasks_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Task>(Service, this.Id, "task", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Task (Regarding)</b></para>
/// <para>Schema Name: Quote_Tasks</para>
/// </summary>
public List<Task> GetTasks_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Task>(Service, this.Id, "task", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_quote</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_quote</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        /// <summary>
/// <para>Related Entity: <b>Contact</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: contactquotes_association</para>
/// </summary>
public List<Contact> GetContacts (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<Contact>(Service, this, "quote", "quoteid", "contact", "contactid", "contactquotes", "quoteid", "contactid", Columns); }
public List<Contact> GetContacts (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<Contact>(Service, this, "quote", "quoteid", "contact", "contactid", "contactquotes", "quoteid", "contactid", Columns); }
public void RelateContacts (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "contactquotes_association", Items); }
public void RelateContacts (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "contactquotes_association", Items); }
public void UnRelateContacts (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "contactquotes_association", Items); }
public void UnRelateContacts (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "contactquotes_association", Items); }


        

        public enum eCustomerBudget
{
	///<summary><para>Customer Budget Not Available</para>
	///<para>Value = 192350000</para></summary>
	[Description("Customer Budget Not Available")]
	CustomerBudgetNotAvailable = 192350000, 
	///<summary><para>Within Customer Expectations</para>
	///<para>Value = 192350001</para></summary>
	[Description("Within Customer Expectations")]
	WithinCustomerExpectations = 192350001, 
	///<summary><para>Outside Customer Expectations</para>
	///<para>Value = 192350002</para></summary>
	[Description("Outside Customer Expectations")]
	OutsideCustomerExpectations = 192350002
}
public enum eBudgetEstimate
{
	///<summary><para>Budget Estimate Not Available</para>
	///<para>Value = 192350000</para></summary>
	[Description("Budget Estimate Not Available")]
	BudgetEstimateNotAvailable = 192350000, 
	///<summary><para>Within Customer Budget</para>
	///<para>Value = 192350001</para></summary>
	[Description("Within Customer Budget")]
	WithinCustomerBudget = 192350001, 
	///<summary><para>Exceeds Customer Budget</para>
	///<para>Value = 192350002</para></summary>
	[Description("Exceeds Customer Budget")]
	ExceedsCustomerBudget = 192350002
}
public enum eSchedule
{
	///<summary><para>Schedule Not Available</para>
	///<para>Value = 192350000</para></summary>
	[Description("Schedule Not Available")]
	ScheduleNotAvailable = 192350000, 
	///<summary><para>Estimated To Finish Early</para>
	///<para>Value = 192350001</para></summary>
	[Description("Estimated To Finish Early")]
	EstimatedToFinishEarly = 192350001, 
	///<summary><para>Estimated To Finish Late</para>
	///<para>Value = 192350002</para></summary>
	[Description("Estimated To Finish Late")]
	EstimatedToFinishLate = 192350002, 
	///<summary><para>Estimated To Finish On Schedule</para>
	///<para>Value = 192350003</para></summary>
	[Description("Estimated To Finish On Schedule")]
	EstimatedToFinishOnSchedule = 192350003
}
public enum eFeasibility
{
	///<summary><para>Feasibility Not Available</para>
	///<para>Value = 192350000</para></summary>
	[Description("Feasibility Not Available")]
	FeasibilityNotAvailable = 192350000, 
	///<summary><para>Feasible</para>
	///<para>Value = 192350001</para></summary>
	[Description("Feasible")]
	Feasible = 192350001, 
	///<summary><para>Not Feasible</para>
	///<para>Value = 192350002</para></summary>
	[Description("Not Feasible")]
	NotFeasible = 192350002
}
public enum eFreightTerms
{
	///<summary><para>FOB</para>
	///<para>Value = 1</para></summary>
	[Description("FOB")]
	FOB = 1, 
	///<summary><para>No Charge</para>
	///<para>Value = 2</para></summary>
	[Description("No Charge")]
	NoCharge = 2
}
public enum eOrderType
{
	///<summary><para>Work based</para>
	///<para>Value = 192350001</para></summary>
	[Description("Work based")]
	WorkBased = 192350001, 
	///<summary><para>Item based</para>
	///<para>Value = 192350000</para></summary>
	[Description("Item based")]
	ItemBased = 192350000, 
	///<summary><para>Service-Maintenance Based</para>
	///<para>Value = 690970002</para></summary>
	[Description("Service-Maintenance Based")]
	Service_MaintenanceBased = 690970002
}
public enum ePaymentTerms
{
	///<summary><para>Net 30</para>
	///<para>Value = 1</para></summary>
	[Description("Net 30")]
	Net30 = 1, 
	///<summary><para>2% 10, Net 30</para>
	///<para>Value = 2</para></summary>
	[Description("2% 10, Net 30")]
	_2_10_Net30 = 2, 
	///<summary><para>Net 45</para>
	///<para>Value = 3</para></summary>
	[Description("Net 45")]
	Net45 = 3, 
	///<summary><para>Net 60</para>
	///<para>Value = 4</para></summary>
	[Description("Net 60")]
	Net60 = 4
}
public enum ePricingError
{
	///<summary><para>None</para>
	///<para>Value = 0</para></summary>
	[Description("None")]
	None = 0, 
	///<summary><para>Detail Error</para>
	///<para>Value = 1</para></summary>
	[Description("Detail Error")]
	DetailError = 1, 
	///<summary><para>Missing Price Level</para>
	///<para>Value = 2</para></summary>
	[Description("Missing Price Level")]
	MissingPriceLevel = 2, 
	///<summary><para>Inactive Price Level</para>
	///<para>Value = 3</para></summary>
	[Description("Inactive Price Level")]
	InactivePriceLevel = 3, 
	///<summary><para>Missing Quantity</para>
	///<para>Value = 4</para></summary>
	[Description("Missing Quantity")]
	MissingQuantity = 4, 
	///<summary><para>Missing Unit Price</para>
	///<para>Value = 5</para></summary>
	[Description("Missing Unit Price")]
	MissingUnitPrice = 5, 
	///<summary><para>Missing Product</para>
	///<para>Value = 6</para></summary>
	[Description("Missing Product")]
	MissingProduct = 6, 
	///<summary><para>Invalid Product</para>
	///<para>Value = 7</para></summary>
	[Description("Invalid Product")]
	InvalidProduct = 7, 
	///<summary><para>Missing Pricing Code</para>
	///<para>Value = 8</para></summary>
	[Description("Missing Pricing Code")]
	MissingPricingCode = 8, 
	///<summary><para>Invalid Pricing Code</para>
	///<para>Value = 9</para></summary>
	[Description("Invalid Pricing Code")]
	InvalidPricingCode = 9, 
	///<summary><para>Missing UOM</para>
	///<para>Value = 10</para></summary>
	[Description("Missing UOM")]
	MissingUOM = 10, 
	///<summary><para>Product Not In Price Level</para>
	///<para>Value = 11</para></summary>
	[Description("Product Not In Price Level")]
	ProductNotInPriceLevel = 11, 
	///<summary><para>Missing Price Level Amount</para>
	///<para>Value = 12</para></summary>
	[Description("Missing Price Level Amount")]
	MissingPriceLevelAmount = 12, 
	///<summary><para>Missing Price Level Percentage</para>
	///<para>Value = 13</para></summary>
	[Description("Missing Price Level Percentage")]
	MissingPriceLevelPercentage = 13, 
	///<summary><para>Missing Price</para>
	///<para>Value = 14</para></summary>
	[Description("Missing Price")]
	MissingPrice = 14, 
	///<summary><para>Missing Current Cost</para>
	///<para>Value = 15</para></summary>
	[Description("Missing Current Cost")]
	MissingCurrentCost = 15, 
	///<summary><para>Missing Standard Cost</para>
	///<para>Value = 16</para></summary>
	[Description("Missing Standard Cost")]
	MissingStandardCost = 16, 
	///<summary><para>Invalid Price Level Amount</para>
	///<para>Value = 17</para></summary>
	[Description("Invalid Price Level Amount")]
	InvalidPriceLevelAmount = 17, 
	///<summary><para>Invalid Price Level Percentage</para>
	///<para>Value = 18</para></summary>
	[Description("Invalid Price Level Percentage")]
	InvalidPriceLevelPercentage = 18, 
	///<summary><para>Invalid Price</para>
	///<para>Value = 19</para></summary>
	[Description("Invalid Price")]
	InvalidPrice = 19, 
	///<summary><para>Invalid Current Cost</para>
	///<para>Value = 20</para></summary>
	[Description("Invalid Current Cost")]
	InvalidCurrentCost = 20, 
	///<summary><para>Invalid Standard Cost</para>
	///<para>Value = 21</para></summary>
	[Description("Invalid Standard Cost")]
	InvalidStandardCost = 21, 
	///<summary><para>Invalid Rounding Policy</para>
	///<para>Value = 22</para></summary>
	[Description("Invalid Rounding Policy")]
	InvalidRoundingPolicy = 22, 
	///<summary><para>Invalid Rounding Option</para>
	///<para>Value = 23</para></summary>
	[Description("Invalid Rounding Option")]
	InvalidRoundingOption = 23, 
	///<summary><para>Invalid Rounding Amount</para>
	///<para>Value = 24</para></summary>
	[Description("Invalid Rounding Amount")]
	InvalidRoundingAmount = 24, 
	///<summary><para>Price Calculation Error</para>
	///<para>Value = 25</para></summary>
	[Description("Price Calculation Error")]
	PriceCalculationError = 25, 
	///<summary><para>Invalid Discount Type</para>
	///<para>Value = 26</para></summary>
	[Description("Invalid Discount Type")]
	InvalidDiscountType = 26, 
	///<summary><para>Discount Type Invalid State</para>
	///<para>Value = 27</para></summary>
	[Description("Discount Type Invalid State")]
	DiscountTypeInvalidState = 27, 
	///<summary><para>Invalid Discount</para>
	///<para>Value = 28</para></summary>
	[Description("Invalid Discount")]
	InvalidDiscount = 28, 
	///<summary><para>Invalid Quantity</para>
	///<para>Value = 29</para></summary>
	[Description("Invalid Quantity")]
	InvalidQuantity = 29, 
	///<summary><para>Invalid Pricing Precision</para>
	///<para>Value = 30</para></summary>
	[Description("Invalid Pricing Precision")]
	InvalidPricingPrecision = 30, 
	///<summary><para>Missing Product Default UOM</para>
	///<para>Value = 31</para></summary>
	[Description("Missing Product Default UOM")]
	MissingProductDefaultUOM = 31, 
	///<summary><para>Missing Product UOM Schedule </para>
	///<para>Value = 32</para></summary>
	[Description("Missing Product UOM Schedule ")]
	MissingProductUOMSchedule = 32, 
	///<summary><para>Inactive Discount Type</para>
	///<para>Value = 33</para></summary>
	[Description("Inactive Discount Type")]
	InactiveDiscountType = 33, 
	///<summary><para>Invalid Price Level Currency</para>
	///<para>Value = 34</para></summary>
	[Description("Invalid Price Level Currency")]
	InvalidPriceLevelCurrency = 34, 
	///<summary><para>Price Attribute Out Of Range</para>
	///<para>Value = 35</para></summary>
	[Description("Price Attribute Out Of Range")]
	PriceAttributeOutOfRange = 35, 
	///<summary><para>Base Currency Attribute Overflow</para>
	///<para>Value = 36</para></summary>
	[Description("Base Currency Attribute Overflow")]
	BaseCurrencyAttributeOverflow = 36, 
	///<summary><para>Base Currency Attribute Underflow</para>
	///<para>Value = 37</para></summary>
	[Description("Base Currency Attribute Underflow")]
	BaseCurrencyAttributeUnderflow = 37
}
public enum eProfitable
{
	///<summary><para>Profitability Not Available</para>
	///<para>Value = 192350000</para></summary>
	[Description("Profitability Not Available")]
	ProfitabilityNotAvailable = 192350000, 
	///<summary><para>Profitable</para>
	///<para>Value = 192350001</para></summary>
	[Description("Profitable")]
	Profitable = 192350001, 
	///<summary><para>Not Profitable</para>
	///<para>Value = 192350002</para></summary>
	[Description("Not Profitable")]
	NotProfitable = 192350002
}
public enum eShipToFreightTerms
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eShippingMethod
{
	///<summary><para>Airborne</para>
	///<para>Value = 1</para></summary>
	[Description("Airborne")]
	Airborne = 1, 
	///<summary><para>DHL</para>
	///<para>Value = 2</para></summary>
	[Description("DHL")]
	DHL = 2, 
	///<summary><para>FedEx</para>
	///<para>Value = 3</para></summary>
	[Description("FedEx")]
	FedEx = 3, 
	///<summary><para>UPS</para>
	///<para>Value = 4</para></summary>
	[Description("UPS")]
	UPS = 4, 
	///<summary><para>Postal Mail</para>
	///<para>Value = 5</para></summary>
	[Description("Postal Mail")]
	PostalMail = 5, 
	///<summary><para>Full Load</para>
	///<para>Value = 6</para></summary>
	[Description("Full Load")]
	FullLoad = 6, 
	///<summary><para>Will Call</para>
	///<para>Value = 7</para></summary>
	[Description("Will Call")]
	WillCall = 7
}
public enum eStatus
{
	///<summary><para>Draft</para>
	///<para>Value = 0</para></summary>
	[Description("Draft")]
	Draft = 0, 
	///<summary><para>Active</para>
	///<para>Value = 1</para></summary>
	[Description("Active")]
	Active = 1, 
	///<summary><para>Won</para>
	///<para>Value = 2</para></summary>
	[Description("Won")]
	Won = 2, 
	///<summary><para>Closed</para>
	///<para>Value = 3</para></summary>
	[Description("Closed")]
	Closed = 3
}
public enum eStatusReason
{
	///<summary><para>In Progress</para>
	///<para>Value = 2</para></summary>
	[Description("In Progress")]
	InProgress_Active = 2, 
	///<summary><para>Open</para>
	///<para>Value = 3</para></summary>
	[Description("Open")]
	Open_Active = 3, 
	///<summary><para>Won</para>
	///<para>Value = 4</para></summary>
	[Description("Won")]
	Won_Won = 4, 
	///<summary><para>Lost</para>
	///<para>Value = 5</para></summary>
	[Description("Lost")]
	Lost_Closed = 5, 
	///<summary><para>Canceled</para>
	///<para>Value = 6</para></summary>
	[Description("Canceled")]
	Canceled_Closed = 6, 
	///<summary><para>Revised</para>
	///<para>Value = 7</para></summary>
	[Description("Revised")]
	Revised_Closed = 7, 
	///<summary><para>In Progress</para>
	///<para>Value = 1</para></summary>
	[Description("In Progress")]
	InProgress_Draft = 1
}
public void SetState(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>contactidname</para>
	/// <para>contactidname</para></summary>
	public const string ContactIdName = "contactidname";
	/// <summary><para>customeridyominame</para>
	/// <para>customeridyominame</para></summary>
	public const string CustomerIdYomiName = "customeridyominame";
	/// <summary><para>transactioncurrencyidname</para>
	/// <para>transactioncurrencyidname</para></summary>
	public const string TransactionCurrencyIdName = "transactioncurrencyidname";
	/// <summary><para>campaignidname</para>
	/// <para>campaignidname</para></summary>
	public const string CampaignIdName = "campaignidname";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>msdyn_contractorganizationalunitidname</para>
	/// <para>msdyn_contractorganizationalunitidname</para></summary>
	public const string Msdyn_ContractOrganizationalUnitIdName = "msdyn_contractorganizationalunitidname";
	/// <summary><para>msdyn_accountmanageridyominame</para>
	/// <para>msdyn_accountmanageridyominame</para></summary>
	public const string Msdyn_AccountManagerIdYomiName = "msdyn_accountmanageridyominame";
	/// <summary><para>contactidyominame</para>
	/// <para>contactidyominame</para></summary>
	public const string ContactIdYomiName = "contactidyominame";
	/// <summary><para>opportunityidname</para>
	/// <para>opportunityidname</para></summary>
	public const string OpportunityIdName = "opportunityidname";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>msdyn_accountname</para>
	/// <para>msdyn_accountname</para></summary>
	public const string Msdyn_AccountName = "msdyn_accountname";
	/// <summary><para>msdyn_accountyominame</para>
	/// <para>msdyn_accountyominame</para></summary>
	public const string Msdyn_AccountYomiName = "msdyn_accountyominame";
	/// <summary><para>owneridyominame</para>
	/// <para>owneridyominame</para></summary>
	public const string OwnerIdYomiName = "owneridyominame";
	/// <summary><para>msdyn_accountmanageridname</para>
	/// <para>msdyn_accountmanageridname</para></summary>
	public const string Msdyn_AccountManagerIdName = "msdyn_accountmanageridname";
	/// <summary><para>accountidname</para>
	/// <para>accountidname</para></summary>
	public const string AccountIdName = "accountidname";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>slainvokedidname</para>
	/// <para>slainvokedidname</para></summary>
	public const string SLAInvokedIdName = "slainvokedidname";
	/// <summary><para>accountidyominame</para>
	/// <para>accountidyominame</para></summary>
	public const string AccountIdYomiName = "accountidyominame";
	/// <summary><para>owneridtype</para>
	/// <para>owneridtype</para></summary>
	public const string OwnerIdType = "owneridtype";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>customeridname</para>
	/// <para>customeridname</para></summary>
	public const string CustomerIdName = "customeridname";
	/// <summary><para>pricelevelidname</para>
	/// <para>pricelevelidname</para></summary>
	public const string PriceLevelIdName = "pricelevelidname";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>owneridname</para>
	/// <para>owneridname</para></summary>
	public const string OwnerIdName = "owneridname";
	/// <summary><para>slaname</para>
	/// <para>slaname</para></summary>
	public const string SLAName = "slaname";
	/// <summary><para>Account</para>
	/// <para>accountid</para></summary>
	public const string Account = "accountid";
	/// <summary><para>Account Manager</para>
	/// <para>msdyn_accountmanagerid</para></summary>
	public const string AccountManager = "msdyn_accountmanagerid";
	/// <summary><para>Adjusted Gross Margin (%)</para>
	/// <para>msdyn_adjustedgrossmargin</para></summary>
	public const string AdjustedGrossMargin = "msdyn_adjustedgrossmargin";
	/// <summary><para>Bill To Address</para>
	/// <para>billto_composite</para></summary>
	public const string BillToAddress = "billto_composite";
	/// <summary><para>Bill To Address ID</para>
	/// <para>billto_addressid</para></summary>
	public const string BillToAddressID = "billto_addressid";
	/// <summary><para>Bill To City</para>
	/// <para>billto_city</para></summary>
	public const string BillToCity = "billto_city";
	/// <summary><para>Bill To Contact Name</para>
	/// <para>billto_contactname</para></summary>
	public const string BillToContactName = "billto_contactname";
	/// <summary><para>Bill To Country/Region</para>
	/// <para>billto_country</para></summary>
	public const string BillToCountry_Region = "billto_country";
	/// <summary><para>Bill To Fax</para>
	/// <para>billto_fax</para></summary>
	public const string BillToFax = "billto_fax";
	/// <summary><para>Bill To Name</para>
	/// <para>billto_name</para></summary>
	public const string BillToName = "billto_name";
	/// <summary><para>Bill To Phone</para>
	/// <para>billto_telephone</para></summary>
	public const string BillToPhone = "billto_telephone";
	/// <summary><para>Bill To State/Province</para>
	/// <para>billto_stateorprovince</para></summary>
	public const string BillToState_Province = "billto_stateorprovince";
	/// <summary><para>Bill To Street 1</para>
	/// <para>billto_line1</para></summary>
	public const string BillToStreet1 = "billto_line1";
	/// <summary><para>Bill To Street 2</para>
	/// <para>billto_line2</para></summary>
	public const string BillToStreet2 = "billto_line2";
	/// <summary><para>Bill To Street 3</para>
	/// <para>billto_line3</para></summary>
	public const string BillToStreet3 = "billto_line3";
	/// <summary><para>Bill To ZIP/Postal Code</para>
	/// <para>billto_postalcode</para></summary>
	public const string BillToZIP_PostalCode = "billto_postalcode";
	/// <summary><para>Closed On</para>
	/// <para>closedon</para></summary>
	public const string ClosedOn = "closedon";
	/// <summary><para>Competitive</para>
	/// <para>msdyn_competitive</para></summary>
	public const string Competitive = "msdyn_competitive";
	/// <summary><para>Contact</para>
	/// <para>contactid</para></summary>
	public const string Contact = "contactid";
	/// <summary><para>Contracting Unit</para>
	/// <para>msdyn_contractorganizationalunitid</para></summary>
	public const string ContractingUnit = "msdyn_contractorganizationalunitid";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Currency</para>
	/// <para>transactioncurrencyid</para></summary>
	public const string Currency = "transactioncurrencyid";
	/// <summary><para>Customer Budget</para>
	/// <para>msdyn_customerbudgetrollup</para></summary>
	public const string CustomerBudget = "msdyn_customerbudgetrollup";
	/// <summary><para>Customer Budget (Base)</para>
	/// <para>msdyn_customerbudgetrollup_base</para></summary>
	public const string CustomerBudget_Base = "msdyn_customerbudgetrollup_base";
	/// <summary><para>Customer Budget (Last Updated On)</para>
	/// <para>msdyn_customerbudgetrollup_date</para></summary>
	public const string CustomerBudget_LastUpdatedOn = "msdyn_customerbudgetrollup_date";
	/// <summary><para>Customer Budget (State)</para>
	/// <para>msdyn_customerbudgetrollup_state</para></summary>
	public const string CustomerBudget_State = "msdyn_customerbudgetrollup_state";
	/// <summary><para>Description</para>
	/// <para>description</para></summary>
	public const string Description = "description";
	/// <summary><para>Due By</para>
	/// <para>expireson</para></summary>
	public const string DueBy = "expireson";
	/// <summary><para>Earliest Quote Line Start Date</para>
	/// <para>msdyn_quotelinestartdate</para></summary>
	public const string EarliestQuoteLineStartDate = "msdyn_quotelinestartdate";
	/// <summary><para>Effective From</para>
	/// <para>effectivefrom</para></summary>
	public const string EffectiveFrom = "effectivefrom";
	/// <summary><para>Effective To</para>
	/// <para>effectiveto</para></summary>
	public const string EffectiveTo = "effectiveto";
	/// <summary><para>Estimated Budget</para>
	/// <para>msdyn_estimatedbudget</para></summary>
	public const string EstimatedBudget = "msdyn_estimatedbudget";
	/// <summary><para>Estimated Completion</para>
	/// <para>msdyn_estimatedcompletionrollup</para></summary>
	public const string EstimatedCompletion = "msdyn_estimatedcompletionrollup";
	/// <summary><para>Estimated Completion (Last Updated On)</para>
	/// <para>msdyn_estimatedcompletionrollup_date</para></summary>
	public const string EstimatedCompletion_LastUpdatedOn = "msdyn_estimatedcompletionrollup_date";
	/// <summary><para>Estimated Completion (State)</para>
	/// <para>msdyn_estimatedcompletionrollup_state</para></summary>
	public const string EstimatedCompletion_State = "msdyn_estimatedcompletionrollup_state";
	/// <summary><para>Estimated Cost</para>
	/// <para>msdyn_estimatedcost</para></summary>
	public const string EstimatedCost = "msdyn_estimatedcost";
	/// <summary><para>Estimated Cost (Base)</para>
	/// <para>msdyn_estimatedcost_base</para></summary>
	public const string EstimatedCost_Base = "msdyn_estimatedcost_base";
	/// <summary><para>Estimated Margin</para>
	/// <para>msdyn_estimatedquotemargin</para></summary>
	public const string EstimatedMargin = "msdyn_estimatedquotemargin";
	/// <summary><para>Estimated Schedule</para>
	/// <para>msdyn_estimatedschedule</para></summary>
	public const string EstimatedSchedule = "msdyn_estimatedschedule";
	/// <summary><para>Exchange Rate</para>
	/// <para>exchangerate</para></summary>
	public const string ExchangeRate = "exchangerate";
	/// <summary><para>Feasibility</para>
	/// <para>msdyn_feasible</para></summary>
	public const string Feasibility = "msdyn_feasible";
	/// <summary><para>Freight Amount</para>
	/// <para>freightamount</para></summary>
	public const string FreightAmount = "freightamount";
	/// <summary><para>Freight Amount (Base)</para>
	/// <para>freightamount_base</para></summary>
	public const string FreightAmount_Base = "freightamount_base";
	/// <summary><para>Freight Terms</para>
	/// <para>freighttermscode</para></summary>
	public const string FreightTerms = "freighttermscode";
	/// <summary><para>Gross Margin (%)</para>
	/// <para>msdyn_grossmargin</para></summary>
	public const string GrossMargin = "msdyn_grossmargin";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string ImportSequenceNumber = "importsequencenumber";
	/// <summary><para>Invoice Setup Totals</para>
	/// <para>msdyn_invoicesetuptotals</para></summary>
	public const string InvoiceSetupTotals = "msdyn_invoicesetuptotals";
	/// <summary><para>Invoice Setup Totals (Base)</para>
	/// <para>msdyn_invoicesetuptotals_base</para></summary>
	public const string InvoiceSetupTotals_Base = "msdyn_invoicesetuptotals_base";
	/// <summary><para>Last On Hold Time</para>
	/// <para>lastonholdtime</para></summary>
	public const string LastOnHoldTime = "lastonholdtime";
	/// <summary><para>Last SLA applied</para>
	/// <para>slainvokedid</para></summary>
	public const string LastSLAApplied = "slainvokedid";
	/// <summary><para>Latest Quote Line End Date</para>
	/// <para>msdyn_quotelineenddate</para></summary>
	public const string LatestQuoteLineEndDate = "msdyn_quotelineenddate";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>Name</para>
	/// <para>name</para></summary>
	public const string Name = "name";
	/// <summary><para>On Hold Time (Minutes)</para>
	/// <para>onholdtime</para></summary>
	public const string OnHoldTime_Minutes = "onholdtime";
	/// <summary><para>Opportunity</para>
	/// <para>opportunityid</para></summary>
	public const string Opportunity = "opportunityid";
	/// <summary><para>Order Type</para>
	/// <para>msdyn_ordertype</para></summary>
	public const string OrderType = "msdyn_ordertype";
	/// <summary><para>Owner</para>
	/// <para>ownerid</para></summary>
	public const string Owner = "ownerid";
	/// <summary><para>Owning Business Unit</para>
	/// <para>owningbusinessunit</para></summary>
	public const string OwningBusinessUnit = "owningbusinessunit";
	/// <summary><para>Owning Team</para>
	/// <para>owningteam</para></summary>
	public const string OwningTeam = "owningteam";
	/// <summary><para>Owning User</para>
	/// <para>owninguser</para></summary>
	public const string OwningUser = "owninguser";
	/// <summary><para>Payment Terms</para>
	/// <para>paymenttermscode</para></summary>
	public const string PaymentTerms = "paymenttermscode";
	/// <summary><para>Potential Customer</para>
	/// <para>customerid</para></summary>
	public const string PotentialCustomer = "customerid";
	/// <summary><para>Potential Customer</para>
	/// <para>msdyn_account</para></summary>
	public const string PotentialCustomer2 = "msdyn_account";
	/// <summary><para>Potential Customer Type</para>
	/// <para>customeridtype</para></summary>
	public const string PotentialCustomerType = "customeridtype";
	/// <summary><para>Price List</para>
	/// <para>pricelevelid</para></summary>
	public const string PriceList = "pricelevelid";
	/// <summary><para>Pricing Error </para>
	/// <para>pricingerrorcode</para></summary>
	public const string PricingError = "pricingerrorcode";
	/// <summary><para>Process</para>
	/// <para>processid</para></summary>
	public const string Process = "processid";
	/// <summary><para>Process Stage</para>
	/// <para>stageid</para></summary>
	public const string ProcessStage = "stageid";
	/// <summary><para>Profitability</para>
	/// <para>msdyn_profitability</para></summary>
	public const string Profitability = "msdyn_profitability";
	/// <summary><para>Quote</para>
	/// <para>quoteid</para></summary>
	public const string QuoteId = "quoteid";
	/// <summary><para>Quote Discount (%)</para>
	/// <para>discountpercentage</para></summary>
	public const string QuoteDiscount = "discountpercentage";
	/// <summary><para>Quote Discount Amount</para>
	/// <para>discountamount</para></summary>
	public const string QuoteDiscountAmount = "discountamount";
	/// <summary><para>Quote Discount Amount (Base)</para>
	/// <para>discountamount_base</para></summary>
	public const string QuoteDiscountAmount_Base = "discountamount_base";
	/// <summary><para>Quote ID</para>
	/// <para>quotenumber</para></summary>
	public const string QuoteID = "quotenumber";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string RecordCreatedOn = "overriddencreatedon";
	/// <summary><para>Requested Delivery Date</para>
	/// <para>requestdeliveryby</para></summary>
	public const string RequestedDeliveryDate = "requestdeliveryby";
	/// <summary><para>Revision ID</para>
	/// <para>revisionnumber</para></summary>
	public const string RevisionID = "revisionnumber";
	/// <summary><para>Ship To</para>
	/// <para>willcall</para></summary>
	public const string ShipTo = "willcall";
	/// <summary><para>Ship To Address</para>
	/// <para>shipto_composite</para></summary>
	public const string ShipToAddress = "shipto_composite";
	/// <summary><para>Ship To Address ID</para>
	/// <para>shipto_addressid</para></summary>
	public const string ShipToAddressID = "shipto_addressid";
	/// <summary><para>Ship To City</para>
	/// <para>shipto_city</para></summary>
	public const string ShipToCity = "shipto_city";
	/// <summary><para>Ship To Contact Name</para>
	/// <para>shipto_contactname</para></summary>
	public const string ShipToContactName = "shipto_contactname";
	/// <summary><para>Ship To Country/Region</para>
	/// <para>shipto_country</para></summary>
	public const string ShipToCountry_Region = "shipto_country";
	/// <summary><para>Ship To Fax</para>
	/// <para>shipto_fax</para></summary>
	public const string ShipToFax = "shipto_fax";
	/// <summary><para>Ship To Freight Terms</para>
	/// <para>shipto_freighttermscode</para></summary>
	public const string ShipToFreightTerms = "shipto_freighttermscode";
	/// <summary><para>Ship To Name</para>
	/// <para>shipto_name</para></summary>
	public const string ShipToName = "shipto_name";
	/// <summary><para>Ship To Phone</para>
	/// <para>shipto_telephone</para></summary>
	public const string ShipToPhone = "shipto_telephone";
	/// <summary><para>Ship To State/Province</para>
	/// <para>shipto_stateorprovince</para></summary>
	public const string ShipToState_Province = "shipto_stateorprovince";
	/// <summary><para>Ship To Street 1</para>
	/// <para>shipto_line1</para></summary>
	public const string ShipToStreet1 = "shipto_line1";
	/// <summary><para>Ship To Street 2</para>
	/// <para>shipto_line2</para></summary>
	public const string ShipToStreet2 = "shipto_line2";
	/// <summary><para>Ship To Street 3</para>
	/// <para>shipto_line3</para></summary>
	public const string ShipToStreet3 = "shipto_line3";
	/// <summary><para>Ship To ZIP/Postal Code</para>
	/// <para>shipto_postalcode</para></summary>
	public const string ShipToZIP_PostalCode = "shipto_postalcode";
	/// <summary><para>Shipping Method</para>
	/// <para>shippingmethodcode</para></summary>
	public const string ShippingMethod = "shippingmethodcode";
	/// <summary><para>SLA</para>
	/// <para>slaid</para></summary>
	public const string SLA = "slaid";
	/// <summary><para>Source Campaign</para>
	/// <para>campaignid</para></summary>
	public const string SourceCampaign = "campaignid";
	/// <summary><para>Status</para>
	/// <para>statecode</para></summary>
	public const string Status = "statecode";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string StatusReason = "statuscode";
	/// <summary><para>Time Zone Rule Version Number</para>
	/// <para>timezoneruleversionnumber</para></summary>
	public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
	/// <summary><para>Total Amount</para>
	/// <para>totalamount</para></summary>
	public const string TotalAmount = "totalamount";
	/// <summary><para>Total Amount (Base)</para>
	/// <para>totalamount_base</para></summary>
	public const string TotalAmount_Base = "totalamount_base";
	/// <summary><para>Total Chargeable Cost</para>
	/// <para>msdyn_totalchargeablecostrollup</para></summary>
	public const string TotalChargeableCost = "msdyn_totalchargeablecostrollup";
	/// <summary><para>Total Chargeable Cost (Base)</para>
	/// <para>msdyn_totalchargeablecostrollup_base</para></summary>
	public const string TotalChargeableCost_Base = "msdyn_totalchargeablecostrollup_base";
	/// <summary><para>Total Chargeable Cost (Last Updated On)</para>
	/// <para>msdyn_totalchargeablecostrollup_date</para></summary>
	public const string TotalChargeableCost_LastUpdatedOn = "msdyn_totalchargeablecostrollup_date";
	/// <summary><para>Total Chargeable Cost (State)</para>
	/// <para>msdyn_totalchargeablecostrollup_state</para></summary>
	public const string TotalChargeableCost_State = "msdyn_totalchargeablecostrollup_state";
	/// <summary><para>Total Detail Amount</para>
	/// <para>totallineitemamount</para></summary>
	public const string TotalDetailAmount = "totallineitemamount";
	/// <summary><para>Total Detail Amount (Base)</para>
	/// <para>totallineitemamount_base</para></summary>
	public const string TotalDetailAmount_Base = "totallineitemamount_base";
	/// <summary><para>Total Discount Amount</para>
	/// <para>totaldiscountamount</para></summary>
	public const string TotalDiscountAmount = "totaldiscountamount";
	/// <summary><para>Total Discount Amount (Base)</para>
	/// <para>totaldiscountamount_base</para></summary>
	public const string TotalDiscountAmount_Base = "totaldiscountamount_base";
	/// <summary><para>Total Line Item Discount Amount</para>
	/// <para>totallineitemdiscountamount</para></summary>
	public const string TotalLineItemDiscountAmount = "totallineitemdiscountamount";
	/// <summary><para>Total Line Item Discount Amount (Base)</para>
	/// <para>totallineitemdiscountamount_base</para></summary>
	public const string TotalLineItemDiscountAmount_Base = "totallineitemdiscountamount_base";
	/// <summary><para>Total Non-chargeable Cost</para>
	/// <para>msdyn_totalnonchargeablecostrollup</para></summary>
	public const string TotalNon_chargeableCost = "msdyn_totalnonchargeablecostrollup";
	/// <summary><para>Total Non-chargeable Cost (Base)</para>
	/// <para>msdyn_totalnonchargeablecostrollup_base</para></summary>
	public const string TotalNon_chargeableCost_Base = "msdyn_totalnonchargeablecostrollup_base";
	/// <summary><para>Total Non-chargeable Cost (Last Updated On)</para>
	/// <para>msdyn_totalnonchargeablecostrollup_date</para></summary>
	public const string TotalNon_chargeableCost_LastUpdatedOn = "msdyn_totalnonchargeablecostrollup_date";
	/// <summary><para>Total Non-chargeable Cost (State)</para>
	/// <para>msdyn_totalnonchargeablecostrollup_state</para></summary>
	public const string TotalNon_chargeableCost_State = "msdyn_totalnonchargeablecostrollup_state";
	/// <summary><para>Total Pre-Freight Amount</para>
	/// <para>totalamountlessfreight</para></summary>
	public const string TotalPre_FreightAmount = "totalamountlessfreight";
	/// <summary><para>Total Pre-Freight Amount (Base)</para>
	/// <para>totalamountlessfreight_base</para></summary>
	public const string TotalPre_FreightAmount_Base = "totalamountlessfreight_base";
	/// <summary><para>Total Tax</para>
	/// <para>totaltax</para></summary>
	public const string TotalTax = "totaltax";
	/// <summary><para>Total Tax (Base)</para>
	/// <para>totaltax_base</para></summary>
	public const string TotalTax_Base = "totaltax_base";
	/// <summary><para>TotalAmount</para>
	/// <para>msdyn_totalamount</para></summary>
	public const string TotalAmount2 = "msdyn_totalamount";
	/// <summary><para>TotalAmount (Base)</para>
	/// <para>msdyn_totalamount_base</para></summary>
	public const string TotalAmount_Base2 = "msdyn_totalamount_base";
	/// <summary><para>Traversed Path</para>
	/// <para>traversedpath</para></summary>
	public const string TraversedPath = "traversedpath";
	/// <summary><para>Unique Dsc ID</para>
	/// <para>uniquedscid</para></summary>
	public const string UniqueDscID = "uniquedscid";
	/// <summary><para>UTC Conversion Time Zone Code</para>
	/// <para>utcconversiontimezonecode</para></summary>
	public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
}

    }
}

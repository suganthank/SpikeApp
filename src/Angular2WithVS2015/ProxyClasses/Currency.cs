// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("transactioncurrency")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class Currency : BaseProxyClass
    {
        public new const string LogicalName = "transactioncurrency";
        public const int ObjectTypeCode = 9105;
        public const string PrimaryIdAttribute = "transactioncurrencyid";
        public const string PrimaryNameAttribute = "currencyname";
        
        static Currency()
        {
            BaseProxyClass.RegisterProxyType(typeof(Currency), "transactioncurrency");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public Currency() : base(new Entity("transactioncurrency")) { }
        public Currency(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<Currency>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: entityimage_timestamp</para>
///</summary>
[AttributeLogicalNameAttribute("entityimage_timestamp")]
public int? EntityImage_Timestamp
{
	get { return this.GetPropertyValue<int?>("entityimage_timestamp"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: entityimage_url</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("entityimage_url")]
public string EntityImage_URL
{
	get { return this.GetPropertyValue<string>("entityimage_url"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: isocurrencycode</para>
///<para>Max Length: 5 characters</para>
///</summary>
[AttributeLogicalNameAttribute("isocurrencycode")]
public string CurrencyCode
{
	get { return this.GetPropertyValue<string>("isocurrencycode"); }
	set { this.SetPropertyValue("isocurrencycode", value, 5, "CurrencyCode"); }
}
///<summary>
///<para>Logical Name: currencyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("currencyname")]
public string CurrencyName
{
	get { return this.GetPropertyValue<string>("currencyname"); }
	set { this.SetPropertyValue("currencyname", value, 100, "CurrencyName"); }
}
///<summary>
///<para>Logical Name: currencyprecision</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 4</para>
///</summary>
[AttributeLogicalNameAttribute("currencyprecision")]
public int? CurrencyPrecision
{
	get { return this.GetPropertyValue<int?>("currencyprecision"); }
	set { this.SetPropertyValue("currencyprecision", (int?)value, (int)0, (int)4, "CurrencyPrecision"); }
}
///<summary>
///<para>Logical Name: currencysymbol</para>
///<para>Max Length: 10 characters</para>
///</summary>
[AttributeLogicalNameAttribute("currencysymbol")]
public string CurrencySymbol
{
	get { return this.GetPropertyValue<string>("currencysymbol"); }
	set { this.SetPropertyValue("currencysymbol", value, 10, "CurrencySymbol"); }
}
///<summary>
///<para>Logical Name: entityimageid</para>
///</summary>
[AttributeLogicalNameAttribute("entityimageid")]
public Guid EntityImageId
{
	get { return this.GetPropertyValue<Guid>("entityimageid"); }
}
///<summary>
///<para>Logical Name: exchangerate</para>
///<para>Minimum Value: 0.0000000001</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 10</para>
///</summary>
[AttributeLogicalNameAttribute("exchangerate")]
public decimal? ExchangeRate
{
	get { return this.GetPropertyValue<decimal?>("exchangerate"); }
	set { this.SetPropertyValue("exchangerate", (decimal?)value, (decimal)0.0000000001, (decimal)100000000000, "ExchangeRate"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? ImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "ImportSequenceNumber"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: organizationid</para>
///</summary>
[AttributeLogicalNameAttribute("organizationid")]
public EntityReference Organization
{
	get { return this.GetPropertyValue<EntityReference>("organizationid"); }
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? RecordCreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "RecordCreatedOn"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eStatus? Status
{
	get
	{
		if (Status_OptionSetValue != null) { return (eStatus)Status_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Status_OptionSetValue = new OptionSetValue((int)value); }
		else this.Status_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue Status_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
	set { this.SetPropertyValue<OptionSetValue>("statecode", value, "Status_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Status_Text(IOrganizationService Service)
{
	return this.Status_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Status_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Status_OptionSetValue.Value);
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? StatusReason
{
	get
	{
		if (StatusReason_OptionSetValue != null) { return (eStatusReason)StatusReason_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StatusReason_OptionSetValue = new OptionSetValue((int)value); }
		else this.StatusReason_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue StatusReason_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "StatusReason_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string StatusReason_Text(IOrganizationService Service)
{
	return this.StatusReason_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string StatusReason_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.StatusReason_OptionSetValue.Value);
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: transactioncurrencyid</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyid")]
public Guid TransactionCurrencyId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: uniquedscid</para>
///</summary>
[AttributeLogicalNameAttribute("uniquedscid")]
public Guid UniqueDscId
{
	get { return this.GetPropertyValue<Guid>("uniquedscid"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}


        /// <summary>
/// <para><b>Account (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_account</para>
/// </summary>
public List<Account> GetAccounts_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Account>(Service, this.Id, "account", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Account (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_account</para>
/// </summary>
public List<Account> GetAccounts_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Account>(Service, this.Id, "account", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ActionCard (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_actioncard</para>
/// </summary>
public List<ActionCard> GetActionCards_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActionCard>(Service, this.Id, "actioncard", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ActionCard (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_actioncard</para>
/// </summary>
public List<ActionCard> GetActionCards_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActionCard>(Service, this.Id, "actioncard", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ActionCardUserState (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_ActionCardUserState</para>
/// </summary>
public List<ActionCardUserState> GetActionCardUserStates_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActionCardUserState>(Service, this.Id, "actioncarduserstate", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ActionCardUserState (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_ActionCardUserState</para>
/// </summary>
public List<ActionCardUserState> GetActionCardUserStates_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActionCardUserState>(Service, this.Id, "actioncarduserstate", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Activity (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_ActivityPointer</para>
/// </summary>
public List<Activity> GetActivities_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Activity>(Service, this.Id, "activitypointer", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Activity (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_ActivityPointer</para>
/// </summary>
public List<Activity> GetActivities_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Activity>(Service, this.Id, "activitypointer", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>AnnualFiscalCalendar (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_annualfiscalcalendar</para>
/// </summary>
public List<AnnualFiscalCalendar> GetAnnualFiscalCalendars_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AnnualFiscalCalendar>(Service, this.Id, "annualfiscalcalendar", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>AnnualFiscalCalendar (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_annualfiscalcalendar</para>
/// </summary>
public List<AnnualFiscalCalendar> GetAnnualFiscalCalendars_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AnnualFiscalCalendar>(Service, this.Id, "annualfiscalcalendar", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Appointment (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_Appointment</para>
/// </summary>
public List<Appointment> GetAppointments_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Appointment>(Service, this.Id, "appointment", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Appointment (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_Appointment</para>
/// </summary>
public List<Appointment> GetAppointments_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Appointment>(Service, this.Id, "appointment", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: TransactionCurrency_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: TransactionCurrency_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BookableResource (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_bookableresource</para>
/// </summary>
public List<BookableResource> GetBookableResources_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResource>(Service, this.Id, "bookableresource", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>BookableResource (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_bookableresource</para>
/// </summary>
public List<BookableResource> GetBookableResources_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResource>(Service, this.Id, "bookableresource", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>BookableResourceBooking (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_bookableresourcebooking</para>
/// </summary>
public List<BookableResourceBooking> GetBookableResourceBookings_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBooking>(Service, this.Id, "bookableresourcebooking", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>BookableResourceBooking (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_bookableresourcebooking</para>
/// </summary>
public List<BookableResourceBooking> GetBookableResourceBookings_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBooking>(Service, this.Id, "bookableresourcebooking", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>BookableResourceBookingHeader (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_bookableresourcebookingheader</para>
/// </summary>
public List<BookableResourceBookingHeader> GetBookableResourceBookingHeaders_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBookingHeader>(Service, this.Id, "bookableresourcebookingheader", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>BookableResourceBookingHeader (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_bookableresourcebookingheader</para>
/// </summary>
public List<BookableResourceBookingHeader> GetBookableResourceBookingHeaders_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBookingHeader>(Service, this.Id, "bookableresourcebookingheader", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>BookableResourceCategory (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_bookableresourcecategory</para>
/// </summary>
public List<BookableResourceCategory> GetBookableResourceCategories_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceCategory>(Service, this.Id, "bookableresourcecategory", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>BookableResourceCategory (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_bookableresourcecategory</para>
/// </summary>
public List<BookableResourceCategory> GetBookableResourceCategories_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceCategory>(Service, this.Id, "bookableresourcecategory", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>BookableResourceCategoryAssn (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_bookableresourcecategoryassn</para>
/// </summary>
public List<BookableResourceCategoryAssn> GetBookableResourceCategoryAssns_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceCategoryAssn>(Service, this.Id, "bookableresourcecategoryassn", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>BookableResourceCategoryAssn (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_bookableresourcecategoryassn</para>
/// </summary>
public List<BookableResourceCategoryAssn> GetBookableResourceCategoryAssns_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceCategoryAssn>(Service, this.Id, "bookableresourcecategoryassn", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>BookableResourceCharacteristic (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_bookableresourcecharacteristic</para>
/// </summary>
public List<BookableResourceCharacteristic> GetBookableResourceCharacteristics_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceCharacteristic>(Service, this.Id, "bookableresourcecharacteristic", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>BookableResourceCharacteristic (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_bookableresourcecharacteristic</para>
/// </summary>
public List<BookableResourceCharacteristic> GetBookableResourceCharacteristics_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceCharacteristic>(Service, this.Id, "bookableresourcecharacteristic", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>BookableResourceGroup (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_bookableresourcegroup</para>
/// </summary>
public List<BookableResourceGroup> GetBookableResourceGroups_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceGroup>(Service, this.Id, "bookableresourcegroup", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>BookableResourceGroup (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_bookableresourcegroup</para>
/// </summary>
public List<BookableResourceGroup> GetBookableResourceGroups_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceGroup>(Service, this.Id, "bookableresourcegroup", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>BookingStatus (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_bookingstatus</para>
/// </summary>
public List<BookingStatus> GetBookingStatuses_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingStatus>(Service, this.Id, "bookingstatus", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>BookingStatus (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_bookingstatus</para>
/// </summary>
public List<BookingStatus> GetBookingStatuses_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingStatus>(Service, this.Id, "bookingstatus", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>BusinessUnit (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_BusinessUnit</para>
/// </summary>
public List<BusinessUnit> GetBusinessUnits_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BusinessUnit>(Service, this.Id, "businessunit", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>BusinessUnit (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_BusinessUnit</para>
/// </summary>
public List<BusinessUnit> GetBusinessUnits_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BusinessUnit>(Service, this.Id, "businessunit", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Campaign (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_campaign</para>
/// </summary>
public List<Campaign> GetCampaigns_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Campaign>(Service, this.Id, "campaign", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Campaign (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_campaign</para>
/// </summary>
public List<Campaign> GetCampaigns_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Campaign>(Service, this.Id, "campaign", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>CampaignActivity (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_campaignactivity</para>
/// </summary>
public List<CampaignActivity> GetCampaignActivities_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CampaignActivity>(Service, this.Id, "campaignactivity", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>CampaignActivity (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_campaignactivity</para>
/// </summary>
public List<CampaignActivity> GetCampaignActivities_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CampaignActivity>(Service, this.Id, "campaignactivity", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>CampaignResponse (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_CampaignResponse</para>
/// </summary>
public List<CampaignResponse> GetCampaignResponses_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CampaignResponse>(Service, this.Id, "campaignresponse", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>CampaignResponse (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_CampaignResponse</para>
/// </summary>
public List<CampaignResponse> GetCampaignResponses_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CampaignResponse>(Service, this.Id, "campaignresponse", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ActionCardType (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_cardtype</para>
/// </summary>
public List<ActionCardType> GetActionCardType_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActionCardType>(Service, this.Id, "cardtype", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ActionCardType (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_cardtype</para>
/// </summary>
public List<ActionCardType> GetActionCardType_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActionCardType>(Service, this.Id, "cardtype", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Category (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_category</para>
/// </summary>
public List<Category> GetCategories_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Category>(Service, this.Id, "category", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Category (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_category</para>
/// </summary>
public List<Category> GetCategories_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Category>(Service, this.Id, "category", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ChannelAccessProfile (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_ChannelAccessProfile</para>
/// </summary>
public List<ChannelAccessProfile> GetChannelAccessProfiles_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ChannelAccessProfile>(Service, this.Id, "channelaccessprofile", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ChannelAccessProfile (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_ChannelAccessProfile</para>
/// </summary>
public List<ChannelAccessProfile> GetChannelAccessProfiles_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ChannelAccessProfile>(Service, this.Id, "channelaccessprofile", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ChannelAccessProfileRule (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_profilerule</para>
/// </summary>
public List<ChannelAccessProfileRule> GetChannelAccessProfileRules_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ChannelAccessProfileRule>(Service, this.Id, "channelaccessprofilerule", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ChannelAccessProfileRule (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_profilerule</para>
/// </summary>
public List<ChannelAccessProfileRule> GetChannelAccessProfileRules_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ChannelAccessProfileRule>(Service, this.Id, "channelaccessprofilerule", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ChannelAccessProfileRuleItem (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_profileruleitem</para>
/// </summary>
public List<ChannelAccessProfileRuleItem> GetChannelAccessProfileRuleItems_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ChannelAccessProfileRuleItem>(Service, this.Id, "channelaccessprofileruleitem", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ChannelAccessProfileRuleItem (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_profileruleitem</para>
/// </summary>
public List<ChannelAccessProfileRuleItem> GetChannelAccessProfileRuleItems_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ChannelAccessProfileRuleItem>(Service, this.Id, "channelaccessprofileruleitem", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Characteristic (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_characteristic</para>
/// </summary>
public List<Characteristic> GetCharacteristics_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Characteristic>(Service, this.Id, "characteristic", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Characteristic (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_characteristic</para>
/// </summary>
public List<Characteristic> GetCharacteristics_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Characteristic>(Service, this.Id, "characteristic", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Competitor (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_competitor</para>
/// </summary>
public List<Competitor> GetCompetitors_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Competitor>(Service, this.Id, "competitor", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Competitor (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_competitor</para>
/// </summary>
public List<Competitor> GetCompetitors_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Competitor>(Service, this.Id, "competitor", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Connection (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_Connection</para>
/// </summary>
public List<Connection> GetConnections_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Connection (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_Connection</para>
/// </summary>
public List<Connection> GetConnections_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Contact (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_contact</para>
/// </summary>
public List<Contact> GetContacts_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Contact>(Service, this.Id, "contact", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Contact (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_contact</para>
/// </summary>
public List<Contact> GetContacts_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Contact>(Service, this.Id, "contact", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Contract (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_contract</para>
/// </summary>
public List<Contract> GetContracts_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Contract>(Service, this.Id, "contract", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Contract (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_contract</para>
/// </summary>
public List<Contract> GetContracts_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Contract>(Service, this.Id, "contract", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ContractLine (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_contractdetail</para>
/// </summary>
public List<ContractLine> GetContractLines_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ContractLine>(Service, this.Id, "contractdetail", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ContractLine (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_contractdetail</para>
/// </summary>
public List<ContractLine> GetContractLines_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ContractLine>(Service, this.Id, "contractdetail", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>RecordCreationAndUpdateRule (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_ConvertRule</para>
/// </summary>
public List<RecordCreationAndUpdateRule> GetRecordCreationAndUpdateRules_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecordCreationAndUpdateRule>(Service, this.Id, "convertrule", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>RecordCreationAndUpdateRule (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_ConvertRule</para>
/// </summary>
public List<RecordCreationAndUpdateRule> GetRecordCreationAndUpdateRules_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecordCreationAndUpdateRule>(Service, this.Id, "convertrule", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>RecordCreationAndUpdateRuleItem (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_convertruleitem</para>
/// </summary>
public List<RecordCreationAndUpdateRuleItem> GetRecordCreationAndUpdateRuleItems_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecordCreationAndUpdateRuleItem>(Service, this.Id, "convertruleitem", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>RecordCreationAndUpdateRuleItem (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_convertruleitem</para>
/// </summary>
public List<RecordCreationAndUpdateRuleItem> GetRecordCreationAndUpdateRuleItems_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecordCreationAndUpdateRuleItem>(Service, this.Id, "convertruleitem", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Address (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_CustomerAddress</para>
/// </summary>
public List<Address> GetAddresses_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Address>(Service, this.Id, "customeraddress", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Address (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_CustomerAddress</para>
/// </summary>
public List<Address> GetAddresses_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Address>(Service, this.Id, "customeraddress", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>DelveActionHub (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_delveactionhub</para>
/// </summary>
public List<DelveActionHub> GetSmartActions_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DelveActionHub>(Service, this.Id, "delveactionhub", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>DelveActionHub (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_delveactionhub</para>
/// </summary>
public List<DelveActionHub> GetSmartActions_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DelveActionHub>(Service, this.Id, "delveactionhub", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Discount (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_discount</para>
/// </summary>
public List<Discount> GetDiscounts_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Discount>(Service, this.Id, "discount", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Discount (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_discount</para>
/// </summary>
public List<Discount> GetDiscounts_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Discount>(Service, this.Id, "discount", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>DiscountList (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_discounttype</para>
/// </summary>
public List<DiscountList> GetDiscountLists_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DiscountList>(Service, this.Id, "discounttype", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>DiscountList (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_discounttype</para>
/// </summary>
public List<DiscountList> GetDiscountLists_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DiscountList>(Service, this.Id, "discounttype", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: TransactionCurrency_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: TransactionCurrency_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: TransactionCurrency_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: TransactionCurrency_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>PropertyAssociation (Currency)</b></para>
/// <para>Schema Name: DynamicPropertyAssociation_TransactionCurrency</para>
/// </summary>
public List<PropertyAssociation> GetPropertyAssociations_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PropertyAssociation>(Service, this.Id, "dynamicpropertyassociation", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>PropertyAssociation (Currency)</b></para>
/// <para>Schema Name: DynamicPropertyAssociation_TransactionCurrency</para>
/// </summary>
public List<PropertyAssociation> GetPropertyAssociations_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PropertyAssociation>(Service, this.Id, "dynamicpropertyassociation", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>PropertyInstance (Property Instance ID)</b></para>
/// <para>Schema Name: TransactionCurrency_Dynamicpropertyinsatance</para>
/// </summary>
public List<PropertyInstance> GetPropertyInstances_PropertyInstanceID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PropertyInstance>(Service, this.Id, "dynamicpropertyinstance", "dynamicpropertyinstanceid", Columns); }
/// <summary>
/// <para><b>PropertyInstance (Property Instance ID)</b></para>
/// <para>Schema Name: TransactionCurrency_Dynamicpropertyinsatance</para>
/// </summary>
public List<PropertyInstance> GetPropertyInstances_PropertyInstanceID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PropertyInstance>(Service, this.Id, "dynamicpropertyinstance", "dynamicpropertyinstanceid", Columns); }
/// <summary>
/// <para><b>PropertyOptionSetItem (Currency)</b></para>
/// <para>Schema Name: DynamicPropertyOptionSetItem_TransactionCurrency</para>
/// </summary>
public List<PropertyOptionSetItem> GetPropertyOptionSetItems_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PropertyOptionSetItem>(Service, this.Id, "dynamicpropertyoptionsetitem", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>PropertyOptionSetItem (Currency)</b></para>
/// <para>Schema Name: DynamicPropertyOptionSetItem_TransactionCurrency</para>
/// </summary>
public List<PropertyOptionSetItem> GetPropertyOptionSetItems_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PropertyOptionSetItem>(Service, this.Id, "dynamicpropertyoptionsetitem", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Email (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_Email</para>
/// </summary>
public List<Email> GetEmailMessages_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Email (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_Email</para>
/// </summary>
public List<Email> GetEmailMessages_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Entitlement (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_Entitlement</para>
/// </summary>
public List<Entitlement> GetEntitlements_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Entitlement>(Service, this.Id, "entitlement", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Entitlement (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_Entitlement</para>
/// </summary>
public List<Entitlement> GetEntitlements_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Entitlement>(Service, this.Id, "entitlement", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>EntitlementChannel (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_entitlementchannel</para>
/// </summary>
public List<EntitlementChannel> GetEntitlementChannels_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EntitlementChannel>(Service, this.Id, "entitlementchannel", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>EntitlementChannel (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_entitlementchannel</para>
/// </summary>
public List<EntitlementChannel> GetEntitlementChannels_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EntitlementChannel>(Service, this.Id, "entitlementchannel", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>EntitlementTemplate (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_entitlementtemplate</para>
/// </summary>
public List<EntitlementTemplate> GetEntitlementTemplates_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EntitlementTemplate>(Service, this.Id, "entitlementtemplate", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>EntitlementTemplate (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_entitlementtemplate</para>
/// </summary>
public List<EntitlementTemplate> GetEntitlementTemplates_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EntitlementTemplate>(Service, this.Id, "entitlementtemplate", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>EntitlementTemplateChannel (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_entitlementtemplatechannel</para>
/// </summary>
public List<EntitlementTemplateChannel> GetForInternalUseOnly__Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EntitlementTemplateChannel>(Service, this.Id, "entitlementtemplatechannel", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>EntitlementTemplateChannel (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_entitlementtemplatechannel</para>
/// </summary>
public List<EntitlementTemplateChannel> GetForInternalUseOnly__Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EntitlementTemplateChannel>(Service, this.Id, "entitlementtemplatechannel", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Facility_Equipment (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_Equipment</para>
/// </summary>
public List<Facility_Equipment> GetFacilities_Equipment_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Facility_Equipment>(Service, this.Id, "equipment", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Facility_Equipment (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_Equipment</para>
/// </summary>
public List<Facility_Equipment> GetFacilities_Equipment_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Facility_Equipment>(Service, this.Id, "equipment", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ExpiredProcess (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_expiredprocess</para>
/// </summary>
public List<ExpiredProcess> GetExpiredProcess_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ExpiredProcess>(Service, this.Id, "expiredprocess", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ExpiredProcess (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_expiredprocess</para>
/// </summary>
public List<ExpiredProcess> GetExpiredProcess_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ExpiredProcess>(Service, this.Id, "expiredprocess", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ExternalParty (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_ExternalParty</para>
/// </summary>
public List<ExternalParty> GetExternalParties_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ExternalParty>(Service, this.Id, "externalparty", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ExternalParty (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_ExternalParty</para>
/// </summary>
public List<ExternalParty> GetExternalParties_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ExternalParty>(Service, this.Id, "externalparty", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ExternalPartyItem (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_externalpartyitem</para>
/// </summary>
public List<ExternalPartyItem> GetExternalPartyItems_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ExternalPartyItem>(Service, this.Id, "externalpartyitem", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ExternalPartyItem (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_externalpartyitem</para>
/// </summary>
public List<ExternalPartyItem> GetExternalPartyItems_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ExternalPartyItem>(Service, this.Id, "externalpartyitem", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Fax (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_Fax</para>
/// </summary>
public List<Fax> GetFaxes_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fax>(Service, this.Id, "fax", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Fax (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_Fax</para>
/// </summary>
public List<Fax> GetFaxes_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fax>(Service, this.Id, "fax", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Feedback (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_feedback</para>
/// </summary>
public List<Feedback> GetFeedback_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Feedback>(Service, this.Id, "feedback", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Feedback (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_feedback</para>
/// </summary>
public List<Feedback> GetFeedback_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Feedback>(Service, this.Id, "feedback", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>FixedMonthlyFiscalCalendar (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_fixedmonthlyfiscalcalendar</para>
/// </summary>
public List<FixedMonthlyFiscalCalendar> GetFixedMonthlyFiscalCalendars_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FixedMonthlyFiscalCalendar>(Service, this.Id, "fixedmonthlyfiscalcalendar", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>FixedMonthlyFiscalCalendar (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_fixedmonthlyfiscalcalendar</para>
/// </summary>
public List<FixedMonthlyFiscalCalendar> GetFixedMonthlyFiscalCalendars_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FixedMonthlyFiscalCalendar>(Service, this.Id, "fixedmonthlyfiscalcalendar", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Goal (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_Goal</para>
/// </summary>
public List<Goal> GetGoals_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Goal>(Service, this.Id, "goal", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Goal (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_Goal</para>
/// </summary>
public List<Goal> GetGoals_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Goal>(Service, this.Id, "goal", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>@Case (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_Incident</para>
/// </summary>
public List<@Case> GetCases_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<@Case>(Service, this.Id, "incident", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>@Case (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_Incident</para>
/// </summary>
public List<@Case> GetCases_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<@Case>(Service, this.Id, "incident", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>InteractionForEmail (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_InteractionForEmail</para>
/// </summary>
public List<InteractionForEmail> GetInteractionsForEmail_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InteractionForEmail>(Service, this.Id, "interactionforemail", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>InteractionForEmail (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_InteractionForEmail</para>
/// </summary>
public List<InteractionForEmail> GetInteractionsForEmail_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InteractionForEmail>(Service, this.Id, "interactionforemail", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Invoice (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_invoice</para>
/// </summary>
public List<Invoice> GetInvoices_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Invoice>(Service, this.Id, "invoice", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Invoice (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_invoice</para>
/// </summary>
public List<Invoice> GetInvoices_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Invoice>(Service, this.Id, "invoice", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>InvoiceLine (Currency)</b></para>
/// <para>Schema Name: msdyn_transactioncurrency_invoicedetail_Currency</para>
/// </summary>
public List<InvoiceLine> GetInvoiceLines_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceLine>(Service, this.Id, "invoicedetail", "msdyn_currency", Columns); }
/// <summary>
/// <para><b>InvoiceLine (Currency)</b></para>
/// <para>Schema Name: msdyn_transactioncurrency_invoicedetail_Currency</para>
/// </summary>
public List<InvoiceLine> GetInvoiceLines_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceLine>(Service, this.Id, "invoicedetail", "msdyn_currency", Columns); }
/// <summary>
/// <para><b>InvoiceLine (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_invoicedetail</para>
/// </summary>
public List<InvoiceLine> GetInvoiceLines_Currency2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceLine>(Service, this.Id, "invoicedetail", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>InvoiceLine (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_invoicedetail</para>
/// </summary>
public List<InvoiceLine> GetInvoiceLines_Currency2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceLine>(Service, this.Id, "invoicedetail", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Article (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_KbArticle</para>
/// </summary>
public List<Article> GetArticles_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Article>(Service, this.Id, "kbarticle", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Article (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_KbArticle</para>
/// </summary>
public List<Article> GetArticles_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Article>(Service, this.Id, "kbarticle", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>KnowledgeArticle (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_knowledgearticle</para>
/// </summary>
public List<KnowledgeArticle> GetKnowledgeArticles_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<KnowledgeArticle>(Service, this.Id, "knowledgearticle", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>KnowledgeArticle (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_knowledgearticle</para>
/// </summary>
public List<KnowledgeArticle> GetKnowledgeArticles_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<KnowledgeArticle>(Service, this.Id, "knowledgearticle", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>KnowledgeArticleIncident (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_knowledgearticleincident</para>
/// </summary>
public List<KnowledgeArticleIncident> GetKnowledgeArticleIncidents_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<KnowledgeArticleIncident>(Service, this.Id, "knowledgearticleincident", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>KnowledgeArticleIncident (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_knowledgearticleincident</para>
/// </summary>
public List<KnowledgeArticleIncident> GetKnowledgeArticleIncidents_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<KnowledgeArticleIncident>(Service, this.Id, "knowledgearticleincident", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>KnowledgeArticleViews (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_knowledgearticleviews</para>
/// </summary>
public List<KnowledgeArticleViews> GetKnowledgeArticleViews_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<KnowledgeArticleViews>(Service, this.Id, "knowledgearticleviews", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>KnowledgeArticleViews (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_knowledgearticleviews</para>
/// </summary>
public List<KnowledgeArticleViews> GetKnowledgeArticleViews_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<KnowledgeArticleViews>(Service, this.Id, "knowledgearticleviews", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>KnowledgeBaseRecord (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_KnowledgeBaseRecord</para>
/// </summary>
public List<KnowledgeBaseRecord> GetKnowledgeBaseRecords_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<KnowledgeBaseRecord>(Service, this.Id, "knowledgebaserecord", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>KnowledgeBaseRecord (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_KnowledgeBaseRecord</para>
/// </summary>
public List<KnowledgeBaseRecord> GetKnowledgeBaseRecords_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<KnowledgeBaseRecord>(Service, this.Id, "knowledgebaserecord", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Lead (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_lead</para>
/// </summary>
public List<Lead> GetLeads_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Lead>(Service, this.Id, "lead", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Lead (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_lead</para>
/// </summary>
public List<Lead> GetLeads_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Lead>(Service, this.Id, "lead", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>LeadAddress (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_LeadAddress</para>
/// </summary>
public List<LeadAddress> GetLeadAddresses_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<LeadAddress>(Service, this.Id, "leadaddress", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>LeadAddress (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_LeadAddress</para>
/// </summary>
public List<LeadAddress> GetLeadAddresses_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<LeadAddress>(Service, this.Id, "leadaddress", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>LeadToOpportunitySalesProcess (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_leadtoopportunitysalesprocess</para>
/// </summary>
public List<LeadToOpportunitySalesProcess> GetLeadToOpportunitySalesProcess_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<LeadToOpportunitySalesProcess>(Service, this.Id, "leadtoopportunitysalesprocess", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>LeadToOpportunitySalesProcess (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_leadtoopportunitysalesprocess</para>
/// </summary>
public List<LeadToOpportunitySalesProcess> GetLeadToOpportunitySalesProcess_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<LeadToOpportunitySalesProcess>(Service, this.Id, "leadtoopportunitysalesprocess", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Letter (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_Letter</para>
/// </summary>
public List<Letter> GetLetters_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Letter>(Service, this.Id, "letter", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Letter (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_Letter</para>
/// </summary>
public List<Letter> GetLetters_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Letter>(Service, this.Id, "letter", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>MarketingList (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_list</para>
/// </summary>
public List<MarketingList> GetMarketingLists_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MarketingList>(Service, this.Id, "list", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>MarketingList (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_list</para>
/// </summary>
public List<MarketingList> GetMarketingLists_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MarketingList>(Service, this.Id, "list", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>MailMergeTemplate (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_MailMergeTemplate</para>
/// </summary>
public List<MailMergeTemplate> GetMailMergeTemplates_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailMergeTemplate>(Service, this.Id, "mailmergetemplate", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>MailMergeTemplate (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_MailMergeTemplate</para>
/// </summary>
public List<MailMergeTemplate> GetMailMergeTemplates_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailMergeTemplate>(Service, this.Id, "mailmergetemplate", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>MonthlyFiscalCalendar (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_monthlyfiscalcalendar</para>
/// </summary>
public List<MonthlyFiscalCalendar> GetMonthlyFiscalCalendars_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MonthlyFiscalCalendar>(Service, this.Id, "monthlyfiscalcalendar", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>MonthlyFiscalCalendar (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_monthlyfiscalcalendar</para>
/// </summary>
public List<MonthlyFiscalCalendar> GetMonthlyFiscalCalendars_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MonthlyFiscalCalendar>(Service, this.Id, "monthlyfiscalcalendar", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Actual (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_actual</para>
/// </summary>
public List<Actual> GetActuals_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Actual>(Service, this.Id, "msdyn_actual", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Actual (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_actual</para>
/// </summary>
public List<Actual> GetActuals_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Actual>(Service, this.Id, "msdyn_actual", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>AgreementBookingProduct (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_agreementbookingproduct</para>
/// </summary>
public List<AgreementBookingProduct> GetAgreementBookingProducts_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingProduct>(Service, this.Id, "msdyn_agreementbookingproduct", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>AgreementBookingProduct (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_agreementbookingproduct</para>
/// </summary>
public List<AgreementBookingProduct> GetAgreementBookingProducts_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingProduct>(Service, this.Id, "msdyn_agreementbookingproduct", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>AgreementBookingService (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_agreementbookingservice</para>
/// </summary>
public List<AgreementBookingService> GetAgreementBookingServices_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingService>(Service, this.Id, "msdyn_agreementbookingservice", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>AgreementBookingService (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_agreementbookingservice</para>
/// </summary>
public List<AgreementBookingService> GetAgreementBookingServices_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingService>(Service, this.Id, "msdyn_agreementbookingservice", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>AgreementInvoiceProduct (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_agreementinvoiceproduct</para>
/// </summary>
public List<AgreementInvoiceProduct> GetAgreementInvoiceProducts_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementInvoiceProduct>(Service, this.Id, "msdyn_agreementinvoiceproduct", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>AgreementInvoiceProduct (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_agreementinvoiceproduct</para>
/// </summary>
public List<AgreementInvoiceProduct> GetAgreementInvoiceProducts_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementInvoiceProduct>(Service, this.Id, "msdyn_agreementinvoiceproduct", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Approval (Currency)</b></para>
/// <para>Schema Name: msdyn_approval_transactioncurrency_transactioncurrencyid</para>
/// </summary>
public List<Approval> GetApprovals_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Approval>(Service, this.Id, "msdyn_approval", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Approval (Currency)</b></para>
/// <para>Schema Name: msdyn_approval_transactioncurrency_transactioncurrencyid</para>
/// </summary>
public List<Approval> GetApprovals_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Approval>(Service, this.Id, "msdyn_approval", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>BookingAlert (Currency)</b></para>
/// <para>Schema Name: msdyn_bookingalert_transactioncurrency_transactioncurrencyid</para>
/// </summary>
public List<BookingAlert> GetBookingAlerts_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlert>(Service, this.Id, "msdyn_bookingalert", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>BookingAlert (Currency)</b></para>
/// <para>Schema Name: msdyn_bookingalert_transactioncurrency_transactioncurrencyid</para>
/// </summary>
public List<BookingAlert> GetBookingAlerts_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlert>(Service, this.Id, "msdyn_bookingalert", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>BookingJournal (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_bookingjournal</para>
/// </summary>
public List<BookingJournal> GetBookingJournal_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingJournal>(Service, this.Id, "msdyn_bookingjournal", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>BookingJournal (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_bookingjournal</para>
/// </summary>
public List<BookingJournal> GetBookingJournal_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingJournal>(Service, this.Id, "msdyn_bookingjournal", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ProjectContractLineMilestone (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_contractlinescheduleofvalue</para>
/// </summary>
public List<ProjectContractLineMilestone> GetProjectContractLineMilestones_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineMilestone>(Service, this.Id, "msdyn_contractlinescheduleofvalue", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ProjectContractLineMilestone (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_contractlinescheduleofvalue</para>
/// </summary>
public List<ProjectContractLineMilestone> GetProjectContractLineMilestones_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineMilestone>(Service, this.Id, "msdyn_contractlinescheduleofvalue", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>EstimateLine (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_estimateline</para>
/// </summary>
public List<EstimateLine> GetEstimateLines_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EstimateLine>(Service, this.Id, "msdyn_estimateline", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>EstimateLine (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_estimateline</para>
/// </summary>
public List<EstimateLine> GetEstimateLines_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EstimateLine>(Service, this.Id, "msdyn_estimateline", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Expense (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_expense</para>
/// </summary>
public List<Expense> GetExpenses_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Expense>(Service, this.Id, "msdyn_expense", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Expense (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_expense</para>
/// </summary>
public List<Expense> GetExpenses_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Expense>(Service, this.Id, "msdyn_expense", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Fact (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_fact</para>
/// </summary>
public List<Fact> GetFacts_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fact>(Service, this.Id, "msdyn_fact", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Fact (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_fact</para>
/// </summary>
public List<Fact> GetFacts_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fact>(Service, this.Id, "msdyn_fact", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>FieldServicePriceListItem (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_fieldservicepricelistitem</para>
/// </summary>
public List<FieldServicePriceListItem> GetFieldServicePriceListItems_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldServicePriceListItem>(Service, this.Id, "msdyn_fieldservicepricelistitem", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>FieldServicePriceListItem (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_fieldservicepricelistitem</para>
/// </summary>
public List<FieldServicePriceListItem> GetFieldServicePriceListItems_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldServicePriceListItem>(Service, this.Id, "msdyn_fieldservicepricelistitem", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>InvoiceLineDetail (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_invoicelinetransaction</para>
/// </summary>
public List<InvoiceLineDetail> GetInvoiceLineDetails_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceLineDetail>(Service, this.Id, "msdyn_invoicelinetransaction", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>InvoiceLineDetail (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_invoicelinetransaction</para>
/// </summary>
public List<InvoiceLineDetail> GetInvoiceLineDetails_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceLineDetail>(Service, this.Id, "msdyn_invoicelinetransaction", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>JournalLine (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_journalline</para>
/// </summary>
public List<JournalLine> GetJournalLines_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<JournalLine>(Service, this.Id, "msdyn_journalline", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>JournalLine (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_journalline</para>
/// </summary>
public List<JournalLine> GetJournalLines_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<JournalLine>(Service, this.Id, "msdyn_journalline", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>OpportunityLineDetail (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_opportunitylinetransaction</para>
/// </summary>
public List<OpportunityLineDetail> GetOpportunityLineDetails_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLineDetail>(Service, this.Id, "msdyn_opportunitylinetransaction", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>OpportunityLineDetail (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_opportunitylinetransaction</para>
/// </summary>
public List<OpportunityLineDetail> GetOpportunityLineDetails_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLineDetail>(Service, this.Id, "msdyn_opportunitylinetransaction", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>OrderInvoicingProduct (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_orderinvoicingproduct</para>
/// </summary>
public List<OrderInvoicingProduct> GetOrderInvoicingProducts_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderInvoicingProduct>(Service, this.Id, "msdyn_orderinvoicingproduct", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>OrderInvoicingProduct (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_orderinvoicingproduct</para>
/// </summary>
public List<OrderInvoicingProduct> GetOrderInvoicingProducts_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderInvoicingProduct>(Service, this.Id, "msdyn_orderinvoicingproduct", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ProjectContractLineDetail (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_orderlinetransaction</para>
/// </summary>
public List<ProjectContractLineDetail> GetProjectContractLineDetails_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineDetail>(Service, this.Id, "msdyn_orderlinetransaction", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ProjectContractLineDetail (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_orderlinetransaction</para>
/// </summary>
public List<ProjectContractLineDetail> GetProjectContractLineDetails_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineDetail>(Service, this.Id, "msdyn_orderlinetransaction", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>OrganizationalUnit (Currency)</b></para>
/// <para>Schema Name: msdyn_organizationalunit_currency</para>
/// </summary>
public List<OrganizationalUnit> GetOrganizationalUnits_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrganizationalUnit>(Service, this.Id, "msdyn_organizationalunit", "msdyn_currency", Columns); }
/// <summary>
/// <para><b>OrganizationalUnit (Currency)</b></para>
/// <para>Schema Name: msdyn_organizationalunit_currency</para>
/// </summary>
public List<OrganizationalUnit> GetOrganizationalUnits_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrganizationalUnit>(Service, this.Id, "msdyn_organizationalunit", "msdyn_currency", Columns); }
/// <summary>
/// <para><b>Payment (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_payment</para>
/// </summary>
public List<Payment> GetPayments_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Payment>(Service, this.Id, "msdyn_payment", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Payment (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_payment</para>
/// </summary>
public List<Payment> GetPayments_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Payment>(Service, this.Id, "msdyn_payment", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>PaymentDetail (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_paymentdetail</para>
/// </summary>
public List<PaymentDetail> GetPaymentDetail_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PaymentDetail>(Service, this.Id, "msdyn_paymentdetail", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>PaymentDetail (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_paymentdetail</para>
/// </summary>
public List<PaymentDetail> GetPaymentDetail_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PaymentDetail>(Service, this.Id, "msdyn_paymentdetail", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Project (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_project</para>
/// </summary>
public List<Project> GetProjects_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Project>(Service, this.Id, "msdyn_project", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Project (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_project</para>
/// </summary>
public List<Project> GetProjects_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Project>(Service, this.Id, "msdyn_project", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ProjectApproval (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_projectapproval</para>
/// </summary>
public List<ProjectApproval> GetProjectApproval_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectApproval>(Service, this.Id, "msdyn_projectapproval", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ProjectApproval (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_projectapproval</para>
/// </summary>
public List<ProjectApproval> GetProjectApproval_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectApproval>(Service, this.Id, "msdyn_projectapproval", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ProjectTask (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_projecttask</para>
/// </summary>
public List<ProjectTask> GetProjectTasks_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTask>(Service, this.Id, "msdyn_projecttask", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ProjectTask (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_projecttask</para>
/// </summary>
public List<ProjectTask> GetProjectTasks_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTask>(Service, this.Id, "msdyn_projecttask", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>PurchaseOrder (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_purchaseorder</para>
/// </summary>
public List<PurchaseOrder> GetPurchaseOrders_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrder>(Service, this.Id, "msdyn_purchaseorder", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>PurchaseOrder (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_purchaseorder</para>
/// </summary>
public List<PurchaseOrder> GetPurchaseOrders_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrder>(Service, this.Id, "msdyn_purchaseorder", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>PurchaseOrderBill (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_purchaseorderbill</para>
/// </summary>
public List<PurchaseOrderBill> GetPurchaseOrderBills_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderBill>(Service, this.Id, "msdyn_purchaseorderbill", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>PurchaseOrderBill (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_purchaseorderbill</para>
/// </summary>
public List<PurchaseOrderBill> GetPurchaseOrderBills_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderBill>(Service, this.Id, "msdyn_purchaseorderbill", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>PurchaseOrderProduct (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_purchaseorderproduct</para>
/// </summary>
public List<PurchaseOrderProduct> GetPurchaseOrderProducts_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderProduct>(Service, this.Id, "msdyn_purchaseorderproduct", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>PurchaseOrderProduct (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_purchaseorderproduct</para>
/// </summary>
public List<PurchaseOrderProduct> GetPurchaseOrderProducts_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderProduct>(Service, this.Id, "msdyn_purchaseorderproduct", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>PurchaseOrderReceiptProduct (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_purchaseorderreceiptproduct</para>
/// </summary>
public List<PurchaseOrderReceiptProduct> GetPurchaseOrderReceiptProducts_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderReceiptProduct>(Service, this.Id, "msdyn_purchaseorderreceiptproduct", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>PurchaseOrderReceiptProduct (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_purchaseorderreceiptproduct</para>
/// </summary>
public List<PurchaseOrderReceiptProduct> GetPurchaseOrderReceiptProducts_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderReceiptProduct>(Service, this.Id, "msdyn_purchaseorderreceiptproduct", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>QuoteBookingProduct (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_quotebookingproduct</para>
/// </summary>
public List<QuoteBookingProduct> GetQuoteBookingProducts_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingProduct>(Service, this.Id, "msdyn_quotebookingproduct", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>QuoteBookingProduct (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_quotebookingproduct</para>
/// </summary>
public List<QuoteBookingProduct> GetQuoteBookingProducts_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingProduct>(Service, this.Id, "msdyn_quotebookingproduct", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>QuoteBookingService (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_quotebookingservice</para>
/// </summary>
public List<QuoteBookingService> GetQuoteBookingServices_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingService>(Service, this.Id, "msdyn_quotebookingservice", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>QuoteBookingService (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_quotebookingservice</para>
/// </summary>
public List<QuoteBookingService> GetQuoteBookingServices_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingService>(Service, this.Id, "msdyn_quotebookingservice", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>QuoteBookingSetup (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_quotebookingsetup</para>
/// </summary>
public List<QuoteBookingSetup> GetQuoteBookingSetups_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingSetup>(Service, this.Id, "msdyn_quotebookingsetup", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>QuoteBookingSetup (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_quotebookingsetup</para>
/// </summary>
public List<QuoteBookingSetup> GetQuoteBookingSetups_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingSetup>(Service, this.Id, "msdyn_quotebookingsetup", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>QuoteInvoicingProduct (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_quoteinvoicingproduct</para>
/// </summary>
public List<QuoteInvoicingProduct> GetQuoteInvoicingProducts_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteInvoicingProduct>(Service, this.Id, "msdyn_quoteinvoicingproduct", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>QuoteInvoicingProduct (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_quoteinvoicingproduct</para>
/// </summary>
public List<QuoteInvoicingProduct> GetQuoteInvoicingProducts_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteInvoicingProduct>(Service, this.Id, "msdyn_quoteinvoicingproduct", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>QuoteInvoicingSetup (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_quoteinvoicingsetup</para>
/// </summary>
public List<QuoteInvoicingSetup> GetQuoteInvoicingSetups_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteInvoicingSetup>(Service, this.Id, "msdyn_quoteinvoicingsetup", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>QuoteInvoicingSetup (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_quoteinvoicingsetup</para>
/// </summary>
public List<QuoteInvoicingSetup> GetQuoteInvoicingSetups_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteInvoicingSetup>(Service, this.Id, "msdyn_quoteinvoicingsetup", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>QuoteLineAnalyticsBreakdown (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_quotelineanalyticsbreakdown</para>
/// </summary>
public List<QuoteLineAnalyticsBreakdown> GetQuoteLineAnalyticsBreakdown_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineAnalyticsBreakdown>(Service, this.Id, "msdyn_quotelineanalyticsbreakdown", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>QuoteLineAnalyticsBreakdown (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_quotelineanalyticsbreakdown</para>
/// </summary>
public List<QuoteLineAnalyticsBreakdown> GetQuoteLineAnalyticsBreakdown_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineAnalyticsBreakdown>(Service, this.Id, "msdyn_quotelineanalyticsbreakdown", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>QuoteLineMilestone (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_quotelinescheduleofvalue</para>
/// </summary>
public List<QuoteLineMilestone> GetQuoteLineMilestones_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineMilestone>(Service, this.Id, "msdyn_quotelinescheduleofvalue", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>QuoteLineMilestone (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_quotelinescheduleofvalue</para>
/// </summary>
public List<QuoteLineMilestone> GetQuoteLineMilestones_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineMilestone>(Service, this.Id, "msdyn_quotelinescheduleofvalue", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>QuoteLineDetail (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_quotelinetransaction</para>
/// </summary>
public List<QuoteLineDetail> GetQuoteLineDetail_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineDetail>(Service, this.Id, "msdyn_quotelinetransaction", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>QuoteLineDetail (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_quotelinetransaction</para>
/// </summary>
public List<QuoteLineDetail> GetQuoteLineDetail_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineDetail>(Service, this.Id, "msdyn_quotelinetransaction", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>RolePrice (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_resourcecategorypricelevel</para>
/// </summary>
public List<RolePrice> GetRolePrices_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RolePrice>(Service, this.Id, "msdyn_resourcecategorypricelevel", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>RolePrice (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_resourcecategorypricelevel</para>
/// </summary>
public List<RolePrice> GetRolePrices_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RolePrice>(Service, this.Id, "msdyn_resourcecategorypricelevel", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ResourceRequirement (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_resourcerequirement</para>
/// </summary>
public List<ResourceRequirement> GetResourceRequirements_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceRequirement>(Service, this.Id, "msdyn_resourcerequirement", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ResourceRequirement (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_resourcerequirement</para>
/// </summary>
public List<ResourceRequirement> GetResourceRequirements_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceRequirement>(Service, this.Id, "msdyn_resourcerequirement", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>RMA (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_rma</para>
/// </summary>
public List<RMA> GetRMAs_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMA>(Service, this.Id, "msdyn_rma", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>RMA (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_rma</para>
/// </summary>
public List<RMA> GetRMAs_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMA>(Service, this.Id, "msdyn_rma", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>RMAProduct (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_rmaproduct</para>
/// </summary>
public List<RMAProduct> GetRMAProducts_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMAProduct>(Service, this.Id, "msdyn_rmaproduct", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>RMAProduct (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_rmaproduct</para>
/// </summary>
public List<RMAProduct> GetRMAProducts_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMAProduct>(Service, this.Id, "msdyn_rmaproduct", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>RTV (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_rtv</para>
/// </summary>
public List<RTV> GetRTVs_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTV>(Service, this.Id, "msdyn_rtv", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>RTV (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_rtv</para>
/// </summary>
public List<RTV> GetRTVs_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTV>(Service, this.Id, "msdyn_rtv", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>RTVProduct (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_rtvproduct</para>
/// </summary>
public List<RTVProduct> GetRTVProducts_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTVProduct>(Service, this.Id, "msdyn_rtvproduct", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>RTVProduct (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_rtvproduct</para>
/// </summary>
public List<RTVProduct> GetRTVProducts_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTVProduct>(Service, this.Id, "msdyn_rtvproduct", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>TransactionCategoryPrice (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_transactioncategorypricelevel</para>
/// </summary>
public List<TransactionCategoryPrice> GetTransactionCategoryPrices_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TransactionCategoryPrice>(Service, this.Id, "msdyn_transactioncategorypricelevel", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>TransactionCategoryPrice (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_transactioncategorypricelevel</para>
/// </summary>
public List<TransactionCategoryPrice> GetTransactionCategoryPrices_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TransactionCategoryPrice>(Service, this.Id, "msdyn_transactioncategorypricelevel", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>WorkOrder (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_workorder</para>
/// </summary>
public List<WorkOrder> GetWorkOrders_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrder>(Service, this.Id, "msdyn_workorder", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>WorkOrder (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_workorder</para>
/// </summary>
public List<WorkOrder> GetWorkOrders_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrder>(Service, this.Id, "msdyn_workorder", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>WorkOrderProduct (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_workorderproduct</para>
/// </summary>
public List<WorkOrderProduct> GetWorkOrderProducts_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderProduct>(Service, this.Id, "msdyn_workorderproduct", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>WorkOrderProduct (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_workorderproduct</para>
/// </summary>
public List<WorkOrderProduct> GetWorkOrderProducts_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderProduct>(Service, this.Id, "msdyn_workorderproduct", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>WorkOrderService (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_workorderservice</para>
/// </summary>
public List<WorkOrderService> GetWorkOrderServices_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderService>(Service, this.Id, "msdyn_workorderservice", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>WorkOrderService (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_msdyn_workorderservice</para>
/// </summary>
public List<WorkOrderService> GetWorkOrderServices_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderService>(Service, this.Id, "msdyn_workorderservice", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>NewProcess (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_newprocess</para>
/// </summary>
public List<NewProcess> GetNewProcess_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<NewProcess>(Service, this.Id, "newprocess", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>NewProcess (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_newprocess</para>
/// </summary>
public List<NewProcess> GetNewProcess_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<NewProcess>(Service, this.Id, "newprocess", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>OfficeGraphDocument (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_officegraphdocument</para>
/// </summary>
public List<OfficeGraphDocument> GetOfficeGraphDocuments_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OfficeGraphDocument>(Service, this.Id, "officegraphdocument", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>OfficeGraphDocument (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_officegraphdocument</para>
/// </summary>
public List<OfficeGraphDocument> GetOfficeGraphDocuments_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OfficeGraphDocument>(Service, this.Id, "officegraphdocument", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Opportunity (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_opportunity</para>
/// </summary>
public List<Opportunity> GetOpportunities_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Opportunity>(Service, this.Id, "opportunity", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Opportunity (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_opportunity</para>
/// </summary>
public List<Opportunity> GetOpportunities_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Opportunity>(Service, this.Id, "opportunity", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>OpportunityClose (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_opportunityclose</para>
/// </summary>
public List<OpportunityClose> GetOpportunityCloseActivities_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityClose>(Service, this.Id, "opportunityclose", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>OpportunityClose (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_opportunityclose</para>
/// </summary>
public List<OpportunityClose> GetOpportunityCloseActivities_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityClose>(Service, this.Id, "opportunityclose", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>OpportunityLine (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_opportunityproduct</para>
/// </summary>
public List<OpportunityLine> GetOpportunityLines_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLine>(Service, this.Id, "opportunityproduct", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>OpportunityLine (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_opportunityproduct</para>
/// </summary>
public List<OpportunityLine> GetOpportunityLines_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLine>(Service, this.Id, "opportunityproduct", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>OpportunitySalesProcess (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_opportunitysalesprocess</para>
/// </summary>
public List<OpportunitySalesProcess> GetOpportunitySalesProcess_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunitySalesProcess>(Service, this.Id, "opportunitysalesprocess", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>OpportunitySalesProcess (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_opportunitysalesprocess</para>
/// </summary>
public List<OpportunitySalesProcess> GetOpportunitySalesProcess_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunitySalesProcess>(Service, this.Id, "opportunitysalesprocess", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Organization (Currency)</b></para>
/// <para>Schema Name: basecurrency_organization</para>
/// </summary>
public List<Organization> GetOrganizations_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Organization>(Service, this.Id, "organization", "basecurrencyid", Columns); }
/// <summary>
/// <para><b>Organization (Currency)</b></para>
/// <para>Schema Name: basecurrency_organization</para>
/// </summary>
public List<Organization> GetOrganizations_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Organization>(Service, this.Id, "organization", "basecurrencyid", Columns); }
/// <summary>
/// <para><b>PhoneCall (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_PhoneCall</para>
/// </summary>
public List<PhoneCall> GetPhoneCalls_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneCall>(Service, this.Id, "phonecall", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>PhoneCall (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_PhoneCall</para>
/// </summary>
public List<PhoneCall> GetPhoneCalls_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneCall>(Service, this.Id, "phonecall", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>PhoneToCaseProcess (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_phonetocaseprocess</para>
/// </summary>
public List<PhoneToCaseProcess> GetPhoneToCaseProcess_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneToCaseProcess>(Service, this.Id, "phonetocaseprocess", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>PhoneToCaseProcess (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_phonetocaseprocess</para>
/// </summary>
public List<PhoneToCaseProcess> GetPhoneToCaseProcess_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneToCaseProcess>(Service, this.Id, "phonetocaseprocess", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Position (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_position</para>
/// </summary>
public List<Position> GetPositions_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Position>(Service, this.Id, "position", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Position (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_position</para>
/// </summary>
public List<Position> GetPositions_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Position>(Service, this.Id, "position", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>PriceList (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_pricelevel</para>
/// </summary>
public List<PriceList> GetPriceLists_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PriceList>(Service, this.Id, "pricelevel", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>PriceList (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_pricelevel</para>
/// </summary>
public List<PriceList> GetPriceLists_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PriceList>(Service, this.Id, "pricelevel", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: TransactionCurrency_ProcessSessions</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: TransactionCurrency_ProcessSessions</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Product (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_product</para>
/// </summary>
public List<Product> GetProducts_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Product>(Service, this.Id, "product", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Product (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_product</para>
/// </summary>
public List<Product> GetProducts_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Product>(Service, this.Id, "product", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ProductAssociation (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_ProductAssociation</para>
/// </summary>
public List<ProductAssociation> GetProductAssociations_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProductAssociation>(Service, this.Id, "productassociation", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ProductAssociation (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_ProductAssociation</para>
/// </summary>
public List<ProductAssociation> GetProductAssociations_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProductAssociation>(Service, this.Id, "productassociation", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>PriceListItem (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_productpricelevel</para>
/// </summary>
public List<PriceListItem> GetPriceListItems_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PriceListItem>(Service, this.Id, "productpricelevel", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>PriceListItem (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_productpricelevel</para>
/// </summary>
public List<PriceListItem> GetPriceListItems_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PriceListItem>(Service, this.Id, "productpricelevel", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ProductRelationship (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_ProductSubstitute</para>
/// </summary>
public List<ProductRelationship> GetProductRelationships_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProductRelationship>(Service, this.Id, "productsubstitute", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ProductRelationship (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_ProductSubstitute</para>
/// </summary>
public List<ProductRelationship> GetProductRelationships_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProductRelationship>(Service, this.Id, "productsubstitute", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>QuarterlyFiscalCalendar (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_quarterlyfiscalcalendar</para>
/// </summary>
public List<QuarterlyFiscalCalendar> GetQuarterlyFiscalCalendars_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuarterlyFiscalCalendar>(Service, this.Id, "quarterlyfiscalcalendar", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>QuarterlyFiscalCalendar (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_quarterlyfiscalcalendar</para>
/// </summary>
public List<QuarterlyFiscalCalendar> GetQuarterlyFiscalCalendars_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuarterlyFiscalCalendar>(Service, this.Id, "quarterlyfiscalcalendar", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Queue (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_Queue</para>
/// </summary>
public List<Queue> GetQueues_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Queue>(Service, this.Id, "queue", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Queue (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_Queue</para>
/// </summary>
public List<Queue> GetQueues_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Queue>(Service, this.Id, "queue", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>QueueItem (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_QueueItem</para>
/// </summary>
public List<QueueItem> GetQueueItems_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QueueItem>(Service, this.Id, "queueitem", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>QueueItem (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_QueueItem</para>
/// </summary>
public List<QueueItem> GetQueueItems_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QueueItem>(Service, this.Id, "queueitem", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Quote (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_quote</para>
/// </summary>
public List<Quote> GetQuotes_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Quote>(Service, this.Id, "quote", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Quote (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_quote</para>
/// </summary>
public List<Quote> GetQuotes_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Quote>(Service, this.Id, "quote", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>QuoteLine (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_quotedetail</para>
/// </summary>
public List<QuoteLine> GetQuoteLines_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLine>(Service, this.Id, "quotedetail", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>QuoteLine (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_quotedetail</para>
/// </summary>
public List<QuoteLine> GetQuoteLines_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLine>(Service, this.Id, "quotedetail", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>RatingModel (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_ratingmodel</para>
/// </summary>
public List<RatingModel> GetRatingModels_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RatingModel>(Service, this.Id, "ratingmodel", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>RatingModel (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_ratingmodel</para>
/// </summary>
public List<RatingModel> GetRatingModels_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RatingModel>(Service, this.Id, "ratingmodel", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>RatingValue (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_ratingvalue</para>
/// </summary>
public List<RatingValue> GetRatingValues_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RatingValue>(Service, this.Id, "ratingvalue", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>RatingValue (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_ratingvalue</para>
/// </summary>
public List<RatingValue> GetRatingValues_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RatingValue>(Service, this.Id, "ratingvalue", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>DocumentSuggestions (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_recommendeddocument</para>
/// </summary>
public List<DocumentSuggestions> GetDocumentSuggestions_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DocumentSuggestions>(Service, this.Id, "recommendeddocument", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>DocumentSuggestions (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_recommendeddocument</para>
/// </summary>
public List<DocumentSuggestions> GetDocumentSuggestions_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DocumentSuggestions>(Service, this.Id, "recommendeddocument", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>RecurringAppointment (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_RecurringAppointmentMaster</para>
/// </summary>
public List<RecurringAppointment> GetRecurringAppointments_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecurringAppointment>(Service, this.Id, "recurringappointmentmaster", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>RecurringAppointment (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_RecurringAppointmentMaster</para>
/// </summary>
public List<RecurringAppointment> GetRecurringAppointments_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecurringAppointment>(Service, this.Id, "recurringappointmentmaster", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ReportRelatedCategory (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_ReportCategory</para>
/// </summary>
public List<ReportRelatedCategory> GetReportRelatedCategories_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ReportRelatedCategory>(Service, this.Id, "reportcategory", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ReportRelatedCategory (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_ReportCategory</para>
/// </summary>
public List<ReportRelatedCategory> GetReportRelatedCategories_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ReportRelatedCategory>(Service, this.Id, "reportcategory", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>RoutingRuleSet (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_Routingrule</para>
/// </summary>
public List<RoutingRuleSet> GetRoutingRuleSets_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RoutingRuleSet>(Service, this.Id, "routingrule", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>RoutingRuleSet (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_Routingrule</para>
/// </summary>
public List<RoutingRuleSet> GetRoutingRuleSets_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RoutingRuleSet>(Service, this.Id, "routingrule", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>RuleItem (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_routingruleitem</para>
/// </summary>
public List<RuleItem> GetRuleItems_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RuleItem>(Service, this.Id, "routingruleitem", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>RuleItem (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_routingruleitem</para>
/// </summary>
public List<RuleItem> GetRuleItems_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RuleItem>(Service, this.Id, "routingruleitem", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>SalesLiterature (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_SalesLiterature</para>
/// </summary>
public List<SalesLiterature> GetSalesLiterature_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SalesLiterature>(Service, this.Id, "salesliterature", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>SalesLiterature (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_SalesLiterature</para>
/// </summary>
public List<SalesLiterature> GetSalesLiterature_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SalesLiterature>(Service, this.Id, "salesliterature", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Order (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_salesorder</para>
/// </summary>
public List<Order> GetOrders_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Order>(Service, this.Id, "salesorder", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Order (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_salesorder</para>
/// </summary>
public List<Order> GetOrders_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Order>(Service, this.Id, "salesorder", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>OrderLine (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_salesorderdetail</para>
/// </summary>
public List<OrderLine> GetOrderLines_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderLine>(Service, this.Id, "salesorderdetail", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>OrderLine (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_salesorderdetail</para>
/// </summary>
public List<OrderLine> GetOrderLines_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderLine>(Service, this.Id, "salesorderdetail", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>SemiannualFiscalCalendar (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_semiannualfiscalcalendar</para>
/// </summary>
public List<SemiannualFiscalCalendar> GetSemiannualFiscalCalendars_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SemiannualFiscalCalendar>(Service, this.Id, "semiannualfiscalcalendar", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>SemiannualFiscalCalendar (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_semiannualfiscalcalendar</para>
/// </summary>
public List<SemiannualFiscalCalendar> GetSemiannualFiscalCalendars_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SemiannualFiscalCalendar>(Service, this.Id, "semiannualfiscalcalendar", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ServiceActivity (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_ServiceAppointment</para>
/// </summary>
public List<ServiceActivity> GetServiceActivities_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceActivity>(Service, this.Id, "serviceappointment", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>ServiceActivity (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_ServiceAppointment</para>
/// </summary>
public List<ServiceActivity> GetServiceActivities_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceActivity>(Service, this.Id, "serviceappointment", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>SharepointDocument (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_SharePointDocument</para>
/// </summary>
public List<SharepointDocument> GetDocuments_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SharepointDocument>(Service, this.Id, "sharepointdocument", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>SharepointDocument (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_SharePointDocument</para>
/// </summary>
public List<SharepointDocument> GetDocuments_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SharepointDocument>(Service, this.Id, "sharepointdocument", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>DocumentLocation (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_SharePointDocumentLocation</para>
/// </summary>
public List<DocumentLocation> GetDocumentLocations_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DocumentLocation>(Service, this.Id, "sharepointdocumentlocation", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>DocumentLocation (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_SharePointDocumentLocation</para>
/// </summary>
public List<DocumentLocation> GetDocumentLocations_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DocumentLocation>(Service, this.Id, "sharepointdocumentlocation", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>SharePointSite (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_SharePointSite</para>
/// </summary>
public List<SharePointSite> GetSharePointSites_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SharePointSite>(Service, this.Id, "sharepointsite", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>SharePointSite (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_SharePointSite</para>
/// </summary>
public List<SharePointSite> GetSharePointSites_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SharePointSite>(Service, this.Id, "sharepointsite", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>SimilarityRule (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_SimilarityRule</para>
/// </summary>
public List<SimilarityRule> GetSimilarityRules_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SimilarityRule>(Service, this.Id, "similarityrule", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>SimilarityRule (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_SimilarityRule</para>
/// </summary>
public List<SimilarityRule> GetSimilarityRules_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SimilarityRule>(Service, this.Id, "similarityrule", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>SLA (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_SLA</para>
/// </summary>
public List<SLA> GetSLAs_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SLA>(Service, this.Id, "sla", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>SLA (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_SLA</para>
/// </summary>
public List<SLA> GetSLAs_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SLA>(Service, this.Id, "sla", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>SLAItem (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_SLAItem</para>
/// </summary>
public List<SLAItem> GetSLAItems_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SLAItem>(Service, this.Id, "slaitem", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>SLAItem (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_SLAItem</para>
/// </summary>
public List<SLAItem> GetSLAItems_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SLAItem>(Service, this.Id, "slaitem", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>SLAKPIInstance (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_slakpiinstance</para>
/// </summary>
public List<SLAKPIInstance> GetSLAKPIInstances_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SLAKPIInstance>(Service, this.Id, "slakpiinstance", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>SLAKPIInstance (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_slakpiinstance</para>
/// </summary>
public List<SLAKPIInstance> GetSLAKPIInstances_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SLAKPIInstance>(Service, this.Id, "slakpiinstance", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>SocialActivity (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_socialactivity</para>
/// </summary>
public List<SocialActivity> GetSocialActivities_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialActivity>(Service, this.Id, "socialactivity", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>SocialActivity (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_socialactivity</para>
/// </summary>
public List<SocialActivity> GetSocialActivities_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialActivity>(Service, this.Id, "socialactivity", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>SocialProfile (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_SocialProfile</para>
/// </summary>
public List<SocialProfile> GetSocialProfiles_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialProfile>(Service, this.Id, "socialprofile", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>SocialProfile (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_SocialProfile</para>
/// </summary>
public List<SocialProfile> GetSocialProfiles_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialProfile>(Service, this.Id, "socialprofile", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: TransactionCurrency_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: TransactionCurrency_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>User (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_SystemUser</para>
/// </summary>
public List<User> GetUsers_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<User>(Service, this.Id, "systemuser", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>User (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_SystemUser</para>
/// </summary>
public List<User> GetUsers_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<User>(Service, this.Id, "systemuser", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Task (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_Task</para>
/// </summary>
public List<Task> GetTasks_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Task>(Service, this.Id, "task", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Task (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_Task</para>
/// </summary>
public List<Task> GetTasks_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Task>(Service, this.Id, "task", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Team (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_Team</para>
/// </summary>
public List<Team> GetTeams_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Team>(Service, this.Id, "team", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Team (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_Team</para>
/// </summary>
public List<Team> GetTeams_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Team>(Service, this.Id, "team", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Territory (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_Territory</para>
/// </summary>
public List<Territory> GetTerritories_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Territory>(Service, this.Id, "territory", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Territory (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_Territory</para>
/// </summary>
public List<Territory> GetTerritories_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Territory>(Service, this.Id, "territory", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Theme (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_Theme</para>
/// </summary>
public List<Theme> GetThemes_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Theme>(Service, this.Id, "theme", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>Theme (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_Theme</para>
/// </summary>
public List<Theme> GetThemes_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Theme>(Service, this.Id, "theme", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>TranslationProcess (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_translationprocess</para>
/// </summary>
public List<TranslationProcess> GetTranslationProcess_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TranslationProcess>(Service, this.Id, "translationprocess", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>TranslationProcess (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_translationprocess</para>
/// </summary>
public List<TranslationProcess> GetTranslationProcess_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TranslationProcess>(Service, this.Id, "translationprocess", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>UntrackedEmail (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_UntrackedEmail</para>
/// </summary>
public List<UntrackedEmail> GetUntrackedEmailMessages_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UntrackedEmail>(Service, this.Id, "untrackedemail", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>UntrackedEmail (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_UntrackedEmail</para>
/// </summary>
public List<UntrackedEmail> GetUntrackedEmailMessages_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UntrackedEmail>(Service, this.Id, "untrackedemail", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_transactioncurrency</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_transactioncurrency</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserFiscalCalendar (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_userfiscalcalendar</para>
/// </summary>
public List<UserFiscalCalendar> GetUserFiscalCalendars_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserFiscalCalendar>(Service, this.Id, "userfiscalcalendar", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>UserFiscalCalendar (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_userfiscalcalendar</para>
/// </summary>
public List<UserFiscalCalendar> GetUserFiscalCalendars_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserFiscalCalendar>(Service, this.Id, "userfiscalcalendar", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>UserMapping (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_UserMapping</para>
/// </summary>
public List<UserMapping> GetUserMappings_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserMapping>(Service, this.Id, "usermapping", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>UserMapping (Currency)</b></para>
/// <para>Schema Name: TransactionCurrency_UserMapping</para>
/// </summary>
public List<UserMapping> GetUserMappings_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserMapping>(Service, this.Id, "usermapping", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>UserSettings (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_usersettings</para>
/// </summary>
public List<UserSettings> GetUserSettings_Currency (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserSettings>(Service, this.Id, "usersettings", "transactioncurrencyid", Columns); }
/// <summary>
/// <para><b>UserSettings (Currency)</b></para>
/// <para>Schema Name: transactioncurrency_usersettings</para>
/// </summary>
public List<UserSettings> GetUserSettings_Currency (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserSettings>(Service, this.Id, "usersettings", "transactioncurrencyid", Columns); }


        

        

        public enum eStatus
{
	///<summary><para>Active</para>
	///<para>Value = 0</para></summary>
	[Description("Active")]
	Active = 0, 
	///<summary><para>Inactive</para>
	///<para>Value = 1</para></summary>
	[Description("Inactive")]
	Inactive = 1
}
public enum eStatusReason
{
	///<summary><para>Active</para>
	///<para>Value = 1</para></summary>
	[Description("Active")]
	Active_Active = 1, 
	///<summary><para>Inactive</para>
	///<para>Value = 2</para></summary>
	[Description("Inactive")]
	Inactive_Inactive = 2
}
public void SetState(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>entityimage_timestamp</para>
	/// <para>entityimage_timestamp</para></summary>
	public const string EntityImage_Timestamp = "entityimage_timestamp";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>entityimage_url</para>
	/// <para>entityimage_url</para></summary>
	public const string EntityImage_URL = "entityimage_url";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Currency Code</para>
	/// <para>isocurrencycode</para></summary>
	public const string CurrencyCode = "isocurrencycode";
	/// <summary><para>Currency Name</para>
	/// <para>currencyname</para></summary>
	public const string CurrencyName = "currencyname";
	/// <summary><para>Currency Precision</para>
	/// <para>currencyprecision</para></summary>
	public const string CurrencyPrecision = "currencyprecision";
	/// <summary><para>Currency Symbol</para>
	/// <para>currencysymbol</para></summary>
	public const string CurrencySymbol = "currencysymbol";
	/// <summary><para>Entity Image Id</para>
	/// <para>entityimageid</para></summary>
	public const string EntityImageId = "entityimageid";
	/// <summary><para>Exchange Rate</para>
	/// <para>exchangerate</para></summary>
	public const string ExchangeRate = "exchangerate";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string ImportSequenceNumber = "importsequencenumber";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>Organization</para>
	/// <para>organizationid</para></summary>
	public const string Organization = "organizationid";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string RecordCreatedOn = "overriddencreatedon";
	/// <summary><para>Status</para>
	/// <para>statecode</para></summary>
	public const string Status = "statecode";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string StatusReason = "statuscode";
	/// <summary><para>Transaction Currency</para>
	/// <para>transactioncurrencyid</para></summary>
	public const string TransactionCurrencyId = "transactioncurrencyid";
	/// <summary><para>UniqueDscId</para>
	/// <para>uniquedscid</para></summary>
	public const string UniqueDscId = "uniquedscid";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
}

    }
}

// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("msdyn_workorder")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class WorkOrder : BaseProxyClass
    {
        public new const string LogicalName = "msdyn_workorder";
        public const int ObjectTypeCode = 10173;
        public const string PrimaryIdAttribute = "msdyn_workorderid";
        public const string PrimaryNameAttribute = "msdyn_name";
        
        static WorkOrder()
        {
            BaseProxyClass.RegisterProxyType(typeof(WorkOrder), "msdyn_workorder");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public WorkOrder() : base(new Entity("msdyn_workorder")) { }
        public WorkOrder(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<WorkOrder>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_opportunityidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_opportunityidname")]
public string Msdyn_OpportunityIdName
{
	get { return this.GetPropertyValue<string>("msdyn_opportunityidname"); }
}
///<summary>
///<para>Logical Name: msdyn_closedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_closedbyyominame")]
public string Msdyn_ClosedByYomiName
{
	get { return this.GetPropertyValue<string>("msdyn_closedbyyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_serviceaccountname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_serviceaccountname")]
public string Msdyn_ServiceAccountName
{
	get { return this.GetPropertyValue<string>("msdyn_serviceaccountname"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_billingaccountname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_billingaccountname")]
public string Msdyn_BillingAccountName
{
	get { return this.GetPropertyValue<string>("msdyn_billingaccountname"); }
}
///<summary>
///<para>Logical Name: owneridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridname")]
public string OwnerIdName
{
	get { return this.GetPropertyValue<string>("owneridname"); }
}
///<summary>
///<para>Logical Name: msdyn_reportedbycontactyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_reportedbycontactyominame")]
public string Msdyn_ReportedByContactYomiName
{
	get { return this.GetPropertyValue<string>("msdyn_reportedbycontactyominame"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_preferredresourcename</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_preferredresourcename")]
public string Msdyn_PreferredResourceName
{
	get { return this.GetPropertyValue<string>("msdyn_preferredresourcename"); }
}
///<summary>
///<para>Logical Name: msdyn_workordertypename</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workordertypename")]
public string Msdyn_WorkOrderTypeName
{
	get { return this.GetPropertyValue<string>("msdyn_workordertypename"); }
}
///<summary>
///<para>Logical Name: msdyn_billingaccountyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_billingaccountyominame")]
public string Msdyn_BillingAccountYomiName
{
	get { return this.GetPropertyValue<string>("msdyn_billingaccountyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_priorityname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_priorityname")]
public string Msdyn_PriorityName
{
	get { return this.GetPropertyValue<string>("msdyn_priorityname"); }
}
///<summary>
///<para>Logical Name: msdyn_primaryincidenttypename</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_primaryincidenttypename")]
public string Msdyn_PrimaryIncidentTypeName
{
	get { return this.GetPropertyValue<string>("msdyn_primaryincidenttypename"); }
}
///<summary>
///<para>Logical Name: msdyn_parentworkordername</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_parentworkordername")]
public string Msdyn_ParentWorkOrderName
{
	get { return this.GetPropertyValue<string>("msdyn_parentworkordername"); }
}
///<summary>
///<para>Logical Name: msdyn_pricelistname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_pricelistname")]
public string Msdyn_PriceListName
{
	get { return this.GetPropertyValue<string>("msdyn_pricelistname"); }
}
///<summary>
///<para>Logical Name: msdyn_customerassetname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_customerassetname")]
public string Msdyn_CustomerAssetName
{
	get { return this.GetPropertyValue<string>("msdyn_customerassetname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_agreementname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_agreementname")]
public string Msdyn_AgreementName
{
	get { return this.GetPropertyValue<string>("msdyn_agreementname"); }
}
///<summary>
///<para>Logical Name: msdyn_serviceaccountyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_serviceaccountyominame")]
public string Msdyn_ServiceAccountYomiName
{
	get { return this.GetPropertyValue<string>("msdyn_serviceaccountyominame"); }
}
///<summary>
///<para>Logical Name: owneridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridyominame")]
public string OwnerIdYomiName
{
	get { return this.GetPropertyValue<string>("owneridyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_substatusname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_substatusname")]
public string Msdyn_SubStatusName
{
	get { return this.GetPropertyValue<string>("msdyn_substatusname"); }
}
///<summary>
///<para>Logical Name: msdyn_serviceterritoryname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_serviceterritoryname")]
public string Msdyn_ServiceTerritoryName
{
	get { return this.GetPropertyValue<string>("msdyn_serviceterritoryname"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_taxcodename</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_taxcodename")]
public string Msdyn_TaxCodeName
{
	get { return this.GetPropertyValue<string>("msdyn_taxcodename"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_reportedbycontactname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_reportedbycontactname")]
public string Msdyn_ReportedByContactName
{
	get { return this.GetPropertyValue<string>("msdyn_reportedbycontactname"); }
}
///<summary>
///<para>Logical Name: msdyn_timegroupdetailselectedname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_timegroupdetailselectedname")]
public string Msdyn_TimeGroupDetailSelectedName
{
	get { return this.GetPropertyValue<string>("msdyn_timegroupdetailselectedname"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyidname")]
public string TransactionCurrencyIdName
{
	get { return this.GetPropertyValue<string>("transactioncurrencyidname"); }
}
///<summary>
///<para>Logical Name: msdyn_timegroupname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_timegroupname")]
public string Msdyn_TimeGroupName
{
	get { return this.GetPropertyValue<string>("msdyn_timegroupname"); }
}
///<summary>
///<para>Logical Name: msdyn_closedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_closedbyname")]
public string Msdyn_ClosedByName
{
	get { return this.GetPropertyValue<string>("msdyn_closedbyname"); }
}
///<summary>
///<para>Logical Name: owneridtype</para>
///</summary>
[AttributeLogicalNameAttribute("owneridtype")]
public string OwnerIdType
{
	get { return this.GetPropertyValue<string>("owneridtype"); }
	set { this.SetPropertyValue<string>("owneridtype", value, "OwnerIdType"); }
}
///<summary>
///<para>Logical Name: msdyn_servicerequestname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_servicerequestname")]
public string Msdyn_ServiceRequestName
{
	get { return this.GetPropertyValue<string>("msdyn_servicerequestname"); }
}
///<summary>
///<para>Logical Name: msdyn_address1</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_address1")]
public string Address1
{
	get { return this.GetPropertyValue<string>("msdyn_address1"); }
	set { this.SetPropertyValue("msdyn_address1", value, 250, "Address1"); }
}
///<summary>
///<para>Logical Name: msdyn_address2</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_address2")]
public string Address2
{
	get { return this.GetPropertyValue<string>("msdyn_address2"); }
	set { this.SetPropertyValue("msdyn_address2", value, 250, "Address2"); }
}
///<summary>
///<para>Logical Name: msdyn_address3</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_address3")]
public string Address3
{
	get { return this.GetPropertyValue<string>("msdyn_address3"); }
	set { this.SetPropertyValue("msdyn_address3", value, 250, "Address3"); }
}
///<summary>
///<para>Logical Name: msdyn_addressname</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_addressname")]
public string AddressName
{
	get { return this.GetPropertyValue<string>("msdyn_addressname"); }
	set { this.SetPropertyValue("msdyn_addressname", value, 250, "AddressName"); }
}
///<summary>
///<para>Logical Name: msdyn_agreement</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_agreement")]
public EntityReference Agreement
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_agreement"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_agreement", value, "Agreement"); }
}
///<summary>
///<para>Logical Name: msdyn_billingaccount</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_billingaccount")]
public EntityReference BillingAccount
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_billingaccount"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_billingaccount", value, "BillingAccount"); }
}
///<summary>
///<para>Logical Name: msdyn_bookingsummary</para>
///<para>Max Length: 10000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_bookingsummary")]
public string BookingSummary
{
	get { return this.GetPropertyValue<string>("msdyn_bookingsummary"); }
	set { this.SetPropertyValue("msdyn_bookingsummary", value, 10000, "BookingSummary"); }
}
///<summary>
///<para>Logical Name: msdyn_servicerequest</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_servicerequest")]
public EntityReference @Case
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_servicerequest"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_servicerequest", value, "@Case"); }
}
///<summary>
///<para>Logical Name: msdyn_childindex</para>
///<para>Minimum Value: 1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_childindex")]
public int? ChildIndex
{
	get { return this.GetPropertyValue<int?>("msdyn_childindex"); }
	set { this.SetPropertyValue("msdyn_childindex", (int?)value, (int)1, (int)2147483647, "ChildIndex"); }
}
///<summary>
///<para>Logical Name: msdyn_city</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_city")]
public string City
{
	get { return this.GetPropertyValue<string>("msdyn_city"); }
	set { this.SetPropertyValue("msdyn_city", value, 80, "City"); }
}
///<summary>
///<para>Logical Name: msdyn_closedby</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_closedby")]
public EntityReference ClosedBy
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_closedby"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_closedby", value, "ClosedBy"); }
}
///<summary>
///<para>Logical Name: msdyn_timeclosed</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_timeclosed")]
public DateTime? ClosedOn
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_timeclosed"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_timeclosed", value, "ClosedOn"); }
}
///<summary>
///<para>Logical Name: msdyn_country</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_country")]
public string Country_Region
{
	get { return this.GetPropertyValue<string>("msdyn_country"); }
	set { this.SetPropertyValue("msdyn_country", value, 80, "Country_Region"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyid</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyid")]
public EntityReference Currency
{
	get { return this.GetPropertyValue<EntityReference>("transactioncurrencyid"); }
	set { this.SetPropertyValue<EntityReference>("transactioncurrencyid", value, "Currency"); }
}
///<summary>
///<para>Logical Name: msdyn_datewindowend</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_datewindowend")]
public DateTime? DateWindowEnd
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_datewindowend"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_datewindowend", value, "DateWindowEnd"); }
}
///<summary>
///<para>Logical Name: msdyn_datewindowstart</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_datewindowstart")]
public DateTime? DateWindowStart
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_datewindowstart"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_datewindowstart", value, "DateWindowStart"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatesubtotalamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? EstimateSubtotalAmount
{
	get
	{
		if (EstimateSubtotalAmountMoney != null) { return EstimateSubtotalAmountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.EstimateSubtotalAmountMoney = new Money(value.Value); }
		else this.EstimateSubtotalAmountMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimatesubtotalamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatesubtotalamount")]
public Money EstimateSubtotalAmountMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimatesubtotalamount"); }
	set { this.SetPropertyValue("msdyn_estimatesubtotalamount", (Money)value, (decimal)0, (decimal)1000000000, "EstimateSubtotalAmountMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatesubtotalamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? EstimateSubtotalAmount_Base
{
	get
	{
		if (EstimateSubtotalAmount_BaseMoney != null) { return EstimateSubtotalAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimatesubtotalamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatesubtotalamount_base")]
public Money EstimateSubtotalAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimatesubtotalamount_base"); }
}
///<summary>
///<para>Logical Name: exchangerate</para>
///<para>Minimum Value: 0.0000000001</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 10</para>
///</summary>
[AttributeLogicalNameAttribute("exchangerate")]
public decimal? ExchangeRate
{
	get { return this.GetPropertyValue<decimal?>("exchangerate"); }
}
///<summary>
///<para>Logical Name: msdyn_followupnote</para>
///<para>Max Length: 8000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_followupnote")]
public string FollowUpNote_Deprecated
{
	get { return this.GetPropertyValue<string>("msdyn_followupnote"); }
	set { this.SetPropertyValue("msdyn_followupnote", value, 8000, "FollowUpNote_Deprecated"); }
}
///<summary>
///<para>Logical Name: msdyn_followuprequired</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_followuprequired")]
public bool? FollowUpRequired_Deprecated
{
	get { return this.GetPropertyValue<bool?>("msdyn_followuprequired"); }
	set { this.SetPropertyValue<bool?>("msdyn_followuprequired", value, "FollowUpRequired_Deprecated"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? ImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "ImportSequenceNumber"); }
}
///<summary>
///<para>Logical Name: msdyn_instructions</para>
///<para>Max Length: 8000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_instructions")]
public string Instructions
{
	get { return this.GetPropertyValue<string>("msdyn_instructions"); }
	set { this.SetPropertyValue("msdyn_instructions", value, 8000, "Instructions"); }
}
///<summary>
///<para>Logical Name: msdyn_internalflags</para>
///<para>Max Length: 1048576 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_internalflags")]
public string InternalFlags
{
	get { return this.GetPropertyValue<string>("msdyn_internalflags"); }
	set { this.SetPropertyValue("msdyn_internalflags", value, 1048576, "InternalFlags"); }
}
///<summary>
///<para>Logical Name: msdyn_isfollowup</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_isfollowup")]
public bool? IsFollowUp_Deprecated
{
	get { return this.GetPropertyValue<bool?>("msdyn_isfollowup"); }
	set { this.SetPropertyValue<bool?>("msdyn_isfollowup", value, "IsFollowUp_Deprecated"); }
}
///<summary>
///<para>Logical Name: msdyn_ismobile</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_ismobile")]
public bool? IsMobile
{
	get { return this.GetPropertyValue<bool?>("msdyn_ismobile"); }
	set { this.SetPropertyValue<bool?>("msdyn_ismobile", value, "IsMobile"); }
}
///<summary>
///<para>Logical Name: msdyn_latitude</para>
///<para>Minimum Value: -90</para>
///<para>Maximum Value: 90</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_latitude")]
public double? Latitude
{
	get { return this.GetPropertyValue<double?>("msdyn_latitude"); }
	set { this.SetPropertyValue("msdyn_latitude", (double?)value, (double)-90, (double)90, "Latitude"); }
}
///<summary>
///<para>Logical Name: msdyn_longitude</para>
///<para>Minimum Value: -180</para>
///<para>Maximum Value: 180</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_longitude")]
public double? Longitude
{
	get { return this.GetPropertyValue<double?>("msdyn_longitude"); }
	set { this.SetPropertyValue("msdyn_longitude", (double?)value, (double)-180, (double)180, "Longitude"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: msdyn_opportunityid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_opportunityid")]
public EntityReference Opportunity
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_opportunityid"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_opportunityid", value, "Opportunity"); }
}
///<summary>
///<para>Logical Name: ownerid</para>
///</summary>
[AttributeLogicalNameAttribute("ownerid")]
public EntityReference Owner
{
	get { return this.GetPropertyValue<EntityReference>("ownerid"); }
	set { this.SetPropertyValue<EntityReference>("ownerid", value, "Owner"); }
}
///<summary>
///<para>Logical Name: owningbusinessunit</para>
///</summary>
[AttributeLogicalNameAttribute("owningbusinessunit")]
public EntityReference OwningBusinessUnit
{
	get { return this.GetPropertyValue<EntityReference>("owningbusinessunit"); }
}
///<summary>
///<para>Logical Name: owningteam</para>
///</summary>
[AttributeLogicalNameAttribute("owningteam")]
public EntityReference OwningTeam
{
	get { return this.GetPropertyValue<EntityReference>("owningteam"); }
}
///<summary>
///<para>Logical Name: owninguser</para>
///</summary>
[AttributeLogicalNameAttribute("owninguser")]
public EntityReference OwningUser
{
	get { return this.GetPropertyValue<EntityReference>("owninguser"); }
}
///<summary>
///<para>Logical Name: msdyn_parentworkorder</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_parentworkorder")]
public EntityReference ParentWorkOrder
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_parentworkorder"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_parentworkorder", value, "ParentWorkOrder"); }
}
///<summary>
///<para>Logical Name: msdyn_postalcode</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_postalcode")]
public string PostalCode
{
	get { return this.GetPropertyValue<string>("msdyn_postalcode"); }
	set { this.SetPropertyValue("msdyn_postalcode", value, 20, "PostalCode"); }
}
///<summary>
///<para>Logical Name: msdyn_preferredresource</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_preferredresource")]
public EntityReference PreferredResource_Deprecated
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_preferredresource"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_preferredresource", value, "PreferredResource_Deprecated"); }
}
///<summary>
///<para>Logical Name: msdyn_pricelist</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_pricelist")]
public EntityReference PriceList
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_pricelist"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_pricelist", value, "PriceList"); }
}
///<summary>
///<para>Logical Name: msdyn_customerasset</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_customerasset")]
public EntityReference PrimaryIncidentCustomerAsset
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_customerasset"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_customerasset", value, "PrimaryIncidentCustomerAsset"); }
}
///<summary>
///<para>Logical Name: msdyn_primaryincidentdescription</para>
///<para>Max Length: 8000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_primaryincidentdescription")]
public string PrimaryIncidentDescription
{
	get { return this.GetPropertyValue<string>("msdyn_primaryincidentdescription"); }
	set { this.SetPropertyValue("msdyn_primaryincidentdescription", value, 8000, "PrimaryIncidentDescription"); }
}
///<summary>
///<para>Logical Name: msdyn_primaryincidentestimatedduration</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_primaryincidentestimatedduration")]
public int? PrimaryIncidentEstimatedDuration
{
	get { return this.GetPropertyValue<int?>("msdyn_primaryincidentestimatedduration"); }
	set { this.SetPropertyValue("msdyn_primaryincidentestimatedduration", (int?)value, (int)0, (int)2147483647, "PrimaryIncidentEstimatedDuration"); }
}
///<summary>
///<para>Logical Name: msdyn_primaryincidenttype</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_primaryincidenttype")]
public EntityReference PrimaryIncidentType
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_primaryincidenttype"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_primaryincidenttype", value, "PrimaryIncidentType"); }
}
///<summary>
///<para>Logical Name: msdyn_priority</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_priority")]
public EntityReference Priority
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_priority"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_priority", value, "Priority"); }
}
///<summary>
///<para>Logical Name: processid</para>
///</summary>
[AttributeLogicalNameAttribute("processid")]
public Guid ProcessId
{
	get { return this.GetPropertyValue<Guid>("processid"); }
	set { this.SetPropertyValue<Guid>("processid", value, "ProcessId"); }
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? RecordCreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "RecordCreatedOn"); }
}
///<summary>
///<para>Logical Name: msdyn_reportedbycontact</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_reportedbycontact")]
public EntityReference ReportedByContact
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_reportedbycontact"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_reportedbycontact", value, "ReportedByContact"); }
}
///<summary>
///<para>Logical Name: msdyn_taxcode</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_taxcode")]
public EntityReference SalesTaxCode
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_taxcode"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_taxcode", value, "SalesTaxCode"); }
}
///<summary>
///<para>Logical Name: msdyn_serviceaccount</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_serviceaccount")]
public EntityReference ServiceAccount
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_serviceaccount"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_serviceaccount", value, "ServiceAccount"); }
}
///<summary>
///<para>Logical Name: msdyn_serviceterritory</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_serviceterritory")]
public EntityReference ServiceTerritory
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_serviceterritory"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_serviceterritory", value, "ServiceTerritory"); }
}
///<summary>
///<para>Logical Name: stageid</para>
///</summary>
[AttributeLogicalNameAttribute("stageid")]
public Guid StageId
{
	get { return this.GetPropertyValue<Guid>("stageid"); }
	set { this.SetPropertyValue<Guid>("stageid", value, "StageId"); }
}
///<summary>
///<para>Logical Name: msdyn_stateorprovince</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_stateorprovince")]
public string StateOrProvince
{
	get { return this.GetPropertyValue<string>("msdyn_stateorprovince"); }
	set { this.SetPropertyValue("msdyn_stateorprovince", value, 50, "StateOrProvince"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eStatus? Status
{
	get
	{
		if (Status_OptionSetValue != null) { return (eStatus)Status_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Status_OptionSetValue = new OptionSetValue((int)value); }
		else this.Status_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue Status_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
	set { this.SetPropertyValue<OptionSetValue>("statecode", value, "Status_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Status_Text(IOrganizationService Service)
{
	return this.Status_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Status_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Status_OptionSetValue.Value);
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? StatusReason
{
	get
	{
		if (StatusReason_OptionSetValue != null) { return (eStatusReason)StatusReason_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StatusReason_OptionSetValue = new OptionSetValue((int)value); }
		else this.StatusReason_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue StatusReason_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "StatusReason_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string StatusReason_Text(IOrganizationService Service)
{
	return this.StatusReason_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string StatusReason_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.StatusReason_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_substatus</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_substatus")]
public EntityReference Sub_Status
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_substatus"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_substatus", value, "Sub_Status"); }
}
///<summary>
///<para>Logical Name: msdyn_subtotalamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 900000000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? SubtotalAmount
{
	get
	{
		if (SubtotalAmountMoney != null) { return SubtotalAmountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.SubtotalAmountMoney = new Money(value.Value); }
		else this.SubtotalAmountMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_subtotalamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 900000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_subtotalamount")]
public Money SubtotalAmountMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_subtotalamount"); }
	set { this.SetPropertyValue("msdyn_subtotalamount", (Money)value, (decimal)0, (decimal)900000000000000, "SubtotalAmountMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_subtotalamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? SubtotalAmount_Base
{
	get
	{
		if (SubtotalAmount_BaseMoney != null) { return SubtotalAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_subtotalamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_subtotalamount_base")]
public Money SubtotalAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_subtotalamount_base"); }
}
/// <summary>
///Logical Name: msdyn_systemstatus
/// </summary>
[AttributeLogicalNameAttribute("msdyn_systemstatus")]
public eWOSystemStatus? SystemStatus
{
	get
	{
		if (SystemStatus_OptionSetValue != null) { return (eWOSystemStatus)SystemStatus_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.SystemStatus_OptionSetValue = new OptionSetValue((int)value); }
		else this.SystemStatus_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_systemstatus</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_systemstatus")]
public OptionSetValue SystemStatus_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_systemstatus"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_systemstatus", value, "SystemStatus_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string SystemStatus_Text(IOrganizationService Service)
{
	return this.SystemStatus_OptionSetValue.GetOptionSetText(Service, this, "msdyn_systemstatus");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string SystemStatus_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.SystemStatus_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_taxable</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_taxable")]
public bool? Taxable
{
	get { return this.GetPropertyValue<bool?>("msdyn_taxable"); }
	set { this.SetPropertyValue<bool?>("msdyn_taxable", value, "Taxable"); }
}
///<summary>
///<para>Logical Name: msdyn_timefrompromised</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_timefrompromised")]
public DateTime? TimeFromPromised
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_timefrompromised"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_timefrompromised", value, "TimeFromPromised"); }
}
///<summary>
///<para>Logical Name: msdyn_timegroup</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_timegroup")]
public EntityReference TimeGroup
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_timegroup"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_timegroup", value, "TimeGroup"); }
}
///<summary>
///<para>Logical Name: msdyn_timegroupdetailselected</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_timegroupdetailselected")]
public EntityReference TimeGroupDetailSelected_Deprecated
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_timegroupdetailselected"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_timegroupdetailselected", value, "TimeGroupDetailSelected_Deprecated"); }
}
///<summary>
///<para>Logical Name: msdyn_timetopromised</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_timetopromised")]
public DateTime? TimeToPromised
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_timetopromised"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_timetopromised", value, "TimeToPromised"); }
}
///<summary>
///<para>Logical Name: msdyn_timewindowend</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_timewindowend")]
public DateTime? TimeWindowEnd
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_timewindowend"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_timewindowend", value, "TimeWindowEnd"); }
}
///<summary>
///<para>Logical Name: msdyn_timewindowstart</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_timewindowstart")]
public DateTime? TimeWindowStart
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_timewindowstart"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_timewindowstart", value, "TimeWindowStart"); }
}
///<summary>
///<para>Logical Name: timezoneruleversionnumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("timezoneruleversionnumber")]
public int? TimeZoneRuleVersionNumber
{
	get { return this.GetPropertyValue<int?>("timezoneruleversionnumber"); }
	set { this.SetPropertyValue("timezoneruleversionnumber", (int?)value, (int)-1, (int)2147483647, "TimeZoneRuleVersionNumber"); }
}
///<summary>
///<para>Logical Name: msdyn_totalamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 900000000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalAmount
{
	get
	{
		if (TotalAmountMoney != null) { return TotalAmountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.TotalAmountMoney = new Money(value.Value); }
		else this.TotalAmountMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_totalamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 900000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totalamount")]
public Money TotalAmountMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_totalamount"); }
	set { this.SetPropertyValue("msdyn_totalamount", (Money)value, (decimal)0, (decimal)900000000000000, "TotalAmountMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_totalamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalAmount_Base
{
	get
	{
		if (TotalAmount_BaseMoney != null) { return TotalAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_totalamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totalamount_base")]
public Money TotalAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_totalamount_base"); }
}
///<summary>
///<para>Logical Name: msdyn_totalsalestax</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalSalesTax
{
	get
	{
		if (TotalSalesTaxMoney != null) { return TotalSalesTaxMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.TotalSalesTaxMoney = new Money(value.Value); }
		else this.TotalSalesTaxMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_totalsalestax</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totalsalestax")]
public Money TotalSalesTaxMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_totalsalestax"); }
	set { this.SetPropertyValue("msdyn_totalsalestax", (Money)value, (decimal)0, (decimal)1000000000, "TotalSalesTaxMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_totalsalestax_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalSalesTax_Base
{
	get
	{
		if (TotalSalesTax_BaseMoney != null) { return TotalSalesTax_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_totalsalestax_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totalsalestax_base")]
public Money TotalSalesTax_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_totalsalestax_base"); }
}
///<summary>
///<para>Logical Name: traversedpath</para>
///<para>Max Length: 1250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("traversedpath")]
public string TraversedPath
{
	get { return this.GetPropertyValue<string>("traversedpath"); }
	set { this.SetPropertyValue("traversedpath", value, 1250, "TraversedPath"); }
}
///<summary>
///<para>Logical Name: utcconversiontimezonecode</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utcconversiontimezonecode")]
public int? UTCConversionTimeZoneCode
{
	get { return this.GetPropertyValue<int?>("utcconversiontimezonecode"); }
	set { this.SetPropertyValue("utcconversiontimezonecode", (int?)value, (int)-1, (int)2147483647, "UTCConversionTimeZoneCode"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: msdyn_workorderid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workorderid")]
public Guid WONumberId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
/// <summary>
///Logical Name: msdyn_worklocation
/// </summary>
[AttributeLogicalNameAttribute("msdyn_worklocation")]
public eWorkLocation? WorkLocation
{
	get
	{
		if (WorkLocation_OptionSetValue != null) { return (eWorkLocation)WorkLocation_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.WorkLocation_OptionSetValue = new OptionSetValue((int)value); }
		else this.WorkLocation_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_worklocation</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_worklocation")]
public OptionSetValue WorkLocation_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_worklocation"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_worklocation", value, "WorkLocation_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string WorkLocation_Text(IOrganizationService Service)
{
	return this.WorkLocation_OptionSetValue.GetOptionSetText(Service, this, "msdyn_worklocation");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string WorkLocation_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.WorkLocation_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_name</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_name")]
public string WorkOrderNumber
{
	get { return this.GetPropertyValue<string>("msdyn_name"); }
	set { this.SetPropertyValue("msdyn_name", value, 100, "WorkOrderNumber"); }
}
///<summary>
///<para>Logical Name: msdyn_workordersummary</para>
///<para>Max Length: 8000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workordersummary")]
public string WorkOrderSummary
{
	get { return this.GetPropertyValue<string>("msdyn_workordersummary"); }
	set { this.SetPropertyValue("msdyn_workordersummary", value, 8000, "WorkOrderSummary"); }
}
///<summary>
///<para>Logical Name: msdyn_workordertype</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workordertype")]
public EntityReference WorkOrderType
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_workordertype"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_workordertype", value, "WorkOrderType"); }
}


        /// <summary>
/// <para><b>Activity (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_ActivityPointers</para>
/// </summary>
public List<Activity> GetActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Activity>(Service, this.Id, "activitypointer", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Activity (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_ActivityPointers</para>
/// </summary>
public List<Activity> GetActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Activity>(Service, this.Id, "activitypointer", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_Annotations</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_Annotations</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Appointment (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_Appointments</para>
/// </summary>
public List<Appointment> GetAppointments_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Appointment>(Service, this.Id, "appointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Appointment (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_Appointments</para>
/// </summary>
public List<Appointment> GetAppointments_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Appointment>(Service, this.Id, "appointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BookableResourceBooking (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_bookableresourcebooking_WorkOrder</para>
/// </summary>
public List<BookableResourceBooking> GetBookableResourceBookings_WorkOrder (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBooking>(Service, this.Id, "bookableresourcebooking", "msdyn_workorder", Columns); }
/// <summary>
/// <para><b>BookableResourceBooking (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_bookableresourcebooking_WorkOrder</para>
/// </summary>
public List<BookableResourceBooking> GetBookableResourceBookings_WorkOrder (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBooking>(Service, this.Id, "bookableresourcebooking", "msdyn_workorder", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: msdyn_workorder_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: msdyn_workorder_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: msdyn_workorder_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: msdyn_workorder_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: msdyn_workorder_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: msdyn_workorder_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: msdyn_workorder_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: msdyn_workorder_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: msdyn_workorder_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: msdyn_workorder_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>Email (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_Emails</para>
/// </summary>
public List<Email> GetEmailMessages_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Email (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_Emails</para>
/// </summary>
public List<Email> GetEmailMessages_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Fax (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_Faxes</para>
/// </summary>
public List<Fax> GetFaxes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fax>(Service, this.Id, "fax", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Fax (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_Faxes</para>
/// </summary>
public List<Fax> GetFaxes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fax>(Service, this.Id, "fax", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>InvoiceLine (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_invoicedetail</para>
/// </summary>
public List<InvoiceLine> GetInvoiceLines_WorkOrder (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceLine>(Service, this.Id, "invoicedetail", "msdyn_workorderid", Columns); }
/// <summary>
/// <para><b>InvoiceLine (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_invoicedetail</para>
/// </summary>
public List<InvoiceLine> GetInvoiceLines_WorkOrder (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceLine>(Service, this.Id, "invoicedetail", "msdyn_workorderid", Columns); }
/// <summary>
/// <para><b>Letter (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_Letters</para>
/// </summary>
public List<Letter> GetLetters_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Letter>(Service, this.Id, "letter", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Letter (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_Letters</para>
/// </summary>
public List<Letter> GetLetters_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Letter>(Service, this.Id, "letter", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: msdyn_workorder_MailboxTrackingFolders</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: msdyn_workorder_MailboxTrackingFolders</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Actual (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_actual_WorkOrder</para>
/// </summary>
public List<Actual> GetActuals_WorkOrder (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Actual>(Service, this.Id, "msdyn_actual", "msdyn_workorder", Columns); }
/// <summary>
/// <para><b>Actual (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_actual_WorkOrder</para>
/// </summary>
public List<Actual> GetActuals_WorkOrder (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Actual>(Service, this.Id, "msdyn_actual", "msdyn_workorder", Columns); }
/// <summary>
/// <para><b>AgreementBookingDate (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_agreementbookingdate_WorkOrder</para>
/// </summary>
public List<AgreementBookingDate> GetAgreementBookingDates_WorkOrder (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingDate>(Service, this.Id, "msdyn_agreementbookingdate", "msdyn_workorder", Columns); }
/// <summary>
/// <para><b>AgreementBookingDate (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_agreementbookingdate_WorkOrder</para>
/// </summary>
public List<AgreementBookingDate> GetAgreementBookingDates_WorkOrder (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingDate>(Service, this.Id, "msdyn_agreementbookingdate", "msdyn_workorder", Columns); }
/// <summary>
/// <para><b>Approval (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_msdyn_approvals</para>
/// </summary>
public List<Approval> GetApprovals_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Approval>(Service, this.Id, "msdyn_approval", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Approval (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_msdyn_approvals</para>
/// </summary>
public List<Approval> GetApprovals_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Approval>(Service, this.Id, "msdyn_approval", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BookingAlert (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_msdyn_bookingalerts</para>
/// </summary>
public List<BookingAlert> GetBookingAlerts_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlert>(Service, this.Id, "msdyn_bookingalert", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BookingAlert (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_msdyn_bookingalerts</para>
/// </summary>
public List<BookingAlert> GetBookingAlerts_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlert>(Service, this.Id, "msdyn_bookingalert", "regardingobjectid", Columns); }
/// <summary>
/// <para>msdyn_workorder</para>
/// <para><b>CaseToWorkOrderBusinessProcess (Msdyn_Workorder)</b></para>
/// <para>Schema Name: bpf_msdyn_workorder_msdyn_bpf_989e9b1857e24af18787d5143b67523b</para>
/// </summary>
public List<CaseToWorkOrderBusinessProcess> Getmsdyn_workorder_Msdyn_Workorder (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CaseToWorkOrderBusinessProcess>(Service, this.Id, "msdyn_bpf_989e9b1857e24af18787d5143b67523b", "bpf_msdyn_workorderid", Columns); }
/// <summary>
/// <para>msdyn_workorder</para>
/// <para><b>CaseToWorkOrderBusinessProcess (Msdyn_Workorder)</b></para>
/// <para>Schema Name: bpf_msdyn_workorder_msdyn_bpf_989e9b1857e24af18787d5143b67523b</para>
/// </summary>
public List<CaseToWorkOrderBusinessProcess> Getmsdyn_workorder_Msdyn_Workorder (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CaseToWorkOrderBusinessProcess>(Service, this.Id, "msdyn_bpf_989e9b1857e24af18787d5143b67523b", "bpf_msdyn_workorderid", Columns); }
/// <summary>
/// <para>msdyn_workorder</para>
/// <para><b>WorkOrderBusinessProcess (Msdyn_Workorder)</b></para>
/// <para>Schema Name: bpf_msdyn_workorder_msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39</para>
/// </summary>
public List<WorkOrderBusinessProcess> Getmsdyn_workorder_Msdyn_Workorder2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderBusinessProcess>(Service, this.Id, "msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39", "bpf_msdyn_workorderid", Columns); }
/// <summary>
/// <para>msdyn_workorder</para>
/// <para><b>WorkOrderBusinessProcess (Msdyn_Workorder)</b></para>
/// <para>Schema Name: bpf_msdyn_workorder_msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39</para>
/// </summary>
public List<WorkOrderBusinessProcess> Getmsdyn_workorder_Msdyn_Workorder2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderBusinessProcess>(Service, this.Id, "msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39", "bpf_msdyn_workorderid", Columns); }
/// <summary>
/// <para><b>InventoryJournal (Allocated To Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_inventoryjournal_AllocatedToWorkOrder</para>
/// </summary>
public List<InventoryJournal> GetInventoryJournals_AllocatedToWorkOrder (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InventoryJournal>(Service, this.Id, "msdyn_inventoryjournal", "msdyn_allocatedtoworkorder", Columns); }
/// <summary>
/// <para><b>InventoryJournal (Allocated To Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_inventoryjournal_AllocatedToWorkOrder</para>
/// </summary>
public List<InventoryJournal> GetInventoryJournals_AllocatedToWorkOrder (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InventoryJournal>(Service, this.Id, "msdyn_inventoryjournal", "msdyn_allocatedtoworkorder", Columns); }
/// <summary>
/// <para><b>Payment (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_payment_WorkOrder</para>
/// </summary>
public List<Payment> GetPayments_WorkOrder (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Payment>(Service, this.Id, "msdyn_payment", "msdyn_workorder", Columns); }
/// <summary>
/// <para><b>Payment (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_payment_WorkOrder</para>
/// </summary>
public List<Payment> GetPayments_WorkOrder (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Payment>(Service, this.Id, "msdyn_payment", "msdyn_workorder", Columns); }
/// <summary>
/// <para><b>PaymentDetail (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_paymentdetail_Workorder</para>
/// </summary>
public List<PaymentDetail> GetPaymentDetail_WorkOrder (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PaymentDetail>(Service, this.Id, "msdyn_paymentdetail", "msdyn_workorder", Columns); }
/// <summary>
/// <para><b>PaymentDetail (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_paymentdetail_Workorder</para>
/// </summary>
public List<PaymentDetail> GetPaymentDetail_WorkOrder (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PaymentDetail>(Service, this.Id, "msdyn_paymentdetail", "msdyn_workorder", Columns); }
/// <summary>
/// <para><b>PurchaseOrder (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_purchaseorder_WorkOrder</para>
/// </summary>
public List<PurchaseOrder> GetPurchaseOrders_WorkOrder (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrder>(Service, this.Id, "msdyn_purchaseorder", "msdyn_workorder", Columns); }
/// <summary>
/// <para><b>PurchaseOrder (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_purchaseorder_WorkOrder</para>
/// </summary>
public List<PurchaseOrder> GetPurchaseOrders_WorkOrder (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrder>(Service, this.Id, "msdyn_purchaseorder", "msdyn_workorder", Columns); }
/// <summary>
/// <para>Purchase Order Products</para>
/// <para><b>PurchaseOrderProduct (Associate To Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_purchaseorderproduct_AssociateToWorkOrder</para>
/// </summary>
public List<PurchaseOrderProduct> GetPurchaseOrderProducts_AssociateToWorkOrder (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderProduct>(Service, this.Id, "msdyn_purchaseorderproduct", "msdyn_associatetoworkorder", Columns); }
/// <summary>
/// <para>Purchase Order Products</para>
/// <para><b>PurchaseOrderProduct (Associate To Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_purchaseorderproduct_AssociateToWorkOrder</para>
/// </summary>
public List<PurchaseOrderProduct> GetPurchaseOrderProducts_AssociateToWorkOrder (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderProduct>(Service, this.Id, "msdyn_purchaseorderproduct", "msdyn_associatetoworkorder", Columns); }
/// <summary>
/// <para><b>PurchaseOrderReceiptProduct (Associate To Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_purchaseorderreceiptproduct_AssociateToWorkOrder</para>
/// </summary>
public List<PurchaseOrderReceiptProduct> GetPurchaseOrderReceiptProducts_AssociateToWorkOrder (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderReceiptProduct>(Service, this.Id, "msdyn_purchaseorderreceiptproduct", "msdyn_associatetoworkorder", Columns); }
/// <summary>
/// <para><b>PurchaseOrderReceiptProduct (Associate To Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_purchaseorderreceiptproduct_AssociateToWorkOrder</para>
/// </summary>
public List<PurchaseOrderReceiptProduct> GetPurchaseOrderReceiptProducts_AssociateToWorkOrder (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderReceiptProduct>(Service, this.Id, "msdyn_purchaseorderreceiptproduct", "msdyn_associatetoworkorder", Columns); }
/// <summary>
/// <para>Characteristics</para>
/// <para><b>RequirementCharacteristic (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_requirementcharacteristic_WorkOrder</para>
/// </summary>
public List<RequirementCharacteristic> GetCharacteristics_WorkOrder (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementCharacteristic>(Service, this.Id, "msdyn_requirementcharacteristic", "msdyn_workorder", Columns); }
/// <summary>
/// <para>Characteristics</para>
/// <para><b>RequirementCharacteristic (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_requirementcharacteristic_WorkOrder</para>
/// </summary>
public List<RequirementCharacteristic> GetCharacteristics_WorkOrder (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementCharacteristic>(Service, this.Id, "msdyn_requirementcharacteristic", "msdyn_workorder", Columns); }
/// <summary>
/// <para>Resource Preferences</para>
/// <para><b>RequirementResourcePreference (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_requirementresourcepreference_WorkOrder</para>
/// </summary>
public List<RequirementResourcePreference> GetResourcePreferences_WorkOrder (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementResourcePreference>(Service, this.Id, "msdyn_requirementresourcepreference", "msdyn_workorder", Columns); }
/// <summary>
/// <para>Resource Preferences</para>
/// <para><b>RequirementResourcePreference (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_requirementresourcepreference_WorkOrder</para>
/// </summary>
public List<RequirementResourcePreference> GetResourcePreferences_WorkOrder (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementResourcePreference>(Service, this.Id, "msdyn_requirementresourcepreference", "msdyn_workorder", Columns); }
/// <summary>
/// <para>Requirements</para>
/// <para><b>ResourceRequirement (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_resourcerequirement_WorkOrder</para>
/// </summary>
public List<ResourceRequirement> GetRequirements_WorkOrder (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceRequirement>(Service, this.Id, "msdyn_resourcerequirement", "msdyn_workorder", Columns); }
/// <summary>
/// <para>Requirements</para>
/// <para><b>ResourceRequirement (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_resourcerequirement_WorkOrder</para>
/// </summary>
public List<ResourceRequirement> GetRequirements_WorkOrder (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceRequirement>(Service, this.Id, "msdyn_resourcerequirement", "msdyn_workorder", Columns); }
/// <summary>
/// <para>Work Order</para>
/// <para><b>RMA (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_rma_WorkOrder</para>
/// </summary>
public List<RMA> GetWorkOrder_WorkOrder (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMA>(Service, this.Id, "msdyn_rma", "msdyn_workorder", Columns); }
/// <summary>
/// <para>Work Order</para>
/// <para><b>RMA (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_rma_WorkOrder</para>
/// </summary>
public List<RMA> GetWorkOrder_WorkOrder (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMA>(Service, this.Id, "msdyn_rma", "msdyn_workorder", Columns); }
/// <summary>
/// <para>RTVs</para>
/// <para><b>RTV (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_rtv_WorkOrder</para>
/// </summary>
public List<RTV> GetRTVs_WorkOrder (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTV>(Service, this.Id, "msdyn_rtv", "msdyn_workorder", Columns); }
/// <summary>
/// <para>RTVs</para>
/// <para><b>RTV (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_rtv_WorkOrder</para>
/// </summary>
public List<RTV> GetRTVs_WorkOrder (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTV>(Service, this.Id, "msdyn_rtv", "msdyn_workorder", Columns); }
/// <summary>
/// <para><b>RTVProduct (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_rtvproduct_WorkOrder</para>
/// </summary>
public List<RTVProduct> GetRTVProducts_WorkOrder (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTVProduct>(Service, this.Id, "msdyn_rtvproduct", "msdyn_workorder", Columns); }
/// <summary>
/// <para><b>RTVProduct (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_rtvproduct_WorkOrder</para>
/// </summary>
public List<RTVProduct> GetRTVProducts_WorkOrder (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTVProduct>(Service, this.Id, "msdyn_rtvproduct", "msdyn_workorder", Columns); }
/// <summary>
/// <para><b>WorkOrder (Parent Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_workorder_ParentWorkOrder</para>
/// </summary>
public List<WorkOrder> GetWorkOrders_ParentWorkOrder (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrder>(Service, this.Id, "msdyn_workorder", "msdyn_parentworkorder", Columns); }
/// <summary>
/// <para><b>WorkOrder (Parent Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_workorder_ParentWorkOrder</para>
/// </summary>
public List<WorkOrder> GetWorkOrders_ParentWorkOrder (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrder>(Service, this.Id, "msdyn_workorder", "msdyn_parentworkorder", Columns); }
/// <summary>
/// <para><b>WorkOrderCharacteristic_Deprecated (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_workordercharacteristic_WorkOrder</para>
/// </summary>
public List<WorkOrderCharacteristic_Deprecated> GetWorkOrderCharacteristics_Deprecated__WorkOrder (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderCharacteristic_Deprecated>(Service, this.Id, "msdyn_workordercharacteristic", "msdyn_workorder", Columns); }
/// <summary>
/// <para><b>WorkOrderCharacteristic_Deprecated (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_workordercharacteristic_WorkOrder</para>
/// </summary>
public List<WorkOrderCharacteristic_Deprecated> GetWorkOrderCharacteristics_Deprecated__WorkOrder (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderCharacteristic_Deprecated>(Service, this.Id, "msdyn_workordercharacteristic", "msdyn_workorder", Columns); }
/// <summary>
/// <para><b>WorkOrderIncident (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_workorderincident_WorkOrder</para>
/// </summary>
public List<WorkOrderIncident> GetWorkOrderIncidents_WorkOrder (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderIncident>(Service, this.Id, "msdyn_workorderincident", "msdyn_workorder", Columns); }
/// <summary>
/// <para><b>WorkOrderIncident (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_workorderincident_WorkOrder</para>
/// </summary>
public List<WorkOrderIncident> GetWorkOrderIncidents_WorkOrder (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderIncident>(Service, this.Id, "msdyn_workorderincident", "msdyn_workorder", Columns); }
/// <summary>
/// <para><b>WorkOrderProduct (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_workorderproduct_WorkOrder</para>
/// </summary>
public List<WorkOrderProduct> GetWorkOrderProducts_WorkOrder (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderProduct>(Service, this.Id, "msdyn_workorderproduct", "msdyn_workorder", Columns); }
/// <summary>
/// <para><b>WorkOrderProduct (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_workorderproduct_WorkOrder</para>
/// </summary>
public List<WorkOrderProduct> GetWorkOrderProducts_WorkOrder (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderProduct>(Service, this.Id, "msdyn_workorderproduct", "msdyn_workorder", Columns); }
/// <summary>
/// <para><b>ResourceRestriction_Deprecated (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_workorderresourcerestriction_WorkOrder</para>
/// </summary>
public List<ResourceRestriction_Deprecated> GetResourceRestrictions_Deprecated__WorkOrder (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceRestriction_Deprecated>(Service, this.Id, "msdyn_workorderresourcerestriction", "msdyn_workorder", Columns); }
/// <summary>
/// <para><b>ResourceRestriction_Deprecated (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_workorderresourcerestriction_WorkOrder</para>
/// </summary>
public List<ResourceRestriction_Deprecated> GetResourceRestrictions_Deprecated__WorkOrder (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceRestriction_Deprecated>(Service, this.Id, "msdyn_workorderresourcerestriction", "msdyn_workorder", Columns); }
/// <summary>
/// <para><b>WorkOrderService (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_workorderservice_WorkOrder</para>
/// </summary>
public List<WorkOrderService> GetWorkOrderServices_WorkOrder (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderService>(Service, this.Id, "msdyn_workorderservice", "msdyn_workorder", Columns); }
/// <summary>
/// <para><b>WorkOrderService (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_workorderservice_WorkOrder</para>
/// </summary>
public List<WorkOrderService> GetWorkOrderServices_WorkOrder (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderService>(Service, this.Id, "msdyn_workorderservice", "msdyn_workorder", Columns); }
/// <summary>
/// <para>Service Tasks</para>
/// <para><b>WorkOrderServiceTask (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_workorderservicetask_WorkOrder</para>
/// </summary>
public List<WorkOrderServiceTask> GetServiceTasks_WorkOrder (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderServiceTask>(Service, this.Id, "msdyn_workorderservicetask", "msdyn_workorder", Columns); }
/// <summary>
/// <para>Service Tasks</para>
/// <para><b>WorkOrderServiceTask (Work Order)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorder_msdyn_workorderservicetask_WorkOrder</para>
/// </summary>
public List<WorkOrderServiceTask> GetServiceTasks_WorkOrder (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderServiceTask>(Service, this.Id, "msdyn_workorderservicetask", "msdyn_workorder", Columns); }
/// <summary>
/// <para><b>PhoneCall (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_PhoneCalls</para>
/// </summary>
public List<PhoneCall> GetPhoneCalls_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneCall>(Service, this.Id, "phonecall", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PhoneCall (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_PhoneCalls</para>
/// </summary>
public List<PhoneCall> GetPhoneCalls_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneCall>(Service, this.Id, "phonecall", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: msdyn_workorder_PrincipalObjectAttributeAccesses</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: msdyn_workorder_PrincipalObjectAttributeAccesses</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_ProcessSession</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_ProcessSession</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>QueueItem (Object)</b></para>
/// <para>Schema Name: msdyn_workorder_QueueItems</para>
/// </summary>
public List<QueueItem> GetQueueItems_Object (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QueueItem>(Service, this.Id, "queueitem", "objectid", Columns); }
/// <summary>
/// <para><b>QueueItem (Object)</b></para>
/// <para>Schema Name: msdyn_workorder_QueueItems</para>
/// </summary>
public List<QueueItem> GetQueueItems_Object (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QueueItem>(Service, this.Id, "queueitem", "objectid", Columns); }
/// <summary>
/// <para><b>RecurringAppointment (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_RecurringAppointmentMasters</para>
/// </summary>
public List<RecurringAppointment> GetRecurringAppointments_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecurringAppointment>(Service, this.Id, "recurringappointmentmaster", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>RecurringAppointment (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_RecurringAppointmentMasters</para>
/// </summary>
public List<RecurringAppointment> GetRecurringAppointments_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecurringAppointment>(Service, this.Id, "recurringappointmentmaster", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ServiceActivity (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_ServiceAppointments</para>
/// </summary>
public List<ServiceActivity> GetServiceActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceActivity>(Service, this.Id, "serviceappointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ServiceActivity (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_ServiceAppointments</para>
/// </summary>
public List<ServiceActivity> GetServiceActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceActivity>(Service, this.Id, "serviceappointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>DocumentLocation (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_SharePointDocumentLocations</para>
/// </summary>
public List<DocumentLocation> GetDocumentLocations_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DocumentLocation>(Service, this.Id, "sharepointdocumentlocation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>DocumentLocation (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_SharePointDocumentLocations</para>
/// </summary>
public List<DocumentLocation> GetDocumentLocations_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DocumentLocation>(Service, this.Id, "sharepointdocumentlocation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SocialActivity (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_SocialActivities</para>
/// </summary>
public List<SocialActivity> GetSocialActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialActivity>(Service, this.Id, "socialactivity", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SocialActivity (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_SocialActivities</para>
/// </summary>
public List<SocialActivity> GetSocialActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialActivity>(Service, this.Id, "socialactivity", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: msdyn_workorder_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: msdyn_workorder_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Task (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_Tasks</para>
/// </summary>
public List<Task> GetTasks_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Task>(Service, this.Id, "task", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Task (Regarding)</b></para>
/// <para>Schema Name: msdyn_workorder_Tasks</para>
/// </summary>
public List<Task> GetTasks_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Task>(Service, this.Id, "task", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: msdyn_workorder_UserEntityInstanceDatas</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: msdyn_workorder_UserEntityInstanceDatas</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        

        

        public enum eStatus
{
	///<summary><para>Active</para>
	///<para>Value = 0</para></summary>
	[Description("Active")]
	Active = 0, 
	///<summary><para>Inactive</para>
	///<para>Value = 1</para></summary>
	[Description("Inactive")]
	Inactive = 1
}
public enum eStatusReason
{
	///<summary><para>Active</para>
	///<para>Value = 1</para></summary>
	[Description("Active")]
	Active_Active = 1, 
	///<summary><para>Inactive</para>
	///<para>Value = 2</para></summary>
	[Description("Inactive")]
	Inactive_Inactive = 2
}
public enum eWOSystemStatus
{
	///<summary><para>Open - Unscheduled</para>
	///<para>Value = 690970000</para></summary>
	[Description("Open - Unscheduled")]
	Open_Unscheduled = 690970000, 
	///<summary><para>Open - Scheduled</para>
	///<para>Value = 690970001</para></summary>
	[Description("Open - Scheduled")]
	Open_Scheduled = 690970001, 
	///<summary><para>Open - In Progress</para>
	///<para>Value = 690970002</para></summary>
	[Description("Open - In Progress")]
	Open_InProgress = 690970002, 
	///<summary><para>Open - Completed</para>
	///<para>Value = 690970003</para></summary>
	[Description("Open - Completed")]
	Open_Completed = 690970003, 
	///<summary><para>Closed - Posted</para>
	///<para>Value = 690970004</para></summary>
	[Description("Closed - Posted")]
	Closed_Posted = 690970004, 
	///<summary><para>Closed - Canceled</para>
	///<para>Value = 690970005</para></summary>
	[Description("Closed - Canceled")]
	Closed_Canceled = 690970005
}
public enum eWorkLocation
{
	///<summary><para>Onsite</para>
	///<para>Value = 690970000</para></summary>
	[Description("Onsite")]
	Onsite = 690970000, 
	///<summary><para>Depot</para>
	///<para>Value = 690970001</para></summary>
	[Description("Depot")]
	Depot = 690970001, 
	///<summary><para>Location Agnostic</para>
	///<para>Value = 690970002</para></summary>
	[Description("Location Agnostic")]
	LocationAgnostic = 690970002
}
public void SetState(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>msdyn_opportunityidname</para>
	/// <para>msdyn_opportunityidname</para></summary>
	public const string Msdyn_OpportunityIdName = "msdyn_opportunityidname";
	/// <summary><para>msdyn_closedbyyominame</para>
	/// <para>msdyn_closedbyyominame</para></summary>
	public const string Msdyn_ClosedByYomiName = "msdyn_closedbyyominame";
	/// <summary><para>msdyn_serviceaccountname</para>
	/// <para>msdyn_serviceaccountname</para></summary>
	public const string Msdyn_ServiceAccountName = "msdyn_serviceaccountname";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>msdyn_billingaccountname</para>
	/// <para>msdyn_billingaccountname</para></summary>
	public const string Msdyn_BillingAccountName = "msdyn_billingaccountname";
	/// <summary><para>owneridname</para>
	/// <para>owneridname</para></summary>
	public const string OwnerIdName = "owneridname";
	/// <summary><para>msdyn_reportedbycontactyominame</para>
	/// <para>msdyn_reportedbycontactyominame</para></summary>
	public const string Msdyn_ReportedByContactYomiName = "msdyn_reportedbycontactyominame";
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>msdyn_preferredresourcename</para>
	/// <para>msdyn_preferredresourcename</para></summary>
	public const string Msdyn_PreferredResourceName = "msdyn_preferredresourcename";
	/// <summary><para>msdyn_workordertypename</para>
	/// <para>msdyn_workordertypename</para></summary>
	public const string Msdyn_WorkOrderTypeName = "msdyn_workordertypename";
	/// <summary><para>msdyn_billingaccountyominame</para>
	/// <para>msdyn_billingaccountyominame</para></summary>
	public const string Msdyn_BillingAccountYomiName = "msdyn_billingaccountyominame";
	/// <summary><para>msdyn_priorityname</para>
	/// <para>msdyn_priorityname</para></summary>
	public const string Msdyn_PriorityName = "msdyn_priorityname";
	/// <summary><para>msdyn_primaryincidenttypename</para>
	/// <para>msdyn_primaryincidenttypename</para></summary>
	public const string Msdyn_PrimaryIncidentTypeName = "msdyn_primaryincidenttypename";
	/// <summary><para>msdyn_parentworkordername</para>
	/// <para>msdyn_parentworkordername</para></summary>
	public const string Msdyn_ParentWorkOrderName = "msdyn_parentworkordername";
	/// <summary><para>msdyn_pricelistname</para>
	/// <para>msdyn_pricelistname</para></summary>
	public const string Msdyn_PriceListName = "msdyn_pricelistname";
	/// <summary><para>msdyn_customerassetname</para>
	/// <para>msdyn_customerassetname</para></summary>
	public const string Msdyn_CustomerAssetName = "msdyn_customerassetname";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>msdyn_agreementname</para>
	/// <para>msdyn_agreementname</para></summary>
	public const string Msdyn_AgreementName = "msdyn_agreementname";
	/// <summary><para>msdyn_serviceaccountyominame</para>
	/// <para>msdyn_serviceaccountyominame</para></summary>
	public const string Msdyn_ServiceAccountYomiName = "msdyn_serviceaccountyominame";
	/// <summary><para>owneridyominame</para>
	/// <para>owneridyominame</para></summary>
	public const string OwnerIdYomiName = "owneridyominame";
	/// <summary><para>msdyn_substatusname</para>
	/// <para>msdyn_substatusname</para></summary>
	public const string Msdyn_SubStatusName = "msdyn_substatusname";
	/// <summary><para>msdyn_serviceterritoryname</para>
	/// <para>msdyn_serviceterritoryname</para></summary>
	public const string Msdyn_ServiceTerritoryName = "msdyn_serviceterritoryname";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>msdyn_taxcodename</para>
	/// <para>msdyn_taxcodename</para></summary>
	public const string Msdyn_TaxCodeName = "msdyn_taxcodename";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>msdyn_reportedbycontactname</para>
	/// <para>msdyn_reportedbycontactname</para></summary>
	public const string Msdyn_ReportedByContactName = "msdyn_reportedbycontactname";
	/// <summary><para>msdyn_timegroupdetailselectedname</para>
	/// <para>msdyn_timegroupdetailselectedname</para></summary>
	public const string Msdyn_TimeGroupDetailSelectedName = "msdyn_timegroupdetailselectedname";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>transactioncurrencyidname</para>
	/// <para>transactioncurrencyidname</para></summary>
	public const string TransactionCurrencyIdName = "transactioncurrencyidname";
	/// <summary><para>msdyn_timegroupname</para>
	/// <para>msdyn_timegroupname</para></summary>
	public const string Msdyn_TimeGroupName = "msdyn_timegroupname";
	/// <summary><para>msdyn_closedbyname</para>
	/// <para>msdyn_closedbyname</para></summary>
	public const string Msdyn_ClosedByName = "msdyn_closedbyname";
	/// <summary><para>owneridtype</para>
	/// <para>owneridtype</para></summary>
	public const string OwnerIdType = "owneridtype";
	/// <summary><para>msdyn_servicerequestname</para>
	/// <para>msdyn_servicerequestname</para></summary>
	public const string Msdyn_ServiceRequestName = "msdyn_servicerequestname";
	/// <summary><para>Address 1</para>
	/// <para>msdyn_address1</para></summary>
	public const string Address1 = "msdyn_address1";
	/// <summary><para>Address 2</para>
	/// <para>msdyn_address2</para></summary>
	public const string Address2 = "msdyn_address2";
	/// <summary><para>Address 3</para>
	/// <para>msdyn_address3</para></summary>
	public const string Address3 = "msdyn_address3";
	/// <summary><para>Address Name</para>
	/// <para>msdyn_addressname</para></summary>
	public const string AddressName = "msdyn_addressname";
	/// <summary><para>Agreement</para>
	/// <para>msdyn_agreement</para></summary>
	public const string Agreement = "msdyn_agreement";
	/// <summary><para>Billing Account</para>
	/// <para>msdyn_billingaccount</para></summary>
	public const string BillingAccount = "msdyn_billingaccount";
	/// <summary><para>Booking Summary</para>
	/// <para>msdyn_bookingsummary</para></summary>
	public const string BookingSummary = "msdyn_bookingsummary";
	/// <summary><para>Case</para>
	/// <para>msdyn_servicerequest</para></summary>
	public const string @Case = "msdyn_servicerequest";
	/// <summary><para>Child Index</para>
	/// <para>msdyn_childindex</para></summary>
	public const string ChildIndex = "msdyn_childindex";
	/// <summary><para>City</para>
	/// <para>msdyn_city</para></summary>
	public const string City = "msdyn_city";
	/// <summary><para>Closed By</para>
	/// <para>msdyn_closedby</para></summary>
	public const string ClosedBy = "msdyn_closedby";
	/// <summary><para>Closed On</para>
	/// <para>msdyn_timeclosed</para></summary>
	public const string ClosedOn = "msdyn_timeclosed";
	/// <summary><para>Country/Region</para>
	/// <para>msdyn_country</para></summary>
	public const string Country_Region = "msdyn_country";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Currency</para>
	/// <para>transactioncurrencyid</para></summary>
	public const string Currency = "transactioncurrencyid";
	/// <summary><para>Date Window End</para>
	/// <para>msdyn_datewindowend</para></summary>
	public const string DateWindowEnd = "msdyn_datewindowend";
	/// <summary><para>Date Window Start</para>
	/// <para>msdyn_datewindowstart</para></summary>
	public const string DateWindowStart = "msdyn_datewindowstart";
	/// <summary><para>Estimate Subtotal Amount</para>
	/// <para>msdyn_estimatesubtotalamount</para></summary>
	public const string EstimateSubtotalAmount = "msdyn_estimatesubtotalamount";
	/// <summary><para>Estimate Subtotal Amount (Base)</para>
	/// <para>msdyn_estimatesubtotalamount_base</para></summary>
	public const string EstimateSubtotalAmount_Base = "msdyn_estimatesubtotalamount_base";
	/// <summary><para>Exchange Rate</para>
	/// <para>exchangerate</para></summary>
	public const string ExchangeRate = "exchangerate";
	/// <summary><para>Follow Up Note (Deprecated)</para>
	/// <para>msdyn_followupnote</para></summary>
	public const string FollowUpNote_Deprecated = "msdyn_followupnote";
	/// <summary><para>Follow Up Required (Deprecated)</para>
	/// <para>msdyn_followuprequired</para></summary>
	public const string FollowUpRequired_Deprecated = "msdyn_followuprequired";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string ImportSequenceNumber = "importsequencenumber";
	/// <summary><para>Instructions</para>
	/// <para>msdyn_instructions</para></summary>
	public const string Instructions = "msdyn_instructions";
	/// <summary><para>Internal Flags</para>
	/// <para>msdyn_internalflags</para></summary>
	public const string InternalFlags = "msdyn_internalflags";
	/// <summary><para>Is FollowUp (Deprecated)</para>
	/// <para>msdyn_isfollowup</para></summary>
	public const string IsFollowUp_Deprecated = "msdyn_isfollowup";
	/// <summary><para>Is Mobile</para>
	/// <para>msdyn_ismobile</para></summary>
	public const string IsMobile = "msdyn_ismobile";
	/// <summary><para>Latitude</para>
	/// <para>msdyn_latitude</para></summary>
	public const string Latitude = "msdyn_latitude";
	/// <summary><para>Longitude</para>
	/// <para>msdyn_longitude</para></summary>
	public const string Longitude = "msdyn_longitude";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>Opportunity</para>
	/// <para>msdyn_opportunityid</para></summary>
	public const string Opportunity = "msdyn_opportunityid";
	/// <summary><para>Owner</para>
	/// <para>ownerid</para></summary>
	public const string Owner = "ownerid";
	/// <summary><para>Owning Business Unit</para>
	/// <para>owningbusinessunit</para></summary>
	public const string OwningBusinessUnit = "owningbusinessunit";
	/// <summary><para>Owning Team</para>
	/// <para>owningteam</para></summary>
	public const string OwningTeam = "owningteam";
	/// <summary><para>Owning User</para>
	/// <para>owninguser</para></summary>
	public const string OwningUser = "owninguser";
	/// <summary><para>Parent Work Order</para>
	/// <para>msdyn_parentworkorder</para></summary>
	public const string ParentWorkOrder = "msdyn_parentworkorder";
	/// <summary><para>Postal Code</para>
	/// <para>msdyn_postalcode</para></summary>
	public const string PostalCode = "msdyn_postalcode";
	/// <summary><para>Preferred Resource (Deprecated)</para>
	/// <para>msdyn_preferredresource</para></summary>
	public const string PreferredResource_Deprecated = "msdyn_preferredresource";
	/// <summary><para>Price List</para>
	/// <para>msdyn_pricelist</para></summary>
	public const string PriceList = "msdyn_pricelist";
	/// <summary><para>Primary Incident Customer Asset</para>
	/// <para>msdyn_customerasset</para></summary>
	public const string PrimaryIncidentCustomerAsset = "msdyn_customerasset";
	/// <summary><para>Primary Incident Description</para>
	/// <para>msdyn_primaryincidentdescription</para></summary>
	public const string PrimaryIncidentDescription = "msdyn_primaryincidentdescription";
	/// <summary><para>Primary Incident Estimated Duration</para>
	/// <para>msdyn_primaryincidentestimatedduration</para></summary>
	public const string PrimaryIncidentEstimatedDuration = "msdyn_primaryincidentestimatedduration";
	/// <summary><para>Primary Incident Type</para>
	/// <para>msdyn_primaryincidenttype</para></summary>
	public const string PrimaryIncidentType = "msdyn_primaryincidenttype";
	/// <summary><para>Priority</para>
	/// <para>msdyn_priority</para></summary>
	public const string Priority = "msdyn_priority";
	/// <summary><para>Process Id</para>
	/// <para>processid</para></summary>
	public const string ProcessId = "processid";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string RecordCreatedOn = "overriddencreatedon";
	/// <summary><para>Reported By Contact</para>
	/// <para>msdyn_reportedbycontact</para></summary>
	public const string ReportedByContact = "msdyn_reportedbycontact";
	/// <summary><para>Sales Tax Code</para>
	/// <para>msdyn_taxcode</para></summary>
	public const string SalesTaxCode = "msdyn_taxcode";
	/// <summary><para>Service Account</para>
	/// <para>msdyn_serviceaccount</para></summary>
	public const string ServiceAccount = "msdyn_serviceaccount";
	/// <summary><para>Service Territory</para>
	/// <para>msdyn_serviceterritory</para></summary>
	public const string ServiceTerritory = "msdyn_serviceterritory";
	/// <summary><para>Stage Id</para>
	/// <para>stageid</para></summary>
	public const string StageId = "stageid";
	/// <summary><para>State Or Province</para>
	/// <para>msdyn_stateorprovince</para></summary>
	public const string StateOrProvince = "msdyn_stateorprovince";
	/// <summary><para>Status</para>
	/// <para>statecode</para></summary>
	public const string Status = "statecode";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string StatusReason = "statuscode";
	/// <summary><para>Sub-Status</para>
	/// <para>msdyn_substatus</para></summary>
	public const string Sub_Status = "msdyn_substatus";
	/// <summary><para>Subtotal Amount</para>
	/// <para>msdyn_subtotalamount</para></summary>
	public const string SubtotalAmount = "msdyn_subtotalamount";
	/// <summary><para>Subtotal Amount (Base)</para>
	/// <para>msdyn_subtotalamount_base</para></summary>
	public const string SubtotalAmount_Base = "msdyn_subtotalamount_base";
	/// <summary><para>System Status</para>
	/// <para>msdyn_systemstatus</para></summary>
	public const string SystemStatus = "msdyn_systemstatus";
	/// <summary><para>Taxable</para>
	/// <para>msdyn_taxable</para></summary>
	public const string Taxable = "msdyn_taxable";
	/// <summary><para>Time From Promised</para>
	/// <para>msdyn_timefrompromised</para></summary>
	public const string TimeFromPromised = "msdyn_timefrompromised";
	/// <summary><para>Time Group</para>
	/// <para>msdyn_timegroup</para></summary>
	public const string TimeGroup = "msdyn_timegroup";
	/// <summary><para>Time Group Detail Selected (Deprecated)</para>
	/// <para>msdyn_timegroupdetailselected</para></summary>
	public const string TimeGroupDetailSelected_Deprecated = "msdyn_timegroupdetailselected";
	/// <summary><para>Time To Promised</para>
	/// <para>msdyn_timetopromised</para></summary>
	public const string TimeToPromised = "msdyn_timetopromised";
	/// <summary><para>Time Window End</para>
	/// <para>msdyn_timewindowend</para></summary>
	public const string TimeWindowEnd = "msdyn_timewindowend";
	/// <summary><para>Time Window Start</para>
	/// <para>msdyn_timewindowstart</para></summary>
	public const string TimeWindowStart = "msdyn_timewindowstart";
	/// <summary><para>Time Zone Rule Version Number</para>
	/// <para>timezoneruleversionnumber</para></summary>
	public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
	/// <summary><para>Total Amount</para>
	/// <para>msdyn_totalamount</para></summary>
	public const string TotalAmount = "msdyn_totalamount";
	/// <summary><para>Total Amount (Base)</para>
	/// <para>msdyn_totalamount_base</para></summary>
	public const string TotalAmount_Base = "msdyn_totalamount_base";
	/// <summary><para>Total Sales Tax</para>
	/// <para>msdyn_totalsalestax</para></summary>
	public const string TotalSalesTax = "msdyn_totalsalestax";
	/// <summary><para>Total Sales Tax (Base)</para>
	/// <para>msdyn_totalsalestax_base</para></summary>
	public const string TotalSalesTax_Base = "msdyn_totalsalestax_base";
	/// <summary><para>Traversed Path</para>
	/// <para>traversedpath</para></summary>
	public const string TraversedPath = "traversedpath";
	/// <summary><para>UTC Conversion Time Zone Code</para>
	/// <para>utcconversiontimezonecode</para></summary>
	public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
	/// <summary><para>WO Number</para>
	/// <para>msdyn_workorderid</para></summary>
	public const string WONumberId = "msdyn_workorderid";
	/// <summary><para>Work Location</para>
	/// <para>msdyn_worklocation</para></summary>
	public const string WorkLocation = "msdyn_worklocation";
	/// <summary><para>Work Order Number</para>
	/// <para>msdyn_name</para></summary>
	public const string WorkOrderNumber = "msdyn_name";
	/// <summary><para>Work Order Summary</para>
	/// <para>msdyn_workordersummary</para></summary>
	public const string WorkOrderSummary = "msdyn_workordersummary";
	/// <summary><para>Work Order Type</para>
	/// <para>msdyn_workordertype</para></summary>
	public const string WorkOrderType = "msdyn_workordertype";
}

    }
}

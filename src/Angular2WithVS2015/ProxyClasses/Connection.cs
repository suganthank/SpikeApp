// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("connection")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class Connection : BaseProxyClass
    {
        public new const string LogicalName = "connection";
        public const int ObjectTypeCode = 3234;
        public const string PrimaryIdAttribute = "connectionid";
        public const string PrimaryNameAttribute = "name";
        
        static Connection()
        {
            BaseProxyClass.RegisterProxyType(typeof(Connection), "connection");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public Connection() : base(new Entity("connection")) { }
        public Connection(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<Connection>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyidname")]
public string TransactionCurrencyIdName
{
	get { return this.GetPropertyValue<string>("transactioncurrencyidname"); }
}
///<summary>
///<para>Logical Name: record2idobjecttypecode</para>
///</summary>
[AttributeLogicalNameAttribute("record2idobjecttypecode")]
public string Record2IdObjectTypeCode
{
	get { return this.GetPropertyValue<string>("record2idobjecttypecode"); }
	set { this.SetPropertyValue<string>("record2idobjecttypecode", value, "Record2IdObjectTypeCode"); }
}
///<summary>
///<para>Logical Name: owneridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridname")]
public string OwnerIdName
{
	get { return this.GetPropertyValue<string>("owneridname"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: entityimage_timestamp</para>
///</summary>
[AttributeLogicalNameAttribute("entityimage_timestamp")]
public int? EntityImage_Timestamp
{
	get { return this.GetPropertyValue<int?>("entityimage_timestamp"); }
}
///<summary>
///<para>Logical Name: record2roleidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("record2roleidname")]
public string Record2RoleIdName
{
	get { return this.GetPropertyValue<string>("record2roleidname"); }
}
///<summary>
///<para>Logical Name: record1roleidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("record1roleidname")]
public string Record1RoleIdName
{
	get { return this.GetPropertyValue<string>("record1roleidname"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: record1idobjecttypecode</para>
///</summary>
[AttributeLogicalNameAttribute("record1idobjecttypecode")]
public string Record1IdObjectTypeCode
{
	get { return this.GetPropertyValue<string>("record1idobjecttypecode"); }
	set { this.SetPropertyValue<string>("record1idobjecttypecode", value, "Record1IdObjectTypeCode"); }
}
///<summary>
///<para>Logical Name: owneridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridyominame")]
public string OwnerIdYomiName
{
	get { return this.GetPropertyValue<string>("owneridyominame"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: owneridtype</para>
///</summary>
[AttributeLogicalNameAttribute("owneridtype")]
public string OwnerIdType
{
	get { return this.GetPropertyValue<string>("owneridtype"); }
	set { this.SetPropertyValue<string>("owneridtype", value, "OwnerIdType"); }
}
///<summary>
///<para>Logical Name: entityimage_url</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("entityimage_url")]
public string EntityImage_URL
{
	get { return this.GetPropertyValue<string>("entityimage_url"); }
}
///<summary>
///<para>Logical Name: record1id</para>
///</summary>
[AttributeLogicalNameAttribute("record1id")]
public EntityReference ConnectedFrom
{
	get { return this.GetPropertyValue<EntityReference>("record1id"); }
	set { this.SetPropertyValue<EntityReference>("record1id", value, "ConnectedFrom"); }
}
///<summary>
///<para>Logical Name: record2id</para>
///</summary>
[AttributeLogicalNameAttribute("record2id")]
public EntityReference ConnectedTo
{
	get { return this.GetPropertyValue<EntityReference>("record2id"); }
	set { this.SetPropertyValue<EntityReference>("record2id", value, "ConnectedTo"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: connectionid</para>
///</summary>
[AttributeLogicalNameAttribute("connectionid")]
public Guid ConnectionId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: name</para>
///<para>Max Length: 500 characters</para>
///</summary>
[AttributeLogicalNameAttribute("name")]
public string ConnectionName
{
	get { return this.GetPropertyValue<string>("name"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyid</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyid")]
public EntityReference Currency
{
	get { return this.GetPropertyValue<EntityReference>("transactioncurrencyid"); }
	set { this.SetPropertyValue<EntityReference>("transactioncurrencyid", value, "Currency"); }
}
///<summary>
///<para>Logical Name: description</para>
///<para>Max Length: 2000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("description")]
public string Description
{
	get { return this.GetPropertyValue<string>("description"); }
	set { this.SetPropertyValue("description", value, 2000, "Description"); }
}
///<summary>
///<para>Logical Name: effectiveend</para>
///</summary>
[AttributeLogicalNameAttribute("effectiveend")]
public DateTime? Ending
{
	get { return this.GetPropertyValue<DateTime?>("effectiveend"); }
	set { this.SetPropertyValue<DateTime?>("effectiveend", value, "Ending"); }
}
///<summary>
///<para>Logical Name: entityimageid</para>
///</summary>
[AttributeLogicalNameAttribute("entityimageid")]
public Guid EntityImageId
{
	get { return this.GetPropertyValue<Guid>("entityimageid"); }
}
///<summary>
///<para>Logical Name: exchangerate</para>
///<para>Minimum Value: 0.0000000001</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 10</para>
///</summary>
[AttributeLogicalNameAttribute("exchangerate")]
public decimal? ExchangeRate
{
	get { return this.GetPropertyValue<decimal?>("exchangerate"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? ImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "ImportSequenceNumber"); }
}
///<summary>
///<para>Logical Name: ismaster</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("ismaster")]
public bool? IsMaster
{
	get { return this.GetPropertyValue<bool?>("ismaster"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: record1idname</para>
///<para>Max Length: 500 characters</para>
///</summary>
[AttributeLogicalNameAttribute("record1idname")]
public string Name_From
{
	get { return this.GetPropertyValue<string>("record1idname"); }
}
///<summary>
///<para>Logical Name: record2idname</para>
///<para>Max Length: 500 characters</para>
///</summary>
[AttributeLogicalNameAttribute("record2idname")]
public string Name_To
{
	get { return this.GetPropertyValue<string>("record2idname"); }
}
///<summary>
///<para>Logical Name: ownerid</para>
///</summary>
[AttributeLogicalNameAttribute("ownerid")]
public EntityReference Owner
{
	get { return this.GetPropertyValue<EntityReference>("ownerid"); }
	set { this.SetPropertyValue<EntityReference>("ownerid", value, "Owner"); }
}
///<summary>
///<para>Logical Name: owningbusinessunit</para>
///</summary>
[AttributeLogicalNameAttribute("owningbusinessunit")]
public EntityReference OwningBusinessUnit
{
	get { return this.GetPropertyValue<EntityReference>("owningbusinessunit"); }
}
///<summary>
///<para>Logical Name: owningteam</para>
///</summary>
[AttributeLogicalNameAttribute("owningteam")]
public EntityReference OwningTeam
{
	get { return this.GetPropertyValue<EntityReference>("owningteam"); }
}
///<summary>
///<para>Logical Name: owninguser</para>
///</summary>
[AttributeLogicalNameAttribute("owninguser")]
public EntityReference OwningUser
{
	get { return this.GetPropertyValue<EntityReference>("owninguser"); }
}
///<summary>
///<para>Logical Name: relatedconnectionid</para>
///</summary>
[AttributeLogicalNameAttribute("relatedconnectionid")]
public EntityReference ReciprocalConnection
{
	get { return this.GetPropertyValue<EntityReference>("relatedconnectionid"); }
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? RecordCreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "RecordCreatedOn"); }
}
///<summary>
///<para>Logical Name: record1roleid</para>
///</summary>
[AttributeLogicalNameAttribute("record1roleid")]
public EntityReference Role_From
{
	get { return this.GetPropertyValue<EntityReference>("record1roleid"); }
	set { this.SetPropertyValue<EntityReference>("record1roleid", value, "Role_From"); }
}
///<summary>
///<para>Logical Name: record2roleid</para>
///</summary>
[AttributeLogicalNameAttribute("record2roleid")]
public EntityReference Role_To
{
	get { return this.GetPropertyValue<EntityReference>("record2roleid"); }
	set { this.SetPropertyValue<EntityReference>("record2roleid", value, "Role_To"); }
}
///<summary>
///<para>Logical Name: effectivestart</para>
///</summary>
[AttributeLogicalNameAttribute("effectivestart")]
public DateTime? Starting
{
	get { return this.GetPropertyValue<DateTime?>("effectivestart"); }
	set { this.SetPropertyValue<DateTime?>("effectivestart", value, "Starting"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eStatus? Status
{
	get
	{
		if (Status_OptionSetValue != null) { return (eStatus)Status_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Status_OptionSetValue = new OptionSetValue((int)value); }
		else this.Status_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue Status_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
	set { this.SetPropertyValue<OptionSetValue>("statecode", value, "Status_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Status_Text(IOrganizationService Service)
{
	return this.Status_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Status_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Status_OptionSetValue.Value);
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? StatusReason
{
	get
	{
		if (StatusReason_OptionSetValue != null) { return (eStatusReason)StatusReason_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StatusReason_OptionSetValue = new OptionSetValue((int)value); }
		else this.StatusReason_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue StatusReason_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "StatusReason_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string StatusReason_Text(IOrganizationService Service)
{
	return this.StatusReason_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string StatusReason_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.StatusReason_OptionSetValue.Value);
}
/// <summary>
///Logical Name: record1objecttypecode
/// </summary>
[AttributeLogicalNameAttribute("record1objecttypecode")]
public eType_From? Type_From
{
	get
	{
		if (Type_From_OptionSetValue != null) { return (eType_From)Type_From_OptionSetValue.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: record1objecttypecode</para>
///</summary>
[AttributeLogicalNameAttribute("record1objecttypecode")]
public OptionSetValue Type_From_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("record1objecttypecode"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Type_From_Text(IOrganizationService Service)
{
	return this.Type_From_OptionSetValue.GetOptionSetText(Service, this, "record1objecttypecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Type_From_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Type_From_OptionSetValue.Value);
}
/// <summary>
///Logical Name: record2objecttypecode
/// </summary>
[AttributeLogicalNameAttribute("record2objecttypecode")]
public eType_To? Type_To
{
	get
	{
		if (Type_To_OptionSetValue != null) { return (eType_To)Type_To_OptionSetValue.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: record2objecttypecode</para>
///</summary>
[AttributeLogicalNameAttribute("record2objecttypecode")]
public OptionSetValue Type_To_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("record2objecttypecode"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Type_To_Text(IOrganizationService Service)
{
	return this.Type_To_OptionSetValue.GetOptionSetText(Service, this, "record2objecttypecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Type_To_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Type_To_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}


        /// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: Connection_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: Connection_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Connection (Reciprocal Connection)</b></para>
/// <para>Schema Name: connection_related_connection</para>
/// </summary>
public List<Connection> GetConnections_ReciprocalConnection (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "relatedconnectionid", Columns); }
/// <summary>
/// <para><b>Connection (Reciprocal Connection)</b></para>
/// <para>Schema Name: connection_related_connection</para>
/// </summary>
public List<Connection> GetConnections_ReciprocalConnection (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "relatedconnectionid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: connection_principalobjectattributeaccess</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: connection_principalobjectattributeaccess</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: Connection_ProcessSessions</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: Connection_ProcessSessions</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: Connection_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: Connection_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_connection</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_connection</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        

        

        public enum eStatus
{
	///<summary><para>Active</para>
	///<para>Value = 0</para></summary>
	[Description("Active")]
	Active = 0, 
	///<summary><para>Inactive</para>
	///<para>Value = 1</para></summary>
	[Description("Inactive")]
	Inactive = 1
}
public enum eStatusReason
{
	///<summary><para>Active</para>
	///<para>Value = 1</para></summary>
	[Description("Active")]
	Active_Active = 1, 
	///<summary><para>Inactive</para>
	///<para>Value = 2</para></summary>
	[Description("Inactive")]
	Inactive_Inactive = 2
}
public enum eType_From
{
	///<summary><para>RTV Product</para>
	///<para>Value = 10164</para></summary>
	[Description("RTV Product")]
	RTVProduct = 10164, 
	///<summary><para>Agreement Booking Date</para>
	///<para>Value = 10105</para></summary>
	[Description("Agreement Booking Date")]
	AgreementBookingDate = 10105, 
	///<summary><para>Appointment</para>
	///<para>Value = 4201</para></summary>
	[Description("Appointment")]
	Appointment = 4201, 
	///<summary><para>Agreement Booking Incident</para>
	///<para>Value = 10106</para></summary>
	[Description("Agreement Booking Incident")]
	AgreementBookingIncident = 10106, 
	///<summary><para>Work Order Product</para>
	///<para>Value = 10177</para></summary>
	[Description("Work Order Product")]
	WorkOrderProduct = 10177, 
	///<summary><para>Agreement Booking Setup</para>
	///<para>Value = 10110</para></summary>
	[Description("Agreement Booking Setup")]
	AgreementBookingSetup = 10110, 
	///<summary><para>Inventory Adjustment Product</para>
	///<para>Value = 10131</para></summary>
	[Description("Inventory Adjustment Product")]
	InventoryAdjustmentProduct = 10131, 
	///<summary><para>Phone Call</para>
	///<para>Value = 4210</para></summary>
	[Description("Phone Call")]
	PhoneCall = 4210, 
	///<summary><para>Incident Type Service</para>
	///<para>Value = 10128</para></summary>
	[Description("Incident Type Service")]
	IncidentTypeService = 10128, 
	///<summary><para>RTV</para>
	///<para>Value = 10163</para></summary>
	[Description("RTV")]
	RTV = 10163, 
	///<summary><para>Agreement Invoice Setup</para>
	///<para>Value = 10113</para></summary>
	[Description("Agreement Invoice Setup")]
	AgreementInvoiceSetup = 10113, 
	///<summary><para>Purchase Order Sub Status</para>
	///<para>Value = 10149</para></summary>
	[Description("Purchase Order Sub Status")]
	PurchaseOrderSubStatus = 10149, 
	///<summary><para>RMA</para>
	///<para>Value = 10158</para></summary>
	[Description("RMA")]
	RMA = 10158, 
	///<summary><para>RMA Product</para>
	///<para>Value = 10159</para></summary>
	[Description("RMA Product")]
	RMAProduct = 10159, 
	///<summary><para>Knowledge Base Record</para>
	///<para>Value = 9930</para></summary>
	[Description("Knowledge Base Record")]
	KnowledgeBaseRecord = 9930, 
	///<summary><para>Resource Restriction (Deprecated)</para>
	///<para>Value = 10178</para></summary>
	[Description("Resource Restriction (Deprecated)")]
	ResourceRestriction_Deprecated = 10178, 
	///<summary><para>Quote Booking Incident</para>
	///<para>Value = 10150</para></summary>
	[Description("Quote Booking Incident")]
	QuoteBookingIncident = 10150, 
	///<summary><para>Agreement Booking Product</para>
	///<para>Value = 10107</para></summary>
	[Description("Agreement Booking Product")]
	AgreementBookingProduct = 10107, 
	///<summary><para>Facility/Equipment</para>
	///<para>Value = 4000</para></summary>
	[Description("Facility/Equipment")]
	Facility_Equipment = 4000, 
	///<summary><para>Invoice</para>
	///<para>Value = 1090</para></summary>
	[Description("Invoice")]
	Invoice = 1090, 
	///<summary><para>Time Group</para>
	///<para>Value = 10024</para></summary>
	[Description("Time Group")]
	TimeGroup = 10024, 
	///<summary><para>Purchase Order</para>
	///<para>Value = 10144</para></summary>
	[Description("Purchase Order")]
	PurchaseOrder = 10144, 
	///<summary><para>Activity</para>
	///<para>Value = 4200</para></summary>
	[Description("Activity")]
	Activity = 4200, 
	///<summary><para>Payment Method</para>
	///<para>Value = 10140</para></summary>
	[Description("Payment Method")]
	PaymentMethod = 10140, 
	///<summary><para>Marketing List</para>
	///<para>Value = 4300</para></summary>
	[Description("Marketing List")]
	MarketingList = 4300, 
	///<summary><para>Product Inventory</para>
	///<para>Value = 10143</para></summary>
	[Description("Product Inventory")]
	ProductInventory = 10143, 
	///<summary><para>Price List</para>
	///<para>Value = 1022</para></summary>
	[Description("Price List")]
	PriceList = 1022, 
	///<summary><para>Warehouse</para>
	///<para>Value = 10172</para></summary>
	[Description("Warehouse")]
	Warehouse = 10172, 
	///<summary><para>Purchase Order Receipt</para>
	///<para>Value = 10147</para></summary>
	[Description("Purchase Order Receipt")]
	PurchaseOrderReceipt = 10147, 
	///<summary><para>Recurring Appointment</para>
	///<para>Value = 4251</para></summary>
	[Description("Recurring Appointment")]
	RecurringAppointment = 4251, 
	///<summary><para>Tax Code</para>
	///<para>Value = 10168</para></summary>
	[Description("Tax Code")]
	TaxCode = 10168, 
	///<summary><para>Booking Alert Status</para>
	///<para>Value = 10007</para></summary>
	[Description("Booking Alert Status")]
	BookingAlertStatus = 10007, 
	///<summary><para>Project Team Member</para>
	///<para>Value = 10072</para></summary>
	[Description("Project Team Member")]
	ProjectTeamMember = 10072, 
	///<summary><para>Quote Booking Service Task</para>
	///<para>Value = 10153</para></summary>
	[Description("Quote Booking Service Task")]
	QuoteBookingServiceTask = 10153, 
	///<summary><para>Work Order Service</para>
	///<para>Value = 10179</para></summary>
	[Description("Work Order Service")]
	WorkOrderService = 10179, 
	///<summary><para>Contact</para>
	///<para>Value = 2</para></summary>
	[Description("Contact")]
	Contact = 2, 
	///<summary><para>Postal Code</para>
	///<para>Value = 10142</para></summary>
	[Description("Postal Code")]
	PostalCode = 10142, 
	///<summary><para>Inventory Transfer</para>
	///<para>Value = 10133</para></summary>
	[Description("Inventory Transfer")]
	InventoryTransfer = 10133, 
	///<summary><para>Agreement Invoice Date</para>
	///<para>Value = 10111</para></summary>
	[Description("Agreement Invoice Date")]
	AgreementInvoiceDate = 10111, 
	///<summary><para>Payment</para>
	///<para>Value = 10138</para></summary>
	[Description("Payment")]
	Payment = 10138, 
	///<summary><para>Process Notes</para>
	///<para>Value = 10063</para></summary>
	[Description("Process Notes")]
	ProcessNotes = 10063, 
	///<summary><para>Agreement Booking Service Task</para>
	///<para>Value = 10109</para></summary>
	[Description("Agreement Booking Service Task")]
	AgreementBookingServiceTask = 10109, 
	///<summary><para>Channel Access Profile Rule</para>
	///<para>Value = 9400</para></summary>
	[Description("Channel Access Profile Rule")]
	ChannelAccessProfileRule = 9400, 
	///<summary><para>Quote</para>
	///<para>Value = 1084</para></summary>
	[Description("Quote")]
	Quote = 1084, 
	///<summary><para>Entitlement</para>
	///<para>Value = 9700</para></summary>
	[Description("Entitlement")]
	Entitlement = 9700, 
	///<summary><para>Payment Term</para>
	///<para>Value = 10141</para></summary>
	[Description("Payment Term")]
	PaymentTerm = 10141, 
	///<summary><para>Account</para>
	///<para>Value = 1</para></summary>
	[Description("Account")]
	Account = 1, 
	///<summary><para>Purchase Order Bill</para>
	///<para>Value = 10145</para></summary>
	[Description("Purchase Order Bill")]
	PurchaseOrderBill = 10145, 
	///<summary><para>Agreement Invoice Product</para>
	///<para>Value = 10112</para></summary>
	[Description("Agreement Invoice Product")]
	AgreementInvoiceProduct = 10112, 
	///<summary><para>RMA Receipt Product</para>
	///<para>Value = 10161</para></summary>
	[Description("RMA Receipt Product")]
	RMAReceiptProduct = 10161, 
	///<summary><para>Resource Group</para>
	///<para>Value = 4007</para></summary>
	[Description("Resource Group")]
	ResourceGroup = 4007, 
	///<summary><para>Agreement</para>
	///<para>Value = 10104</para></summary>
	[Description("Agreement")]
	Agreement = 10104, 
	///<summary><para>Inventory Journal</para>
	///<para>Value = 10132</para></summary>
	[Description("Inventory Journal")]
	InventoryJournal = 10132, 
	///<summary><para>Purchase Order Product</para>
	///<para>Value = 10146</para></summary>
	[Description("Purchase Order Product")]
	PurchaseOrderProduct = 10146, 
	///<summary><para>Opportunity</para>
	///<para>Value = 3</para></summary>
	[Description("Opportunity")]
	Opportunity = 3, 
	///<summary><para>Work Order Characteristic (Deprecated)</para>
	///<para>Value = 10174</para></summary>
	[Description("Work Order Characteristic (Deprecated)")]
	WorkOrderCharacteristic_Deprecated = 10174, 
	///<summary><para>Payment Detail</para>
	///<para>Value = 10139</para></summary>
	[Description("Payment Detail")]
	PaymentDetail = 10139, 
	///<summary><para>Scheduling Group</para>
	///<para>Value = 4005</para></summary>
	[Description("Scheduling Group")]
	SchedulingGroup = 4005, 
	///<summary><para>Ship Via</para>
	///<para>Value = 10167</para></summary>
	[Description("Ship Via")]
	ShipVia = 10167, 
	///<summary><para>Approval</para>
	///<para>Value = 10029</para></summary>
	[Description("Approval")]
	Approval = 10029, 
	///<summary><para>RMA Sub-Status</para>
	///<para>Value = 10162</para></summary>
	[Description("RMA Sub-Status")]
	RMASub_Status = 10162, 
	///<summary><para>Territory</para>
	///<para>Value = 2013</para></summary>
	[Description("Territory")]
	Territory = 2013, 
	///<summary><para>Order</para>
	///<para>Value = 1088</para></summary>
	[Description("Order")]
	Order = 1088, 
	///<summary><para>Incident Type Characteristic</para>
	///<para>Value = 10126</para></summary>
	[Description("Incident Type Characteristic")]
	IncidentTypeCharacteristic = 10126, 
	///<summary><para>Process Session</para>
	///<para>Value = 4710</para></summary>
	[Description("Process Session")]
	ProcessSession = 4710, 
	///<summary><para>Quote Booking Service</para>
	///<para>Value = 10152</para></summary>
	[Description("Quote Booking Service")]
	QuoteBookingService = 10152, 
	///<summary><para>Quote Booking Product</para>
	///<para>Value = 10151</para></summary>
	[Description("Quote Booking Product")]
	QuoteBookingProduct = 10151, 
	///<summary><para>Lead</para>
	///<para>Value = 4</para></summary>
	[Description("Lead")]
	Lead = 4, 
	///<summary><para>Profile Album</para>
	///<para>Value = 10000</para></summary>
	[Description("Profile Album")]
	ProfileAlbum = 10000, 
	///<summary><para>Competitor</para>
	///<para>Value = 123</para></summary>
	[Description("Competitor")]
	Competitor = 123, 
	///<summary><para>Social Profile</para>
	///<para>Value = 99</para></summary>
	[Description("Social Profile")]
	SocialProfile = 99, 
	///<summary><para>User</para>
	///<para>Value = 8</para></summary>
	[Description("User")]
	User = 8, 
	///<summary><para>Service Activity</para>
	///<para>Value = 4214</para></summary>
	[Description("Service Activity")]
	ServiceActivity = 4214, 
	///<summary><para>Work Order</para>
	///<para>Value = 10173</para></summary>
	[Description("Work Order")]
	WorkOrder = 10173, 
	///<summary><para>Campaign</para>
	///<para>Value = 4400</para></summary>
	[Description("Campaign")]
	Campaign = 4400, 
	///<summary><para>Task</para>
	///<para>Value = 4212</para></summary>
	[Description("Task")]
	Task = 4212, 
	///<summary><para>Work Order Incident</para>
	///<para>Value = 10176</para></summary>
	[Description("Work Order Incident")]
	WorkOrderIncident = 10176, 
	///<summary><para>Work Order Service Task</para>
	///<para>Value = 10180</para></summary>
	[Description("Work Order Service Task")]
	WorkOrderServiceTask = 10180, 
	///<summary><para>Inventory Adjustment</para>
	///<para>Value = 10130</para></summary>
	[Description("Inventory Adjustment")]
	InventoryAdjustment = 10130, 
	///<summary><para>Campaign Activity</para>
	///<para>Value = 4402</para></summary>
	[Description("Campaign Activity")]
	CampaignActivity = 4402, 
	///<summary><para>Team</para>
	///<para>Value = 9</para></summary>
	[Description("Team")]
	Team = 9, 
	///<summary><para>RTV Sub-Status</para>
	///<para>Value = 10165</para></summary>
	[Description("RTV Sub-Status")]
	RTVSub_Status = 10165, 
	///<summary><para>Booking Rule</para>
	///<para>Value = 10009</para></summary>
	[Description("Booking Rule")]
	BookingRule = 10009, 
	///<summary><para>Product</para>
	///<para>Value = 1024</para></summary>
	[Description("Product")]
	Product = 1024, 
	///<summary><para>RMA Receipt</para>
	///<para>Value = 10160</para></summary>
	[Description("RMA Receipt")]
	RMAReceipt = 10160, 
	///<summary><para>Booking Alert</para>
	///<para>Value = 10006</para></summary>
	[Description("Booking Alert")]
	BookingAlert = 10006, 
	///<summary><para>Resource Territory</para>
	///<para>Value = 10020</para></summary>
	[Description("Resource Territory")]
	ResourceTerritory = 10020, 
	///<summary><para>Contract</para>
	///<para>Value = 1010</para></summary>
	[Description("Contract")]
	Contract = 1010, 
	///<summary><para>Incident Type Product</para>
	///<para>Value = 10127</para></summary>
	[Description("Incident Type Product")]
	IncidentTypeProduct = 10127, 
	///<summary><para>Knowledge Article</para>
	///<para>Value = 9953</para></summary>
	[Description("Knowledge Article")]
	KnowledgeArticle = 9953, 
	///<summary><para>Social Activity</para>
	///<para>Value = 4216</para></summary>
	[Description("Social Activity")]
	SocialActivity = 4216, 
	///<summary><para>Agreement Booking Service</para>
	///<para>Value = 10108</para></summary>
	[Description("Agreement Booking Service")]
	AgreementBookingService = 10108, 
	///<summary><para>Case</para>
	///<para>Value = 112</para></summary>
	[Description("Case")]
	@Case = 112, 
	///<summary><para>Project</para>
	///<para>Value = 10064</para></summary>
	[Description("Project")]
	Project = 10064, 
	///<summary><para>Email</para>
	///<para>Value = 4202</para></summary>
	[Description("Email")]
	Email = 4202, 
	///<summary><para>Letter</para>
	///<para>Value = 4207</para></summary>
	[Description("Letter")]
	Letter = 4207, 
	///<summary><para>Fax</para>
	///<para>Value = 4204</para></summary>
	[Description("Fax")]
	Fax = 4204, 
	///<summary><para>Customer Asset</para>
	///<para>Value = 10121</para></summary>
	[Description("Customer Asset")]
	CustomerAsset = 10121, 
	///<summary><para>Goal</para>
	///<para>Value = 9600</para></summary>
	[Description("Goal")]
	Goal = 9600, 
	///<summary><para>Time Group Detail</para>
	///<para>Value = 10025</para></summary>
	[Description("Time Group Detail")]
	TimeGroupDetail = 10025, 
	///<summary><para>System User Scheduler Setting</para>
	///<para>Value = 10023</para></summary>
	[Description("System User Scheduler Setting")]
	SystemUserSchedulerSetting = 10023, 
	///<summary><para>Purchase Order Receipt Product</para>
	///<para>Value = 10148</para></summary>
	[Description("Purchase Order Receipt Product")]
	PurchaseOrderReceiptProduct = 10148, 
	///<summary><para>Position</para>
	///<para>Value = 50</para></summary>
	[Description("Position")]
	Position = 50, 
	///<summary><para>Booking Timestamp</para>
	///<para>Value = 10116</para></summary>
	[Description("Booking Timestamp")]
	BookingTimestamp = 10116, 
	///<summary><para>Time Off Request</para>
	///<para>Value = 10170</para></summary>
	[Description("Time Off Request")]
	TimeOffRequest = 10170
}
public enum eType_To
{
	///<summary><para>Agreement Booking Setup</para>
	///<para>Value = 10110</para></summary>
	[Description("Agreement Booking Setup")]
	AgreementBookingSetup = 10110, 
	///<summary><para>RTV Product</para>
	///<para>Value = 10164</para></summary>
	[Description("RTV Product")]
	RTVProduct = 10164, 
	///<summary><para>Agreement Booking Date</para>
	///<para>Value = 10105</para></summary>
	[Description("Agreement Booking Date")]
	AgreementBookingDate = 10105, 
	///<summary><para>Fax</para>
	///<para>Value = 4204</para></summary>
	[Description("Fax")]
	Fax = 4204, 
	///<summary><para>Agreement Booking Incident</para>
	///<para>Value = 10106</para></summary>
	[Description("Agreement Booking Incident")]
	AgreementBookingIncident = 10106, 
	///<summary><para>Work Order Product</para>
	///<para>Value = 10177</para></summary>
	[Description("Work Order Product")]
	WorkOrderProduct = 10177, 
	///<summary><para>Appointment</para>
	///<para>Value = 4201</para></summary>
	[Description("Appointment")]
	Appointment = 4201, 
	///<summary><para>RMA</para>
	///<para>Value = 10158</para></summary>
	[Description("RMA")]
	RMA = 10158, 
	///<summary><para>Phone Call</para>
	///<para>Value = 4210</para></summary>
	[Description("Phone Call")]
	PhoneCall = 4210, 
	///<summary><para>Incident Type Service</para>
	///<para>Value = 10128</para></summary>
	[Description("Incident Type Service")]
	IncidentTypeService = 10128, 
	///<summary><para>Inventory Adjustment Product</para>
	///<para>Value = 10131</para></summary>
	[Description("Inventory Adjustment Product")]
	InventoryAdjustmentProduct = 10131, 
	///<summary><para>Service Activity</para>
	///<para>Value = 4214</para></summary>
	[Description("Service Activity")]
	ServiceActivity = 4214, 
	///<summary><para>Purchase Order Sub Status</para>
	///<para>Value = 10149</para></summary>
	[Description("Purchase Order Sub Status")]
	PurchaseOrderSubStatus = 10149, 
	///<summary><para>RMA Product</para>
	///<para>Value = 10159</para></summary>
	[Description("RMA Product")]
	RMAProduct = 10159, 
	///<summary><para>Knowledge Base Record</para>
	///<para>Value = 9930</para></summary>
	[Description("Knowledge Base Record")]
	KnowledgeBaseRecord = 9930, 
	///<summary><para>Tax Code</para>
	///<para>Value = 10168</para></summary>
	[Description("Tax Code")]
	TaxCode = 10168, 
	///<summary><para>Inventory Journal</para>
	///<para>Value = 10132</para></summary>
	[Description("Inventory Journal")]
	InventoryJournal = 10132, 
	///<summary><para>Quote Booking Incident</para>
	///<para>Value = 10150</para></summary>
	[Description("Quote Booking Incident")]
	QuoteBookingIncident = 10150, 
	///<summary><para>Facility/Equipment</para>
	///<para>Value = 4000</para></summary>
	[Description("Facility/Equipment")]
	Facility_Equipment = 4000, 
	///<summary><para>Invoice</para>
	///<para>Value = 1090</para></summary>
	[Description("Invoice")]
	Invoice = 1090, 
	///<summary><para>Time Group</para>
	///<para>Value = 10024</para></summary>
	[Description("Time Group")]
	TimeGroup = 10024, 
	///<summary><para>Purchase Order</para>
	///<para>Value = 10144</para></summary>
	[Description("Purchase Order")]
	PurchaseOrder = 10144, 
	///<summary><para>Activity</para>
	///<para>Value = 4200</para></summary>
	[Description("Activity")]
	Activity = 4200, 
	///<summary><para>Marketing List</para>
	///<para>Value = 4300</para></summary>
	[Description("Marketing List")]
	MarketingList = 4300, 
	///<summary><para>Product Inventory</para>
	///<para>Value = 10143</para></summary>
	[Description("Product Inventory")]
	ProductInventory = 10143, 
	///<summary><para>Agreement Invoice Date</para>
	///<para>Value = 10111</para></summary>
	[Description("Agreement Invoice Date")]
	AgreementInvoiceDate = 10111, 
	///<summary><para>Booking Alert Status</para>
	///<para>Value = 10007</para></summary>
	[Description("Booking Alert Status")]
	BookingAlertStatus = 10007, 
	///<summary><para>Quote Booking Service Task</para>
	///<para>Value = 10153</para></summary>
	[Description("Quote Booking Service Task")]
	QuoteBookingServiceTask = 10153, 
	///<summary><para>Price List</para>
	///<para>Value = 1022</para></summary>
	[Description("Price List")]
	PriceList = 1022, 
	///<summary><para>Agreement Invoice Product</para>
	///<para>Value = 10112</para></summary>
	[Description("Agreement Invoice Product")]
	AgreementInvoiceProduct = 10112, 
	///<summary><para>Recurring Appointment</para>
	///<para>Value = 4251</para></summary>
	[Description("Recurring Appointment")]
	RecurringAppointment = 4251, 
	///<summary><para>Warehouse</para>
	///<para>Value = 10172</para></summary>
	[Description("Warehouse")]
	Warehouse = 10172, 
	///<summary><para>Resource Restriction (Deprecated)</para>
	///<para>Value = 10178</para></summary>
	[Description("Resource Restriction (Deprecated)")]
	ResourceRestriction_Deprecated = 10178, 
	///<summary><para>Agreement Booking Product</para>
	///<para>Value = 10107</para></summary>
	[Description("Agreement Booking Product")]
	AgreementBookingProduct = 10107, 
	///<summary><para>Payment Method</para>
	///<para>Value = 10140</para></summary>
	[Description("Payment Method")]
	PaymentMethod = 10140, 
	///<summary><para>Work Order Service</para>
	///<para>Value = 10179</para></summary>
	[Description("Work Order Service")]
	WorkOrderService = 10179, 
	///<summary><para>Project Team Member</para>
	///<para>Value = 10072</para></summary>
	[Description("Project Team Member")]
	ProjectTeamMember = 10072, 
	///<summary><para>Letter</para>
	///<para>Value = 4207</para></summary>
	[Description("Letter")]
	Letter = 4207, 
	///<summary><para>Inventory Transfer</para>
	///<para>Value = 10133</para></summary>
	[Description("Inventory Transfer")]
	InventoryTransfer = 10133, 
	///<summary><para>Payment</para>
	///<para>Value = 10138</para></summary>
	[Description("Payment")]
	Payment = 10138, 
	///<summary><para>Process Notes</para>
	///<para>Value = 10063</para></summary>
	[Description("Process Notes")]
	ProcessNotes = 10063, 
	///<summary><para>Agreement Booking Service Task</para>
	///<para>Value = 10109</para></summary>
	[Description("Agreement Booking Service Task")]
	AgreementBookingServiceTask = 10109, 
	///<summary><para>Contact</para>
	///<para>Value = 2</para></summary>
	[Description("Contact")]
	Contact = 2, 
	///<summary><para>Quote</para>
	///<para>Value = 1084</para></summary>
	[Description("Quote")]
	Quote = 1084, 
	///<summary><para>Entitlement</para>
	///<para>Value = 9700</para></summary>
	[Description("Entitlement")]
	Entitlement = 9700, 
	///<summary><para>Payment Term</para>
	///<para>Value = 10141</para></summary>
	[Description("Payment Term")]
	PaymentTerm = 10141, 
	///<summary><para>Agreement</para>
	///<para>Value = 10104</para></summary>
	[Description("Agreement")]
	Agreement = 10104, 
	///<summary><para>Account</para>
	///<para>Value = 1</para></summary>
	[Description("Account")]
	Account = 1, 
	///<summary><para>Purchase Order Bill</para>
	///<para>Value = 10145</para></summary>
	[Description("Purchase Order Bill")]
	PurchaseOrderBill = 10145, 
	///<summary><para>Profile Album</para>
	///<para>Value = 10000</para></summary>
	[Description("Profile Album")]
	ProfileAlbum = 10000, 
	///<summary><para>RMA Receipt Product</para>
	///<para>Value = 10161</para></summary>
	[Description("RMA Receipt Product")]
	RMAReceiptProduct = 10161, 
	///<summary><para>Resource Group</para>
	///<para>Value = 4007</para></summary>
	[Description("Resource Group")]
	ResourceGroup = 4007, 
	///<summary><para>Incident Type Product</para>
	///<para>Value = 10127</para></summary>
	[Description("Incident Type Product")]
	IncidentTypeProduct = 10127, 
	///<summary><para>Purchase Order Product</para>
	///<para>Value = 10146</para></summary>
	[Description("Purchase Order Product")]
	PurchaseOrderProduct = 10146, 
	///<summary><para>Opportunity</para>
	///<para>Value = 3</para></summary>
	[Description("Opportunity")]
	Opportunity = 3, 
	///<summary><para>Approval</para>
	///<para>Value = 10029</para></summary>
	[Description("Approval")]
	Approval = 10029, 
	///<summary><para>Work Order Service Task</para>
	///<para>Value = 10180</para></summary>
	[Description("Work Order Service Task")]
	WorkOrderServiceTask = 10180, 
	///<summary><para>Scheduling Group</para>
	///<para>Value = 4005</para></summary>
	[Description("Scheduling Group")]
	SchedulingGroup = 4005, 
	///<summary><para>Ship Via</para>
	///<para>Value = 10167</para></summary>
	[Description("Ship Via")]
	ShipVia = 10167, 
	///<summary><para>Incident Type Characteristic</para>
	///<para>Value = 10126</para></summary>
	[Description("Incident Type Characteristic")]
	IncidentTypeCharacteristic = 10126, 
	///<summary><para>Territory</para>
	///<para>Value = 2013</para></summary>
	[Description("Territory")]
	Territory = 2013, 
	///<summary><para>Order</para>
	///<para>Value = 1088</para></summary>
	[Description("Order")]
	Order = 1088, 
	///<summary><para>Postal Code</para>
	///<para>Value = 10142</para></summary>
	[Description("Postal Code")]
	PostalCode = 10142, 
	///<summary><para>Process Session</para>
	///<para>Value = 4710</para></summary>
	[Description("Process Session")]
	ProcessSession = 4710, 
	///<summary><para>Quote Booking Service</para>
	///<para>Value = 10152</para></summary>
	[Description("Quote Booking Service")]
	QuoteBookingService = 10152, 
	///<summary><para>RMA Sub-Status</para>
	///<para>Value = 10162</para></summary>
	[Description("RMA Sub-Status")]
	RMASub_Status = 10162, 
	///<summary><para>Quote Booking Product</para>
	///<para>Value = 10151</para></summary>
	[Description("Quote Booking Product")]
	QuoteBookingProduct = 10151, 
	///<summary><para>Lead</para>
	///<para>Value = 4</para></summary>
	[Description("Lead")]
	Lead = 4, 
	///<summary><para>Purchase Order Receipt</para>
	///<para>Value = 10147</para></summary>
	[Description("Purchase Order Receipt")]
	PurchaseOrderReceipt = 10147, 
	///<summary><para>Competitor</para>
	///<para>Value = 123</para></summary>
	[Description("Competitor")]
	Competitor = 123, 
	///<summary><para>Social Profile</para>
	///<para>Value = 99</para></summary>
	[Description("Social Profile")]
	SocialProfile = 99, 
	///<summary><para>User</para>
	///<para>Value = 8</para></summary>
	[Description("User")]
	User = 8, 
	///<summary><para>Work Order Incident</para>
	///<para>Value = 10176</para></summary>
	[Description("Work Order Incident")]
	WorkOrderIncident = 10176, 
	///<summary><para>Campaign</para>
	///<para>Value = 4400</para></summary>
	[Description("Campaign")]
	Campaign = 4400, 
	///<summary><para>Task</para>
	///<para>Value = 4212</para></summary>
	[Description("Task")]
	Task = 4212, 
	///<summary><para>Payment Detail</para>
	///<para>Value = 10139</para></summary>
	[Description("Payment Detail")]
	PaymentDetail = 10139, 
	///<summary><para>RTV</para>
	///<para>Value = 10163</para></summary>
	[Description("RTV")]
	RTV = 10163, 
	///<summary><para>Inventory Adjustment</para>
	///<para>Value = 10130</para></summary>
	[Description("Inventory Adjustment")]
	InventoryAdjustment = 10130, 
	///<summary><para>Work Order</para>
	///<para>Value = 10173</para></summary>
	[Description("Work Order")]
	WorkOrder = 10173, 
	///<summary><para>Campaign Activity</para>
	///<para>Value = 4402</para></summary>
	[Description("Campaign Activity")]
	CampaignActivity = 4402, 
	///<summary><para>System User Scheduler Setting</para>
	///<para>Value = 10023</para></summary>
	[Description("System User Scheduler Setting")]
	SystemUserSchedulerSetting = 10023, 
	///<summary><para>Team</para>
	///<para>Value = 9</para></summary>
	[Description("Team")]
	Team = 9, 
	///<summary><para>Booking Rule</para>
	///<para>Value = 10009</para></summary>
	[Description("Booking Rule")]
	BookingRule = 10009, 
	///<summary><para>Product</para>
	///<para>Value = 1024</para></summary>
	[Description("Product")]
	Product = 1024, 
	///<summary><para>RMA Receipt</para>
	///<para>Value = 10160</para></summary>
	[Description("RMA Receipt")]
	RMAReceipt = 10160, 
	///<summary><para>RTV Sub-Status</para>
	///<para>Value = 10165</para></summary>
	[Description("RTV Sub-Status")]
	RTVSub_Status = 10165, 
	///<summary><para>Agreement Booking Service</para>
	///<para>Value = 10108</para></summary>
	[Description("Agreement Booking Service")]
	AgreementBookingService = 10108, 
	///<summary><para>Resource Territory</para>
	///<para>Value = 10020</para></summary>
	[Description("Resource Territory")]
	ResourceTerritory = 10020, 
	///<summary><para>Contract</para>
	///<para>Value = 1010</para></summary>
	[Description("Contract")]
	Contract = 1010, 
	///<summary><para>Booking Alert</para>
	///<para>Value = 10006</para></summary>
	[Description("Booking Alert")]
	BookingAlert = 10006, 
	///<summary><para>Knowledge Article</para>
	///<para>Value = 9953</para></summary>
	[Description("Knowledge Article")]
	KnowledgeArticle = 9953, 
	///<summary><para>Social Activity</para>
	///<para>Value = 4216</para></summary>
	[Description("Social Activity")]
	SocialActivity = 4216, 
	///<summary><para>Project</para>
	///<para>Value = 10064</para></summary>
	[Description("Project")]
	Project = 10064, 
	///<summary><para>Email</para>
	///<para>Value = 4202</para></summary>
	[Description("Email")]
	Email = 4202, 
	///<summary><para>Goal</para>
	///<para>Value = 9600</para></summary>
	[Description("Goal")]
	Goal = 9600, 
	///<summary><para>Channel Access Profile Rule</para>
	///<para>Value = 9400</para></summary>
	[Description("Channel Access Profile Rule")]
	ChannelAccessProfileRule = 9400, 
	///<summary><para>Customer Asset</para>
	///<para>Value = 10121</para></summary>
	[Description("Customer Asset")]
	CustomerAsset = 10121, 
	///<summary><para>Case</para>
	///<para>Value = 112</para></summary>
	[Description("Case")]
	@Case = 112, 
	///<summary><para>Position</para>
	///<para>Value = 50</para></summary>
	[Description("Position")]
	Position = 50, 
	///<summary><para>Time Group Detail</para>
	///<para>Value = 10025</para></summary>
	[Description("Time Group Detail")]
	TimeGroupDetail = 10025, 
	///<summary><para>Purchase Order Receipt Product</para>
	///<para>Value = 10148</para></summary>
	[Description("Purchase Order Receipt Product")]
	PurchaseOrderReceiptProduct = 10148, 
	///<summary><para>Work Order Characteristic (Deprecated)</para>
	///<para>Value = 10174</para></summary>
	[Description("Work Order Characteristic (Deprecated)")]
	WorkOrderCharacteristic_Deprecated = 10174, 
	///<summary><para>Booking Timestamp</para>
	///<para>Value = 10116</para></summary>
	[Description("Booking Timestamp")]
	BookingTimestamp = 10116, 
	///<summary><para>Agreement Invoice Setup</para>
	///<para>Value = 10113</para></summary>
	[Description("Agreement Invoice Setup")]
	AgreementInvoiceSetup = 10113, 
	///<summary><para>Time Off Request</para>
	///<para>Value = 10170</para></summary>
	[Description("Time Off Request")]
	TimeOffRequest = 10170
}
public void SetState(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>transactioncurrencyidname</para>
	/// <para>transactioncurrencyidname</para></summary>
	public const string TransactionCurrencyIdName = "transactioncurrencyidname";
	/// <summary><para>record2idobjecttypecode</para>
	/// <para>record2idobjecttypecode</para></summary>
	public const string Record2IdObjectTypeCode = "record2idobjecttypecode";
	/// <summary><para>owneridname</para>
	/// <para>owneridname</para></summary>
	public const string OwnerIdName = "owneridname";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>entityimage_timestamp</para>
	/// <para>entityimage_timestamp</para></summary>
	public const string EntityImage_Timestamp = "entityimage_timestamp";
	/// <summary><para>record2roleidname</para>
	/// <para>record2roleidname</para></summary>
	public const string Record2RoleIdName = "record2roleidname";
	/// <summary><para>record1roleidname</para>
	/// <para>record1roleidname</para></summary>
	public const string Record1RoleIdName = "record1roleidname";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>record1idobjecttypecode</para>
	/// <para>record1idobjecttypecode</para></summary>
	public const string Record1IdObjectTypeCode = "record1idobjecttypecode";
	/// <summary><para>owneridyominame</para>
	/// <para>owneridyominame</para></summary>
	public const string OwnerIdYomiName = "owneridyominame";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>owneridtype</para>
	/// <para>owneridtype</para></summary>
	public const string OwnerIdType = "owneridtype";
	/// <summary><para>entityimage_url</para>
	/// <para>entityimage_url</para></summary>
	public const string EntityImage_URL = "entityimage_url";
	/// <summary><para>Connected From</para>
	/// <para>record1id</para></summary>
	public const string ConnectedFrom = "record1id";
	/// <summary><para>Connected To</para>
	/// <para>record2id</para></summary>
	public const string ConnectedTo = "record2id";
	/// <summary><para>Connection</para>
	/// <para>connectionid</para></summary>
	public const string ConnectionId = "connectionid";
	/// <summary><para>Connection Name</para>
	/// <para>name</para></summary>
	public const string ConnectionName = "name";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Currency</para>
	/// <para>transactioncurrencyid</para></summary>
	public const string Currency = "transactioncurrencyid";
	/// <summary><para>Description</para>
	/// <para>description</para></summary>
	public const string Description = "description";
	/// <summary><para>Ending</para>
	/// <para>effectiveend</para></summary>
	public const string Ending = "effectiveend";
	/// <summary><para>Entity Image Id</para>
	/// <para>entityimageid</para></summary>
	public const string EntityImageId = "entityimageid";
	/// <summary><para>Exchange Rate</para>
	/// <para>exchangerate</para></summary>
	public const string ExchangeRate = "exchangerate";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string ImportSequenceNumber = "importsequencenumber";
	/// <summary><para>Is Master</para>
	/// <para>ismaster</para></summary>
	public const string IsMaster = "ismaster";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>Name (From)</para>
	/// <para>record1idname</para></summary>
	public const string Name_From = "record1idname";
	/// <summary><para>Name (To)</para>
	/// <para>record2idname</para></summary>
	public const string Name_To = "record2idname";
	/// <summary><para>Owner</para>
	/// <para>ownerid</para></summary>
	public const string Owner = "ownerid";
	/// <summary><para>Owning Business Unit</para>
	/// <para>owningbusinessunit</para></summary>
	public const string OwningBusinessUnit = "owningbusinessunit";
	/// <summary><para>Owning Team</para>
	/// <para>owningteam</para></summary>
	public const string OwningTeam = "owningteam";
	/// <summary><para>Owning User</para>
	/// <para>owninguser</para></summary>
	public const string OwningUser = "owninguser";
	/// <summary><para>Reciprocal Connection</para>
	/// <para>relatedconnectionid</para></summary>
	public const string ReciprocalConnection = "relatedconnectionid";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string RecordCreatedOn = "overriddencreatedon";
	/// <summary><para>Role (From)</para>
	/// <para>record1roleid</para></summary>
	public const string Role_From = "record1roleid";
	/// <summary><para>Role (To)</para>
	/// <para>record2roleid</para></summary>
	public const string Role_To = "record2roleid";
	/// <summary><para>Starting</para>
	/// <para>effectivestart</para></summary>
	public const string Starting = "effectivestart";
	/// <summary><para>Status</para>
	/// <para>statecode</para></summary>
	public const string Status = "statecode";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string StatusReason = "statuscode";
	/// <summary><para>Type (From)</para>
	/// <para>record1objecttypecode</para></summary>
	public const string Type_From = "record1objecttypecode";
	/// <summary><para>Type (To)</para>
	/// <para>record2objecttypecode</para></summary>
	public const string Type_To = "record2objecttypecode";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
}

    }
}

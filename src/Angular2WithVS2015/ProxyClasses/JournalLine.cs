// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("msdyn_journalline")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class JournalLine : BaseProxyClass
    {
        public new const string LogicalName = "msdyn_journalline";
        public const int ObjectTypeCode = 10051;
        public const string PrimaryIdAttribute = "msdyn_journallineid";
        public const string PrimaryNameAttribute = "msdyn_description";
        
        static JournalLine()
        {
            BaseProxyClass.RegisterProxyType(typeof(JournalLine), "msdyn_journalline");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public JournalLine() : base(new Entity("msdyn_journalline")) { }
        public JournalLine(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<JournalLine>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: msdyn_resourceorganizationalunitidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_resourceorganizationalunitidname")]
public string Msdyn_ResourceOrganizationalUnitIdName
{
	get { return this.GetPropertyValue<string>("msdyn_resourceorganizationalunitidname"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: owneridtype</para>
///</summary>
[AttributeLogicalNameAttribute("owneridtype")]
public string OwnerIdType
{
	get { return this.GetPropertyValue<string>("owneridtype"); }
	set { this.SetPropertyValue<string>("owneridtype", value, "OwnerIdType"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: owneridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridname")]
public string OwnerIdName
{
	get { return this.GetPropertyValue<string>("owneridname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_contactvendorname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_contactvendorname")]
public string Msdyn_ContactVendorName
{
	get { return this.GetPropertyValue<string>("msdyn_contactvendorname"); }
}
///<summary>
///<para>Logical Name: msdyn_resourcecategoryname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_resourcecategoryname")]
public string Msdyn_ResourceCategoryName
{
	get { return this.GetPropertyValue<string>("msdyn_resourcecategoryname"); }
}
///<summary>
///<para>Logical Name: msdyn_contractorganizationalunitidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_contractorganizationalunitidname")]
public string Msdyn_contractorganizationalunitidName
{
	get { return this.GetPropertyValue<string>("msdyn_contractorganizationalunitidname"); }
}
///<summary>
///<para>Logical Name: msdyn_bookableresourcename</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_bookableresourcename")]
public string Msdyn_bookableresourceName
{
	get { return this.GetPropertyValue<string>("msdyn_bookableresourcename"); }
}
///<summary>
///<para>Logical Name: msdyn_contactcustomeryominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_contactcustomeryominame")]
public string Msdyn_ContactCustomerYomiName
{
	get { return this.GetPropertyValue<string>("msdyn_contactcustomeryominame"); }
}
///<summary>
///<para>Logical Name: msdyn_taskname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_taskname")]
public string Msdyn_TaskName
{
	get { return this.GetPropertyValue<string>("msdyn_taskname"); }
}
///<summary>
///<para>Logical Name: msdyn_accountcustomername</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_accountcustomername")]
public string Msdyn_AccountCustomerName
{
	get { return this.GetPropertyValue<string>("msdyn_accountcustomername"); }
}
///<summary>
///<para>Logical Name: msdyn_accountcustomeryominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_accountcustomeryominame")]
public string Msdyn_AccountCustomerYomiName
{
	get { return this.GetPropertyValue<string>("msdyn_accountcustomeryominame"); }
}
///<summary>
///<para>Logical Name: msdyn_projectname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_projectname")]
public string Msdyn_ProjectName
{
	get { return this.GetPropertyValue<string>("msdyn_projectname"); }
}
///<summary>
///<para>Logical Name: msdyn_unitname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_unitname")]
public string Msdyn_UnitName
{
	get { return this.GetPropertyValue<string>("msdyn_unitname"); }
}
///<summary>
///<para>Logical Name: msdyn_contactvendoryominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_contactvendoryominame")]
public string Msdyn_ContactVendorYomiName
{
	get { return this.GetPropertyValue<string>("msdyn_contactvendoryominame"); }
}
///<summary>
///<para>Logical Name: owneridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridyominame")]
public string OwnerIdYomiName
{
	get { return this.GetPropertyValue<string>("owneridyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_productname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_productname")]
public string Msdyn_ProductName
{
	get { return this.GetPropertyValue<string>("msdyn_productname"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_journalname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_journalname")]
public string Msdyn_JournalName
{
	get { return this.GetPropertyValue<string>("msdyn_journalname"); }
}
///<summary>
///<para>Logical Name: msdyn_unitschedulename</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_unitschedulename")]
public string Msdyn_UnitScheduleName
{
	get { return this.GetPropertyValue<string>("msdyn_unitschedulename"); }
}
///<summary>
///<para>Logical Name: msdyn_accountvendoryominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_accountvendoryominame")]
public string Msdyn_AccountVendorYomiName
{
	get { return this.GetPropertyValue<string>("msdyn_accountvendoryominame"); }
}
///<summary>
///<para>Logical Name: msdyn_salescontractname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_salescontractname")]
public string Msdyn_SalesContractName
{
	get { return this.GetPropertyValue<string>("msdyn_salescontractname"); }
}
///<summary>
///<para>Logical Name: msdyn_pricelistname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_pricelistname")]
public string Msdyn_PriceListName
{
	get { return this.GetPropertyValue<string>("msdyn_pricelistname"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyidname")]
public string TransactionCurrencyIdName
{
	get { return this.GetPropertyValue<string>("transactioncurrencyidname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_accountvendorname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_accountvendorname")]
public string Msdyn_AccountVendorName
{
	get { return this.GetPropertyValue<string>("msdyn_accountvendorname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_contactcustomername</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_contactcustomername")]
public string Msdyn_ContactCustomerName
{
	get { return this.GetPropertyValue<string>("msdyn_contactcustomername"); }
}
///<summary>
///<para>Logical Name: msdyn_transactioncategoryname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_transactioncategoryname")]
public string Msdyn_TransactionCategoryName
{
	get { return this.GetPropertyValue<string>("msdyn_transactioncategoryname"); }
}
///<summary>
///<para>Logical Name: msdyn_accountingdate</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_accountingdate")]
public DateTime? AccountingDate
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_accountingdate"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_accountingdate", value, "AccountingDate"); }
}
///<summary>
///<para>Logical Name: msdyn_amount</para>
///<para>Minimum Value: -1000000000</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 4</para>
///</summary>
public decimal? Amount
{
	get
	{
		if (AmountMoney != null) { return AmountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.AmountMoney = new Money(value.Value); }
		else this.AmountMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_amount</para>
///<para>Minimum Value: -1000000000</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_amount")]
public Money AmountMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_amount"); }
	set { this.SetPropertyValue("msdyn_amount", (Money)value, (decimal)-1000000000, (decimal)1000000000, "AmountMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_amount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? Amount_Base
{
	get
	{
		if (Amount_BaseMoney != null) { return Amount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_amount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_amount_base")]
public Money Amount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_amount_base"); }
}
/// <summary>
///Logical Name: msdyn_amountmethod
/// </summary>
[AttributeLogicalNameAttribute("msdyn_amountmethod")]
public eAmountMethod? AmountMethod
{
	get
	{
		if (AmountMethod_OptionSetValue != null) { return (eAmountMethod)AmountMethod_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.AmountMethod_OptionSetValue = new OptionSetValue((int)value); }
		else this.AmountMethod_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_amountmethod</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_amountmethod")]
public OptionSetValue AmountMethod_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_amountmethod"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_amountmethod", value, "AmountMethod_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string AmountMethod_Text(IOrganizationService Service)
{
	return this.AmountMethod_OptionSetValue.GetOptionSetText(Service, this, "msdyn_amountmethod");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string AmountMethod_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.AmountMethod_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_basisamount</para>
///<para>Minimum Value: -1000000000</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 4</para>
///</summary>
public decimal? BasisAmount
{
	get
	{
		if (BasisAmountMoney != null) { return BasisAmountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.BasisAmountMoney = new Money(value.Value); }
		else this.BasisAmountMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_basisamount</para>
///<para>Minimum Value: -1000000000</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_basisamount")]
public Money BasisAmountMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_basisamount"); }
	set { this.SetPropertyValue("msdyn_basisamount", (Money)value, (decimal)-1000000000, (decimal)1000000000, "BasisAmountMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_basisamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? BasisAmount_Base
{
	get
	{
		if (BasisAmount_BaseMoney != null) { return BasisAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_basisamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_basisamount_base")]
public Money BasisAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_basisamount_base"); }
}
///<summary>
///<para>Logical Name: msdyn_basisprice</para>
///<para>Minimum Value: -1000000000</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 4</para>
///</summary>
public decimal? BasisPrice
{
	get
	{
		if (BasisPriceMoney != null) { return BasisPriceMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.BasisPriceMoney = new Money(value.Value); }
		else this.BasisPriceMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_basisprice</para>
///<para>Minimum Value: -1000000000</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_basisprice")]
public Money BasisPriceMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_basisprice"); }
	set { this.SetPropertyValue("msdyn_basisprice", (Money)value, (decimal)-1000000000, (decimal)1000000000, "BasisPriceMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_basisprice_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? BasisPrice_Base
{
	get
	{
		if (BasisPrice_BaseMoney != null) { return BasisPrice_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_basisprice_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_basisprice_base")]
public Money BasisPrice_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_basisprice_base"); }
}
///<summary>
///<para>Logical Name: msdyn_basisquantity</para>
///<para>Minimum Value: -1000000000</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_basisquantity")]
public decimal? BasisQuantity
{
	get { return this.GetPropertyValue<decimal?>("msdyn_basisquantity"); }
	set { this.SetPropertyValue("msdyn_basisquantity", (decimal?)value, (decimal)-1000000000, (decimal)1000000000, "BasisQuantity"); }
}
/// <summary>
///Logical Name: msdyn_billingstatus
/// </summary>
[AttributeLogicalNameAttribute("msdyn_billingstatus")]
public eBillingStatus? BillingStatus
{
	get
	{
		if (BillingStatus_OptionSetValue != null) { return (eBillingStatus)BillingStatus_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.BillingStatus_OptionSetValue = new OptionSetValue((int)value); }
		else this.BillingStatus_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_billingstatus</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_billingstatus")]
public OptionSetValue BillingStatus_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_billingstatus"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_billingstatus", value, "BillingStatus_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string BillingStatus_Text(IOrganizationService Service)
{
	return this.BillingStatus_OptionSetValue.GetOptionSetText(Service, this, "msdyn_billingstatus");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string BillingStatus_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.BillingStatus_OptionSetValue.Value);
}
/// <summary>
///Logical Name: msdyn_billingtype
/// </summary>
[AttributeLogicalNameAttribute("msdyn_billingtype")]
public eBillingType? BillingType
{
	get
	{
		if (BillingType_OptionSetValue != null) { return (eBillingType)BillingType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.BillingType_OptionSetValue = new OptionSetValue((int)value); }
		else this.BillingType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_billingtype</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_billingtype")]
public OptionSetValue BillingType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_billingtype"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_billingtype", value, "BillingType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string BillingType_Text(IOrganizationService Service)
{
	return this.BillingType_OptionSetValue.GetOptionSetText(Service, this, "msdyn_billingtype");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string BillingType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.BillingType_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_bookableresource</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_bookableresource")]
public EntityReference BookableResource
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_bookableresource"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_bookableresource", value, "BookableResource"); }
}
///<summary>
///<para>Logical Name: msdyn_contractorganizationalunitid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_contractorganizationalunitid")]
public EntityReference ContractingUnit
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_contractorganizationalunitid"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_contractorganizationalunitid", value, "ContractingUnit"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyid</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyid")]
public EntityReference Currency
{
	get { return this.GetPropertyValue<EntityReference>("transactioncurrencyid"); }
	set { this.SetPropertyValue<EntityReference>("transactioncurrencyid", value, "Currency"); }
}
///<summary>
///<para>Logical Name: msdyn_contactcustomer</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_contactcustomer")]
public EntityReference Customer
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_contactcustomer"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_contactcustomer", value, "Customer"); }
}
///<summary>
///<para>Logical Name: msdyn_accountcustomer</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_accountcustomer")]
public EntityReference Customer2
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_accountcustomer"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_accountcustomer", value, "Customer2"); }
}
/// <summary>
///Logical Name: msdyn_customertype
/// </summary>
[AttributeLogicalNameAttribute("msdyn_customertype")]
public ePartyType? CustomerType
{
	get
	{
		if (CustomerType_OptionSetValue != null) { return (ePartyType)CustomerType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.CustomerType_OptionSetValue = new OptionSetValue((int)value); }
		else this.CustomerType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_customertype</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_customertype")]
public OptionSetValue CustomerType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_customertype"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_customertype", value, "CustomerType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string CustomerType_Text(IOrganizationService Service)
{
	return this.CustomerType_OptionSetValue.GetOptionSetText(Service, this, "msdyn_customertype");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string CustomerType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.CustomerType_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_description</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_description")]
public string Description
{
	get { return this.GetPropertyValue<string>("msdyn_description"); }
	set { this.SetPropertyValue("msdyn_description", value, 100, "Description"); }
}
///<summary>
///<para>Logical Name: msdyn_documentdate</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_documentdate")]
public DateTime? DocumentDate
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_documentdate"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_documentdate", value, "DocumentDate"); }
}
///<summary>
///<para>Logical Name: msdyn_enddatetime</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_enddatetime")]
public DateTime? EndDate_Time
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_enddatetime"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_enddatetime", value, "EndDate_Time"); }
}
///<summary>
///<para>Logical Name: exchangerate</para>
///<para>Minimum Value: 0.0000000001</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 10</para>
///</summary>
[AttributeLogicalNameAttribute("exchangerate")]
public decimal? ExchangeRate
{
	get { return this.GetPropertyValue<decimal?>("exchangerate"); }
}
///<summary>
///<para>Logical Name: msdyn_exchangeratedate</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_exchangeratedate")]
public DateTime? ExchangeRateDate
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_exchangeratedate"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_exchangeratedate", value, "ExchangeRateDate"); }
}
///<summary>
///<para>Logical Name: msdyn_externaldescription</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_externaldescription")]
public string ExternalDescription
{
	get { return this.GetPropertyValue<string>("msdyn_externaldescription"); }
	set { this.SetPropertyValue("msdyn_externaldescription", value, 100, "ExternalDescription"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? ImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "ImportSequenceNumber"); }
}
///<summary>
///<para>Logical Name: msdyn_isposted</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_isposted")]
public bool? IsPosted
{
	get { return this.GetPropertyValue<bool?>("msdyn_isposted"); }
	set { this.SetPropertyValue<bool?>("msdyn_isposted", value, "IsPosted"); }
}
///<summary>
///<para>Logical Name: msdyn_journal</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_journal")]
public EntityReference Journal
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_journal"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_journal", value, "Journal"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: msdyn_journallineid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_journallineid")]
public Guid JournalLineId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: ownerid</para>
///</summary>
[AttributeLogicalNameAttribute("ownerid")]
public EntityReference Owner
{
	get { return this.GetPropertyValue<EntityReference>("ownerid"); }
	set { this.SetPropertyValue<EntityReference>("ownerid", value, "Owner"); }
}
///<summary>
///<para>Logical Name: owningbusinessunit</para>
///</summary>
[AttributeLogicalNameAttribute("owningbusinessunit")]
public EntityReference OwningBusinessUnit
{
	get { return this.GetPropertyValue<EntityReference>("owningbusinessunit"); }
}
///<summary>
///<para>Logical Name: owningteam</para>
///</summary>
[AttributeLogicalNameAttribute("owningteam")]
public EntityReference OwningTeam
{
	get { return this.GetPropertyValue<EntityReference>("owningteam"); }
}
///<summary>
///<para>Logical Name: owninguser</para>
///</summary>
[AttributeLogicalNameAttribute("owninguser")]
public EntityReference OwningUser
{
	get { return this.GetPropertyValue<EntityReference>("owninguser"); }
}
///<summary>
///<para>Logical Name: msdyn_percent</para>
///<para>Minimum Value: -1000000000</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_percent")]
public decimal? Percent
{
	get { return this.GetPropertyValue<decimal?>("msdyn_percent"); }
	set { this.SetPropertyValue("msdyn_percent", (decimal?)value, (decimal)-1000000000, (decimal)1000000000, "Percent"); }
}
///<summary>
///<para>Logical Name: msdyn_price</para>
///<para>Minimum Value: -1000000000</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 4</para>
///</summary>
public decimal? Price
{
	get
	{
		if (PriceMoney != null) { return PriceMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.PriceMoney = new Money(value.Value); }
		else this.PriceMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_price</para>
///<para>Minimum Value: -1000000000</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_price")]
public Money PriceMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_price"); }
	set { this.SetPropertyValue("msdyn_price", (Money)value, (decimal)-1000000000, (decimal)1000000000, "PriceMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_price_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? Price_Base
{
	get
	{
		if (Price_BaseMoney != null) { return Price_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_price_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_price_base")]
public Money Price_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_price_base"); }
}
///<summary>
///<para>Logical Name: msdyn_pricelist</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_pricelist")]
public EntityReference PriceList
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_pricelist"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_pricelist", value, "PriceList"); }
}
///<summary>
///<para>Logical Name: msdyn_product</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_product")]
public EntityReference Product
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_product"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_product", value, "Product"); }
}
///<summary>
///<para>Logical Name: msdyn_project</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_project")]
public EntityReference Project
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_project"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_project", value, "Project"); }
}
///<summary>
///<para>Logical Name: msdyn_salescontract</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_salescontract")]
public EntityReference ProjectContract
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_salescontract"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_salescontract", value, "ProjectContract"); }
}
///<summary>
///<para>Logical Name: msdyn_salescontractline</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_salescontractline")]
public string ProjectContractLine
{
	get { return this.GetPropertyValue<string>("msdyn_salescontractline"); }
	set { this.SetPropertyValue("msdyn_salescontractline", value, 100, "ProjectContractLine"); }
}
///<summary>
///<para>Logical Name: msdyn_quantity</para>
///<para>Minimum Value: -1000000000</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_quantity")]
public decimal? Quantity
{
	get { return this.GetPropertyValue<decimal?>("msdyn_quantity"); }
	set { this.SetPropertyValue("msdyn_quantity", (decimal?)value, (decimal)-1000000000, (decimal)1000000000, "Quantity"); }
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? RecordCreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "RecordCreatedOn"); }
}
///<summary>
///<para>Logical Name: msdyn_resourceorganizationalunitid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_resourceorganizationalunitid")]
public EntityReference ResourcingUnit
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_resourceorganizationalunitid"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_resourceorganizationalunitid", value, "ResourcingUnit"); }
}
///<summary>
///<para>Logical Name: msdyn_resourcecategory</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_resourcecategory")]
public EntityReference Role
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_resourcecategory"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_resourcecategory", value, "Role"); }
}
///<summary>
///<para>Logical Name: msdyn_startdatetime</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_startdatetime")]
public DateTime? StartDate_Time
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_startdatetime"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_startdatetime", value, "StartDate_Time"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eStatus? Status
{
	get
	{
		if (Status_OptionSetValue != null) { return (eStatus)Status_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Status_OptionSetValue = new OptionSetValue((int)value); }
		else this.Status_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue Status_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
	set { this.SetPropertyValue<OptionSetValue>("statecode", value, "Status_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Status_Text(IOrganizationService Service)
{
	return this.Status_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Status_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Status_OptionSetValue.Value);
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? StatusReason
{
	get
	{
		if (StatusReason_OptionSetValue != null) { return (eStatusReason)StatusReason_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StatusReason_OptionSetValue = new OptionSetValue((int)value); }
		else this.StatusReason_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue StatusReason_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "StatusReason_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string StatusReason_Text(IOrganizationService Service)
{
	return this.StatusReason_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string StatusReason_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.StatusReason_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_task</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_task")]
public EntityReference Task
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_task"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_task", value, "Task"); }
}
///<summary>
///<para>Logical Name: timezoneruleversionnumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("timezoneruleversionnumber")]
public int? TimeZoneRuleVersionNumber
{
	get { return this.GetPropertyValue<int?>("timezoneruleversionnumber"); }
	set { this.SetPropertyValue("timezoneruleversionnumber", (int?)value, (int)-1, (int)2147483647, "TimeZoneRuleVersionNumber"); }
}
///<summary>
///<para>Logical Name: msdyn_transactioncategory</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_transactioncategory")]
public EntityReference TransactionCategory
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_transactioncategory"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_transactioncategory", value, "TransactionCategory"); }
}
/// <summary>
///Logical Name: msdyn_transactionclassification
/// </summary>
[AttributeLogicalNameAttribute("msdyn_transactionclassification")]
public eTransactionClassification? TransactionClass
{
	get
	{
		if (TransactionClass_OptionSetValue != null) { return (eTransactionClassification)TransactionClass_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.TransactionClass_OptionSetValue = new OptionSetValue((int)value); }
		else this.TransactionClass_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_transactionclassification</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_transactionclassification")]
public OptionSetValue TransactionClass_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_transactionclassification"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_transactionclassification", value, "TransactionClass_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string TransactionClass_Text(IOrganizationService Service)
{
	return this.TransactionClass_OptionSetValue.GetOptionSetText(Service, this, "msdyn_transactionclassification");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string TransactionClass_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.TransactionClass_OptionSetValue.Value);
}
/// <summary>
///Logical Name: msdyn_transactiontypecode
/// </summary>
[AttributeLogicalNameAttribute("msdyn_transactiontypecode")]
public eTransactionTypeCode? TransactionType
{
	get
	{
		if (TransactionType_OptionSetValue != null) { return (eTransactionTypeCode)TransactionType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.TransactionType_OptionSetValue = new OptionSetValue((int)value); }
		else this.TransactionType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_transactiontypecode</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_transactiontypecode")]
public OptionSetValue TransactionType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_transactiontypecode"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_transactiontypecode", value, "TransactionType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string TransactionType_Text(IOrganizationService Service)
{
	return this.TransactionType_OptionSetValue.GetOptionSetText(Service, this, "msdyn_transactiontypecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string TransactionType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.TransactionType_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_unit</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_unit")]
public EntityReference Unit
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_unit"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_unit", value, "Unit"); }
}
///<summary>
///<para>Logical Name: msdyn_unitschedule</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_unitschedule")]
public EntityReference UnitSchedule
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_unitschedule"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_unitschedule", value, "UnitSchedule"); }
}
///<summary>
///<para>Logical Name: utcconversiontimezonecode</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utcconversiontimezonecode")]
public int? UTCConversionTimeZoneCode
{
	get { return this.GetPropertyValue<int?>("utcconversiontimezonecode"); }
	set { this.SetPropertyValue("utcconversiontimezonecode", (int?)value, (int)-1, (int)2147483647, "UTCConversionTimeZoneCode"); }
}
///<summary>
///<para>Logical Name: msdyn_accountvendor</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_accountvendor")]
public EntityReference Vendor
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_accountvendor"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_accountvendor", value, "Vendor"); }
}
///<summary>
///<para>Logical Name: msdyn_contactvendor</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_contactvendor")]
public EntityReference Vendor2
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_contactvendor"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_contactvendor", value, "Vendor2"); }
}
/// <summary>
///Logical Name: msdyn_vendortype
/// </summary>
[AttributeLogicalNameAttribute("msdyn_vendortype")]
public ePartyType? VendorType
{
	get
	{
		if (VendorType_OptionSetValue != null) { return (ePartyType)VendorType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.VendorType_OptionSetValue = new OptionSetValue((int)value); }
		else this.VendorType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_vendortype</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_vendortype")]
public OptionSetValue VendorType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_vendortype"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_vendortype", value, "VendorType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string VendorType_Text(IOrganizationService Service)
{
	return this.VendorType_OptionSetValue.GetOptionSetText(Service, this, "msdyn_vendortype");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string VendorType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.VendorType_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}


        /// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: msdyn_journalline_Annotations</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: msdyn_journalline_Annotations</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: msdyn_journalline_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: msdyn_journalline_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: msdyn_journalline_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: msdyn_journalline_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: msdyn_journalline_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: msdyn_journalline_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: msdyn_journalline_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: msdyn_journalline_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: msdyn_journalline_MailboxTrackingFolders</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: msdyn_journalline_MailboxTrackingFolders</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ProjectApproval (reference journal line)</b></para>
/// <para>Schema Name: msdyn_msdyn_journalline_msdyn_projectapproval_referencejournalline</para>
/// </summary>
public List<ProjectApproval> GetProjectApproval_referenceJournalLine (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectApproval>(Service, this.Id, "msdyn_projectapproval", "msdyn_referencejournalline", Columns); }
/// <summary>
/// <para><b>ProjectApproval (reference journal line)</b></para>
/// <para>Schema Name: msdyn_msdyn_journalline_msdyn_projectapproval_referencejournalline</para>
/// </summary>
public List<ProjectApproval> GetProjectApproval_referenceJournalLine (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectApproval>(Service, this.Id, "msdyn_projectapproval", "msdyn_referencejournalline", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: msdyn_journalline_PrincipalObjectAttributeAccesses</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: msdyn_journalline_PrincipalObjectAttributeAccesses</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: msdyn_journalline_ProcessSession</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: msdyn_journalline_ProcessSession</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: msdyn_journalline_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: msdyn_journalline_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: msdyn_journalline_UserEntityInstanceDatas</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: msdyn_journalline_UserEntityInstanceDatas</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        

        

        public enum eAmountMethod
{
	///<summary><para>Tax Calculation</para>
	///<para>Value = 690970000</para></summary>
	[Description("Tax Calculation")]
	TaxCalculation = 690970000, 
	///<summary><para>Multiply Quantity By Price</para>
	///<para>Value = 192350000</para></summary>
	[Description("Multiply Quantity By Price")]
	MultiplyQuantityByPrice = 192350000, 
	///<summary><para>Fixed Price</para>
	///<para>Value = 192350001</para></summary>
	[Description("Fixed Price")]
	FixedPrice = 192350001, 
	///<summary><para>Multiply Basis Quantity By Price</para>
	///<para>Value = 192350002</para></summary>
	[Description("Multiply Basis Quantity By Price")]
	MultiplyBasisQuantityByPrice = 192350002, 
	///<summary><para>Multiply Basis Amount By Percent</para>
	///<para>Value = 192350003</para></summary>
	[Description("Multiply Basis Amount By Percent")]
	MultiplyBasisAmountByPercent = 192350003
}
public enum eBillingStatus
{
	///<summary><para>Work order closed - posted</para>
	///<para>Value = 690970000</para></summary>
	[Description("Work order closed - posted")]
	WorkOrderClosed_Posted = 690970000, 
	///<summary><para>Unbilled Sales Created</para>
	///<para>Value = 192350000</para></summary>
	[Description("Unbilled Sales Created")]
	UnbilledSalesCreated = 192350000, 
	///<summary><para>Customer Invoice Created</para>
	///<para>Value = 192350001</para></summary>
	[Description("Customer Invoice Created")]
	CustomerInvoiceCreated = 192350001, 
	///<summary><para>Customer Invoice Posted</para>
	///<para>Value = 192350002</para></summary>
	[Description("Customer Invoice Posted")]
	CustomerInvoicePosted = 192350002, 
	///<summary><para>Canceled</para>
	///<para>Value = 192350003</para></summary>
	[Description("Canceled")]
	Canceled = 192350003
}
public enum eBillingType
{
	///<summary><para>Non Chargeable</para>
	///<para>Value = 192350000</para></summary>
	[Description("Non Chargeable")]
	NonChargeable = 192350000, 
	///<summary><para>Chargeable</para>
	///<para>Value = 192350001</para></summary>
	[Description("Chargeable")]
	Chargeable = 192350001, 
	///<summary><para>Complimentary</para>
	///<para>Value = 192350002</para></summary>
	[Description("Complimentary")]
	Complimentary = 192350002, 
	///<summary><para>Not Available</para>
	///<para>Value = 192350003</para></summary>
	[Description("Not Available")]
	NotAvailable = 192350003
}
public enum ePartyType
{
	///<summary><para>Account</para>
	///<para>Value = 192350001</para></summary>
	[Description("Account")]
	Account = 192350001, 
	///<summary><para>Contact</para>
	///<para>Value = 192350002</para></summary>
	[Description("Contact")]
	Contact = 192350002
}
public enum eStatus
{
	///<summary><para>Active</para>
	///<para>Value = 0</para></summary>
	[Description("Active")]
	Active = 0, 
	///<summary><para>Inactive</para>
	///<para>Value = 1</para></summary>
	[Description("Inactive")]
	Inactive = 1
}
public enum eStatusReason
{
	///<summary><para>Active</para>
	///<para>Value = 1</para></summary>
	[Description("Active")]
	Active_Active = 1, 
	///<summary><para>Inactive</para>
	///<para>Value = 2</para></summary>
	[Description("Inactive")]
	Inactive_Inactive = 2
}
public enum eTransactionClassification
{
	///<summary><para>Commission</para>
	///<para>Value = 690970000</para></summary>
	[Description("Commission")]
	Commission = 690970000, 
	///<summary><para>Additional</para>
	///<para>Value = 690970001</para></summary>
	[Description("Additional")]
	Additional = 690970001, 
	///<summary><para>Tax</para>
	///<para>Value = 690970002</para></summary>
	[Description("Tax")]
	Tax = 690970002, 
	///<summary><para>Time</para>
	///<para>Value = 192350000</para></summary>
	[Description("Time")]
	Time = 192350000, 
	///<summary><para>Expense</para>
	///<para>Value = 192350001</para></summary>
	[Description("Expense")]
	Expense = 192350001, 
	///<summary><para>Material</para>
	///<para>Value = 192350002</para></summary>
	[Description("Material")]
	Material = 192350002, 
	///<summary><para>Milestone</para>
	///<para>Value = 192350003</para></summary>
	[Description("Milestone")]
	Milestone = 192350003, 
	///<summary><para>Fee</para>
	///<para>Value = 192350004</para></summary>
	[Description("Fee")]
	Fee = 192350004
}
public enum eTransactionTypeCode
{
	///<summary><para>Cost</para>
	///<para>Value = 192350000</para></summary>
	[Description("Cost")]
	Cost = 192350000, 
	///<summary><para>Project Contract</para>
	///<para>Value = 192350004</para></summary>
	[Description("Project Contract")]
	ProjectContract = 192350004, 
	///<summary><para>Unbilled Sales</para>
	///<para>Value = 192350005</para></summary>
	[Description("Unbilled Sales")]
	UnbilledSales = 192350005, 
	///<summary><para>Billed Sales</para>
	///<para>Value = 192350006</para></summary>
	[Description("Billed Sales")]
	BilledSales = 192350006, 
	///<summary><para>Resourcing Unit Cost</para>
	///<para>Value = 192350007</para></summary>
	[Description("Resourcing Unit Cost")]
	ResourcingUnitCost = 192350007, 
	///<summary><para>Inter-Organizational Sales</para>
	///<para>Value = 192350008</para></summary>
	[Description("Inter-Organizational Sales")]
	Inter_OrganizationalSales = 192350008
}
public void SetState(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>msdyn_resourceorganizationalunitidname</para>
	/// <para>msdyn_resourceorganizationalunitidname</para></summary>
	public const string Msdyn_ResourceOrganizationalUnitIdName = "msdyn_resourceorganizationalunitidname";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>owneridtype</para>
	/// <para>owneridtype</para></summary>
	public const string OwnerIdType = "owneridtype";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>owneridname</para>
	/// <para>owneridname</para></summary>
	public const string OwnerIdName = "owneridname";
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>msdyn_contactvendorname</para>
	/// <para>msdyn_contactvendorname</para></summary>
	public const string Msdyn_ContactVendorName = "msdyn_contactvendorname";
	/// <summary><para>msdyn_resourcecategoryname</para>
	/// <para>msdyn_resourcecategoryname</para></summary>
	public const string Msdyn_ResourceCategoryName = "msdyn_resourcecategoryname";
	/// <summary><para>msdyn_contractorganizationalunitidname</para>
	/// <para>msdyn_contractorganizationalunitidname</para></summary>
	public const string Msdyn_contractorganizationalunitidName = "msdyn_contractorganizationalunitidname";
	/// <summary><para>msdyn_bookableresourcename</para>
	/// <para>msdyn_bookableresourcename</para></summary>
	public const string Msdyn_bookableresourceName = "msdyn_bookableresourcename";
	/// <summary><para>msdyn_contactcustomeryominame</para>
	/// <para>msdyn_contactcustomeryominame</para></summary>
	public const string Msdyn_ContactCustomerYomiName = "msdyn_contactcustomeryominame";
	/// <summary><para>msdyn_taskname</para>
	/// <para>msdyn_taskname</para></summary>
	public const string Msdyn_TaskName = "msdyn_taskname";
	/// <summary><para>msdyn_accountcustomername</para>
	/// <para>msdyn_accountcustomername</para></summary>
	public const string Msdyn_AccountCustomerName = "msdyn_accountcustomername";
	/// <summary><para>msdyn_accountcustomeryominame</para>
	/// <para>msdyn_accountcustomeryominame</para></summary>
	public const string Msdyn_AccountCustomerYomiName = "msdyn_accountcustomeryominame";
	/// <summary><para>msdyn_projectname</para>
	/// <para>msdyn_projectname</para></summary>
	public const string Msdyn_ProjectName = "msdyn_projectname";
	/// <summary><para>msdyn_unitname</para>
	/// <para>msdyn_unitname</para></summary>
	public const string Msdyn_UnitName = "msdyn_unitname";
	/// <summary><para>msdyn_contactvendoryominame</para>
	/// <para>msdyn_contactvendoryominame</para></summary>
	public const string Msdyn_ContactVendorYomiName = "msdyn_contactvendoryominame";
	/// <summary><para>owneridyominame</para>
	/// <para>owneridyominame</para></summary>
	public const string OwnerIdYomiName = "owneridyominame";
	/// <summary><para>msdyn_productname</para>
	/// <para>msdyn_productname</para></summary>
	public const string Msdyn_ProductName = "msdyn_productname";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>msdyn_journalname</para>
	/// <para>msdyn_journalname</para></summary>
	public const string Msdyn_JournalName = "msdyn_journalname";
	/// <summary><para>msdyn_unitschedulename</para>
	/// <para>msdyn_unitschedulename</para></summary>
	public const string Msdyn_UnitScheduleName = "msdyn_unitschedulename";
	/// <summary><para>msdyn_accountvendoryominame</para>
	/// <para>msdyn_accountvendoryominame</para></summary>
	public const string Msdyn_AccountVendorYomiName = "msdyn_accountvendoryominame";
	/// <summary><para>msdyn_salescontractname</para>
	/// <para>msdyn_salescontractname</para></summary>
	public const string Msdyn_SalesContractName = "msdyn_salescontractname";
	/// <summary><para>msdyn_pricelistname</para>
	/// <para>msdyn_pricelistname</para></summary>
	public const string Msdyn_PriceListName = "msdyn_pricelistname";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>transactioncurrencyidname</para>
	/// <para>transactioncurrencyidname</para></summary>
	public const string TransactionCurrencyIdName = "transactioncurrencyidname";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>msdyn_accountvendorname</para>
	/// <para>msdyn_accountvendorname</para></summary>
	public const string Msdyn_AccountVendorName = "msdyn_accountvendorname";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>msdyn_contactcustomername</para>
	/// <para>msdyn_contactcustomername</para></summary>
	public const string Msdyn_ContactCustomerName = "msdyn_contactcustomername";
	/// <summary><para>msdyn_transactioncategoryname</para>
	/// <para>msdyn_transactioncategoryname</para></summary>
	public const string Msdyn_TransactionCategoryName = "msdyn_transactioncategoryname";
	/// <summary><para>Accounting Date</para>
	/// <para>msdyn_accountingdate</para></summary>
	public const string AccountingDate = "msdyn_accountingdate";
	/// <summary><para>Amount</para>
	/// <para>msdyn_amount</para></summary>
	public const string Amount = "msdyn_amount";
	/// <summary><para>Amount (Base)</para>
	/// <para>msdyn_amount_base</para></summary>
	public const string Amount_Base = "msdyn_amount_base";
	/// <summary><para>Amount Method</para>
	/// <para>msdyn_amountmethod</para></summary>
	public const string AmountMethod = "msdyn_amountmethod";
	/// <summary><para>Basis Amount</para>
	/// <para>msdyn_basisamount</para></summary>
	public const string BasisAmount = "msdyn_basisamount";
	/// <summary><para>Basis Amount (Base)</para>
	/// <para>msdyn_basisamount_base</para></summary>
	public const string BasisAmount_Base = "msdyn_basisamount_base";
	/// <summary><para>Basis Price</para>
	/// <para>msdyn_basisprice</para></summary>
	public const string BasisPrice = "msdyn_basisprice";
	/// <summary><para>Basis Price (Base)</para>
	/// <para>msdyn_basisprice_base</para></summary>
	public const string BasisPrice_Base = "msdyn_basisprice_base";
	/// <summary><para>Basis Quantity</para>
	/// <para>msdyn_basisquantity</para></summary>
	public const string BasisQuantity = "msdyn_basisquantity";
	/// <summary><para>Billing Status</para>
	/// <para>msdyn_billingstatus</para></summary>
	public const string BillingStatus = "msdyn_billingstatus";
	/// <summary><para>Billing Type</para>
	/// <para>msdyn_billingtype</para></summary>
	public const string BillingType = "msdyn_billingtype";
	/// <summary><para>Bookable Resource</para>
	/// <para>msdyn_bookableresource</para></summary>
	public const string BookableResource = "msdyn_bookableresource";
	/// <summary><para>Contracting Unit</para>
	/// <para>msdyn_contractorganizationalunitid</para></summary>
	public const string ContractingUnit = "msdyn_contractorganizationalunitid";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Currency</para>
	/// <para>transactioncurrencyid</para></summary>
	public const string Currency = "transactioncurrencyid";
	/// <summary><para>Customer</para>
	/// <para>msdyn_contactcustomer</para></summary>
	public const string Customer = "msdyn_contactcustomer";
	/// <summary><para>Customer</para>
	/// <para>msdyn_accountcustomer</para></summary>
	public const string Customer2 = "msdyn_accountcustomer";
	/// <summary><para>Customer Type</para>
	/// <para>msdyn_customertype</para></summary>
	public const string CustomerType = "msdyn_customertype";
	/// <summary><para>Description</para>
	/// <para>msdyn_description</para></summary>
	public const string Description = "msdyn_description";
	/// <summary><para>Document Date</para>
	/// <para>msdyn_documentdate</para></summary>
	public const string DocumentDate = "msdyn_documentdate";
	/// <summary><para>End Date/Time</para>
	/// <para>msdyn_enddatetime</para></summary>
	public const string EndDate_Time = "msdyn_enddatetime";
	/// <summary><para>Exchange Rate</para>
	/// <para>exchangerate</para></summary>
	public const string ExchangeRate = "exchangerate";
	/// <summary><para>Exchange Rate Date</para>
	/// <para>msdyn_exchangeratedate</para></summary>
	public const string ExchangeRateDate = "msdyn_exchangeratedate";
	/// <summary><para>External Description</para>
	/// <para>msdyn_externaldescription</para></summary>
	public const string ExternalDescription = "msdyn_externaldescription";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string ImportSequenceNumber = "importsequencenumber";
	/// <summary><para>Is Posted</para>
	/// <para>msdyn_isposted</para></summary>
	public const string IsPosted = "msdyn_isposted";
	/// <summary><para>Journal</para>
	/// <para>msdyn_journal</para></summary>
	public const string Journal = "msdyn_journal";
	/// <summary><para>Journal Line</para>
	/// <para>msdyn_journallineid</para></summary>
	public const string JournalLineId = "msdyn_journallineid";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>Owner</para>
	/// <para>ownerid</para></summary>
	public const string Owner = "ownerid";
	/// <summary><para>Owning Business Unit</para>
	/// <para>owningbusinessunit</para></summary>
	public const string OwningBusinessUnit = "owningbusinessunit";
	/// <summary><para>Owning Team</para>
	/// <para>owningteam</para></summary>
	public const string OwningTeam = "owningteam";
	/// <summary><para>Owning User</para>
	/// <para>owninguser</para></summary>
	public const string OwningUser = "owninguser";
	/// <summary><para>Percent</para>
	/// <para>msdyn_percent</para></summary>
	public const string Percent = "msdyn_percent";
	/// <summary><para>Price</para>
	/// <para>msdyn_price</para></summary>
	public const string Price = "msdyn_price";
	/// <summary><para>Price (Base)</para>
	/// <para>msdyn_price_base</para></summary>
	public const string Price_Base = "msdyn_price_base";
	/// <summary><para>Price List</para>
	/// <para>msdyn_pricelist</para></summary>
	public const string PriceList = "msdyn_pricelist";
	/// <summary><para>Product</para>
	/// <para>msdyn_product</para></summary>
	public const string Product = "msdyn_product";
	/// <summary><para>Project</para>
	/// <para>msdyn_project</para></summary>
	public const string Project = "msdyn_project";
	/// <summary><para>Project Contract</para>
	/// <para>msdyn_salescontract</para></summary>
	public const string ProjectContract = "msdyn_salescontract";
	/// <summary><para>Project Contract Line</para>
	/// <para>msdyn_salescontractline</para></summary>
	public const string ProjectContractLine = "msdyn_salescontractline";
	/// <summary><para>Quantity</para>
	/// <para>msdyn_quantity</para></summary>
	public const string Quantity = "msdyn_quantity";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string RecordCreatedOn = "overriddencreatedon";
	/// <summary><para>Resourcing Unit</para>
	/// <para>msdyn_resourceorganizationalunitid</para></summary>
	public const string ResourcingUnit = "msdyn_resourceorganizationalunitid";
	/// <summary><para>Role</para>
	/// <para>msdyn_resourcecategory</para></summary>
	public const string Role = "msdyn_resourcecategory";
	/// <summary><para>Start Date/Time</para>
	/// <para>msdyn_startdatetime</para></summary>
	public const string StartDate_Time = "msdyn_startdatetime";
	/// <summary><para>Status</para>
	/// <para>statecode</para></summary>
	public const string Status = "statecode";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string StatusReason = "statuscode";
	/// <summary><para>Task</para>
	/// <para>msdyn_task</para></summary>
	public const string Task = "msdyn_task";
	/// <summary><para>Time Zone Rule Version Number</para>
	/// <para>timezoneruleversionnumber</para></summary>
	public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
	/// <summary><para>Transaction Category</para>
	/// <para>msdyn_transactioncategory</para></summary>
	public const string TransactionCategory = "msdyn_transactioncategory";
	/// <summary><para>Transaction Class</para>
	/// <para>msdyn_transactionclassification</para></summary>
	public const string TransactionClass = "msdyn_transactionclassification";
	/// <summary><para>Transaction Type</para>
	/// <para>msdyn_transactiontypecode</para></summary>
	public const string TransactionType = "msdyn_transactiontypecode";
	/// <summary><para>Unit</para>
	/// <para>msdyn_unit</para></summary>
	public const string Unit = "msdyn_unit";
	/// <summary><para>Unit Schedule</para>
	/// <para>msdyn_unitschedule</para></summary>
	public const string UnitSchedule = "msdyn_unitschedule";
	/// <summary><para>UTC Conversion Time Zone Code</para>
	/// <para>utcconversiontimezonecode</para></summary>
	public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
	/// <summary><para>Vendor</para>
	/// <para>msdyn_accountvendor</para></summary>
	public const string Vendor = "msdyn_accountvendor";
	/// <summary><para>Vendor</para>
	/// <para>msdyn_contactvendor</para></summary>
	public const string Vendor2 = "msdyn_contactvendor";
	/// <summary><para>Vendor Type</para>
	/// <para>msdyn_vendortype</para></summary>
	public const string VendorType = "msdyn_vendortype";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
}

    }
}

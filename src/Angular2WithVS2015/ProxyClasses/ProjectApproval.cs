// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("msdyn_projectapproval")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class ProjectApproval : BaseProxyClass
    {
        public new const string LogicalName = "msdyn_projectapproval";
        public const int ObjectTypeCode = 10065;
        public const string PrimaryIdAttribute = "msdyn_projectapprovalid";
        public const string PrimaryNameAttribute = "msdyn_name";
        
        static ProjectApproval()
        {
            BaseProxyClass.RegisterProxyType(typeof(ProjectApproval), "msdyn_projectapproval");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public ProjectApproval() : base(new Entity("msdyn_projectapproval")) { }
        public ProjectApproval(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<ProjectApproval>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_approvedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_approvedbyyominame")]
public string Msdyn_ApprovedByYomiName
{
	get { return this.GetPropertyValue<string>("msdyn_approvedbyyominame"); }
}
///<summary>
///<para>Logical Name: owneridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridname")]
public string OwnerIdName
{
	get { return this.GetPropertyValue<string>("owneridname"); }
}
///<summary>
///<para>Logical Name: msdyn_timeentryname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_timeentryname")]
public string Msdyn_TimeEntryName
{
	get { return this.GetPropertyValue<string>("msdyn_timeentryname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_manageryominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_manageryominame")]
public string Msdyn_ManagerYomiName
{
	get { return this.GetPropertyValue<string>("msdyn_manageryominame"); }
}
///<summary>
///<para>Logical Name: msdyn_expensecategoryname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_expensecategoryname")]
public string Msdyn_ExpenseCategoryName
{
	get { return this.GetPropertyValue<string>("msdyn_expensecategoryname"); }
}
///<summary>
///<para>Logical Name: msdyn_resourcecategoryname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_resourcecategoryname")]
public string Msdyn_ResourceCategoryName
{
	get { return this.GetPropertyValue<string>("msdyn_resourcecategoryname"); }
}
///<summary>
///<para>Logical Name: msdyn_approvedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_approvedbyname")]
public string Msdyn_ApprovedByName
{
	get { return this.GetPropertyValue<string>("msdyn_approvedbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_bookableresourcename</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_bookableresourcename")]
public string Msdyn_bookableresourceName
{
	get { return this.GetPropertyValue<string>("msdyn_bookableresourcename"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: owneridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridyominame")]
public string OwnerIdYomiName
{
	get { return this.GetPropertyValue<string>("owneridyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_submittedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_submittedbyname")]
public string Msdyn_SubmittedByName
{
	get { return this.GetPropertyValue<string>("msdyn_submittedbyname"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_referencejournallinename</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_referencejournallinename")]
public string Msdyn_referencejournallineName
{
	get { return this.GetPropertyValue<string>("msdyn_referencejournallinename"); }
}
///<summary>
///<para>Logical Name: msdyn_projectname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_projectname")]
public string Msdyn_ProjectName
{
	get { return this.GetPropertyValue<string>("msdyn_projectname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyidname")]
public string TransactionCurrencyIdName
{
	get { return this.GetPropertyValue<string>("transactioncurrencyidname"); }
}
///<summary>
///<para>Logical Name: msdyn_projecttaskname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_projecttaskname")]
public string Msdyn_ProjectTaskName
{
	get { return this.GetPropertyValue<string>("msdyn_projecttaskname"); }
}
///<summary>
///<para>Logical Name: msdyn_managername</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_managername")]
public string Msdyn_ManagerName
{
	get { return this.GetPropertyValue<string>("msdyn_managername"); }
}
///<summary>
///<para>Logical Name: owneridtype</para>
///</summary>
[AttributeLogicalNameAttribute("owneridtype")]
public string OwnerIdType
{
	get { return this.GetPropertyValue<string>("owneridtype"); }
	set { this.SetPropertyValue<string>("owneridtype", value, "OwnerIdType"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_expenseentryname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_expenseentryname")]
public string Msdyn_ExpenseEntryName
{
	get { return this.GetPropertyValue<string>("msdyn_expenseentryname"); }
}
///<summary>
///<para>Logical Name: msdyn_transactioncategoryname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_transactioncategoryname")]
public string Msdyn_TransactionCategoryName
{
	get { return this.GetPropertyValue<string>("msdyn_transactioncategoryname"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: msdyn_projectapprovalid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_projectapprovalid")]
public Guid ApprovalsTableId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: msdyn_approvedby</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_approvedby")]
public EntityReference ApprovedBy
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_approvedby"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_approvedby", value, "ApprovedBy"); }
}
///<summary>
///<para>Logical Name: msdyn_approvedon</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_approvedon")]
public DateTime? ApprovedOn
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_approvedon"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_approvedon", value, "ApprovedOn"); }
}
///<summary>
///<para>Logical Name: msdyn_salesquantity</para>
///<para>Minimum Value: -100000000000</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_salesquantity")]
public decimal? Billable_hrs
{
	get { return this.GetPropertyValue<decimal?>("msdyn_salesquantity"); }
	set { this.SetPropertyValue("msdyn_salesquantity", (decimal?)value, (decimal)-100000000000, (decimal)100000000000, "Billable_hrs"); }
}
/// <summary>
///Logical Name: msdyn_billingtype
/// </summary>
[AttributeLogicalNameAttribute("msdyn_billingtype")]
public eBillingType? BillingType
{
	get
	{
		if (BillingType_OptionSetValue != null) { return (eBillingType)BillingType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.BillingType_OptionSetValue = new OptionSetValue((int)value); }
		else this.BillingType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_billingtype</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_billingtype")]
public OptionSetValue BillingType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_billingtype"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_billingtype", value, "BillingType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string BillingType_Text(IOrganizationService Service)
{
	return this.BillingType_OptionSetValue.GetOptionSetText(Service, this, "msdyn_billingtype");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string BillingType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.BillingType_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_costamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? CostAmount
{
	get
	{
		if (CostAmountMoney != null) { return CostAmountMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_costamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_costamount")]
public Money CostAmountMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_costamount"); }
}
///<summary>
///<para>Logical Name: msdyn_costamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? CostAmount_Base
{
	get
	{
		if (CostAmount_BaseMoney != null) { return CostAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_costamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_costamount_base")]
public Money CostAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_costamount_base"); }
}
///<summary>
///<para>Logical Name: msdyn_costprice</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? CostPrice
{
	get
	{
		if (CostPriceMoney != null) { return CostPriceMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.CostPriceMoney = new Money(value.Value); }
		else this.CostPriceMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_costprice</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_costprice")]
public Money CostPriceMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_costprice"); }
	set { this.SetPropertyValue("msdyn_costprice", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "CostPriceMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_costprice_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? CostPrice_Base
{
	get
	{
		if (CostPrice_BaseMoney != null) { return CostPrice_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_costprice_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_costprice_base")]
public Money CostPrice_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_costprice_base"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyid</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyid")]
public EntityReference Currency
{
	get { return this.GetPropertyValue<EntityReference>("transactioncurrencyid"); }
	set { this.SetPropertyValue<EntityReference>("transactioncurrencyid", value, "Currency"); }
}
///<summary>
///<para>Logical Name: msdyn_date</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_date")]
public DateTime? Date
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_date"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_date", value, "Date"); }
}
/// <summary>
///Logical Name: msdyn_entrytype
/// </summary>
[AttributeLogicalNameAttribute("msdyn_entrytype")]
public eEntryType? EntryType
{
	get
	{
		if (EntryType_OptionSetValue != null) { return (eEntryType)EntryType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.EntryType_OptionSetValue = new OptionSetValue((int)value); }
		else this.EntryType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_entrytype</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_entrytype")]
public OptionSetValue EntryType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_entrytype"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_entrytype", value, "EntryType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string EntryType_Text(IOrganizationService Service)
{
	return this.EntryType_OptionSetValue.GetOptionSetText(Service, this, "msdyn_entrytype");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string EntryType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.EntryType_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: exchangerate</para>
///<para>Minimum Value: 0.0000000001</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 10</para>
///</summary>
[AttributeLogicalNameAttribute("exchangerate")]
public decimal? ExchangeRate
{
	get { return this.GetPropertyValue<decimal?>("exchangerate"); }
}
///<summary>
///<para>Logical Name: msdyn_expensecategory</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_expensecategory")]
public EntityReference ExpenseCategory
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_expensecategory"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_expensecategory", value, "ExpenseCategory"); }
}
///<summary>
///<para>Logical Name: msdyn_expenseentry</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_expenseentry")]
public EntityReference ExpenseEntry
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_expenseentry"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_expenseentry", value, "ExpenseEntry"); }
}
///<summary>
///<para>Logical Name: msdyn_externalcomments</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_externalcomments")]
public string ExternalComments
{
	get { return this.GetPropertyValue<string>("msdyn_externalcomments"); }
	set { this.SetPropertyValue("msdyn_externalcomments", value, 100, "ExternalComments"); }
}
///<summary>
///<para>Logical Name: msdyn_hasreceipt</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_hasreceipt")]
public bool? HasReceipt
{
	get { return this.GetPropertyValue<bool?>("msdyn_hasreceipt"); }
	set { this.SetPropertyValue<bool?>("msdyn_hasreceipt", value, "HasReceipt"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? ImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "ImportSequenceNumber"); }
}
///<summary>
///<para>Logical Name: msdyn_internalcomments</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_internalcomments")]
public string InternalComments
{
	get { return this.GetPropertyValue<string>("msdyn_internalcomments"); }
	set { this.SetPropertyValue("msdyn_internalcomments", value, 100, "InternalComments"); }
}
///<summary>
///<para>Logical Name: msdyn_journaltransaction</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_journaltransaction")]
public string JournalTransaction
{
	get { return this.GetPropertyValue<string>("msdyn_journaltransaction"); }
	set { this.SetPropertyValue("msdyn_journaltransaction", value, 100, "JournalTransaction"); }
}
///<summary>
///<para>Logical Name: msdyn_manager</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_manager")]
public EntityReference Manager
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_manager"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_manager", value, "Manager"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: msdyn_name</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_name")]
public string Name
{
	get { return this.GetPropertyValue<string>("msdyn_name"); }
	set { this.SetPropertyValue("msdyn_name", value, 100, "Name"); }
}
///<summary>
///<para>Logical Name: ownerid</para>
///</summary>
[AttributeLogicalNameAttribute("ownerid")]
public EntityReference Owner
{
	get { return this.GetPropertyValue<EntityReference>("ownerid"); }
	set { this.SetPropertyValue<EntityReference>("ownerid", value, "Owner"); }
}
///<summary>
///<para>Logical Name: owningbusinessunit</para>
///</summary>
[AttributeLogicalNameAttribute("owningbusinessunit")]
public EntityReference OwningBusinessUnit
{
	get { return this.GetPropertyValue<EntityReference>("owningbusinessunit"); }
}
///<summary>
///<para>Logical Name: owningteam</para>
///</summary>
[AttributeLogicalNameAttribute("owningteam")]
public EntityReference OwningTeam
{
	get { return this.GetPropertyValue<EntityReference>("owningteam"); }
}
///<summary>
///<para>Logical Name: owninguser</para>
///</summary>
[AttributeLogicalNameAttribute("owninguser")]
public EntityReference OwningUser
{
	get { return this.GetPropertyValue<EntityReference>("owninguser"); }
}
///<summary>
///<para>Logical Name: msdyn_project</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_project")]
public EntityReference Project
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_project"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_project", value, "Project"); }
}
///<summary>
///<para>Logical Name: msdyn_projecttask</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_projecttask")]
public EntityReference ProjectTask
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_projecttask"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_projecttask", value, "ProjectTask"); }
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? RecordCreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "RecordCreatedOn"); }
}
/// <summary>
///Logical Name: msdyn_recordstage
/// </summary>
[AttributeLogicalNameAttribute("msdyn_recordstage")]
public eRecordStage? RecordStage
{
	get
	{
		if (RecordStage_OptionSetValue != null) { return (eRecordStage)RecordStage_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.RecordStage_OptionSetValue = new OptionSetValue((int)value); }
		else this.RecordStage_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_recordstage</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_recordstage")]
public OptionSetValue RecordStage_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_recordstage"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_recordstage", value, "RecordStage_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string RecordStage_Text(IOrganizationService Service)
{
	return this.RecordStage_OptionSetValue.GetOptionSetText(Service, this, "msdyn_recordstage");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string RecordStage_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.RecordStage_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_referenceexpenseid</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_referenceexpenseid")]
public string ReferenceExpenseId
{
	get { return this.GetPropertyValue<string>("msdyn_referenceexpenseid"); }
	set { this.SetPropertyValue("msdyn_referenceexpenseid", value, 100, "ReferenceExpenseId"); }
}
///<summary>
///<para>Logical Name: msdyn_referencejournalline</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_referencejournalline")]
public EntityReference ReferenceJournalLine
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_referencejournalline"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_referencejournalline", value, "ReferenceJournalLine"); }
}
///<summary>
///<para>Logical Name: msdyn_referencetimeid</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_referencetimeid")]
public string ReferenceTimeId
{
	get { return this.GetPropertyValue<string>("msdyn_referencetimeid"); }
	set { this.SetPropertyValue("msdyn_referencetimeid", value, 100, "ReferenceTimeId"); }
}
///<summary>
///<para>Logical Name: msdyn_bookableresource</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_bookableresource")]
public EntityReference Resource
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_bookableresource"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_bookableresource", value, "Resource"); }
}
///<summary>
///<para>Logical Name: msdyn_resourcecategory</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_resourcecategory")]
public EntityReference ResourceRole
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_resourcecategory"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_resourcecategory", value, "ResourceRole"); }
}
///<summary>
///<para>Logical Name: msdyn_salesamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? SalesAmount
{
	get
	{
		if (SalesAmountMoney != null) { return SalesAmountMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_salesamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_salesamount")]
public Money SalesAmountMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_salesamount"); }
}
///<summary>
///<para>Logical Name: msdyn_salesamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? SalesAmount_Base
{
	get
	{
		if (SalesAmount_BaseMoney != null) { return SalesAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_salesamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_salesamount_base")]
public Money SalesAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_salesamount_base"); }
}
///<summary>
///<para>Logical Name: msdyn_salesprice</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? SalesPrice
{
	get
	{
		if (SalesPriceMoney != null) { return SalesPriceMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.SalesPriceMoney = new Money(value.Value); }
		else this.SalesPriceMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_salesprice</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_salesprice")]
public Money SalesPriceMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_salesprice"); }
	set { this.SetPropertyValue("msdyn_salesprice", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "SalesPriceMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_salesprice_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? SalesPrice_Base
{
	get
	{
		if (SalesPrice_BaseMoney != null) { return SalesPrice_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_salesprice_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_salesprice_base")]
public Money SalesPrice_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_salesprice_base"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eStatus? Status
{
	get
	{
		if (Status_OptionSetValue != null) { return (eStatus)Status_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Status_OptionSetValue = new OptionSetValue((int)value); }
		else this.Status_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue Status_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
	set { this.SetPropertyValue<OptionSetValue>("statecode", value, "Status_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Status_Text(IOrganizationService Service)
{
	return this.Status_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Status_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Status_OptionSetValue.Value);
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? StatusReason
{
	get
	{
		if (StatusReason_OptionSetValue != null) { return (eStatusReason)StatusReason_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StatusReason_OptionSetValue = new OptionSetValue((int)value); }
		else this.StatusReason_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue StatusReason_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "StatusReason_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string StatusReason_Text(IOrganizationService Service)
{
	return this.StatusReason_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string StatusReason_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.StatusReason_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_costquantity</para>
///<para>Minimum Value: -100000000000</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_costquantity")]
public decimal? Submitted_hrs
{
	get { return this.GetPropertyValue<decimal?>("msdyn_costquantity"); }
	set { this.SetPropertyValue("msdyn_costquantity", (decimal?)value, (decimal)-100000000000, (decimal)100000000000, "Submitted_hrs"); }
}
///<summary>
///<para>Logical Name: msdyn_submittedby</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_submittedby")]
public EntityReference SubmittedBy
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_submittedby"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_submittedby", value, "SubmittedBy"); }
}
///<summary>
///<para>Logical Name: msdyn_timeentry</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_timeentry")]
public EntityReference TimeEntry
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_timeentry"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_timeentry", value, "TimeEntry"); }
}
///<summary>
///<para>Logical Name: timezoneruleversionnumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("timezoneruleversionnumber")]
public int? TimeZoneRuleVersionNumber
{
	get { return this.GetPropertyValue<int?>("timezoneruleversionnumber"); }
	set { this.SetPropertyValue("timezoneruleversionnumber", (int?)value, (int)-1, (int)2147483647, "TimeZoneRuleVersionNumber"); }
}
///<summary>
///<para>Logical Name: msdyn_transactioncategory</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_transactioncategory")]
public EntityReference TransactionCategory
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_transactioncategory"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_transactioncategory", value, "TransactionCategory"); }
}
///<summary>
///<para>Logical Name: utcconversiontimezonecode</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utcconversiontimezonecode")]
public int? UTCConversionTimeZoneCode
{
	get { return this.GetPropertyValue<int?>("utcconversiontimezonecode"); }
	set { this.SetPropertyValue("utcconversiontimezonecode", (int?)value, (int)-1, (int)2147483647, "UTCConversionTimeZoneCode"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}


        /// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectapproval_Annotations</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectapproval_Annotations</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectapproval_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectapproval_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: msdyn_projectapproval_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: msdyn_projectapproval_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: msdyn_projectapproval_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: msdyn_projectapproval_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: msdyn_projectapproval_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: msdyn_projectapproval_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: msdyn_projectapproval_MailboxTrackingFolders</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: msdyn_projectapproval_MailboxTrackingFolders</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: msdyn_projectapproval_PrincipalObjectAttributeAccesses</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: msdyn_projectapproval_PrincipalObjectAttributeAccesses</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectapproval_ProcessSession</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectapproval_ProcessSession</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: msdyn_projectapproval_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: msdyn_projectapproval_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: msdyn_projectapproval_UserEntityInstanceDatas</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: msdyn_projectapproval_UserEntityInstanceDatas</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        

        

        public enum eBillingType
{
	///<summary><para>Non Chargeable</para>
	///<para>Value = 192350000</para></summary>
	[Description("Non Chargeable")]
	NonChargeable = 192350000, 
	///<summary><para>Chargeable</para>
	///<para>Value = 192350001</para></summary>
	[Description("Chargeable")]
	Chargeable = 192350001, 
	///<summary><para>Complimentary</para>
	///<para>Value = 192350002</para></summary>
	[Description("Complimentary")]
	Complimentary = 192350002, 
	///<summary><para>Not Available</para>
	///<para>Value = 192350003</para></summary>
	[Description("Not Available")]
	NotAvailable = 192350003
}
public enum eEntryType
{
	///<summary><para>Time</para>
	///<para>Value = 0</para></summary>
	[Description("Time")]
	Time = 0, 
	///<summary><para>Expense</para>
	///<para>Value = 1</para></summary>
	[Description("Expense")]
	Expense = 1
}
public enum eRecordStage
{
	///<summary><para>Pending</para>
	///<para>Value = 3</para></summary>
	[Description("Pending")]
	Pending = 3, 
	///<summary><para>Submitted</para>
	///<para>Value = 0</para></summary>
	[Description("Submitted")]
	Submitted = 0, 
	///<summary><para>Rejected</para>
	///<para>Value = 1</para></summary>
	[Description("Rejected")]
	Rejected = 1, 
	///<summary><para>Approved</para>
	///<para>Value = 2</para></summary>
	[Description("Approved")]
	Approved = 2
}
public enum eStatus
{
	///<summary><para>Active</para>
	///<para>Value = 0</para></summary>
	[Description("Active")]
	Active = 0, 
	///<summary><para>Inactive</para>
	///<para>Value = 1</para></summary>
	[Description("Inactive")]
	Inactive = 1
}
public enum eStatusReason
{
	///<summary><para>Active</para>
	///<para>Value = 1</para></summary>
	[Description("Active")]
	Active_Active = 1, 
	///<summary><para>Inactive</para>
	///<para>Value = 2</para></summary>
	[Description("Inactive")]
	Inactive_Inactive = 2
}
public void SetState(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>msdyn_approvedbyyominame</para>
	/// <para>msdyn_approvedbyyominame</para></summary>
	public const string Msdyn_ApprovedByYomiName = "msdyn_approvedbyyominame";
	/// <summary><para>owneridname</para>
	/// <para>owneridname</para></summary>
	public const string OwnerIdName = "owneridname";
	/// <summary><para>msdyn_timeentryname</para>
	/// <para>msdyn_timeentryname</para></summary>
	public const string Msdyn_TimeEntryName = "msdyn_timeentryname";
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>msdyn_manageryominame</para>
	/// <para>msdyn_manageryominame</para></summary>
	public const string Msdyn_ManagerYomiName = "msdyn_manageryominame";
	/// <summary><para>msdyn_expensecategoryname</para>
	/// <para>msdyn_expensecategoryname</para></summary>
	public const string Msdyn_ExpenseCategoryName = "msdyn_expensecategoryname";
	/// <summary><para>msdyn_resourcecategoryname</para>
	/// <para>msdyn_resourcecategoryname</para></summary>
	public const string Msdyn_ResourceCategoryName = "msdyn_resourcecategoryname";
	/// <summary><para>msdyn_approvedbyname</para>
	/// <para>msdyn_approvedbyname</para></summary>
	public const string Msdyn_ApprovedByName = "msdyn_approvedbyname";
	/// <summary><para>msdyn_bookableresourcename</para>
	/// <para>msdyn_bookableresourcename</para></summary>
	public const string Msdyn_bookableresourceName = "msdyn_bookableresourcename";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>owneridyominame</para>
	/// <para>owneridyominame</para></summary>
	public const string OwnerIdYomiName = "owneridyominame";
	/// <summary><para>msdyn_submittedbyname</para>
	/// <para>msdyn_submittedbyname</para></summary>
	public const string Msdyn_SubmittedByName = "msdyn_submittedbyname";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>msdyn_referencejournallinename</para>
	/// <para>msdyn_referencejournallinename</para></summary>
	public const string Msdyn_referencejournallineName = "msdyn_referencejournallinename";
	/// <summary><para>msdyn_projectname</para>
	/// <para>msdyn_projectname</para></summary>
	public const string Msdyn_ProjectName = "msdyn_projectname";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>transactioncurrencyidname</para>
	/// <para>transactioncurrencyidname</para></summary>
	public const string TransactionCurrencyIdName = "transactioncurrencyidname";
	/// <summary><para>msdyn_projecttaskname</para>
	/// <para>msdyn_projecttaskname</para></summary>
	public const string Msdyn_ProjectTaskName = "msdyn_projecttaskname";
	/// <summary><para>msdyn_managername</para>
	/// <para>msdyn_managername</para></summary>
	public const string Msdyn_ManagerName = "msdyn_managername";
	/// <summary><para>owneridtype</para>
	/// <para>owneridtype</para></summary>
	public const string OwnerIdType = "owneridtype";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>msdyn_expenseentryname</para>
	/// <para>msdyn_expenseentryname</para></summary>
	public const string Msdyn_ExpenseEntryName = "msdyn_expenseentryname";
	/// <summary><para>msdyn_transactioncategoryname</para>
	/// <para>msdyn_transactioncategoryname</para></summary>
	public const string Msdyn_TransactionCategoryName = "msdyn_transactioncategoryname";
	/// <summary><para>ApprovalsTable</para>
	/// <para>msdyn_projectapprovalid</para></summary>
	public const string ApprovalsTableId = "msdyn_projectapprovalid";
	/// <summary><para>Approved By</para>
	/// <para>msdyn_approvedby</para></summary>
	public const string ApprovedBy = "msdyn_approvedby";
	/// <summary><para>Approved On</para>
	/// <para>msdyn_approvedon</para></summary>
	public const string ApprovedOn = "msdyn_approvedon";
	/// <summary><para>Billable (hrs)</para>
	/// <para>msdyn_salesquantity</para></summary>
	public const string Billable_hrs = "msdyn_salesquantity";
	/// <summary><para>Billing Type</para>
	/// <para>msdyn_billingtype</para></summary>
	public const string BillingType = "msdyn_billingtype";
	/// <summary><para>Cost Amount</para>
	/// <para>msdyn_costamount</para></summary>
	public const string CostAmount = "msdyn_costamount";
	/// <summary><para>Cost Amount (Base)</para>
	/// <para>msdyn_costamount_base</para></summary>
	public const string CostAmount_Base = "msdyn_costamount_base";
	/// <summary><para>Cost Price</para>
	/// <para>msdyn_costprice</para></summary>
	public const string CostPrice = "msdyn_costprice";
	/// <summary><para>Cost Price (Base)</para>
	/// <para>msdyn_costprice_base</para></summary>
	public const string CostPrice_Base = "msdyn_costprice_base";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Currency</para>
	/// <para>transactioncurrencyid</para></summary>
	public const string Currency = "transactioncurrencyid";
	/// <summary><para>Date</para>
	/// <para>msdyn_date</para></summary>
	public const string Date = "msdyn_date";
	/// <summary><para>Entry Type</para>
	/// <para>msdyn_entrytype</para></summary>
	public const string EntryType = "msdyn_entrytype";
	/// <summary><para>Exchange Rate</para>
	/// <para>exchangerate</para></summary>
	public const string ExchangeRate = "exchangerate";
	/// <summary><para>Expense Category</para>
	/// <para>msdyn_expensecategory</para></summary>
	public const string ExpenseCategory = "msdyn_expensecategory";
	/// <summary><para>Expense Entry</para>
	/// <para>msdyn_expenseentry</para></summary>
	public const string ExpenseEntry = "msdyn_expenseentry";
	/// <summary><para>External Comments</para>
	/// <para>msdyn_externalcomments</para></summary>
	public const string ExternalComments = "msdyn_externalcomments";
	/// <summary><para>Has Receipt</para>
	/// <para>msdyn_hasreceipt</para></summary>
	public const string HasReceipt = "msdyn_hasreceipt";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string ImportSequenceNumber = "importsequencenumber";
	/// <summary><para>Internal Comments</para>
	/// <para>msdyn_internalcomments</para></summary>
	public const string InternalComments = "msdyn_internalcomments";
	/// <summary><para>JournalTransaction</para>
	/// <para>msdyn_journaltransaction</para></summary>
	public const string JournalTransaction = "msdyn_journaltransaction";
	/// <summary><para>Manager</para>
	/// <para>msdyn_manager</para></summary>
	public const string Manager = "msdyn_manager";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>Name</para>
	/// <para>msdyn_name</para></summary>
	public const string Name = "msdyn_name";
	/// <summary><para>Owner</para>
	/// <para>ownerid</para></summary>
	public const string Owner = "ownerid";
	/// <summary><para>Owning Business Unit</para>
	/// <para>owningbusinessunit</para></summary>
	public const string OwningBusinessUnit = "owningbusinessunit";
	/// <summary><para>Owning Team</para>
	/// <para>owningteam</para></summary>
	public const string OwningTeam = "owningteam";
	/// <summary><para>Owning User</para>
	/// <para>owninguser</para></summary>
	public const string OwningUser = "owninguser";
	/// <summary><para>Project</para>
	/// <para>msdyn_project</para></summary>
	public const string Project = "msdyn_project";
	/// <summary><para>Project Task</para>
	/// <para>msdyn_projecttask</para></summary>
	public const string ProjectTask = "msdyn_projecttask";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string RecordCreatedOn = "overriddencreatedon";
	/// <summary><para>Record Stage</para>
	/// <para>msdyn_recordstage</para></summary>
	public const string RecordStage = "msdyn_recordstage";
	/// <summary><para>Reference expense id</para>
	/// <para>msdyn_referenceexpenseid</para></summary>
	public const string ReferenceExpenseId = "msdyn_referenceexpenseid";
	/// <summary><para>reference journal line</para>
	/// <para>msdyn_referencejournalline</para></summary>
	public const string ReferenceJournalLine = "msdyn_referencejournalline";
	/// <summary><para>Reference time id</para>
	/// <para>msdyn_referencetimeid</para></summary>
	public const string ReferenceTimeId = "msdyn_referencetimeid";
	/// <summary><para>Resource</para>
	/// <para>msdyn_bookableresource</para></summary>
	public const string Resource = "msdyn_bookableresource";
	/// <summary><para>Resource Role</para>
	/// <para>msdyn_resourcecategory</para></summary>
	public const string ResourceRole = "msdyn_resourcecategory";
	/// <summary><para>Sales Amount</para>
	/// <para>msdyn_salesamount</para></summary>
	public const string SalesAmount = "msdyn_salesamount";
	/// <summary><para>Sales Amount (Base)</para>
	/// <para>msdyn_salesamount_base</para></summary>
	public const string SalesAmount_Base = "msdyn_salesamount_base";
	/// <summary><para>Sales Price</para>
	/// <para>msdyn_salesprice</para></summary>
	public const string SalesPrice = "msdyn_salesprice";
	/// <summary><para>Sales Price (Base)</para>
	/// <para>msdyn_salesprice_base</para></summary>
	public const string SalesPrice_Base = "msdyn_salesprice_base";
	/// <summary><para>Status</para>
	/// <para>statecode</para></summary>
	public const string Status = "statecode";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string StatusReason = "statuscode";
	/// <summary><para>Submitted (hrs)</para>
	/// <para>msdyn_costquantity</para></summary>
	public const string Submitted_hrs = "msdyn_costquantity";
	/// <summary><para>Submitted By</para>
	/// <para>msdyn_submittedby</para></summary>
	public const string SubmittedBy = "msdyn_submittedby";
	/// <summary><para>Time Entry</para>
	/// <para>msdyn_timeentry</para></summary>
	public const string TimeEntry = "msdyn_timeentry";
	/// <summary><para>Time Zone Rule Version Number</para>
	/// <para>timezoneruleversionnumber</para></summary>
	public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
	/// <summary><para>Transaction Category</para>
	/// <para>msdyn_transactioncategory</para></summary>
	public const string TransactionCategory = "msdyn_transactioncategory";
	/// <summary><para>UTC Conversion Time Zone Code</para>
	/// <para>utcconversiontimezonecode</para></summary>
	public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
}

    }
}

// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("processstage")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class ProcessStage : BaseProxyClass
    {
        public new const string LogicalName = "processstage";
        public const int ObjectTypeCode = 4724;
        public const string PrimaryIdAttribute = "processstageid";
        public const string PrimaryNameAttribute = "stagename";
        
        static ProcessStage()
        {
            BaseProxyClass.RegisterProxyType(typeof(ProcessStage), "processstage");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public ProcessStage() : base(new Entity("processstage")) { }
        public ProcessStage(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<ProcessStage>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: owneridtype</para>
///</summary>
[AttributeLogicalNameAttribute("owneridtype")]
public string OwnerIdType
{
	get { return this.GetPropertyValue<string>("owneridtype"); }
}
///<summary>
///<para>Logical Name: processidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("processidname")]
public string ProcessIdName
{
	get { return this.GetPropertyValue<string>("processidname"); }
}
///<summary>
///<para>Logical Name: clientdata</para>
///<para>Max Length: 1073741823 characters</para>
///</summary>
[AttributeLogicalNameAttribute("clientdata")]
public string ClientData
{
	get { return this.GetPropertyValue<string>("clientdata"); }
}
///<summary>
///<para>Logical Name: ownerid</para>
///</summary>
[AttributeLogicalNameAttribute("ownerid")]
public EntityReference Owner
{
	get { return this.GetPropertyValue<EntityReference>("ownerid"); }
}
///<summary>
///<para>Logical Name: owningbusinessunit</para>
///</summary>
[AttributeLogicalNameAttribute("owningbusinessunit")]
public Guid OwningBusinessUnit
{
	get { return this.GetPropertyValue<Guid>("owningbusinessunit"); }
}
///<summary>
///<para>Logical Name: primaryentitytypecode</para>
///</summary>
[AttributeLogicalNameAttribute("primaryentitytypecode")]
public string PrimaryEntity
{
	get { return this.GetPropertyValue<string>("primaryentitytypecode"); }
	set { this.SetPropertyValue<string>("primaryentitytypecode", value, "PrimaryEntity"); }
}
///<summary>
///<para>Logical Name: processid</para>
///</summary>
[AttributeLogicalNameAttribute("processid")]
public EntityReference Process
{
	get { return this.GetPropertyValue<EntityReference>("processid"); }
	set { this.SetPropertyValue<EntityReference>("processid", value, "Process"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: processstageid</para>
///</summary>
[AttributeLogicalNameAttribute("processstageid")]
public Guid ProcessStageId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: stagename</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("stagename")]
public string ProcessStageName
{
	get { return this.GetPropertyValue<string>("stagename"); }
	set { this.SetPropertyValue("stagename", value, 100, "ProcessStageName"); }
}
/// <summary>
///Logical Name: stagecategory
/// </summary>
[AttributeLogicalNameAttribute("stagecategory")]
public eStageCategory? StageCategory
{
	get
	{
		if (StageCategory_OptionSetValue != null) { return (eStageCategory)StageCategory_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StageCategory_OptionSetValue = new OptionSetValue((int)value); }
		else this.StageCategory_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: stagecategory</para>
///</summary>
[AttributeLogicalNameAttribute("stagecategory")]
public OptionSetValue StageCategory_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("stagecategory"); }
	set { this.SetPropertyValue<OptionSetValue>("stagecategory", value, "StageCategory_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string StageCategory_Text(IOrganizationService Service)
{
	return this.StageCategory_OptionSetValue.GetOptionSetText(Service, this, "stagecategory");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string StageCategory_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.StageCategory_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}


        /// <summary>
/// <para><b>Account (Process Stage)</b></para>
/// <para>Schema Name: processstage_account</para>
/// </summary>
public List<Account> GetAccounts_ProcessStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Account>(Service, this.Id, "account", "stageid", Columns); }
/// <summary>
/// <para><b>Account (Process Stage)</b></para>
/// <para>Schema Name: processstage_account</para>
/// </summary>
public List<Account> GetAccounts_ProcessStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Account>(Service, this.Id, "account", "stageid", Columns); }
/// <summary>
/// <para><b>Appointment (Process Stage)</b></para>
/// <para>Schema Name: processstage_appointments</para>
/// </summary>
public List<Appointment> GetAppointments_ProcessStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Appointment>(Service, this.Id, "appointment", "stageid", Columns); }
/// <summary>
/// <para><b>Appointment (Process Stage)</b></para>
/// <para>Schema Name: processstage_appointments</para>
/// </summary>
public List<Appointment> GetAppointments_ProcessStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Appointment>(Service, this.Id, "appointment", "stageid", Columns); }
/// <summary>
/// <para><b>Campaign (Process Stage)</b></para>
/// <para>Schema Name: processstage_campaigns</para>
/// </summary>
public List<Campaign> GetCampaigns_ProcessStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Campaign>(Service, this.Id, "campaign", "stageid", Columns); }
/// <summary>
/// <para><b>Campaign (Process Stage)</b></para>
/// <para>Schema Name: processstage_campaigns</para>
/// </summary>
public List<Campaign> GetCampaigns_ProcessStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Campaign>(Service, this.Id, "campaign", "stageid", Columns); }
/// <summary>
/// <para><b>CampaignActivity (Process Stage)</b></para>
/// <para>Schema Name: processstage_campaignactivities</para>
/// </summary>
public List<CampaignActivity> GetCampaignActivities_ProcessStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CampaignActivity>(Service, this.Id, "campaignactivity", "stageid", Columns); }
/// <summary>
/// <para><b>CampaignActivity (Process Stage)</b></para>
/// <para>Schema Name: processstage_campaignactivities</para>
/// </summary>
public List<CampaignActivity> GetCampaignActivities_ProcessStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CampaignActivity>(Service, this.Id, "campaignactivity", "stageid", Columns); }
/// <summary>
/// <para><b>CampaignResponse (Process Stage)</b></para>
/// <para>Schema Name: processstage_campaignresponses</para>
/// </summary>
public List<CampaignResponse> GetCampaignResponses_ProcessStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CampaignResponse>(Service, this.Id, "campaignresponse", "stageid", Columns); }
/// <summary>
/// <para><b>CampaignResponse (Process Stage)</b></para>
/// <para>Schema Name: processstage_campaignresponses</para>
/// </summary>
public List<CampaignResponse> GetCampaignResponses_ProcessStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CampaignResponse>(Service, this.Id, "campaignresponse", "stageid", Columns); }
/// <summary>
/// <para><b>Competitor (Process Stage)</b></para>
/// <para>Schema Name: processstage_competitors</para>
/// </summary>
public List<Competitor> GetCompetitors_ProcessStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Competitor>(Service, this.Id, "competitor", "stageid", Columns); }
/// <summary>
/// <para><b>Competitor (Process Stage)</b></para>
/// <para>Schema Name: processstage_competitors</para>
/// </summary>
public List<Competitor> GetCompetitors_ProcessStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Competitor>(Service, this.Id, "competitor", "stageid", Columns); }
/// <summary>
/// <para><b>Contact (Process Stage)</b></para>
/// <para>Schema Name: processstage_contact</para>
/// </summary>
public List<Contact> GetContacts_ProcessStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Contact>(Service, this.Id, "contact", "stageid", Columns); }
/// <summary>
/// <para><b>Contact (Process Stage)</b></para>
/// <para>Schema Name: processstage_contact</para>
/// </summary>
public List<Contact> GetContacts_ProcessStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Contact>(Service, this.Id, "contact", "stageid", Columns); }
/// <summary>
/// <para><b>Email (Process Stage)</b></para>
/// <para>Schema Name: processstage_emails</para>
/// </summary>
public List<Email> GetEmailMessages_ProcessStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "stageid", Columns); }
/// <summary>
/// <para><b>Email (Process Stage)</b></para>
/// <para>Schema Name: processstage_emails</para>
/// </summary>
public List<Email> GetEmailMessages_ProcessStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "stageid", Columns); }
/// <summary>
/// <para><b>ExpiredProcess (Active Stage)</b></para>
/// <para>Schema Name: lk_expiredprocess_activestageid</para>
/// </summary>
public List<ExpiredProcess> GetExpiredProcess_ActiveStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ExpiredProcess>(Service, this.Id, "expiredprocess", "activestageid", Columns); }
/// <summary>
/// <para><b>ExpiredProcess (Active Stage)</b></para>
/// <para>Schema Name: lk_expiredprocess_activestageid</para>
/// </summary>
public List<ExpiredProcess> GetExpiredProcess_ActiveStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ExpiredProcess>(Service, this.Id, "expiredprocess", "activestageid", Columns); }
/// <summary>
/// <para><b>Fax (Process Stage)</b></para>
/// <para>Schema Name: processstage_faxes</para>
/// </summary>
public List<Fax> GetFaxes_ProcessStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fax>(Service, this.Id, "fax", "stageid", Columns); }
/// <summary>
/// <para><b>Fax (Process Stage)</b></para>
/// <para>Schema Name: processstage_faxes</para>
/// </summary>
public List<Fax> GetFaxes_ProcessStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fax>(Service, this.Id, "fax", "stageid", Columns); }
/// <summary>
/// <para><b>@Case (Process Stage)</b></para>
/// <para>Schema Name: processstage_incident</para>
/// </summary>
public List<@Case> GetCases_ProcessStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<@Case>(Service, this.Id, "incident", "stageid", Columns); }
/// <summary>
/// <para><b>@Case (Process Stage)</b></para>
/// <para>Schema Name: processstage_incident</para>
/// </summary>
public List<@Case> GetCases_ProcessStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<@Case>(Service, this.Id, "incident", "stageid", Columns); }
/// <summary>
/// <para><b>Invoice (Process Stage)</b></para>
/// <para>Schema Name: processstage_invoices</para>
/// </summary>
public List<Invoice> GetInvoices_ProcessStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Invoice>(Service, this.Id, "invoice", "stageid", Columns); }
/// <summary>
/// <para><b>Invoice (Process Stage)</b></para>
/// <para>Schema Name: processstage_invoices</para>
/// </summary>
public List<Invoice> GetInvoices_ProcessStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Invoice>(Service, this.Id, "invoice", "stageid", Columns); }
/// <summary>
/// <para><b>KnowledgeArticle (Stage Id)</b></para>
/// <para>Schema Name: processstage_knowledgearticle</para>
/// </summary>
public List<KnowledgeArticle> GetKnowledgeArticles_StageId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<KnowledgeArticle>(Service, this.Id, "knowledgearticle", "stageid", Columns); }
/// <summary>
/// <para><b>KnowledgeArticle (Stage Id)</b></para>
/// <para>Schema Name: processstage_knowledgearticle</para>
/// </summary>
public List<KnowledgeArticle> GetKnowledgeArticles_StageId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<KnowledgeArticle>(Service, this.Id, "knowledgearticle", "stageid", Columns); }
/// <summary>
/// <para><b>Lead (Process Stage)</b></para>
/// <para>Schema Name: processstage_lead</para>
/// </summary>
public List<Lead> GetLeads_ProcessStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Lead>(Service, this.Id, "lead", "stageid", Columns); }
/// <summary>
/// <para><b>Lead (Process Stage)</b></para>
/// <para>Schema Name: processstage_lead</para>
/// </summary>
public List<Lead> GetLeads_ProcessStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Lead>(Service, this.Id, "lead", "stageid", Columns); }
/// <summary>
/// <para><b>LeadToOpportunitySalesProcess (Active Stage Id)</b></para>
/// <para>Schema Name: lk_leadtoopportunitysalesprocess_activestageid</para>
/// </summary>
public List<LeadToOpportunitySalesProcess> GetLeadToOpportunitySalesProcess_ActiveStageId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<LeadToOpportunitySalesProcess>(Service, this.Id, "leadtoopportunitysalesprocess", "activestageid", Columns); }
/// <summary>
/// <para><b>LeadToOpportunitySalesProcess (Active Stage Id)</b></para>
/// <para>Schema Name: lk_leadtoopportunitysalesprocess_activestageid</para>
/// </summary>
public List<LeadToOpportunitySalesProcess> GetLeadToOpportunitySalesProcess_ActiveStageId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<LeadToOpportunitySalesProcess>(Service, this.Id, "leadtoopportunitysalesprocess", "activestageid", Columns); }
/// <summary>
/// <para><b>Letter (Process Stage)</b></para>
/// <para>Schema Name: processstage_letters</para>
/// </summary>
public List<Letter> GetLetters_ProcessStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Letter>(Service, this.Id, "letter", "stageid", Columns); }
/// <summary>
/// <para><b>Letter (Process Stage)</b></para>
/// <para>Schema Name: processstage_letters</para>
/// </summary>
public List<Letter> GetLetters_ProcessStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Letter>(Service, this.Id, "letter", "stageid", Columns); }
/// <summary>
/// <para><b>MarketingList (Process Stage)</b></para>
/// <para>Schema Name: processstage_lists</para>
/// </summary>
public List<MarketingList> GetMarketingLists_ProcessStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MarketingList>(Service, this.Id, "list", "stageid", Columns); }
/// <summary>
/// <para><b>MarketingList (Process Stage)</b></para>
/// <para>Schema Name: processstage_lists</para>
/// </summary>
public List<MarketingList> GetMarketingLists_ProcessStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MarketingList>(Service, this.Id, "list", "stageid", Columns); }
/// <summary>
/// <para><b>Agreement (Stage Id)</b></para>
/// <para>Schema Name: processstage_msdyn_agreement</para>
/// </summary>
public List<Agreement> GetAgreements_StageId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Agreement>(Service, this.Id, "msdyn_agreement", "stageid", Columns); }
/// <summary>
/// <para><b>Agreement (Stage Id)</b></para>
/// <para>Schema Name: processstage_msdyn_agreement</para>
/// </summary>
public List<Agreement> GetAgreements_StageId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Agreement>(Service, this.Id, "msdyn_agreement", "stageid", Columns); }
/// <summary>
/// <para><b>AgreementBookingSetup (Stage Id)</b></para>
/// <para>Schema Name: processstage_msdyn_agreementbookingsetup</para>
/// </summary>
public List<AgreementBookingSetup> GetAgreementBookingSetups_StageId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingSetup>(Service, this.Id, "msdyn_agreementbookingsetup", "stageid", Columns); }
/// <summary>
/// <para><b>AgreementBookingSetup (Stage Id)</b></para>
/// <para>Schema Name: processstage_msdyn_agreementbookingsetup</para>
/// </summary>
public List<AgreementBookingSetup> GetAgreementBookingSetups_StageId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingSetup>(Service, this.Id, "msdyn_agreementbookingsetup", "stageid", Columns); }
/// <summary>
/// <para><b>AgreementInvoiceSetup (Stage Id)</b></para>
/// <para>Schema Name: processstage_msdyn_agreementinvoicesetup</para>
/// </summary>
public List<AgreementInvoiceSetup> GetAgreementInvoiceSetups_StageId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementInvoiceSetup>(Service, this.Id, "msdyn_agreementinvoicesetup", "stageid", Columns); }
/// <summary>
/// <para><b>AgreementInvoiceSetup (Stage Id)</b></para>
/// <para>Schema Name: processstage_msdyn_agreementinvoicesetup</para>
/// </summary>
public List<AgreementInvoiceSetup> GetAgreementInvoiceSetups_StageId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementInvoiceSetup>(Service, this.Id, "msdyn_agreementinvoicesetup", "stageid", Columns); }
/// <summary>
/// <para><b>PurchaseOrderBusinessProcess (Active Stage)</b></para>
/// <para>Schema Name: lk_msdyn_bpf_2c5fe86acc8b414b8322ae571000c799_activestageid</para>
/// </summary>
public List<PurchaseOrderBusinessProcess> GetPurchaseOrderBusinessProcess_ActiveStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderBusinessProcess>(Service, this.Id, "msdyn_bpf_2c5fe86acc8b414b8322ae571000c799", "activestageid", Columns); }
/// <summary>
/// <para><b>PurchaseOrderBusinessProcess (Active Stage)</b></para>
/// <para>Schema Name: lk_msdyn_bpf_2c5fe86acc8b414b8322ae571000c799_activestageid</para>
/// </summary>
public List<PurchaseOrderBusinessProcess> GetPurchaseOrderBusinessProcess_ActiveStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderBusinessProcess>(Service, this.Id, "msdyn_bpf_2c5fe86acc8b414b8322ae571000c799", "activestageid", Columns); }
/// <summary>
/// <para><b>ProjectStages (Active Stage)</b></para>
/// <para>Schema Name: lk_msdyn_bpf_665e73aa18c247d886bfc50499c73b82_activestageid</para>
/// </summary>
public List<ProjectStages> GetProjectStages_ActiveStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectStages>(Service, this.Id, "msdyn_bpf_665e73aa18c247d886bfc50499c73b82", "activestageid", Columns); }
/// <summary>
/// <para><b>ProjectStages (Active Stage)</b></para>
/// <para>Schema Name: lk_msdyn_bpf_665e73aa18c247d886bfc50499c73b82_activestageid</para>
/// </summary>
public List<ProjectStages> GetProjectStages_ActiveStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectStages>(Service, this.Id, "msdyn_bpf_665e73aa18c247d886bfc50499c73b82", "activestageid", Columns); }
/// <summary>
/// <para><b>CaseToWorkOrderBusinessProcess (Active Stage)</b></para>
/// <para>Schema Name: lk_msdyn_bpf_989e9b1857e24af18787d5143b67523b_activestageid</para>
/// </summary>
public List<CaseToWorkOrderBusinessProcess> GetCaseToWorkOrderBusinessProcess_ActiveStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CaseToWorkOrderBusinessProcess>(Service, this.Id, "msdyn_bpf_989e9b1857e24af18787d5143b67523b", "activestageid", Columns); }
/// <summary>
/// <para><b>CaseToWorkOrderBusinessProcess (Active Stage)</b></para>
/// <para>Schema Name: lk_msdyn_bpf_989e9b1857e24af18787d5143b67523b_activestageid</para>
/// </summary>
public List<CaseToWorkOrderBusinessProcess> GetCaseToWorkOrderBusinessProcess_ActiveStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CaseToWorkOrderBusinessProcess>(Service, this.Id, "msdyn_bpf_989e9b1857e24af18787d5143b67523b", "activestageid", Columns); }
/// <summary>
/// <para><b>AgreementBusinessProcess (Active Stage)</b></para>
/// <para>Schema Name: lk_msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3_activestageid</para>
/// </summary>
public List<AgreementBusinessProcess> GetAgreementBusinessProcess_ActiveStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBusinessProcess>(Service, this.Id, "msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3", "activestageid", Columns); }
/// <summary>
/// <para><b>AgreementBusinessProcess (Active Stage)</b></para>
/// <para>Schema Name: lk_msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3_activestageid</para>
/// </summary>
public List<AgreementBusinessProcess> GetAgreementBusinessProcess_ActiveStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBusinessProcess>(Service, this.Id, "msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3", "activestageid", Columns); }
/// <summary>
/// <para><b>WorkOrderBusinessProcess (Active Stage)</b></para>
/// <para>Schema Name: lk_msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39_activestageid</para>
/// </summary>
public List<WorkOrderBusinessProcess> GetWorkOrderBusinessProcess_ActiveStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderBusinessProcess>(Service, this.Id, "msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39", "activestageid", Columns); }
/// <summary>
/// <para><b>WorkOrderBusinessProcess (Active Stage)</b></para>
/// <para>Schema Name: lk_msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39_activestageid</para>
/// </summary>
public List<WorkOrderBusinessProcess> GetWorkOrderBusinessProcess_ActiveStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderBusinessProcess>(Service, this.Id, "msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39", "activestageid", Columns); }
/// <summary>
/// <para><b>InvoiceProcess (Active Stage)</b></para>
/// <para>Schema Name: lk_msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d_activestageid</para>
/// </summary>
public List<InvoiceProcess> GetInvoiceProcess_ActiveStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceProcess>(Service, this.Id, "msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d", "activestageid", Columns); }
/// <summary>
/// <para><b>InvoiceProcess (Active Stage)</b></para>
/// <para>Schema Name: lk_msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d_activestageid</para>
/// </summary>
public List<InvoiceProcess> GetInvoiceProcess_ActiveStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceProcess>(Service, this.Id, "msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d", "activestageid", Columns); }
/// <summary>
/// <para><b>Expense (Stage Id)</b></para>
/// <para>Schema Name: processstage_msdyn_expense</para>
/// </summary>
public List<Expense> GetExpenses_StageId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Expense>(Service, this.Id, "msdyn_expense", "stageid", Columns); }
/// <summary>
/// <para><b>Expense (Stage Id)</b></para>
/// <para>Schema Name: processstage_msdyn_expense</para>
/// </summary>
public List<Expense> GetExpenses_StageId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Expense>(Service, this.Id, "msdyn_expense", "stageid", Columns); }
/// <summary>
/// <para><b>Journal (Stage Id)</b></para>
/// <para>Schema Name: processstage_msdyn_journal</para>
/// </summary>
public List<Journal> GetJournals_StageId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Journal>(Service, this.Id, "msdyn_journal", "stageid", Columns); }
/// <summary>
/// <para><b>Journal (Stage Id)</b></para>
/// <para>Schema Name: processstage_msdyn_journal</para>
/// </summary>
public List<Journal> GetJournals_StageId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Journal>(Service, this.Id, "msdyn_journal", "stageid", Columns); }
/// <summary>
/// <para><b>Project (Stage Id)</b></para>
/// <para>Schema Name: processstage_msdyn_project</para>
/// </summary>
public List<Project> GetProjects_StageId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Project>(Service, this.Id, "msdyn_project", "stageid", Columns); }
/// <summary>
/// <para><b>Project (Stage Id)</b></para>
/// <para>Schema Name: processstage_msdyn_project</para>
/// </summary>
public List<Project> GetProjects_StageId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Project>(Service, this.Id, "msdyn_project", "stageid", Columns); }
/// <summary>
/// <para><b>PurchaseOrder (Stage Id)</b></para>
/// <para>Schema Name: processstage_msdyn_purchaseorder</para>
/// </summary>
public List<PurchaseOrder> GetPurchaseOrders_StageId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrder>(Service, this.Id, "msdyn_purchaseorder", "stageid", Columns); }
/// <summary>
/// <para><b>PurchaseOrder (Stage Id)</b></para>
/// <para>Schema Name: processstage_msdyn_purchaseorder</para>
/// </summary>
public List<PurchaseOrder> GetPurchaseOrders_StageId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrder>(Service, this.Id, "msdyn_purchaseorder", "stageid", Columns); }
/// <summary>
/// <para><b>PurchaseOrderBill (Stage Id)</b></para>
/// <para>Schema Name: processstage_msdyn_purchaseorderbill</para>
/// </summary>
public List<PurchaseOrderBill> GetPurchaseOrderBills_StageId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderBill>(Service, this.Id, "msdyn_purchaseorderbill", "stageid", Columns); }
/// <summary>
/// <para><b>PurchaseOrderBill (Stage Id)</b></para>
/// <para>Schema Name: processstage_msdyn_purchaseorderbill</para>
/// </summary>
public List<PurchaseOrderBill> GetPurchaseOrderBills_StageId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderBill>(Service, this.Id, "msdyn_purchaseorderbill", "stageid", Columns); }
/// <summary>
/// <para><b>PurchaseOrderReceipt (Stage Id)</b></para>
/// <para>Schema Name: processstage_msdyn_purchaseorderreceipt</para>
/// </summary>
public List<PurchaseOrderReceipt> GetPurchaseOrderReceipts_StageId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderReceipt>(Service, this.Id, "msdyn_purchaseorderreceipt", "stageid", Columns); }
/// <summary>
/// <para><b>PurchaseOrderReceipt (Stage Id)</b></para>
/// <para>Schema Name: processstage_msdyn_purchaseorderreceipt</para>
/// </summary>
public List<PurchaseOrderReceipt> GetPurchaseOrderReceipts_StageId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderReceipt>(Service, this.Id, "msdyn_purchaseorderreceipt", "stageid", Columns); }
/// <summary>
/// <para><b>QuoteBookingSetup (Stage Id)</b></para>
/// <para>Schema Name: processstage_msdyn_quotebookingsetup</para>
/// </summary>
public List<QuoteBookingSetup> GetQuoteBookingSetups_StageId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingSetup>(Service, this.Id, "msdyn_quotebookingsetup", "stageid", Columns); }
/// <summary>
/// <para><b>QuoteBookingSetup (Stage Id)</b></para>
/// <para>Schema Name: processstage_msdyn_quotebookingsetup</para>
/// </summary>
public List<QuoteBookingSetup> GetQuoteBookingSetups_StageId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingSetup>(Service, this.Id, "msdyn_quotebookingsetup", "stageid", Columns); }
/// <summary>
/// <para><b>TimeGroup (Stage Id)</b></para>
/// <para>Schema Name: processstage_msdyn_timegroup</para>
/// </summary>
public List<TimeGroup> GetTimeGroups_StageId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TimeGroup>(Service, this.Id, "msdyn_timegroup", "stageid", Columns); }
/// <summary>
/// <para><b>TimeGroup (Stage Id)</b></para>
/// <para>Schema Name: processstage_msdyn_timegroup</para>
/// </summary>
public List<TimeGroup> GetTimeGroups_StageId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TimeGroup>(Service, this.Id, "msdyn_timegroup", "stageid", Columns); }
/// <summary>
/// <para><b>TimeGroupDetail (Stage Id)</b></para>
/// <para>Schema Name: processstage_msdyn_timegroupdetail</para>
/// </summary>
public List<TimeGroupDetail> GetTimeGroupDetails_StageId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TimeGroupDetail>(Service, this.Id, "msdyn_timegroupdetail", "stageid", Columns); }
/// <summary>
/// <para><b>TimeGroupDetail (Stage Id)</b></para>
/// <para>Schema Name: processstage_msdyn_timegroupdetail</para>
/// </summary>
public List<TimeGroupDetail> GetTimeGroupDetails_StageId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TimeGroupDetail>(Service, this.Id, "msdyn_timegroupdetail", "stageid", Columns); }
/// <summary>
/// <para><b>WorkOrder (Stage Id)</b></para>
/// <para>Schema Name: processstage_msdyn_workorder</para>
/// </summary>
public List<WorkOrder> GetWorkOrders_StageId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrder>(Service, this.Id, "msdyn_workorder", "stageid", Columns); }
/// <summary>
/// <para><b>WorkOrder (Stage Id)</b></para>
/// <para>Schema Name: processstage_msdyn_workorder</para>
/// </summary>
public List<WorkOrder> GetWorkOrders_StageId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrder>(Service, this.Id, "msdyn_workorder", "stageid", Columns); }
/// <summary>
/// <para><b>NewProcess (Active Stage Id)</b></para>
/// <para>Schema Name: lk_newprocess_activestageid</para>
/// </summary>
public List<NewProcess> GetNewProcess_ActiveStageId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<NewProcess>(Service, this.Id, "newprocess", "activestageid", Columns); }
/// <summary>
/// <para><b>NewProcess (Active Stage Id)</b></para>
/// <para>Schema Name: lk_newprocess_activestageid</para>
/// </summary>
public List<NewProcess> GetNewProcess_ActiveStageId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<NewProcess>(Service, this.Id, "newprocess", "activestageid", Columns); }
/// <summary>
/// <para><b>Opportunity (Process Stage)</b></para>
/// <para>Schema Name: processstage_opportunity</para>
/// </summary>
public List<Opportunity> GetOpportunities_ProcessStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Opportunity>(Service, this.Id, "opportunity", "stageid", Columns); }
/// <summary>
/// <para><b>Opportunity (Process Stage)</b></para>
/// <para>Schema Name: processstage_opportunity</para>
/// </summary>
public List<Opportunity> GetOpportunities_ProcessStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Opportunity>(Service, this.Id, "opportunity", "stageid", Columns); }
/// <summary>
/// <para><b>OpportunitySalesProcess (Active Stage)</b></para>
/// <para>Schema Name: lk_opportunitysalesprocess_activestageid</para>
/// </summary>
public List<OpportunitySalesProcess> GetOpportunitySalesProcess_ActiveStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunitySalesProcess>(Service, this.Id, "opportunitysalesprocess", "activestageid", Columns); }
/// <summary>
/// <para><b>OpportunitySalesProcess (Active Stage)</b></para>
/// <para>Schema Name: lk_opportunitysalesprocess_activestageid</para>
/// </summary>
public List<OpportunitySalesProcess> GetOpportunitySalesProcess_ActiveStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunitySalesProcess>(Service, this.Id, "opportunitysalesprocess", "activestageid", Columns); }
/// <summary>
/// <para><b>PhoneCall (Process Stage)</b></para>
/// <para>Schema Name: processstage_phonecalls</para>
/// </summary>
public List<PhoneCall> GetPhoneCalls_ProcessStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneCall>(Service, this.Id, "phonecall", "stageid", Columns); }
/// <summary>
/// <para><b>PhoneCall (Process Stage)</b></para>
/// <para>Schema Name: processstage_phonecalls</para>
/// </summary>
public List<PhoneCall> GetPhoneCalls_ProcessStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneCall>(Service, this.Id, "phonecall", "stageid", Columns); }
/// <summary>
/// <para><b>PhoneToCaseProcess (Active Stage Id)</b></para>
/// <para>Schema Name: lk_phonetocaseprocess_activestageid</para>
/// </summary>
public List<PhoneToCaseProcess> GetPhoneToCaseProcess_ActiveStageId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneToCaseProcess>(Service, this.Id, "phonetocaseprocess", "activestageid", Columns); }
/// <summary>
/// <para><b>PhoneToCaseProcess (Active Stage Id)</b></para>
/// <para>Schema Name: lk_phonetocaseprocess_activestageid</para>
/// </summary>
public List<PhoneToCaseProcess> GetPhoneToCaseProcess_ActiveStageId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneToCaseProcess>(Service, this.Id, "phonetocaseprocess", "activestageid", Columns); }
/// <summary>
/// <para><b>Product (Process Stage)</b></para>
/// <para>Schema Name: processstage_products</para>
/// </summary>
public List<Product> GetProducts_ProcessStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Product>(Service, this.Id, "product", "stageid", Columns); }
/// <summary>
/// <para><b>Product (Process Stage)</b></para>
/// <para>Schema Name: processstage_products</para>
/// </summary>
public List<Product> GetProducts_ProcessStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Product>(Service, this.Id, "product", "stageid", Columns); }
/// <summary>
/// <para><b>PriceListItem (Process Stage)</b></para>
/// <para>Schema Name: processstage_productpricelevels</para>
/// </summary>
public List<PriceListItem> GetPriceListItems_ProcessStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PriceListItem>(Service, this.Id, "productpricelevel", "stageid", Columns); }
/// <summary>
/// <para><b>PriceListItem (Process Stage)</b></para>
/// <para>Schema Name: processstage_productpricelevels</para>
/// </summary>
public List<PriceListItem> GetPriceListItems_ProcessStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PriceListItem>(Service, this.Id, "productpricelevel", "stageid", Columns); }
/// <summary>
/// <para><b>Quote (Process Stage)</b></para>
/// <para>Schema Name: processstage_quotes</para>
/// </summary>
public List<Quote> GetQuotes_ProcessStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Quote>(Service, this.Id, "quote", "stageid", Columns); }
/// <summary>
/// <para><b>Quote (Process Stage)</b></para>
/// <para>Schema Name: processstage_quotes</para>
/// </summary>
public List<Quote> GetQuotes_ProcessStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Quote>(Service, this.Id, "quote", "stageid", Columns); }
/// <summary>
/// <para><b>RecurringAppointment (Process Stage)</b></para>
/// <para>Schema Name: processstage_recurringappointmentmasters</para>
/// </summary>
public List<RecurringAppointment> GetRecurringAppointments_ProcessStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecurringAppointment>(Service, this.Id, "recurringappointmentmaster", "stageid", Columns); }
/// <summary>
/// <para><b>RecurringAppointment (Process Stage)</b></para>
/// <para>Schema Name: processstage_recurringappointmentmasters</para>
/// </summary>
public List<RecurringAppointment> GetRecurringAppointments_ProcessStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecurringAppointment>(Service, this.Id, "recurringappointmentmaster", "stageid", Columns); }
/// <summary>
/// <para><b>SalesLiterature (Process Stage)</b></para>
/// <para>Schema Name: processstage_salesliteratures</para>
/// </summary>
public List<SalesLiterature> GetSalesLiterature_ProcessStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SalesLiterature>(Service, this.Id, "salesliterature", "stageid", Columns); }
/// <summary>
/// <para><b>SalesLiterature (Process Stage)</b></para>
/// <para>Schema Name: processstage_salesliteratures</para>
/// </summary>
public List<SalesLiterature> GetSalesLiterature_ProcessStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SalesLiterature>(Service, this.Id, "salesliterature", "stageid", Columns); }
/// <summary>
/// <para><b>Order (Process Stage)</b></para>
/// <para>Schema Name: processstage_salesorders</para>
/// </summary>
public List<Order> GetOrders_ProcessStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Order>(Service, this.Id, "salesorder", "stageid", Columns); }
/// <summary>
/// <para><b>Order (Process Stage)</b></para>
/// <para>Schema Name: processstage_salesorders</para>
/// </summary>
public List<Order> GetOrders_ProcessStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Order>(Service, this.Id, "salesorder", "stageid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: ProcessStage_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: ProcessStage_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>User (Process Stage)</b></para>
/// <para>Schema Name: processstage_systemusers</para>
/// </summary>
public List<User> GetUsers_ProcessStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<User>(Service, this.Id, "systemuser", "stageid", Columns); }
/// <summary>
/// <para><b>User (Process Stage)</b></para>
/// <para>Schema Name: processstage_systemusers</para>
/// </summary>
public List<User> GetUsers_ProcessStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<User>(Service, this.Id, "systemuser", "stageid", Columns); }
/// <summary>
/// <para><b>Task (Process Stage)</b></para>
/// <para>Schema Name: processstage_tasks</para>
/// </summary>
public List<Task> GetTasks_ProcessStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Task>(Service, this.Id, "task", "stageid", Columns); }
/// <summary>
/// <para><b>Task (Process Stage)</b></para>
/// <para>Schema Name: processstage_tasks</para>
/// </summary>
public List<Task> GetTasks_ProcessStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Task>(Service, this.Id, "task", "stageid", Columns); }
/// <summary>
/// <para><b>Team (Process Stage)</b></para>
/// <para>Schema Name: processstage_teams</para>
/// </summary>
public List<Team> GetTeams_ProcessStage (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Team>(Service, this.Id, "team", "stageid", Columns); }
/// <summary>
/// <para><b>Team (Process Stage)</b></para>
/// <para>Schema Name: processstage_teams</para>
/// </summary>
public List<Team> GetTeams_ProcessStage (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Team>(Service, this.Id, "team", "stageid", Columns); }
/// <summary>
/// <para><b>TranslationProcess (Active Stage Id)</b></para>
/// <para>Schema Name: lk_translationprocess_activestageid</para>
/// </summary>
public List<TranslationProcess> GetTranslationProcess_ActiveStageId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TranslationProcess>(Service, this.Id, "translationprocess", "activestageid", Columns); }
/// <summary>
/// <para><b>TranslationProcess (Active Stage Id)</b></para>
/// <para>Schema Name: lk_translationprocess_activestageid</para>
/// </summary>
public List<TranslationProcess> GetTranslationProcess_ActiveStageId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TranslationProcess>(Service, this.Id, "translationprocess", "activestageid", Columns); }


        

        

        public enum eStageCategory
{
	///<summary><para>Qualify</para>
	///<para>Value = 0</para></summary>
	[Description("Qualify")]
	Qualify = 0, 
	///<summary><para>Develop</para>
	///<para>Value = 1</para></summary>
	[Description("Develop")]
	Develop = 1, 
	///<summary><para>Propose</para>
	///<para>Value = 2</para></summary>
	[Description("Propose")]
	Propose = 2, 
	///<summary><para>Close</para>
	///<para>Value = 3</para></summary>
	[Description("Close")]
	Close = 3, 
	///<summary><para>Identify</para>
	///<para>Value = 4</para></summary>
	[Description("Identify")]
	Identify = 4, 
	///<summary><para>Research</para>
	///<para>Value = 5</para></summary>
	[Description("Research")]
	Research = 5, 
	///<summary><para>Resolve</para>
	///<para>Value = 6</para></summary>
	[Description("Resolve")]
	Resolve = 6, 
	///<summary><para>Approval</para>
	///<para>Value = 7</para></summary>
	[Description("Approval")]
	Approval = 7
}


        public static class Properties
{
	/// <summary><para>owneridtype</para>
	/// <para>owneridtype</para></summary>
	public const string OwnerIdType = "owneridtype";
	/// <summary><para>processidname</para>
	/// <para>processidname</para></summary>
	public const string ProcessIdName = "processidname";
	/// <summary><para>Client Data</para>
	/// <para>clientdata</para></summary>
	public const string ClientData = "clientdata";
	/// <summary><para>Owner</para>
	/// <para>ownerid</para></summary>
	public const string Owner = "ownerid";
	/// <summary><para>Owning Business Unit</para>
	/// <para>owningbusinessunit</para></summary>
	public const string OwningBusinessUnit = "owningbusinessunit";
	/// <summary><para>Primary Entity</para>
	/// <para>primaryentitytypecode</para></summary>
	public const string PrimaryEntity = "primaryentitytypecode";
	/// <summary><para>Process</para>
	/// <para>processid</para></summary>
	public const string Process = "processid";
	/// <summary><para>Process Stage</para>
	/// <para>processstageid</para></summary>
	public const string ProcessStageId = "processstageid";
	/// <summary><para>Process Stage Name</para>
	/// <para>stagename</para></summary>
	public const string ProcessStageName = "stagename";
	/// <summary><para>Stage Category</para>
	/// <para>stagecategory</para></summary>
	public const string StageCategory = "stagecategory";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
}

    }
}

// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("msdyn_project")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class Project : BaseProxyClass
    {
        public new const string LogicalName = "msdyn_project";
        public const int ObjectTypeCode = 10064;
        public const string PrimaryIdAttribute = "msdyn_projectid";
        public const string PrimaryNameAttribute = "msdyn_subject";
        
        static Project()
        {
            BaseProxyClass.RegisterProxyType(typeof(Project), "msdyn_project");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public Project() : base(new Entity("msdyn_project")) { }
        public Project(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<Project>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: owneridtype</para>
///</summary>
[AttributeLogicalNameAttribute("owneridtype")]
public string OwnerIdType
{
	get { return this.GetPropertyValue<string>("owneridtype"); }
	set { this.SetPropertyValue<string>("owneridtype", value, "OwnerIdType"); }
}
///<summary>
///<para>Logical Name: msdyn_projectmanageryominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_projectmanageryominame")]
public string Msdyn_projectmanagerYomiName
{
	get { return this.GetPropertyValue<string>("msdyn_projectmanageryominame"); }
}
///<summary>
///<para>Logical Name: msdyn_projectteamidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_projectteamidname")]
public string Msdyn_projectteamidName
{
	get { return this.GetPropertyValue<string>("msdyn_projectteamidname"); }
}
///<summary>
///<para>Logical Name: msdyn_projectmanagername</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_projectmanagername")]
public string Msdyn_projectmanagerName
{
	get { return this.GetPropertyValue<string>("msdyn_projectmanagername"); }
}
///<summary>
///<para>Logical Name: owneridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridname")]
public string OwnerIdName
{
	get { return this.GetPropertyValue<string>("owneridname"); }
}
///<summary>
///<para>Logical Name: msdyn_contractorganizationalunitidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_contractorganizationalunitidname")]
public string Msdyn_ContractOrganizationalUnitIdName
{
	get { return this.GetPropertyValue<string>("msdyn_contractorganizationalunitidname"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_customeryominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_customeryominame")]
public string Msdyn_customerYomiName
{
	get { return this.GetPropertyValue<string>("msdyn_customeryominame"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: owneridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridyominame")]
public string OwnerIdYomiName
{
	get { return this.GetPropertyValue<string>("owneridyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_projecttemplatename</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_projecttemplatename")]
public string Msdyn_ProjectTemplateName
{
	get { return this.GetPropertyValue<string>("msdyn_projecttemplatename"); }
}
///<summary>
///<para>Logical Name: msdyn_workhourtemplatename</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workhourtemplatename")]
public string Msdyn_workhourtemplateName
{
	get { return this.GetPropertyValue<string>("msdyn_workhourtemplatename"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyidname")]
public string TransactionCurrencyIdName
{
	get { return this.GetPropertyValue<string>("transactioncurrencyidname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_projectteamidyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_projectteamidyominame")]
public string Msdyn_projectteamidYomiName
{
	get { return this.GetPropertyValue<string>("msdyn_projectteamidyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_salesorderidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_salesorderidname")]
public string Msdyn_salesorderidName
{
	get { return this.GetPropertyValue<string>("msdyn_salesorderidname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_customername</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_customername")]
public string Msdyn_customerName
{
	get { return this.GetPropertyValue<string>("msdyn_customername"); }
}
///<summary>
///<para>Logical Name: msdyn_totalactualcost</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? ActualCost
{
	get
	{
		if (ActualCostMoney != null) { return ActualCostMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ActualCostMoney = new Money(value.Value); }
		else this.ActualCostMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_totalactualcost</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totalactualcost")]
public Money ActualCostMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_totalactualcost"); }
	set { this.SetPropertyValue("msdyn_totalactualcost", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "ActualCostMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_actualdurationminutes</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_actualdurationminutes")]
public int? ActualDuration
{
	get { return this.GetPropertyValue<int?>("msdyn_actualdurationminutes"); }
	set { this.SetPropertyValue("msdyn_actualdurationminutes", (int?)value, (int)0, (int)2147483647, "ActualDuration"); }
}
///<summary>
///<para>Logical Name: msdyn_actualend</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_actualend")]
public DateTime? ActualEnd
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_actualend"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_actualend", value, "ActualEnd"); }
}
///<summary>
///<para>Logical Name: msdyn_actualhours</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_actualhours")]
public decimal? ActualHours
{
	get { return this.GetPropertyValue<decimal?>("msdyn_actualhours"); }
	set { this.SetPropertyValue("msdyn_actualhours", (decimal?)value, (decimal)0, (decimal)1000000000, "ActualHours"); }
}
///<summary>
///<para>Logical Name: msdyn_actualsales</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? ActualSales
{
	get
	{
		if (ActualSalesMoney != null) { return ActualSalesMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ActualSalesMoney = new Money(value.Value); }
		else this.ActualSalesMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_actualsales</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_actualsales")]
public Money ActualSalesMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_actualsales"); }
	set { this.SetPropertyValue("msdyn_actualsales", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "ActualSalesMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_actualsales_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? ActualSales_Base
{
	get
	{
		if (ActualSales_BaseMoney != null) { return ActualSales_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_actualsales_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_actualsales_base")]
public Money ActualSales_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_actualsales_base"); }
}
///<summary>
///<para>Logical Name: msdyn_actualstart</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_actualstart")]
public DateTime? ActualStart
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_actualstart"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_actualstart", value, "ActualStart"); }
}
/// <summary>
///Logical Name: msdyn_bulkgenerationstatus
/// </summary>
[AttributeLogicalNameAttribute("msdyn_bulkgenerationstatus")]
public eAsyncOperationStatus? BulkGenerationStatus
{
	get
	{
		if (BulkGenerationStatus_OptionSetValue != null) { return (eAsyncOperationStatus)BulkGenerationStatus_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.BulkGenerationStatus_OptionSetValue = new OptionSetValue((int)value); }
		else this.BulkGenerationStatus_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_bulkgenerationstatus</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_bulkgenerationstatus")]
public OptionSetValue BulkGenerationStatus_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_bulkgenerationstatus"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_bulkgenerationstatus", value, "BulkGenerationStatus_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string BulkGenerationStatus_Text(IOrganizationService Service)
{
	return this.BulkGenerationStatus_OptionSetValue.GetOptionSetText(Service, this, "msdyn_bulkgenerationstatus");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string BulkGenerationStatus_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.BulkGenerationStatus_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_calendarid</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_calendarid")]
public string CalendarId
{
	get { return this.GetPropertyValue<string>("msdyn_calendarid"); }
	set { this.SetPropertyValue("msdyn_calendarid", value, 100, "CalendarId"); }
}
///<summary>
///<para>Logical Name: msdyn_comments</para>
///<para>Max Length: 20000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_comments")]
public string Comments
{
	get { return this.GetPropertyValue<string>("msdyn_comments"); }
	set { this.SetPropertyValue("msdyn_comments", value, 20000, "Comments"); }
}
///<summary>
///<para>Logical Name: msdyn_salesorderid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_salesorderid")]
public EntityReference Contract
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_salesorderid"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_salesorderid", value, "Contract"); }
}
///<summary>
///<para>Logical Name: msdyn_contractorganizationalunitid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_contractorganizationalunitid")]
public EntityReference ContractingUnit
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_contractorganizationalunitid"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_contractorganizationalunitid", value, "ContractingUnit"); }
}
///<summary>
///<para>Logical Name: msdyn_costconsumption</para>
///<para>Minimum Value: -100000000000</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_costconsumption")]
public decimal? CostConsumption
{
	get { return this.GetPropertyValue<decimal?>("msdyn_costconsumption"); }
}
///<summary>
///<para>Logical Name: msdyn_costestimateatcomplete</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? CostEstimateAtCompletion_EAC
{
	get
	{
		if (CostEstimateAtCompletion_EACMoney != null) { return CostEstimateAtCompletion_EACMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_costestimateatcomplete</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_costestimateatcomplete")]
public Money CostEstimateAtCompletion_EACMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_costestimateatcomplete"); }
}
///<summary>
///<para>Logical Name: msdyn_costestimateatcomplete_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? CostEstimateAtCompletion_EAC_Base
{
	get
	{
		if (CostEstimateAtCompletion_EAC_BaseMoney != null) { return CostEstimateAtCompletion_EAC_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_costestimateatcomplete_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_costestimateatcomplete_base")]
public Money CostEstimateAtCompletion_EAC_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_costestimateatcomplete_base"); }
}
/// <summary>
///Logical Name: msdyn_costperformence
/// </summary>
[AttributeLogicalNameAttribute("msdyn_costperformence")]
public eCostPerformance? CostPerformance
{
	get
	{
		if (CostPerformance_OptionSetValue != null) { return (eCostPerformance)CostPerformance_OptionSetValue.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_costperformence</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_costperformence")]
public OptionSetValue CostPerformance_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_costperformence"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string CostPerformance_Text(IOrganizationService Service)
{
	return this.CostPerformance_OptionSetValue.GetOptionSetText(Service, this, "msdyn_costperformence");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string CostPerformance_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.CostPerformance_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_costvariance</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? CostVariance
{
	get
	{
		if (CostVarianceMoney != null) { return CostVarianceMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_costvariance</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_costvariance")]
public Money CostVarianceMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_costvariance"); }
}
///<summary>
///<para>Logical Name: msdyn_costvariance_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? CostVariance_Base
{
	get
	{
		if (CostVariance_BaseMoney != null) { return CostVariance_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_costvariance_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_costvariance_base")]
public Money CostVariance_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_costvariance_base"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyid</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyid")]
public EntityReference Currency
{
	get { return this.GetPropertyValue<EntityReference>("transactioncurrencyid"); }
	set { this.SetPropertyValue<EntityReference>("transactioncurrencyid", value, "Currency"); }
}
///<summary>
///<para>Logical Name: msdyn_customer</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_customer")]
public EntityReference Customer
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_customer"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_customer", value, "Customer"); }
}
///<summary>
///<para>Logical Name: msdyn_description</para>
///<para>Max Length: 2000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_description")]
public string Description
{
	get { return this.GetPropertyValue<string>("msdyn_description"); }
	set { this.SetPropertyValue("msdyn_description", value, 2000, "Description"); }
}
///<summary>
///<para>Logical Name: msdyn_disablecreateofteammemberformanager</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_disablecreateofteammemberformanager")]
public bool? DisableCreateOfTeamMemberForProjectManager
{
	get { return this.GetPropertyValue<bool?>("msdyn_disablecreateofteammemberformanager"); }
	set { this.SetPropertyValue<bool?>("msdyn_disablecreateofteammemberformanager", value, "DisableCreateOfTeamMemberForProjectManager"); }
}
///<summary>
///<para>Logical Name: msdyn_wbsduration</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_wbsduration")]
public int? Duration
{
	get { return this.GetPropertyValue<int?>("msdyn_wbsduration"); }
	set { this.SetPropertyValue("msdyn_wbsduration", (int?)value, (int)-2147483648, (int)2147483647, "Duration"); }
}
///<summary>
///<para>Logical Name: msdyn_effortestimateatcompleteeac</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_effortestimateatcompleteeac")]
public double? EffortEstimateAtComplete_EAC
{
	get { return this.GetPropertyValue<double?>("msdyn_effortestimateatcompleteeac"); }
	set { this.SetPropertyValue("msdyn_effortestimateatcompleteeac", (double?)value, (double)0, (double)1000000000, "EffortEstimateAtComplete_EAC"); }
}
///<summary>
///<para>Logical Name: msdyn_totalplannedcost</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? EstimatedCost
{
	get
	{
		if (EstimatedCostMoney != null) { return EstimatedCostMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.EstimatedCostMoney = new Money(value.Value); }
		else this.EstimatedCostMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_totalplannedcost</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totalplannedcost")]
public Money EstimatedCostMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_totalplannedcost"); }
	set { this.SetPropertyValue("msdyn_totalplannedcost", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "EstimatedCostMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_scheduledend</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_scheduledend")]
public DateTime? EstimatedFinishDate
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_scheduledend"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_scheduledend", value, "EstimatedFinishDate"); }
}
///<summary>
///<para>Logical Name: msdyn_plannedhours</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_plannedhours")]
public decimal? EstimatedHours
{
	get { return this.GetPropertyValue<decimal?>("msdyn_plannedhours"); }
	set { this.SetPropertyValue("msdyn_plannedhours", (decimal?)value, (decimal)0, (decimal)100000000000, "EstimatedHours"); }
}
///<summary>
///<para>Logical Name: msdyn_exchangerate</para>
///<para>Minimum Value: 0.0000000001</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 10</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_exchangerate")]
public decimal? ExchangeRate
{
	get { return this.GetPropertyValue<decimal?>("msdyn_exchangerate"); }
	set { this.SetPropertyValue("msdyn_exchangerate", (decimal?)value, (decimal)0.0000000001, (decimal)100000000000, "ExchangeRate"); }
}
///<summary>
///<para>Logical Name: exchangerate</para>
///<para>Minimum Value: 0.0000000001</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 10</para>
///</summary>
[AttributeLogicalNameAttribute("exchangerate")]
public decimal? ExchangeRate2
{
	get { return this.GetPropertyValue<decimal?>("exchangerate"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? ImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "ImportSequenceNumber"); }
}
///<summary>
///<para>Logical Name: msdyn_islinkedtomsprojectclient</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_islinkedtomsprojectclient")]
public bool? IsLinkedToMSProjectClient
{
	get { return this.GetPropertyValue<bool?>("msdyn_islinkedtomsprojectclient"); }
	set { this.SetPropertyValue<bool?>("msdyn_islinkedtomsprojectclient", value, "IsLinkedToMSProjectClient"); }
}
///<summary>
///<para>Logical Name: msdyn_istemplate</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_istemplate")]
public bool? IsTemplate
{
	get { return this.GetPropertyValue<bool?>("msdyn_istemplate"); }
	set { this.SetPropertyValue<bool?>("msdyn_istemplate", value, "IsTemplate"); }
}
///<summary>
///<para>Logical Name: msdyn_linkeddocumenturl</para>
///<para>Max Length: 500 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_linkeddocumenturl")]
public string LinkedDocumentURL
{
	get { return this.GetPropertyValue<string>("msdyn_linkeddocumenturl"); }
	set { this.SetPropertyValue("msdyn_linkeddocumenturl", value, 500, "LinkedDocumentURL"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: msdyn_subject</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_subject")]
public string Name
{
	get { return this.GetPropertyValue<string>("msdyn_subject"); }
	set { this.SetPropertyValue("msdyn_subject", value, 200, "Name"); }
}
/// <summary>
///Logical Name: msdyn_overallprojectstatus
/// </summary>
[AttributeLogicalNameAttribute("msdyn_overallprojectstatus")]
public eOverallProjectStatus? OverallProjectStatus
{
	get
	{
		if (OverallProjectStatus_OptionSetValue != null) { return (eOverallProjectStatus)OverallProjectStatus_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.OverallProjectStatus_OptionSetValue = new OptionSetValue((int)value); }
		else this.OverallProjectStatus_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_overallprojectstatus</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_overallprojectstatus")]
public OptionSetValue OverallProjectStatus_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_overallprojectstatus"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_overallprojectstatus", value, "OverallProjectStatus_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string OverallProjectStatus_Text(IOrganizationService Service)
{
	return this.OverallProjectStatus_OptionSetValue.GetOptionSetText(Service, this, "msdyn_overallprojectstatus");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string OverallProjectStatus_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.OverallProjectStatus_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: ownerid</para>
///</summary>
[AttributeLogicalNameAttribute("ownerid")]
public EntityReference Owner
{
	get { return this.GetPropertyValue<EntityReference>("ownerid"); }
	set { this.SetPropertyValue<EntityReference>("ownerid", value, "Owner"); }
}
///<summary>
///<para>Logical Name: owningbusinessunit</para>
///</summary>
[AttributeLogicalNameAttribute("owningbusinessunit")]
public EntityReference OwningBusinessUnit
{
	get { return this.GetPropertyValue<EntityReference>("owningbusinessunit"); }
}
///<summary>
///<para>Logical Name: owningteam</para>
///</summary>
[AttributeLogicalNameAttribute("owningteam")]
public EntityReference OwningTeam
{
	get { return this.GetPropertyValue<EntityReference>("owningteam"); }
}
///<summary>
///<para>Logical Name: owninguser</para>
///</summary>
[AttributeLogicalNameAttribute("owninguser")]
public EntityReference OwningUser
{
	get { return this.GetPropertyValue<EntityReference>("owninguser"); }
}
///<summary>
///<para>Logical Name: msdyn_plannedsales</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? PlannedSales
{
	get
	{
		if (PlannedSalesMoney != null) { return PlannedSalesMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.PlannedSalesMoney = new Money(value.Value); }
		else this.PlannedSalesMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_plannedsales</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_plannedsales")]
public Money PlannedSalesMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_plannedsales"); }
	set { this.SetPropertyValue("msdyn_plannedsales", (Money)value, (decimal)0, (decimal)922337203685477, "PlannedSalesMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_plannedsales_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? PlannedSales_Base
{
	get
	{
		if (PlannedSales_BaseMoney != null) { return PlannedSales_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_plannedsales_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_plannedsales_base")]
public Money PlannedSales_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_plannedsales_base"); }
}
///<summary>
///<para>Logical Name: processid</para>
///</summary>
[AttributeLogicalNameAttribute("processid")]
public Guid ProcessId
{
	get { return this.GetPropertyValue<Guid>("processid"); }
	set { this.SetPropertyValue<Guid>("processid", value, "ProcessId"); }
}
///<summary>
///<para>Logical Name: msdyn_progress</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_progress")]
public decimal? Progress
{
	get { return this.GetPropertyValue<decimal?>("msdyn_progress"); }
	set { this.SetPropertyValue("msdyn_progress", (decimal?)value, (decimal)0, (decimal)100000000000, "Progress"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: msdyn_projectid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_projectid")]
public Guid ProjectId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: msdyn_projectmanager</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_projectmanager")]
public EntityReference ProjectManager
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_projectmanager"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_projectmanager", value, "ProjectManager"); }
}
///<summary>
///<para>Logical Name: msdyn_projectresourcerequirementsvisibletore</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_projectresourcerequirementsvisibletore")]
public bool? ProjectResourceRequirementsVisibleToResources
{
	get { return this.GetPropertyValue<bool?>("msdyn_projectresourcerequirementsvisibletore"); }
	set { this.SetPropertyValue<bool?>("msdyn_projectresourcerequirementsvisibletore", value, "ProjectResourceRequirementsVisibleToResources"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eStatus? ProjectStatus
{
	get
	{
		if (ProjectStatus_OptionSetValue != null) { return (eStatus)ProjectStatus_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ProjectStatus_OptionSetValue = new OptionSetValue((int)value); }
		else this.ProjectStatus_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue ProjectStatus_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
	set { this.SetPropertyValue<OptionSetValue>("statecode", value, "ProjectStatus_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ProjectStatus_Text(IOrganizationService Service)
{
	return this.ProjectStatus_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ProjectStatus_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ProjectStatus_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_projectteamid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_projectteamid")]
public EntityReference ProjectTeam
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_projectteamid"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_projectteamid", value, "ProjectTeam"); }
}
///<summary>
///<para>Logical Name: msdyn_projecttemplate</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_projecttemplate")]
public EntityReference ProjectTemplate
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_projecttemplate"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_projecttemplate", value, "ProjectTemplate"); }
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? RecordCreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "RecordCreatedOn"); }
}
///<summary>
///<para>Logical Name: msdyn_remainingcost</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? RemainingCost
{
	get
	{
		if (RemainingCostMoney != null) { return RemainingCostMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.RemainingCostMoney = new Money(value.Value); }
		else this.RemainingCostMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_remainingcost</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_remainingcost")]
public Money RemainingCostMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_remainingcost"); }
	set { this.SetPropertyValue("msdyn_remainingcost", (Money)value, (decimal)0, (decimal)922337203685477, "RemainingCostMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_remainingcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? RemainingCost_Base
{
	get
	{
		if (RemainingCost_BaseMoney != null) { return RemainingCost_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_remainingcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_remainingcost_base")]
public Money RemainingCost_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_remainingcost_base"); }
}
///<summary>
///<para>Logical Name: msdyn_remaininghours</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_remaininghours")]
public double? RemainingHours
{
	get { return this.GetPropertyValue<double?>("msdyn_remaininghours"); }
	set { this.SetPropertyValue("msdyn_remaininghours", (double?)value, (double)0, (double)1000000000, "RemainingHours"); }
}
///<summary>
///<para>Logical Name: msdyn_remainingsales</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? RemainingSales
{
	get
	{
		if (RemainingSalesMoney != null) { return RemainingSalesMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.RemainingSalesMoney = new Money(value.Value); }
		else this.RemainingSalesMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_remainingsales</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_remainingsales")]
public Money RemainingSalesMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_remainingsales"); }
	set { this.SetPropertyValue("msdyn_remainingsales", (Money)value, (decimal)0, (decimal)922337203685477, "RemainingSalesMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_remainingsales_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? RemainingSales_Base
{
	get
	{
		if (RemainingSales_BaseMoney != null) { return RemainingSales_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_remainingsales_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_remainingsales_base")]
public Money RemainingSales_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_remainingsales_base"); }
}
///<summary>
///<para>Logical Name: msdyn_salesconsumption</para>
///<para>Minimum Value: -100000000000</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_salesconsumption")]
public decimal? SalesConsumption
{
	get { return this.GetPropertyValue<decimal?>("msdyn_salesconsumption"); }
}
///<summary>
///<para>Logical Name: msdyn_salesestimateatcompleteeac</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? SalesEstimateAtComplete_EAC
{
	get
	{
		if (SalesEstimateAtComplete_EACMoney != null) { return SalesEstimateAtComplete_EACMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_salesestimateatcompleteeac</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_salesestimateatcompleteeac")]
public Money SalesEstimateAtComplete_EACMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_salesestimateatcompleteeac"); }
}
///<summary>
///<para>Logical Name: msdyn_salesestimateatcompleteeac_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? SalesEstimateAtComplete_EAC_Base
{
	get
	{
		if (SalesEstimateAtComplete_EAC_BaseMoney != null) { return SalesEstimateAtComplete_EAC_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_salesestimateatcompleteeac_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_salesestimateatcompleteeac_base")]
public Money SalesEstimateAtComplete_EAC_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_salesestimateatcompleteeac_base"); }
}
///<summary>
///<para>Logical Name: msdyn_salesvariance</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? SalesVariance
{
	get
	{
		if (SalesVarianceMoney != null) { return SalesVarianceMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_salesvariance</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_salesvariance")]
public Money SalesVarianceMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_salesvariance"); }
}
///<summary>
///<para>Logical Name: msdyn_salesvariance_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? SalesVariance_Base
{
	get
	{
		if (SalesVariance_BaseMoney != null) { return SalesVariance_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_salesvariance_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_salesvariance_base")]
public Money SalesVariance_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_salesvariance_base"); }
}
/// <summary>
///Logical Name: msdyn_scheduleperformance
/// </summary>
[AttributeLogicalNameAttribute("msdyn_scheduleperformance")]
public eSchedulePerformance? SchedulePerformance
{
	get
	{
		if (SchedulePerformance_OptionSetValue != null) { return (eSchedulePerformance)SchedulePerformance_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.SchedulePerformance_OptionSetValue = new OptionSetValue((int)value); }
		else this.SchedulePerformance_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_scheduleperformance</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_scheduleperformance")]
public OptionSetValue SchedulePerformance_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_scheduleperformance"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_scheduleperformance", value, "SchedulePerformance_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string SchedulePerformance_Text(IOrganizationService Service)
{
	return this.SchedulePerformance_OptionSetValue.GetOptionSetText(Service, this, "msdyn_scheduleperformance");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string SchedulePerformance_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.SchedulePerformance_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_schedulevariance</para>
///<para>Minimum Value: -1000000000</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_schedulevariance")]
public double? ScheduleVariance
{
	get { return this.GetPropertyValue<double?>("msdyn_schedulevariance"); }
	set { this.SetPropertyValue("msdyn_schedulevariance", (double?)value, (double)-1000000000, (double)1000000000, "ScheduleVariance"); }
}
///<summary>
///<para>Logical Name: msdyn_scheduleddurationminutes</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_scheduleddurationminutes")]
public int? ScheduledDuration
{
	get { return this.GetPropertyValue<int?>("msdyn_scheduleddurationminutes"); }
	set { this.SetPropertyValue("msdyn_scheduleddurationminutes", (int?)value, (int)0, (int)2147483647, "ScheduledDuration"); }
}
///<summary>
///<para>Logical Name: stageid</para>
///</summary>
[AttributeLogicalNameAttribute("stageid")]
public Guid StageId
{
	get { return this.GetPropertyValue<Guid>("stageid"); }
	set { this.SetPropertyValue<Guid>("stageid", value, "StageId"); }
}
///<summary>
///<para>Logical Name: msdyn_stagename</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_stagename")]
public string StageName
{
	get { return this.GetPropertyValue<string>("msdyn_stagename"); }
	set { this.SetPropertyValue("msdyn_stagename", value, 100, "StageName"); }
}
///<summary>
///<para>Logical Name: msdyn_scheduledstart</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_scheduledstart")]
public DateTime? StartDate
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_scheduledstart"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_scheduledstart", value, "StartDate"); }
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? StatusReason
{
	get
	{
		if (StatusReason_OptionSetValue != null) { return (eStatusReason)StatusReason_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StatusReason_OptionSetValue = new OptionSetValue((int)value); }
		else this.StatusReason_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue StatusReason_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "StatusReason_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string StatusReason_Text(IOrganizationService Service)
{
	return this.StatusReason_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string StatusReason_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.StatusReason_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_statusupdatedon</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_statusupdatedon")]
public DateTime? StatusUpdatedOn
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_statusupdatedon"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_statusupdatedon", value, "StatusUpdatedOn"); }
}
///<summary>
///<para>Logical Name: msdyn_teamsize</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_teamsize")]
public int? TeamSize
{
	get { return this.GetPropertyValue<int?>("msdyn_teamsize"); }
}
///<summary>
///<para>Logical Name: msdyn_teamsize_date</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_teamsize_date")]
public DateTime? TeamSize_LastUpdatedOn
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_teamsize_date"); }
}
///<summary>
///<para>Logical Name: msdyn_teamsize_state</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_teamsize_state")]
public int? TeamSize_State
{
	get { return this.GetPropertyValue<int?>("msdyn_teamsize_state"); }
}
///<summary>
///<para>Logical Name: timezoneruleversionnumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("timezoneruleversionnumber")]
public int? TimeZoneRuleVersionNumber
{
	get { return this.GetPropertyValue<int?>("timezoneruleversionnumber"); }
	set { this.SetPropertyValue("timezoneruleversionnumber", (int?)value, (int)-1, (int)2147483647, "TimeZoneRuleVersionNumber"); }
}
///<summary>
///<para>Logical Name: msdyn_totalactualcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? TotalActualCost_Base
{
	get
	{
		if (TotalActualCost_BaseMoney != null) { return TotalActualCost_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_totalactualcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totalactualcost_base")]
public Money TotalActualCost_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_totalactualcost_base"); }
}
///<summary>
///<para>Logical Name: msdyn_totalplannedcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? TotalPlannedCost_Base
{
	get
	{
		if (TotalPlannedCost_BaseMoney != null) { return TotalPlannedCost_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_totalplannedcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totalplannedcost_base")]
public Money TotalPlannedCost_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_totalplannedcost_base"); }
}
///<summary>
///<para>Logical Name: traversedpath</para>
///<para>Max Length: 1250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("traversedpath")]
public string TraversedPath
{
	get { return this.GetPropertyValue<string>("traversedpath"); }
	set { this.SetPropertyValue("traversedpath", value, 1250, "TraversedPath"); }
}
///<summary>
///<para>Logical Name: utcconversiontimezonecode</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utcconversiontimezonecode")]
public int? UTCConversionTimeZoneCode
{
	get { return this.GetPropertyValue<int?>("utcconversiontimezonecode"); }
	set { this.SetPropertyValue("utcconversiontimezonecode", (int?)value, (int)-1, (int)2147483647, "UTCConversionTimeZoneCode"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}
///<summary>
///<para>Logical Name: msdyn_workhourtemplate</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workhourtemplate")]
public EntityReference WorkHourTemplate
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_workhourtemplate"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_workhourtemplate", value, "WorkHourTemplate"); }
}


        /// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: msdyn_project_Annotations</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: msdyn_project_Annotations</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: msdyn_project_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: msdyn_project_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BookableResourceBooking (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_bookableresourcebooking_projectid</para>
/// </summary>
public List<BookableResourceBooking> GetBookableResourceBookings_Project (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBooking>(Service, this.Id, "bookableresourcebooking", "msdyn_projectid", Columns); }
/// <summary>
/// <para><b>BookableResourceBooking (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_bookableresourcebooking_projectid</para>
/// </summary>
public List<BookableResourceBooking> GetBookableResourceBookings_Project (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBooking>(Service, this.Id, "bookableresourcebooking", "msdyn_projectid", Columns); }
/// <summary>
/// <para><b>BookableResourceBookingHeader (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_bookableresourcebookingheader_projectid</para>
/// </summary>
public List<BookableResourceBookingHeader> GetBookableResourceBookingHeaders_Project (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBookingHeader>(Service, this.Id, "bookableresourcebookingheader", "msdyn_projectid", Columns); }
/// <summary>
/// <para><b>BookableResourceBookingHeader (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_bookableresourcebookingheader_projectid</para>
/// </summary>
public List<BookableResourceBookingHeader> GetBookableResourceBookingHeaders_Project (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBookingHeader>(Service, this.Id, "bookableresourcebookingheader", "msdyn_projectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: msdyn_project_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: msdyn_project_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: msdyn_project_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: msdyn_project_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: msdyn_project_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: msdyn_project_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: msdyn_project_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: msdyn_project_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: msdyn_project_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: msdyn_project_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>InvoiceLine (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_invoicedetail_Project</para>
/// </summary>
public List<InvoiceLine> GetInvoiceLines_Project (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceLine>(Service, this.Id, "invoicedetail", "msdyn_project", Columns); }
/// <summary>
/// <para><b>InvoiceLine (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_invoicedetail_Project</para>
/// </summary>
public List<InvoiceLine> GetInvoiceLines_Project (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceLine>(Service, this.Id, "invoicedetail", "msdyn_project", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: msdyn_project_MailboxTrackingFolders</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: msdyn_project_MailboxTrackingFolders</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Actual (Project ID)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_actual_Project</para>
/// </summary>
public List<Actual> GetActuals_ProjectID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Actual>(Service, this.Id, "msdyn_actual", "msdyn_project", Columns); }
/// <summary>
/// <para><b>Actual (Project ID)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_actual_Project</para>
/// </summary>
public List<Actual> GetActuals_ProjectID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Actual>(Service, this.Id, "msdyn_actual", "msdyn_project", Columns); }
/// <summary>
/// <para>msdyn_project</para>
/// <para><b>ProjectStages (msdyn_project)</b></para>
/// <para>Schema Name: bpf_msdyn_project_msdyn_bpf_665e73aa18c247d886bfc50499c73b82</para>
/// </summary>
public List<ProjectStages> Getmsdyn_project_msdyn_project (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectStages>(Service, this.Id, "msdyn_bpf_665e73aa18c247d886bfc50499c73b82", "bpf_msdyn_projectid", Columns); }
/// <summary>
/// <para>msdyn_project</para>
/// <para><b>ProjectStages (msdyn_project)</b></para>
/// <para>Schema Name: bpf_msdyn_project_msdyn_bpf_665e73aa18c247d886bfc50499c73b82</para>
/// </summary>
public List<ProjectStages> Getmsdyn_project_msdyn_project (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectStages>(Service, this.Id, "msdyn_bpf_665e73aa18c247d886bfc50499c73b82", "bpf_msdyn_projectid", Columns); }
/// <summary>
/// <para><b>ProjectContractLineMilestone (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_contractlinescheduleofvalue_project</para>
/// </summary>
public List<ProjectContractLineMilestone> GetProjectContractLineMilestones_Project (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineMilestone>(Service, this.Id, "msdyn_contractlinescheduleofvalue", "msdyn_project", Columns); }
/// <summary>
/// <para><b>ProjectContractLineMilestone (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_contractlinescheduleofvalue_project</para>
/// </summary>
public List<ProjectContractLineMilestone> GetProjectContractLineMilestones_Project (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineMilestone>(Service, this.Id, "msdyn_contractlinescheduleofvalue", "msdyn_project", Columns); }
/// <summary>
/// <para><b>Estimate (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_estimate_Project</para>
/// </summary>
public List<Estimate> GetEstimates_Project (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Estimate>(Service, this.Id, "msdyn_estimate", "msdyn_project", Columns); }
/// <summary>
/// <para><b>Estimate (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_estimate_Project</para>
/// </summary>
public List<Estimate> GetEstimates_Project (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Estimate>(Service, this.Id, "msdyn_estimate", "msdyn_project", Columns); }
/// <summary>
/// <para><b>EstimateLine (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_estimateline_Project</para>
/// </summary>
public List<EstimateLine> GetEstimateLines_Project (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EstimateLine>(Service, this.Id, "msdyn_estimateline", "msdyn_project", Columns); }
/// <summary>
/// <para><b>EstimateLine (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_estimateline_Project</para>
/// </summary>
public List<EstimateLine> GetEstimateLines_Project (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EstimateLine>(Service, this.Id, "msdyn_estimateline", "msdyn_project", Columns); }
/// <summary>
/// <para><b>Expense (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_expense_Project</para>
/// </summary>
public List<Expense> GetExpenses_Project (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Expense>(Service, this.Id, "msdyn_expense", "msdyn_project", Columns); }
/// <summary>
/// <para><b>Expense (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_expense_Project</para>
/// </summary>
public List<Expense> GetExpenses_Project (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Expense>(Service, this.Id, "msdyn_expense", "msdyn_project", Columns); }
/// <summary>
/// <para><b>Fact (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_fact_Project</para>
/// </summary>
public List<Fact> GetFacts_Project (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fact>(Service, this.Id, "msdyn_fact", "msdyn_project", Columns); }
/// <summary>
/// <para><b>Fact (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_fact_Project</para>
/// </summary>
public List<Fact> GetFacts_Project (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fact>(Service, this.Id, "msdyn_fact", "msdyn_project", Columns); }
/// <summary>
/// <para><b>InvoiceLineDetail (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_invoicelinetransaction_Project</para>
/// </summary>
public List<InvoiceLineDetail> GetInvoiceLineDetails_Project (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceLineDetail>(Service, this.Id, "msdyn_invoicelinetransaction", "msdyn_project", Columns); }
/// <summary>
/// <para><b>InvoiceLineDetail (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_invoicelinetransaction_Project</para>
/// </summary>
public List<InvoiceLineDetail> GetInvoiceLineDetails_Project (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceLineDetail>(Service, this.Id, "msdyn_invoicelinetransaction", "msdyn_project", Columns); }
/// <summary>
/// <para><b>Journal (Default Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_journal_DefaultProject</para>
/// </summary>
public List<Journal> GetJournals_DefaultProject (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Journal>(Service, this.Id, "msdyn_journal", "msdyn_defaultproject", Columns); }
/// <summary>
/// <para><b>Journal (Default Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_journal_DefaultProject</para>
/// </summary>
public List<Journal> GetJournals_DefaultProject (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Journal>(Service, this.Id, "msdyn_journal", "msdyn_defaultproject", Columns); }
/// <summary>
/// <para><b>JournalLine (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_journalline_Project</para>
/// </summary>
public List<JournalLine> GetJournalLines_Project (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<JournalLine>(Service, this.Id, "msdyn_journalline", "msdyn_project", Columns); }
/// <summary>
/// <para><b>JournalLine (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_journalline_Project</para>
/// </summary>
public List<JournalLine> GetJournalLines_Project (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<JournalLine>(Service, this.Id, "msdyn_journalline", "msdyn_project", Columns); }
/// <summary>
/// <para><b>OpportunityLineDetail (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_opportunitylinetransaction_Project</para>
/// </summary>
public List<OpportunityLineDetail> GetOpportunityLineDetails_Project (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLineDetail>(Service, this.Id, "msdyn_opportunitylinetransaction", "msdyn_project", Columns); }
/// <summary>
/// <para><b>OpportunityLineDetail (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_opportunitylinetransaction_Project</para>
/// </summary>
public List<OpportunityLineDetail> GetOpportunityLineDetails_Project (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLineDetail>(Service, this.Id, "msdyn_opportunitylinetransaction", "msdyn_project", Columns); }
/// <summary>
/// <para><b>ProjectContractLineDetail (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_orderlinetransaction_Project</para>
/// </summary>
public List<ProjectContractLineDetail> GetProjectContractLineDetails_Project (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineDetail>(Service, this.Id, "msdyn_orderlinetransaction", "msdyn_project", Columns); }
/// <summary>
/// <para><b>ProjectContractLineDetail (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_orderlinetransaction_Project</para>
/// </summary>
public List<ProjectContractLineDetail> GetProjectContractLineDetails_Project (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineDetail>(Service, this.Id, "msdyn_orderlinetransaction", "msdyn_project", Columns); }
/// <summary>
/// <para><b>Project (Project Template)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_project_ProjectTemplate</para>
/// </summary>
public List<Project> GetProjects_ProjectTemplate (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Project>(Service, this.Id, "msdyn_project", "msdyn_projecttemplate", Columns); }
/// <summary>
/// <para><b>Project (Project Template)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_project_ProjectTemplate</para>
/// </summary>
public List<Project> GetProjects_ProjectTemplate (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Project>(Service, this.Id, "msdyn_project", "msdyn_projecttemplate", Columns); }
/// <summary>
/// <para><b>ProjectApproval (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_projectapproval_Project</para>
/// </summary>
public List<ProjectApproval> GetProjectApproval_Project (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectApproval>(Service, this.Id, "msdyn_projectapproval", "msdyn_project", Columns); }
/// <summary>
/// <para><b>ProjectApproval (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_projectapproval_Project</para>
/// </summary>
public List<ProjectApproval> GetProjectApproval_Project (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectApproval>(Service, this.Id, "msdyn_projectapproval", "msdyn_project", Columns); }
/// <summary>
/// <para><b>ProjectPriceList (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_projectpricelist_Project</para>
/// </summary>
public List<ProjectPriceList> GetProjectPriceLists_Project (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectPriceList>(Service, this.Id, "msdyn_projectpricelist", "msdyn_project", Columns); }
/// <summary>
/// <para><b>ProjectPriceList (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_projectpricelist_Project</para>
/// </summary>
public List<ProjectPriceList> GetProjectPriceLists_Project (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectPriceList>(Service, this.Id, "msdyn_projectpricelist", "msdyn_project", Columns); }
/// <summary>
/// <para><b>ProjectTask (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_projecttask_project</para>
/// </summary>
public List<ProjectTask> GetProjectTasks_Project (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTask>(Service, this.Id, "msdyn_projecttask", "msdyn_project", Columns); }
/// <summary>
/// <para><b>ProjectTask (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_projecttask_project</para>
/// </summary>
public List<ProjectTask> GetProjectTasks_Project (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTask>(Service, this.Id, "msdyn_projecttask", "msdyn_project", Columns); }
/// <summary>
/// <para><b>ProjectTaskDependency (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_projecttaskdependency_Project</para>
/// </summary>
public List<ProjectTaskDependency> GetProjectTaskDependencies_Project (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTaskDependency>(Service, this.Id, "msdyn_projecttaskdependency", "msdyn_project", Columns); }
/// <summary>
/// <para><b>ProjectTaskDependency (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_projecttaskdependency_Project</para>
/// </summary>
public List<ProjectTaskDependency> GetProjectTaskDependencies_Project (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTaskDependency>(Service, this.Id, "msdyn_projecttaskdependency", "msdyn_project", Columns); }
/// <summary>
/// <para><b>ProjectTeamMember (project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_projectteam_project</para>
/// </summary>
public List<ProjectTeamMember> GetProjectTeamMembers_project (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTeamMember>(Service, this.Id, "msdyn_projectteam", "msdyn_project", Columns); }
/// <summary>
/// <para><b>ProjectTeamMember (project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_projectteam_project</para>
/// </summary>
public List<ProjectTeamMember> GetProjectTeamMembers_project (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTeamMember>(Service, this.Id, "msdyn_projectteam", "msdyn_project", Columns); }
/// <summary>
/// <para><b>ProjectTransactionCategory (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_projecttransactioncategory_Project</para>
/// </summary>
public List<ProjectTransactionCategory> GetProjectTransactionCategories_Project (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTransactionCategory>(Service, this.Id, "msdyn_projecttransactioncategory", "msdyn_project", Columns); }
/// <summary>
/// <para><b>ProjectTransactionCategory (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_projecttransactioncategory_Project</para>
/// </summary>
public List<ProjectTransactionCategory> GetProjectTransactionCategories_Project (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTransactionCategory>(Service, this.Id, "msdyn_projecttransactioncategory", "msdyn_project", Columns); }
/// <summary>
/// <para><b>QuoteLineDetail (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_quotelinetransaction_Project</para>
/// </summary>
public List<QuoteLineDetail> GetQuoteLineDetail_Project (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineDetail>(Service, this.Id, "msdyn_quotelinetransaction", "msdyn_project", Columns); }
/// <summary>
/// <para><b>QuoteLineDetail (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_quotelinetransaction_Project</para>
/// </summary>
public List<QuoteLineDetail> GetQuoteLineDetail_Project (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineDetail>(Service, this.Id, "msdyn_quotelinetransaction", "msdyn_project", Columns); }
/// <summary>
/// <para><b>ResourceAssignment (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_resourceassignment_projectid</para>
/// </summary>
public List<ResourceAssignment> GetResourceAssignments_Project (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceAssignment>(Service, this.Id, "msdyn_resourceassignment", "msdyn_projectid", Columns); }
/// <summary>
/// <para><b>ResourceAssignment (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_resourceassignment_projectid</para>
/// </summary>
public List<ResourceAssignment> GetResourceAssignments_Project (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceAssignment>(Service, this.Id, "msdyn_resourceassignment", "msdyn_projectid", Columns); }
/// <summary>
/// <para><b>ResourceRequirement (Project)</b></para>
/// <para>Schema Name: msdyn_project_resourcerequirement</para>
/// </summary>
public List<ResourceRequirement> GetResourceRequirements_Project (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceRequirement>(Service, this.Id, "msdyn_resourcerequirement", "msdyn_projectid", Columns); }
/// <summary>
/// <para><b>ResourceRequirement (Project)</b></para>
/// <para>Schema Name: msdyn_project_resourcerequirement</para>
/// </summary>
public List<ResourceRequirement> GetResourceRequirements_Project (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceRequirement>(Service, this.Id, "msdyn_resourcerequirement", "msdyn_projectid", Columns); }
/// <summary>
/// <para><b>TimeEntry (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_timeentry_project</para>
/// </summary>
public List<TimeEntry> GetTimeEntries_Project (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TimeEntry>(Service, this.Id, "msdyn_timeentry", "msdyn_project", Columns); }
/// <summary>
/// <para><b>TimeEntry (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_msdyn_timeentry_project</para>
/// </summary>
public List<TimeEntry> GetTimeEntries_Project (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TimeEntry>(Service, this.Id, "msdyn_timeentry", "msdyn_project", Columns); }
/// <summary>
/// <para><b>OpportunityLine (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_opportunityproduct_Project</para>
/// </summary>
public List<OpportunityLine> GetOpportunityLines_Project (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLine>(Service, this.Id, "opportunityproduct", "msdyn_project", Columns); }
/// <summary>
/// <para><b>OpportunityLine (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_opportunityproduct_Project</para>
/// </summary>
public List<OpportunityLine> GetOpportunityLines_Project (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLine>(Service, this.Id, "opportunityproduct", "msdyn_project", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: msdyn_project_PrincipalObjectAttributeAccesses</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: msdyn_project_PrincipalObjectAttributeAccesses</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: msdyn_project_ProcessSession</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: msdyn_project_ProcessSession</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>QueueItem (Object)</b></para>
/// <para>Schema Name: msdyn_project_QueueItems</para>
/// </summary>
public List<QueueItem> GetQueueItems_Object (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QueueItem>(Service, this.Id, "queueitem", "objectid", Columns); }
/// <summary>
/// <para><b>QueueItem (Object)</b></para>
/// <para>Schema Name: msdyn_project_QueueItems</para>
/// </summary>
public List<QueueItem> GetQueueItems_Object (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QueueItem>(Service, this.Id, "queueitem", "objectid", Columns); }
/// <summary>
/// <para><b>QuoteLine (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_quotedetail_Project</para>
/// </summary>
public List<QuoteLine> GetQuoteLines_Project (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLine>(Service, this.Id, "quotedetail", "msdyn_project", Columns); }
/// <summary>
/// <para><b>QuoteLine (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_quotedetail_Project</para>
/// </summary>
public List<QuoteLine> GetQuoteLines_Project (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLine>(Service, this.Id, "quotedetail", "msdyn_project", Columns); }
/// <summary>
/// <para><b>OrderLine (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_salesorderdetail_Project</para>
/// </summary>
public List<OrderLine> GetOrderLines_Project (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderLine>(Service, this.Id, "salesorderdetail", "msdyn_project", Columns); }
/// <summary>
/// <para><b>OrderLine (Project)</b></para>
/// <para>Schema Name: msdyn_msdyn_project_salesorderdetail_Project</para>
/// </summary>
public List<OrderLine> GetOrderLines_Project (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderLine>(Service, this.Id, "salesorderdetail", "msdyn_project", Columns); }
/// <summary>
/// <para><b>DocumentLocation (Regarding)</b></para>
/// <para>Schema Name: msdyn_project_SharePointDocumentLocations</para>
/// </summary>
public List<DocumentLocation> GetDocumentLocations_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DocumentLocation>(Service, this.Id, "sharepointdocumentlocation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>DocumentLocation (Regarding)</b></para>
/// <para>Schema Name: msdyn_project_SharePointDocumentLocations</para>
/// </summary>
public List<DocumentLocation> GetDocumentLocations_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DocumentLocation>(Service, this.Id, "sharepointdocumentlocation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: msdyn_project_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: msdyn_project_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: msdyn_project_UserEntityInstanceDatas</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: msdyn_project_UserEntityInstanceDatas</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        

        

        public enum eAsyncOperationStatus
{
	///<summary><para>Processing</para>
	///<para>Value = 192350000</para></summary>
	[Description("Processing")]
	Processing = 192350000, 
	///<summary><para>Failed</para>
	///<para>Value = 192350001</para></summary>
	[Description("Failed")]
	Failed = 192350001
}
public enum eCostPerformance
{
	///<summary><para>On Budget</para>
	///<para>Value = 192350000</para></summary>
	[Description("On Budget")]
	OnBudget = 192350000, 
	///<summary><para>Over Budget</para>
	///<para>Value = 192350001</para></summary>
	[Description("Over Budget")]
	OverBudget = 192350001, 
	///<summary><para>Under Budget</para>
	///<para>Value = 192350002</para></summary>
	[Description("Under Budget")]
	UnderBudget = 192350002
}
public enum eOverallProjectStatus
{
	///<summary><para>Green</para>
	///<para>Value = 1</para></summary>
	[Description("Green")]
	Green = 1, 
	///<summary><para>Yellow</para>
	///<para>Value = 2</para></summary>
	[Description("Yellow")]
	Yellow = 2, 
	///<summary><para>Red</para>
	///<para>Value = 3</para></summary>
	[Description("Red")]
	Red = 3
}
public enum eStatus
{
	///<summary><para>Active</para>
	///<para>Value = 0</para></summary>
	[Description("Active")]
	Active = 0, 
	///<summary><para>Inactive</para>
	///<para>Value = 1</para></summary>
	[Description("Inactive")]
	Inactive = 1
}
public enum eSchedulePerformance
{
	///<summary><para>On Time</para>
	///<para>Value = 192350000</para></summary>
	[Description("On Time")]
	OnTime = 192350000, 
	///<summary><para>Ahead</para>
	///<para>Value = 192350001</para></summary>
	[Description("Ahead")]
	Ahead = 192350001, 
	///<summary><para>Behind</para>
	///<para>Value = 192350002</para></summary>
	[Description("Behind")]
	Behind = 192350002
}
public enum eStatusReason
{
	///<summary><para>Active</para>
	///<para>Value = 1</para></summary>
	[Description("Active")]
	Active_Active = 1, 
	///<summary><para>Inactive</para>
	///<para>Value = 2</para></summary>
	[Description("Inactive")]
	Inactive_Inactive = 2
}
public void SetState(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>owneridtype</para>
	/// <para>owneridtype</para></summary>
	public const string OwnerIdType = "owneridtype";
	/// <summary><para>msdyn_projectmanageryominame</para>
	/// <para>msdyn_projectmanageryominame</para></summary>
	public const string Msdyn_projectmanagerYomiName = "msdyn_projectmanageryominame";
	/// <summary><para>msdyn_projectteamidname</para>
	/// <para>msdyn_projectteamidname</para></summary>
	public const string Msdyn_projectteamidName = "msdyn_projectteamidname";
	/// <summary><para>msdyn_projectmanagername</para>
	/// <para>msdyn_projectmanagername</para></summary>
	public const string Msdyn_projectmanagerName = "msdyn_projectmanagername";
	/// <summary><para>owneridname</para>
	/// <para>owneridname</para></summary>
	public const string OwnerIdName = "owneridname";
	/// <summary><para>msdyn_contractorganizationalunitidname</para>
	/// <para>msdyn_contractorganizationalunitidname</para></summary>
	public const string Msdyn_ContractOrganizationalUnitIdName = "msdyn_contractorganizationalunitidname";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>msdyn_customeryominame</para>
	/// <para>msdyn_customeryominame</para></summary>
	public const string Msdyn_customerYomiName = "msdyn_customeryominame";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>owneridyominame</para>
	/// <para>owneridyominame</para></summary>
	public const string OwnerIdYomiName = "owneridyominame";
	/// <summary><para>msdyn_projecttemplatename</para>
	/// <para>msdyn_projecttemplatename</para></summary>
	public const string Msdyn_ProjectTemplateName = "msdyn_projecttemplatename";
	/// <summary><para>msdyn_workhourtemplatename</para>
	/// <para>msdyn_workhourtemplatename</para></summary>
	public const string Msdyn_workhourtemplateName = "msdyn_workhourtemplatename";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>transactioncurrencyidname</para>
	/// <para>transactioncurrencyidname</para></summary>
	public const string TransactionCurrencyIdName = "transactioncurrencyidname";
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>msdyn_projectteamidyominame</para>
	/// <para>msdyn_projectteamidyominame</para></summary>
	public const string Msdyn_projectteamidYomiName = "msdyn_projectteamidyominame";
	/// <summary><para>msdyn_salesorderidname</para>
	/// <para>msdyn_salesorderidname</para></summary>
	public const string Msdyn_salesorderidName = "msdyn_salesorderidname";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>msdyn_customername</para>
	/// <para>msdyn_customername</para></summary>
	public const string Msdyn_customerName = "msdyn_customername";
	/// <summary><para>Actual Cost</para>
	/// <para>msdyn_totalactualcost</para></summary>
	public const string ActualCost = "msdyn_totalactualcost";
	/// <summary><para>Actual Duration</para>
	/// <para>msdyn_actualdurationminutes</para></summary>
	public const string ActualDuration = "msdyn_actualdurationminutes";
	/// <summary><para>Actual End</para>
	/// <para>msdyn_actualend</para></summary>
	public const string ActualEnd = "msdyn_actualend";
	/// <summary><para>Actual Hours</para>
	/// <para>msdyn_actualhours</para></summary>
	public const string ActualHours = "msdyn_actualhours";
	/// <summary><para>Actual Sales</para>
	/// <para>msdyn_actualsales</para></summary>
	public const string ActualSales = "msdyn_actualsales";
	/// <summary><para>Actual Sales (Base)</para>
	/// <para>msdyn_actualsales_base</para></summary>
	public const string ActualSales_Base = "msdyn_actualsales_base";
	/// <summary><para>Actual Start</para>
	/// <para>msdyn_actualstart</para></summary>
	public const string ActualStart = "msdyn_actualstart";
	/// <summary><para>Bulk Generation Status</para>
	/// <para>msdyn_bulkgenerationstatus</para></summary>
	public const string BulkGenerationStatus = "msdyn_bulkgenerationstatus";
	/// <summary><para>Calendar Id</para>
	/// <para>msdyn_calendarid</para></summary>
	public const string CalendarId = "msdyn_calendarid";
	/// <summary><para>Comments</para>
	/// <para>msdyn_comments</para></summary>
	public const string Comments = "msdyn_comments";
	/// <summary><para>Contract</para>
	/// <para>msdyn_salesorderid</para></summary>
	public const string Contract = "msdyn_salesorderid";
	/// <summary><para>Contracting Unit</para>
	/// <para>msdyn_contractorganizationalunitid</para></summary>
	public const string ContractingUnit = "msdyn_contractorganizationalunitid";
	/// <summary><para>Cost Consumption %</para>
	/// <para>msdyn_costconsumption</para></summary>
	public const string CostConsumption = "msdyn_costconsumption";
	/// <summary><para>Cost estimate at completion (EAC)</para>
	/// <para>msdyn_costestimateatcomplete</para></summary>
	public const string CostEstimateAtCompletion_EAC = "msdyn_costestimateatcomplete";
	/// <summary><para>Cost estimate at completion (EAC)(Base)</para>
	/// <para>msdyn_costestimateatcomplete_base</para></summary>
	public const string CostEstimateAtCompletion_EAC_Base = "msdyn_costestimateatcomplete_base";
	/// <summary><para>Cost Performance</para>
	/// <para>msdyn_costperformence</para></summary>
	public const string CostPerformance = "msdyn_costperformence";
	/// <summary><para>Cost Variance</para>
	/// <para>msdyn_costvariance</para></summary>
	public const string CostVariance = "msdyn_costvariance";
	/// <summary><para>Cost Variance (Base)</para>
	/// <para>msdyn_costvariance_base</para></summary>
	public const string CostVariance_Base = "msdyn_costvariance_base";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Currency</para>
	/// <para>transactioncurrencyid</para></summary>
	public const string Currency = "transactioncurrencyid";
	/// <summary><para>Customer</para>
	/// <para>msdyn_customer</para></summary>
	public const string Customer = "msdyn_customer";
	/// <summary><para>Description</para>
	/// <para>msdyn_description</para></summary>
	public const string Description = "msdyn_description";
	/// <summary><para>Disable create of team member for project manager</para>
	/// <para>msdyn_disablecreateofteammemberformanager</para></summary>
	public const string DisableCreateOfTeamMemberForProjectManager = "msdyn_disablecreateofteammemberformanager";
	/// <summary><para>Duration</para>
	/// <para>msdyn_wbsduration</para></summary>
	public const string Duration = "msdyn_wbsduration";
	/// <summary><para>Effort estimate at complete (EAC)</para>
	/// <para>msdyn_effortestimateatcompleteeac</para></summary>
	public const string EffortEstimateAtComplete_EAC = "msdyn_effortestimateatcompleteeac";
	/// <summary><para>Estimated Cost</para>
	/// <para>msdyn_totalplannedcost</para></summary>
	public const string EstimatedCost = "msdyn_totalplannedcost";
	/// <summary><para>Estimated Finish Date</para>
	/// <para>msdyn_scheduledend</para></summary>
	public const string EstimatedFinishDate = "msdyn_scheduledend";
	/// <summary><para>Estimated Hours</para>
	/// <para>msdyn_plannedhours</para></summary>
	public const string EstimatedHours = "msdyn_plannedhours";
	/// <summary><para>Exchange Rate</para>
	/// <para>msdyn_exchangerate</para></summary>
	public const string ExchangeRate = "msdyn_exchangerate";
	/// <summary><para>Exchange Rate</para>
	/// <para>exchangerate</para></summary>
	public const string ExchangeRate2 = "exchangerate";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string ImportSequenceNumber = "importsequencenumber";
	/// <summary><para>Is Linked To MS Project Client</para>
	/// <para>msdyn_islinkedtomsprojectclient</para></summary>
	public const string IsLinkedToMSProjectClient = "msdyn_islinkedtomsprojectclient";
	/// <summary><para>Is Template</para>
	/// <para>msdyn_istemplate</para></summary>
	public const string IsTemplate = "msdyn_istemplate";
	/// <summary><para>Linked Document URL</para>
	/// <para>msdyn_linkeddocumenturl</para></summary>
	public const string LinkedDocumentURL = "msdyn_linkeddocumenturl";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>Name</para>
	/// <para>msdyn_subject</para></summary>
	public const string Name = "msdyn_subject";
	/// <summary><para>Overall Project Status</para>
	/// <para>msdyn_overallprojectstatus</para></summary>
	public const string OverallProjectStatus = "msdyn_overallprojectstatus";
	/// <summary><para>Owner</para>
	/// <para>ownerid</para></summary>
	public const string Owner = "ownerid";
	/// <summary><para>Owning Business Unit</para>
	/// <para>owningbusinessunit</para></summary>
	public const string OwningBusinessUnit = "owningbusinessunit";
	/// <summary><para>Owning Team</para>
	/// <para>owningteam</para></summary>
	public const string OwningTeam = "owningteam";
	/// <summary><para>Owning User</para>
	/// <para>owninguser</para></summary>
	public const string OwningUser = "owninguser";
	/// <summary><para>Planned Sales</para>
	/// <para>msdyn_plannedsales</para></summary>
	public const string PlannedSales = "msdyn_plannedsales";
	/// <summary><para>Planned Sales (Base)</para>
	/// <para>msdyn_plannedsales_base</para></summary>
	public const string PlannedSales_Base = "msdyn_plannedsales_base";
	/// <summary><para>Process Id</para>
	/// <para>processid</para></summary>
	public const string ProcessId = "processid";
	/// <summary><para>Progress %</para>
	/// <para>msdyn_progress</para></summary>
	public const string Progress = "msdyn_progress";
	/// <summary><para>Project</para>
	/// <para>msdyn_projectid</para></summary>
	public const string ProjectId = "msdyn_projectid";
	/// <summary><para>Project Manager</para>
	/// <para>msdyn_projectmanager</para></summary>
	public const string ProjectManager = "msdyn_projectmanager";
	/// <summary><para>Project resource requirements visible to resources</para>
	/// <para>msdyn_projectresourcerequirementsvisibletore</para></summary>
	public const string ProjectResourceRequirementsVisibleToResources = "msdyn_projectresourcerequirementsvisibletore";
	/// <summary><para>Project Status</para>
	/// <para>statecode</para></summary>
	public const string ProjectStatus = "statecode";
	/// <summary><para>Project Team</para>
	/// <para>msdyn_projectteamid</para></summary>
	public const string ProjectTeam = "msdyn_projectteamid";
	/// <summary><para>Project Template</para>
	/// <para>msdyn_projecttemplate</para></summary>
	public const string ProjectTemplate = "msdyn_projecttemplate";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string RecordCreatedOn = "overriddencreatedon";
	/// <summary><para>Remaining Cost</para>
	/// <para>msdyn_remainingcost</para></summary>
	public const string RemainingCost = "msdyn_remainingcost";
	/// <summary><para>Remaining Cost (Base)</para>
	/// <para>msdyn_remainingcost_base</para></summary>
	public const string RemainingCost_Base = "msdyn_remainingcost_base";
	/// <summary><para>Remaining Hours</para>
	/// <para>msdyn_remaininghours</para></summary>
	public const string RemainingHours = "msdyn_remaininghours";
	/// <summary><para>Remaining Sales</para>
	/// <para>msdyn_remainingsales</para></summary>
	public const string RemainingSales = "msdyn_remainingsales";
	/// <summary><para>Remaining Sales (Base)</para>
	/// <para>msdyn_remainingsales_base</para></summary>
	public const string RemainingSales_Base = "msdyn_remainingsales_base";
	/// <summary><para>Sales Consumption %</para>
	/// <para>msdyn_salesconsumption</para></summary>
	public const string SalesConsumption = "msdyn_salesconsumption";
	/// <summary><para>Sales Estimate At Complete (EAC)</para>
	/// <para>msdyn_salesestimateatcompleteeac</para></summary>
	public const string SalesEstimateAtComplete_EAC = "msdyn_salesestimateatcompleteeac";
	/// <summary><para>Sales Estimate At Complete (EAC) (Base)</para>
	/// <para>msdyn_salesestimateatcompleteeac_base</para></summary>
	public const string SalesEstimateAtComplete_EAC_Base = "msdyn_salesestimateatcompleteeac_base";
	/// <summary><para>Sales Variance</para>
	/// <para>msdyn_salesvariance</para></summary>
	public const string SalesVariance = "msdyn_salesvariance";
	/// <summary><para>Sales Variance (Base)</para>
	/// <para>msdyn_salesvariance_base</para></summary>
	public const string SalesVariance_Base = "msdyn_salesvariance_base";
	/// <summary><para>Schedule Performance</para>
	/// <para>msdyn_scheduleperformance</para></summary>
	public const string SchedulePerformance = "msdyn_scheduleperformance";
	/// <summary><para>Schedule Variance</para>
	/// <para>msdyn_schedulevariance</para></summary>
	public const string ScheduleVariance = "msdyn_schedulevariance";
	/// <summary><para>Scheduled Duration</para>
	/// <para>msdyn_scheduleddurationminutes</para></summary>
	public const string ScheduledDuration = "msdyn_scheduleddurationminutes";
	/// <summary><para>Stage Id</para>
	/// <para>stageid</para></summary>
	public const string StageId = "stageid";
	/// <summary><para>Stage Name</para>
	/// <para>msdyn_stagename</para></summary>
	public const string StageName = "msdyn_stagename";
	/// <summary><para>Start Date</para>
	/// <para>msdyn_scheduledstart</para></summary>
	public const string StartDate = "msdyn_scheduledstart";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string StatusReason = "statuscode";
	/// <summary><para>Status Updated On</para>
	/// <para>msdyn_statusupdatedon</para></summary>
	public const string StatusUpdatedOn = "msdyn_statusupdatedon";
	/// <summary><para>Team Size</para>
	/// <para>msdyn_teamsize</para></summary>
	public const string TeamSize = "msdyn_teamsize";
	/// <summary><para>Team Size (Last Updated On)</para>
	/// <para>msdyn_teamsize_date</para></summary>
	public const string TeamSize_LastUpdatedOn = "msdyn_teamsize_date";
	/// <summary><para>Team Size (State)</para>
	/// <para>msdyn_teamsize_state</para></summary>
	public const string TeamSize_State = "msdyn_teamsize_state";
	/// <summary><para>Time Zone Rule Version Number</para>
	/// <para>timezoneruleversionnumber</para></summary>
	public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
	/// <summary><para>Total Actual Cost (Base)</para>
	/// <para>msdyn_totalactualcost_base</para></summary>
	public const string TotalActualCost_Base = "msdyn_totalactualcost_base";
	/// <summary><para>Total Planned Cost (Base)</para>
	/// <para>msdyn_totalplannedcost_base</para></summary>
	public const string TotalPlannedCost_Base = "msdyn_totalplannedcost_base";
	/// <summary><para>Traversed Path</para>
	/// <para>traversedpath</para></summary>
	public const string TraversedPath = "traversedpath";
	/// <summary><para>UTC Conversion Time Zone Code</para>
	/// <para>utcconversiontimezonecode</para></summary>
	public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
	/// <summary><para>Work hour template</para>
	/// <para>msdyn_workhourtemplate</para></summary>
	public const string WorkHourTemplate = "msdyn_workhourtemplate";
}

    }
}

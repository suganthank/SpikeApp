// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("msdyn_quotebookingsetup")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class QuoteBookingSetup : BaseProxyClass
    {
        public new const string LogicalName = "msdyn_quotebookingsetup";
        public const int ObjectTypeCode = 10154;
        public const string PrimaryIdAttribute = "msdyn_quotebookingsetupid";
        public const string PrimaryNameAttribute = "msdyn_name";
        
        static QuoteBookingSetup()
        {
            BaseProxyClass.RegisterProxyType(typeof(QuoteBookingSetup), "msdyn_quotebookingsetup");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public QuoteBookingSetup() : base(new Entity("msdyn_quotebookingsetup")) { }
        public QuoteBookingSetup(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<QuoteBookingSetup>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: msdyn_priorityname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_priorityname")]
public string Msdyn_priorityName
{
	get { return this.GetPropertyValue<string>("msdyn_priorityname"); }
}
///<summary>
///<para>Logical Name: msdyn_quotename</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_quotename")]
public string Msdyn_quoteName
{
	get { return this.GetPropertyValue<string>("msdyn_quotename"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: owneridtype</para>
///</summary>
[AttributeLogicalNameAttribute("owneridtype")]
public string OwnerIdType
{
	get { return this.GetPropertyValue<string>("owneridtype"); }
	set { this.SetPropertyValue<string>("owneridtype", value, "OwnerIdType"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: owneridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridname")]
public string OwnerIdName
{
	get { return this.GetPropertyValue<string>("owneridname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_preferredresourcename</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_preferredresourcename")]
public string Msdyn_preferredresourceName
{
	get { return this.GetPropertyValue<string>("msdyn_preferredresourcename"); }
}
///<summary>
///<para>Logical Name: msdyn_workordertypename</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workordertypename")]
public string Msdyn_workordertypeName
{
	get { return this.GetPropertyValue<string>("msdyn_workordertypename"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: owneridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridyominame")]
public string OwnerIdYomiName
{
	get { return this.GetPropertyValue<string>("owneridyominame"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyidname")]
public string TransactionCurrencyIdName
{
	get { return this.GetPropertyValue<string>("transactioncurrencyidname"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_autogeneratebooking</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_autogeneratebooking")]
public bool? AutoGenerateBooking
{
	get { return this.GetPropertyValue<bool?>("msdyn_autogeneratebooking"); }
	set { this.SetPropertyValue<bool?>("msdyn_autogeneratebooking", value, "AutoGenerateBooking"); }
}
///<summary>
///<para>Logical Name: msdyn_autogenerateworkorder</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_autogenerateworkorder")]
public bool? AutoGenerateWorkOrder
{
	get { return this.GetPropertyValue<bool?>("msdyn_autogenerateworkorder"); }
	set { this.SetPropertyValue<bool?>("msdyn_autogenerateworkorder", value, "AutoGenerateWorkOrder"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyid</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyid")]
public EntityReference Currency
{
	get { return this.GetPropertyValue<EntityReference>("transactioncurrencyid"); }
	set { this.SetPropertyValue<EntityReference>("transactioncurrencyid", value, "Currency"); }
}
///<summary>
///<para>Logical Name: msdyn_description</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_description")]
public string Description
{
	get { return this.GetPropertyValue<string>("msdyn_description"); }
	set { this.SetPropertyValue("msdyn_description", value, 200, "Description"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatedcost</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? EstimatedCost
{
	get
	{
		if (EstimatedCostMoney != null) { return EstimatedCostMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.EstimatedCostMoney = new Money(value.Value); }
		else this.EstimatedCostMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimatedcost</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatedcost")]
public Money EstimatedCostMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimatedcost"); }
	set { this.SetPropertyValue("msdyn_estimatedcost", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "EstimatedCostMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatedcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? EstimatedCost_Base
{
	get
	{
		if (EstimatedCost_BaseMoney != null) { return EstimatedCost_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimatedcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatedcost_base")]
public Money EstimatedCost_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimatedcost_base"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatedduration</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatedduration")]
public int? EstimatedDuration
{
	get { return this.GetPropertyValue<int?>("msdyn_estimatedduration"); }
	set { this.SetPropertyValue("msdyn_estimatedduration", (int?)value, (int)0, (int)2147483647, "EstimatedDuration"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatedrevenue</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? EstimatedRevenue
{
	get
	{
		if (EstimatedRevenueMoney != null) { return EstimatedRevenueMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.EstimatedRevenueMoney = new Money(value.Value); }
		else this.EstimatedRevenueMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimatedrevenue</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatedrevenue")]
public Money EstimatedRevenueMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimatedrevenue"); }
	set { this.SetPropertyValue("msdyn_estimatedrevenue", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "EstimatedRevenueMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatedrevenue_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? EstimatedRevenue_Base
{
	get
	{
		if (EstimatedRevenue_BaseMoney != null) { return EstimatedRevenue_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimatedrevenue_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatedrevenue_base")]
public Money EstimatedRevenue_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimatedrevenue_base"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatedmargin</para>
///<para>Minimum Value: -100000000000</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatedmargin")]
public decimal? EstimatedMargin
{
	get { return this.GetPropertyValue<decimal?>("msdyn_estimatedmargin"); }
	set { this.SetPropertyValue("msdyn_estimatedmargin", (decimal?)value, (decimal)-100000000000, (decimal)100000000000, "EstimatedMargin"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatedmarginperwo</para>
///<para>Minimum Value: -100000000000</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatedmarginperwo")]
public decimal? EstimatedMarginPerWO
{
	get { return this.GetPropertyValue<decimal?>("msdyn_estimatedmarginperwo"); }
	set { this.SetPropertyValue("msdyn_estimatedmarginperwo", (decimal?)value, (decimal)-100000000000, (decimal)100000000000, "EstimatedMarginPerWO"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatedproductcost</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? EstimatedProductCost
{
	get
	{
		if (EstimatedProductCostMoney != null) { return EstimatedProductCostMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.EstimatedProductCostMoney = new Money(value.Value); }
		else this.EstimatedProductCostMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimatedproductcost</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatedproductcost")]
public Money EstimatedProductCostMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimatedproductcost"); }
	set { this.SetPropertyValue("msdyn_estimatedproductcost", (Money)value, (decimal)0, (decimal)922337203685477, "EstimatedProductCostMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatedproductcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? EstimatedProductCost_Base
{
	get
	{
		if (EstimatedProductCost_BaseMoney != null) { return EstimatedProductCost_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimatedproductcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatedproductcost_base")]
public Money EstimatedProductCost_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimatedproductcost_base"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatedproductrevenue</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? EstimatedProductRevenue
{
	get
	{
		if (EstimatedProductRevenueMoney != null) { return EstimatedProductRevenueMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.EstimatedProductRevenueMoney = new Money(value.Value); }
		else this.EstimatedProductRevenueMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimatedproductrevenue</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatedproductrevenue")]
public Money EstimatedProductRevenueMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimatedproductrevenue"); }
	set { this.SetPropertyValue("msdyn_estimatedproductrevenue", (Money)value, (decimal)0, (decimal)922337203685477, "EstimatedProductRevenueMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatedproductrevenue_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? EstimatedProductRevenue_Base
{
	get
	{
		if (EstimatedProductRevenue_BaseMoney != null) { return EstimatedProductRevenue_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimatedproductrevenue_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatedproductrevenue_base")]
public Money EstimatedProductRevenue_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimatedproductrevenue_base"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatedrevenueperwo</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? EstimatedRevenuePerWO
{
	get
	{
		if (EstimatedRevenuePerWOMoney != null) { return EstimatedRevenuePerWOMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.EstimatedRevenuePerWOMoney = new Money(value.Value); }
		else this.EstimatedRevenuePerWOMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimatedrevenueperwo</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatedrevenueperwo")]
public Money EstimatedRevenuePerWOMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimatedrevenueperwo"); }
	set { this.SetPropertyValue("msdyn_estimatedrevenueperwo", (Money)value, (decimal)0, (decimal)922337203685477, "EstimatedRevenuePerWOMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatedrevenueperwo_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? EstimatedRevenuePerWO_Base
{
	get
	{
		if (EstimatedRevenuePerWO_BaseMoney != null) { return EstimatedRevenuePerWO_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimatedrevenueperwo_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatedrevenueperwo_base")]
public Money EstimatedRevenuePerWO_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimatedrevenueperwo_base"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatedservicecost</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? EstimatedServiceCost
{
	get
	{
		if (EstimatedServiceCostMoney != null) { return EstimatedServiceCostMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.EstimatedServiceCostMoney = new Money(value.Value); }
		else this.EstimatedServiceCostMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimatedservicecost</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatedservicecost")]
public Money EstimatedServiceCostMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimatedservicecost"); }
	set { this.SetPropertyValue("msdyn_estimatedservicecost", (Money)value, (decimal)0, (decimal)922337203685477, "EstimatedServiceCostMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatedservicecost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? EstimatedServiceCost_Base
{
	get
	{
		if (EstimatedServiceCost_BaseMoney != null) { return EstimatedServiceCost_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimatedservicecost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatedservicecost_base")]
public Money EstimatedServiceCost_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimatedservicecost_base"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatedservicerevenue</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? EstimatedServiceRevenue
{
	get
	{
		if (EstimatedServiceRevenueMoney != null) { return EstimatedServiceRevenueMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.EstimatedServiceRevenueMoney = new Money(value.Value); }
		else this.EstimatedServiceRevenueMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimatedservicerevenue</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatedservicerevenue")]
public Money EstimatedServiceRevenueMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimatedservicerevenue"); }
	set { this.SetPropertyValue("msdyn_estimatedservicerevenue", (Money)value, (decimal)0, (decimal)922337203685477, "EstimatedServiceRevenueMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatedservicerevenue_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? EstimatedServiceRevenue_Base
{
	get
	{
		if (EstimatedServiceRevenue_BaseMoney != null) { return EstimatedServiceRevenue_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimatedservicerevenue_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatedservicerevenue_base")]
public Money EstimatedServiceRevenue_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimatedservicerevenue_base"); }
}
///<summary>
///<para>Logical Name: exchangerate</para>
///<para>Minimum Value: 0.0000000001</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 10</para>
///</summary>
[AttributeLogicalNameAttribute("exchangerate")]
public decimal? ExchangeRate
{
	get { return this.GetPropertyValue<decimal?>("exchangerate"); }
}
///<summary>
///<para>Logical Name: msdyn_generateworkorderdaysinadvance</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_generateworkorderdaysinadvance")]
public int? GenerateWorkOrderDaysInAdvance
{
	get { return this.GetPropertyValue<int?>("msdyn_generateworkorderdaysinadvance"); }
	set { this.SetPropertyValue("msdyn_generateworkorderdaysinadvance", (int?)value, (int)0, (int)2147483647, "GenerateWorkOrderDaysInAdvance"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? ImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "ImportSequenceNumber"); }
}
///<summary>
///<para>Logical Name: msdyn_Internalflags</para>
///<para>Max Length: 1048576 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_Internalflags")]
public string InternalFlags
{
	get { return this.GetPropertyValue<string>("msdyn_Internalflags"); }
	set { this.SetPropertyValue("msdyn_Internalflags", value, 1048576, "InternalFlags"); }
}
///<summary>
///<para>Logical Name: msdyn_margin</para>
///<para>Minimum Value: -100000000000</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_margin")]
public decimal? Margin
{
	get { return this.GetPropertyValue<decimal?>("msdyn_margin"); }
	set { this.SetPropertyValue("msdyn_margin", (decimal?)value, (decimal)-100000000000, (decimal)100000000000, "Margin"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: msdyn_name</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_name")]
public string Name
{
	get { return this.GetPropertyValue<string>("msdyn_name"); }
	set { this.SetPropertyValue("msdyn_name", value, 100, "Name"); }
}
///<summary>
///<para>Logical Name: msdyn_numberofwo</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_numberofwo")]
public int? NumberOfWO
{
	get { return this.GetPropertyValue<int?>("msdyn_numberofwo"); }
	set { this.SetPropertyValue("msdyn_numberofwo", (int?)value, (int)0, (int)2147483647, "NumberOfWO"); }
}
///<summary>
///<para>Logical Name: ownerid</para>
///</summary>
[AttributeLogicalNameAttribute("ownerid")]
public EntityReference Owner
{
	get { return this.GetPropertyValue<EntityReference>("ownerid"); }
	set { this.SetPropertyValue<EntityReference>("ownerid", value, "Owner"); }
}
///<summary>
///<para>Logical Name: owningbusinessunit</para>
///</summary>
[AttributeLogicalNameAttribute("owningbusinessunit")]
public EntityReference OwningBusinessUnit
{
	get { return this.GetPropertyValue<EntityReference>("owningbusinessunit"); }
}
///<summary>
///<para>Logical Name: owningteam</para>
///</summary>
[AttributeLogicalNameAttribute("owningteam")]
public EntityReference OwningTeam
{
	get { return this.GetPropertyValue<EntityReference>("owningteam"); }
}
///<summary>
///<para>Logical Name: owninguser</para>
///</summary>
[AttributeLogicalNameAttribute("owninguser")]
public EntityReference OwningUser
{
	get { return this.GetPropertyValue<EntityReference>("owninguser"); }
}
///<summary>
///<para>Logical Name: msdyn_postbookingflexibility</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_postbookingflexibility")]
public int? PostBookingFlexibility
{
	get { return this.GetPropertyValue<int?>("msdyn_postbookingflexibility"); }
	set { this.SetPropertyValue("msdyn_postbookingflexibility", (int?)value, (int)0, (int)2147483647, "PostBookingFlexibility"); }
}
///<summary>
///<para>Logical Name: msdyn_postponegenerationuntil</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_postponegenerationuntil")]
public DateTime? PostponeGenerationUntil
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_postponegenerationuntil"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_postponegenerationuntil", value, "PostponeGenerationUntil"); }
}
///<summary>
///<para>Logical Name: msdyn_prebookingflexibility</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_prebookingflexibility")]
public int? PreBookingFlexibility
{
	get { return this.GetPropertyValue<int?>("msdyn_prebookingflexibility"); }
	set { this.SetPropertyValue("msdyn_prebookingflexibility", (int?)value, (int)0, (int)2147483647, "PreBookingFlexibility"); }
}
///<summary>
///<para>Logical Name: msdyn_preferredresource</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_preferredresource")]
public EntityReference PreferredResource
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_preferredresource"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_preferredresource", value, "PreferredResource"); }
}
///<summary>
///<para>Logical Name: msdyn_preferredstarttime</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_preferredstarttime")]
public DateTime? PreferredStartTime
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_preferredstarttime"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_preferredstarttime", value, "PreferredStartTime"); }
}
///<summary>
///<para>Logical Name: msdyn_priority</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_priority")]
public EntityReference Priority
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_priority"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_priority", value, "Priority"); }
}
///<summary>
///<para>Logical Name: processid</para>
///</summary>
[AttributeLogicalNameAttribute("processid")]
public Guid ProcessId
{
	get { return this.GetPropertyValue<Guid>("processid"); }
	set { this.SetPropertyValue<Guid>("processid", value, "ProcessId"); }
}
///<summary>
///<para>Logical Name: msdyn_quote</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_quote")]
public EntityReference Quote
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_quote"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_quote", value, "Quote"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: msdyn_quotebookingsetupid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_quotebookingsetupid")]
public Guid QuoteBookingSetupId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: msdyn_quotedetailid</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_quotedetailid")]
public string QuoteDetailId
{
	get { return this.GetPropertyValue<string>("msdyn_quotedetailid"); }
	set { this.SetPropertyValue("msdyn_quotedetailid", value, 100, "QuoteDetailId"); }
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? RecordCreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "RecordCreatedOn"); }
}
///<summary>
///<para>Logical Name: msdyn_recurrencesettings</para>
///<para>Max Length: 1048576 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_recurrencesettings")]
public string RecurrenceSettings
{
	get { return this.GetPropertyValue<string>("msdyn_recurrencesettings"); }
	set { this.SetPropertyValue("msdyn_recurrencesettings", value, 1048576, "RecurrenceSettings"); }
}
///<summary>
///<para>Logical Name: msdyn_revision</para>
///<para>Minimum Value: 1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_revision")]
public int? Revision
{
	get { return this.GetPropertyValue<int?>("msdyn_revision"); }
	set { this.SetPropertyValue("msdyn_revision", (int?)value, (int)1, (int)2147483647, "Revision"); }
}
///<summary>
///<para>Logical Name: stageid</para>
///</summary>
[AttributeLogicalNameAttribute("stageid")]
public Guid StageId
{
	get { return this.GetPropertyValue<Guid>("stageid"); }
	set { this.SetPropertyValue<Guid>("stageid", value, "StageId"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eStatus? Status
{
	get
	{
		if (Status_OptionSetValue != null) { return (eStatus)Status_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Status_OptionSetValue = new OptionSetValue((int)value); }
		else this.Status_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue Status_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
	set { this.SetPropertyValue<OptionSetValue>("statecode", value, "Status_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Status_Text(IOrganizationService Service)
{
	return this.Status_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Status_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Status_OptionSetValue.Value);
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? StatusReason
{
	get
	{
		if (StatusReason_OptionSetValue != null) { return (eStatusReason)StatusReason_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StatusReason_OptionSetValue = new OptionSetValue((int)value); }
		else this.StatusReason_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue StatusReason_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "StatusReason_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string StatusReason_Text(IOrganizationService Service)
{
	return this.StatusReason_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string StatusReason_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.StatusReason_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_timewindowend</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_timewindowend")]
public DateTime? TimeWindowEnd
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_timewindowend"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_timewindowend", value, "TimeWindowEnd"); }
}
///<summary>
///<para>Logical Name: msdyn_timewindowstart</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_timewindowstart")]
public DateTime? TimeWindowStart
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_timewindowstart"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_timewindowstart", value, "TimeWindowStart"); }
}
///<summary>
///<para>Logical Name: timezoneruleversionnumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("timezoneruleversionnumber")]
public int? TimeZoneRuleVersionNumber
{
	get { return this.GetPropertyValue<int?>("timezoneruleversionnumber"); }
	set { this.SetPropertyValue("timezoneruleversionnumber", (int?)value, (int)-1, (int)2147483647, "TimeZoneRuleVersionNumber"); }
}
///<summary>
///<para>Logical Name: traversedpath</para>
///<para>Max Length: 1250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("traversedpath")]
public string TraversedPath
{
	get { return this.GetPropertyValue<string>("traversedpath"); }
	set { this.SetPropertyValue("traversedpath", value, 1250, "TraversedPath"); }
}
///<summary>
///<para>Logical Name: utcconversiontimezonecode</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utcconversiontimezonecode")]
public int? UTCConversionTimeZoneCode
{
	get { return this.GetPropertyValue<int?>("utcconversiontimezonecode"); }
	set { this.SetPropertyValue("utcconversiontimezonecode", (int?)value, (int)-1, (int)2147483647, "UTCConversionTimeZoneCode"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}
///<summary>
///<para>Logical Name: msdyn_workordersummary</para>
///<para>Max Length: 8000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workordersummary")]
public string WorkOrderSummary
{
	get { return this.GetPropertyValue<string>("msdyn_workordersummary"); }
	set { this.SetPropertyValue("msdyn_workordersummary", value, 8000, "WorkOrderSummary"); }
}
///<summary>
///<para>Logical Name: msdyn_workordertype</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workordertype")]
public EntityReference WorkOrderType
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_workordertype"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_workordertype", value, "WorkOrderType"); }
}


        /// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: msdyn_quotebookingsetup_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: msdyn_quotebookingsetup_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: msdyn_quotebookingsetup_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: msdyn_quotebookingsetup_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: msdyn_quotebookingsetup_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: msdyn_quotebookingsetup_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: msdyn_quotebookingsetup_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: msdyn_quotebookingsetup_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: msdyn_quotebookingsetup_MailboxTrackingFolders</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: msdyn_quotebookingsetup_MailboxTrackingFolders</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>QuoteBookingIncident (Quote Booking Setup)</b></para>
/// <para>Schema Name: msdyn_msdyn_quotebookingsetup_msdyn_quotebookingincident_QuoteBookingSetup</para>
/// </summary>
public List<QuoteBookingIncident> GetQuoteBookingIncidents_QuoteBookingSetup (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingIncident>(Service, this.Id, "msdyn_quotebookingincident", "msdyn_quotebookingsetup", Columns); }
/// <summary>
/// <para><b>QuoteBookingIncident (Quote Booking Setup)</b></para>
/// <para>Schema Name: msdyn_msdyn_quotebookingsetup_msdyn_quotebookingincident_QuoteBookingSetup</para>
/// </summary>
public List<QuoteBookingIncident> GetQuoteBookingIncidents_QuoteBookingSetup (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingIncident>(Service, this.Id, "msdyn_quotebookingincident", "msdyn_quotebookingsetup", Columns); }
/// <summary>
/// <para><b>QuoteBookingProduct (Quote Booking Setup)</b></para>
/// <para>Schema Name: msdyn_msdyn_quotebookingsetup_msdyn_quotebookingproduct_QuoteBookingSetup</para>
/// </summary>
public List<QuoteBookingProduct> GetQuoteBookingProducts_QuoteBookingSetup (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingProduct>(Service, this.Id, "msdyn_quotebookingproduct", "msdyn_quotebookingsetup", Columns); }
/// <summary>
/// <para><b>QuoteBookingProduct (Quote Booking Setup)</b></para>
/// <para>Schema Name: msdyn_msdyn_quotebookingsetup_msdyn_quotebookingproduct_QuoteBookingSetup</para>
/// </summary>
public List<QuoteBookingProduct> GetQuoteBookingProducts_QuoteBookingSetup (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingProduct>(Service, this.Id, "msdyn_quotebookingproduct", "msdyn_quotebookingsetup", Columns); }
/// <summary>
/// <para><b>QuoteBookingService (Quote Booking Setup)</b></para>
/// <para>Schema Name: msdyn_msdyn_quotebookingsetup_msdyn_quotebookingservice_QuoteBookingSetup</para>
/// </summary>
public List<QuoteBookingService> GetQuoteBookingServices_QuoteBookingSetup (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingService>(Service, this.Id, "msdyn_quotebookingservice", "msdyn_quotebookingsetup", Columns); }
/// <summary>
/// <para><b>QuoteBookingService (Quote Booking Setup)</b></para>
/// <para>Schema Name: msdyn_msdyn_quotebookingsetup_msdyn_quotebookingservice_QuoteBookingSetup</para>
/// </summary>
public List<QuoteBookingService> GetQuoteBookingServices_QuoteBookingSetup (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingService>(Service, this.Id, "msdyn_quotebookingservice", "msdyn_quotebookingsetup", Columns); }
/// <summary>
/// <para><b>QuoteBookingServiceTask (Quote Booking Setup)</b></para>
/// <para>Schema Name: msdyn_msdyn_quotebookingsetup_msdyn_quotebookingservicetask_QuoteBookingSetup</para>
/// </summary>
public List<QuoteBookingServiceTask> GetQuoteBookingServiceTasks_QuoteBookingSetup (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingServiceTask>(Service, this.Id, "msdyn_quotebookingservicetask", "msdyn_quotebookingsetup", Columns); }
/// <summary>
/// <para><b>QuoteBookingServiceTask (Quote Booking Setup)</b></para>
/// <para>Schema Name: msdyn_msdyn_quotebookingsetup_msdyn_quotebookingservicetask_QuoteBookingSetup</para>
/// </summary>
public List<QuoteBookingServiceTask> GetQuoteBookingServiceTasks_QuoteBookingSetup (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingServiceTask>(Service, this.Id, "msdyn_quotebookingservicetask", "msdyn_quotebookingsetup", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: msdyn_quotebookingsetup_PrincipalObjectAttributeAccesses</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: msdyn_quotebookingsetup_PrincipalObjectAttributeAccesses</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: msdyn_quotebookingsetup_ProcessSession</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: msdyn_quotebookingsetup_ProcessSession</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: msdyn_quotebookingsetup_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: msdyn_quotebookingsetup_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: msdyn_quotebookingsetup_UserEntityInstanceDatas</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: msdyn_quotebookingsetup_UserEntityInstanceDatas</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        

        

        public enum eStatus
{
	///<summary><para>Active</para>
	///<para>Value = 0</para></summary>
	[Description("Active")]
	Active = 0, 
	///<summary><para>Inactive</para>
	///<para>Value = 1</para></summary>
	[Description("Inactive")]
	Inactive = 1
}
public enum eStatusReason
{
	///<summary><para>Active</para>
	///<para>Value = 1</para></summary>
	[Description("Active")]
	Active_Active = 1, 
	///<summary><para>Inactive</para>
	///<para>Value = 2</para></summary>
	[Description("Inactive")]
	Inactive_Inactive = 2
}
public void SetState(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>msdyn_priorityname</para>
	/// <para>msdyn_priorityname</para></summary>
	public const string Msdyn_priorityName = "msdyn_priorityname";
	/// <summary><para>msdyn_quotename</para>
	/// <para>msdyn_quotename</para></summary>
	public const string Msdyn_quoteName = "msdyn_quotename";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>owneridtype</para>
	/// <para>owneridtype</para></summary>
	public const string OwnerIdType = "owneridtype";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>owneridname</para>
	/// <para>owneridname</para></summary>
	public const string OwnerIdName = "owneridname";
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>msdyn_preferredresourcename</para>
	/// <para>msdyn_preferredresourcename</para></summary>
	public const string Msdyn_preferredresourceName = "msdyn_preferredresourcename";
	/// <summary><para>msdyn_workordertypename</para>
	/// <para>msdyn_workordertypename</para></summary>
	public const string Msdyn_workordertypeName = "msdyn_workordertypename";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>owneridyominame</para>
	/// <para>owneridyominame</para></summary>
	public const string OwnerIdYomiName = "owneridyominame";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>transactioncurrencyidname</para>
	/// <para>transactioncurrencyidname</para></summary>
	public const string TransactionCurrencyIdName = "transactioncurrencyidname";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>Auto Generate Booking</para>
	/// <para>msdyn_autogeneratebooking</para></summary>
	public const string AutoGenerateBooking = "msdyn_autogeneratebooking";
	/// <summary><para>Auto Generate Work Order</para>
	/// <para>msdyn_autogenerateworkorder</para></summary>
	public const string AutoGenerateWorkOrder = "msdyn_autogenerateworkorder";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Currency</para>
	/// <para>transactioncurrencyid</para></summary>
	public const string Currency = "transactioncurrencyid";
	/// <summary><para>Description</para>
	/// <para>msdyn_description</para></summary>
	public const string Description = "msdyn_description";
	/// <summary><para>Estimated Cost</para>
	/// <para>msdyn_estimatedcost</para></summary>
	public const string EstimatedCost = "msdyn_estimatedcost";
	/// <summary><para>Estimated Cost (Base)</para>
	/// <para>msdyn_estimatedcost_base</para></summary>
	public const string EstimatedCost_Base = "msdyn_estimatedcost_base";
	/// <summary><para>Estimated Duration</para>
	/// <para>msdyn_estimatedduration</para></summary>
	public const string EstimatedDuration = "msdyn_estimatedduration";
	/// <summary><para>Estimated Revenue</para>
	/// <para>msdyn_estimatedrevenue</para></summary>
	public const string EstimatedRevenue = "msdyn_estimatedrevenue";
	/// <summary><para>Estimated Revenue (Base)</para>
	/// <para>msdyn_estimatedrevenue_base</para></summary>
	public const string EstimatedRevenue_Base = "msdyn_estimatedrevenue_base";
	/// <summary><para>EstimatedMargin</para>
	/// <para>msdyn_estimatedmargin</para></summary>
	public const string EstimatedMargin = "msdyn_estimatedmargin";
	/// <summary><para>EstimatedMarginPerWO</para>
	/// <para>msdyn_estimatedmarginperwo</para></summary>
	public const string EstimatedMarginPerWO = "msdyn_estimatedmarginperwo";
	/// <summary><para>EstimatedProductCost</para>
	/// <para>msdyn_estimatedproductcost</para></summary>
	public const string EstimatedProductCost = "msdyn_estimatedproductcost";
	/// <summary><para>EstimatedProductCost (Base)</para>
	/// <para>msdyn_estimatedproductcost_base</para></summary>
	public const string EstimatedProductCost_Base = "msdyn_estimatedproductcost_base";
	/// <summary><para>EstimatedProductRevenue</para>
	/// <para>msdyn_estimatedproductrevenue</para></summary>
	public const string EstimatedProductRevenue = "msdyn_estimatedproductrevenue";
	/// <summary><para>EstimatedProductRevenue (Base)</para>
	/// <para>msdyn_estimatedproductrevenue_base</para></summary>
	public const string EstimatedProductRevenue_Base = "msdyn_estimatedproductrevenue_base";
	/// <summary><para>EstimatedRevenuePerWO</para>
	/// <para>msdyn_estimatedrevenueperwo</para></summary>
	public const string EstimatedRevenuePerWO = "msdyn_estimatedrevenueperwo";
	/// <summary><para>EstimatedRevenuePerWO (Base)</para>
	/// <para>msdyn_estimatedrevenueperwo_base</para></summary>
	public const string EstimatedRevenuePerWO_Base = "msdyn_estimatedrevenueperwo_base";
	/// <summary><para>EstimatedServiceCost</para>
	/// <para>msdyn_estimatedservicecost</para></summary>
	public const string EstimatedServiceCost = "msdyn_estimatedservicecost";
	/// <summary><para>EstimatedServiceCost (Base)</para>
	/// <para>msdyn_estimatedservicecost_base</para></summary>
	public const string EstimatedServiceCost_Base = "msdyn_estimatedservicecost_base";
	/// <summary><para>EstimatedServiceRevenue</para>
	/// <para>msdyn_estimatedservicerevenue</para></summary>
	public const string EstimatedServiceRevenue = "msdyn_estimatedservicerevenue";
	/// <summary><para>EstimatedServiceRevenue (Base)</para>
	/// <para>msdyn_estimatedservicerevenue_base</para></summary>
	public const string EstimatedServiceRevenue_Base = "msdyn_estimatedservicerevenue_base";
	/// <summary><para>Exchange Rate</para>
	/// <para>exchangerate</para></summary>
	public const string ExchangeRate = "exchangerate";
	/// <summary><para>Generate Work Order Days In Advance</para>
	/// <para>msdyn_generateworkorderdaysinadvance</para></summary>
	public const string GenerateWorkOrderDaysInAdvance = "msdyn_generateworkorderdaysinadvance";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string ImportSequenceNumber = "importsequencenumber";
	/// <summary><para>Internal Flags</para>
	/// <para>msdyn_Internalflags</para></summary>
	public const string InternalFlags = "msdyn_Internalflags";
	/// <summary><para>Margin</para>
	/// <para>msdyn_margin</para></summary>
	public const string Margin = "msdyn_margin";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>Name</para>
	/// <para>msdyn_name</para></summary>
	public const string Name = "msdyn_name";
	/// <summary><para>NumberOfWO</para>
	/// <para>msdyn_numberofwo</para></summary>
	public const string NumberOfWO = "msdyn_numberofwo";
	/// <summary><para>Owner</para>
	/// <para>ownerid</para></summary>
	public const string Owner = "ownerid";
	/// <summary><para>Owning Business Unit</para>
	/// <para>owningbusinessunit</para></summary>
	public const string OwningBusinessUnit = "owningbusinessunit";
	/// <summary><para>Owning Team</para>
	/// <para>owningteam</para></summary>
	public const string OwningTeam = "owningteam";
	/// <summary><para>Owning User</para>
	/// <para>owninguser</para></summary>
	public const string OwningUser = "owninguser";
	/// <summary><para>Post Booking Flexibility</para>
	/// <para>msdyn_postbookingflexibility</para></summary>
	public const string PostBookingFlexibility = "msdyn_postbookingflexibility";
	/// <summary><para>Postpone Generation Until</para>
	/// <para>msdyn_postponegenerationuntil</para></summary>
	public const string PostponeGenerationUntil = "msdyn_postponegenerationuntil";
	/// <summary><para>Pre Booking Flexibility</para>
	/// <para>msdyn_prebookingflexibility</para></summary>
	public const string PreBookingFlexibility = "msdyn_prebookingflexibility";
	/// <summary><para>Preferred Resource</para>
	/// <para>msdyn_preferredresource</para></summary>
	public const string PreferredResource = "msdyn_preferredresource";
	/// <summary><para>Preferred Start Time</para>
	/// <para>msdyn_preferredstarttime</para></summary>
	public const string PreferredStartTime = "msdyn_preferredstarttime";
	/// <summary><para>Priority</para>
	/// <para>msdyn_priority</para></summary>
	public const string Priority = "msdyn_priority";
	/// <summary><para>Process Id</para>
	/// <para>processid</para></summary>
	public const string ProcessId = "processid";
	/// <summary><para>Quote</para>
	/// <para>msdyn_quote</para></summary>
	public const string Quote = "msdyn_quote";
	/// <summary><para>Quote Booking Setup</para>
	/// <para>msdyn_quotebookingsetupid</para></summary>
	public const string QuoteBookingSetupId = "msdyn_quotebookingsetupid";
	/// <summary><para>QuoteDetailId</para>
	/// <para>msdyn_quotedetailid</para></summary>
	public const string QuoteDetailId = "msdyn_quotedetailid";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string RecordCreatedOn = "overriddencreatedon";
	/// <summary><para>Recurrence Settings</para>
	/// <para>msdyn_recurrencesettings</para></summary>
	public const string RecurrenceSettings = "msdyn_recurrencesettings";
	/// <summary><para>Revision</para>
	/// <para>msdyn_revision</para></summary>
	public const string Revision = "msdyn_revision";
	/// <summary><para>Stage Id</para>
	/// <para>stageid</para></summary>
	public const string StageId = "stageid";
	/// <summary><para>Status</para>
	/// <para>statecode</para></summary>
	public const string Status = "statecode";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string StatusReason = "statuscode";
	/// <summary><para>Time Window End</para>
	/// <para>msdyn_timewindowend</para></summary>
	public const string TimeWindowEnd = "msdyn_timewindowend";
	/// <summary><para>Time Window Start</para>
	/// <para>msdyn_timewindowstart</para></summary>
	public const string TimeWindowStart = "msdyn_timewindowstart";
	/// <summary><para>Time Zone Rule Version Number</para>
	/// <para>timezoneruleversionnumber</para></summary>
	public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
	/// <summary><para>Traversed Path</para>
	/// <para>traversedpath</para></summary>
	public const string TraversedPath = "traversedpath";
	/// <summary><para>UTC Conversion Time Zone Code</para>
	/// <para>utcconversiontimezonecode</para></summary>
	public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
	/// <summary><para>Work Order Summary</para>
	/// <para>msdyn_workordersummary</para></summary>
	public const string WorkOrderSummary = "msdyn_workordersummary";
	/// <summary><para>Work Order Type</para>
	/// <para>msdyn_workordertype</para></summary>
	public const string WorkOrderType = "msdyn_workordertype";
}

    }
}

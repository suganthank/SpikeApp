// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("owner")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class Owner : BaseProxyClass
    {
        public new const string LogicalName = "owner";
        public const int ObjectTypeCode = 7;
        public const string PrimaryIdAttribute = "ownerid";
        public const string PrimaryNameAttribute = "name";
        
        static Owner()
        {
            BaseProxyClass.RegisterProxyType(typeof(Owner), "owner");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public Owner() : base(new Entity("owner")) { }
        public Owner(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<Owner>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}
///<summary>
///<para>Logical Name: owneridtype</para>
///</summary>
[AttributeLogicalNameAttribute("owneridtype")]
public string OwnerIdType
{
	get { return this.GetPropertyValue<string>("owneridtype"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: ownerid</para>
///</summary>
[AttributeLogicalNameAttribute("ownerid")]
public Guid OwnerId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: name</para>
///<para>Max Length: 160 characters</para>
///</summary>
[AttributeLogicalNameAttribute("name")]
public string OwnerName
{
	get { return this.GetPropertyValue<string>("name"); }
}
///<summary>
///<para>Logical Name: yominame</para>
///<para>Max Length: 160 characters</para>
///</summary>
[AttributeLogicalNameAttribute("yominame")]
public string YomiName
{
	get { return this.GetPropertyValue<string>("yominame"); }
}


        /// <summary>
/// <para><b>Account (Owner)</b></para>
/// <para>Schema Name: owner_accounts</para>
/// </summary>
public List<Account> GetAccounts_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Account>(Service, this.Id, "account", "ownerid", Columns); }
/// <summary>
/// <para><b>Account (Owner)</b></para>
/// <para>Schema Name: owner_accounts</para>
/// </summary>
public List<Account> GetAccounts_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Account>(Service, this.Id, "account", "ownerid", Columns); }
/// <summary>
/// <para><b>ActionCard (Owner)</b></para>
/// <para>Schema Name: owner_actioncards</para>
/// </summary>
public List<ActionCard> GetActionCards_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActionCard>(Service, this.Id, "actioncard", "ownerid", Columns); }
/// <summary>
/// <para><b>ActionCard (Owner)</b></para>
/// <para>Schema Name: owner_actioncards</para>
/// </summary>
public List<ActionCard> GetActionCards_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActionCard>(Service, this.Id, "actioncard", "ownerid", Columns); }
/// <summary>
/// <para><b>ActionCardUserSettings (Owner)</b></para>
/// <para>Schema Name: owner_actioncardusersettings</para>
/// </summary>
public List<ActionCardUserSettings> GetActionCardUserSettings_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActionCardUserSettings>(Service, this.Id, "actioncardusersettings", "ownerid", Columns); }
/// <summary>
/// <para><b>ActionCardUserSettings (Owner)</b></para>
/// <para>Schema Name: owner_actioncardusersettings</para>
/// </summary>
public List<ActionCardUserSettings> GetActionCardUserSettings_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActionCardUserSettings>(Service, this.Id, "actioncardusersettings", "ownerid", Columns); }
/// <summary>
/// <para><b>Activity (Owner)</b></para>
/// <para>Schema Name: owner_activitypointers</para>
/// </summary>
public List<Activity> GetActivities_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Activity>(Service, this.Id, "activitypointer", "ownerid", Columns); }
/// <summary>
/// <para><b>Activity (Owner)</b></para>
/// <para>Schema Name: owner_activitypointers</para>
/// </summary>
public List<Activity> GetActivities_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Activity>(Service, this.Id, "activitypointer", "ownerid", Columns); }
/// <summary>
/// <para><b>Note (Owner)</b></para>
/// <para>Schema Name: owner_annotations</para>
/// </summary>
public List<Note> GetNotes_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "ownerid", Columns); }
/// <summary>
/// <para><b>Note (Owner)</b></para>
/// <para>Schema Name: owner_annotations</para>
/// </summary>
public List<Note> GetNotes_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "ownerid", Columns); }
/// <summary>
/// <para><b>SystemJob (Owner)</b></para>
/// <para>Schema Name: owner_asyncoperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "ownerid", Columns); }
/// <summary>
/// <para><b>SystemJob (Owner)</b></para>
/// <para>Schema Name: owner_asyncoperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "ownerid", Columns); }
/// <summary>
/// <para><b>BookableResource (Owner)</b></para>
/// <para>Schema Name: owner_bookableresource</para>
/// </summary>
public List<BookableResource> GetBookableResources_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResource>(Service, this.Id, "bookableresource", "ownerid", Columns); }
/// <summary>
/// <para><b>BookableResource (Owner)</b></para>
/// <para>Schema Name: owner_bookableresource</para>
/// </summary>
public List<BookableResource> GetBookableResources_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResource>(Service, this.Id, "bookableresource", "ownerid", Columns); }
/// <summary>
/// <para><b>BookableResourceBooking (Owner)</b></para>
/// <para>Schema Name: owner_bookableresourcebooking</para>
/// </summary>
public List<BookableResourceBooking> GetBookableResourceBookings_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBooking>(Service, this.Id, "bookableresourcebooking", "ownerid", Columns); }
/// <summary>
/// <para><b>BookableResourceBooking (Owner)</b></para>
/// <para>Schema Name: owner_bookableresourcebooking</para>
/// </summary>
public List<BookableResourceBooking> GetBookableResourceBookings_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBooking>(Service, this.Id, "bookableresourcebooking", "ownerid", Columns); }
/// <summary>
/// <para><b>BookableResourceBookingToExchangeIdMapping ()</b></para>
/// <para>Schema Name: owner_bookableresourcebookingexchangesyncidmapping</para>
/// </summary>
public List<BookableResourceBookingToExchangeIdMapping> GetBookableResourceBookingToExchangeIdMappings (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBookingToExchangeIdMapping>(Service, this.Id, "bookableresourcebookingexchangesyncidmapping", "ownerid", Columns); }
/// <summary>
/// <para><b>BookableResourceBookingToExchangeIdMapping ()</b></para>
/// <para>Schema Name: owner_bookableresourcebookingexchangesyncidmapping</para>
/// </summary>
public List<BookableResourceBookingToExchangeIdMapping> GetBookableResourceBookingToExchangeIdMappings (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBookingToExchangeIdMapping>(Service, this.Id, "bookableresourcebookingexchangesyncidmapping", "ownerid", Columns); }
/// <summary>
/// <para><b>BookableResourceBookingHeader (Owner)</b></para>
/// <para>Schema Name: owner_bookableresourcebookingheader</para>
/// </summary>
public List<BookableResourceBookingHeader> GetBookableResourceBookingHeaders_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBookingHeader>(Service, this.Id, "bookableresourcebookingheader", "ownerid", Columns); }
/// <summary>
/// <para><b>BookableResourceBookingHeader (Owner)</b></para>
/// <para>Schema Name: owner_bookableresourcebookingheader</para>
/// </summary>
public List<BookableResourceBookingHeader> GetBookableResourceBookingHeaders_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBookingHeader>(Service, this.Id, "bookableresourcebookingheader", "ownerid", Columns); }
/// <summary>
/// <para><b>BookableResourceCategory (Owner)</b></para>
/// <para>Schema Name: owner_bookableresourcecategory</para>
/// </summary>
public List<BookableResourceCategory> GetBookableResourceCategories_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceCategory>(Service, this.Id, "bookableresourcecategory", "ownerid", Columns); }
/// <summary>
/// <para><b>BookableResourceCategory (Owner)</b></para>
/// <para>Schema Name: owner_bookableresourcecategory</para>
/// </summary>
public List<BookableResourceCategory> GetBookableResourceCategories_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceCategory>(Service, this.Id, "bookableresourcecategory", "ownerid", Columns); }
/// <summary>
/// <para><b>BookableResourceCategoryAssn (Owner)</b></para>
/// <para>Schema Name: owner_bookableresourcecategoryassn</para>
/// </summary>
public List<BookableResourceCategoryAssn> GetBookableResourceCategoryAssns_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceCategoryAssn>(Service, this.Id, "bookableresourcecategoryassn", "ownerid", Columns); }
/// <summary>
/// <para><b>BookableResourceCategoryAssn (Owner)</b></para>
/// <para>Schema Name: owner_bookableresourcecategoryassn</para>
/// </summary>
public List<BookableResourceCategoryAssn> GetBookableResourceCategoryAssns_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceCategoryAssn>(Service, this.Id, "bookableresourcecategoryassn", "ownerid", Columns); }
/// <summary>
/// <para><b>BookableResourceCharacteristic (Owner)</b></para>
/// <para>Schema Name: owner_bookableresourcecharacteristic</para>
/// </summary>
public List<BookableResourceCharacteristic> GetBookableResourceCharacteristics_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceCharacteristic>(Service, this.Id, "bookableresourcecharacteristic", "ownerid", Columns); }
/// <summary>
/// <para><b>BookableResourceCharacteristic (Owner)</b></para>
/// <para>Schema Name: owner_bookableresourcecharacteristic</para>
/// </summary>
public List<BookableResourceCharacteristic> GetBookableResourceCharacteristics_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceCharacteristic>(Service, this.Id, "bookableresourcecharacteristic", "ownerid", Columns); }
/// <summary>
/// <para><b>BookableResourceGroup (Owner)</b></para>
/// <para>Schema Name: owner_bookableresourcegroup</para>
/// </summary>
public List<BookableResourceGroup> GetBookableResourceGroups_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceGroup>(Service, this.Id, "bookableresourcegroup", "ownerid", Columns); }
/// <summary>
/// <para><b>BookableResourceGroup (Owner)</b></para>
/// <para>Schema Name: owner_bookableresourcegroup</para>
/// </summary>
public List<BookableResourceGroup> GetBookableResourceGroups_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceGroup>(Service, this.Id, "bookableresourcegroup", "ownerid", Columns); }
/// <summary>
/// <para><b>BookingStatus (Owner)</b></para>
/// <para>Schema Name: owner_bookingstatus</para>
/// </summary>
public List<BookingStatus> GetBookingStatuses_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingStatus>(Service, this.Id, "bookingstatus", "ownerid", Columns); }
/// <summary>
/// <para><b>BookingStatus (Owner)</b></para>
/// <para>Schema Name: owner_bookingstatus</para>
/// </summary>
public List<BookingStatus> GetBookingStatuses_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingStatus>(Service, this.Id, "bookingstatus", "ownerid", Columns); }
/// <summary>
/// <para><b>Campaign (Owner)</b></para>
/// <para>Schema Name: owner_campaigns</para>
/// </summary>
public List<Campaign> GetCampaigns_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Campaign>(Service, this.Id, "campaign", "ownerid", Columns); }
/// <summary>
/// <para><b>Campaign (Owner)</b></para>
/// <para>Schema Name: owner_campaigns</para>
/// </summary>
public List<Campaign> GetCampaigns_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Campaign>(Service, this.Id, "campaign", "ownerid", Columns); }
/// <summary>
/// <para><b>Category (Owner)</b></para>
/// <para>Schema Name: owner_categories</para>
/// </summary>
public List<Category> GetCategories_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Category>(Service, this.Id, "category", "ownerid", Columns); }
/// <summary>
/// <para><b>Category (Owner)</b></para>
/// <para>Schema Name: owner_categories</para>
/// </summary>
public List<Category> GetCategories_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Category>(Service, this.Id, "category", "ownerid", Columns); }
/// <summary>
/// <para><b>ChannelAccessProfile (Owner)</b></para>
/// <para>Schema Name: owner_channelaccessprofile</para>
/// </summary>
public List<ChannelAccessProfile> GetChannelAccessProfiles_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ChannelAccessProfile>(Service, this.Id, "channelaccessprofile", "ownerid", Columns); }
/// <summary>
/// <para><b>ChannelAccessProfile (Owner)</b></para>
/// <para>Schema Name: owner_channelaccessprofile</para>
/// </summary>
public List<ChannelAccessProfile> GetChannelAccessProfiles_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ChannelAccessProfile>(Service, this.Id, "channelaccessprofile", "ownerid", Columns); }
/// <summary>
/// <para><b>ChannelAccessProfileRule (Owner)</b></para>
/// <para>Schema Name: owner_profilerule</para>
/// </summary>
public List<ChannelAccessProfileRule> GetChannelAccessProfileRules_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ChannelAccessProfileRule>(Service, this.Id, "channelaccessprofilerule", "ownerid", Columns); }
/// <summary>
/// <para><b>ChannelAccessProfileRule (Owner)</b></para>
/// <para>Schema Name: owner_profilerule</para>
/// </summary>
public List<ChannelAccessProfileRule> GetChannelAccessProfileRules_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ChannelAccessProfileRule>(Service, this.Id, "channelaccessprofilerule", "ownerid", Columns); }
/// <summary>
/// <para><b>Characteristic (Owner)</b></para>
/// <para>Schema Name: owner_characteristic</para>
/// </summary>
public List<Characteristic> GetCharacteristics_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Characteristic>(Service, this.Id, "characteristic", "ownerid", Columns); }
/// <summary>
/// <para><b>Characteristic (Owner)</b></para>
/// <para>Schema Name: owner_characteristic</para>
/// </summary>
public List<Characteristic> GetCharacteristics_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Characteristic>(Service, this.Id, "characteristic", "ownerid", Columns); }
/// <summary>
/// <para><b>Connection (Owner)</b></para>
/// <para>Schema Name: owner_connections</para>
/// </summary>
public List<Connection> GetConnections_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "ownerid", Columns); }
/// <summary>
/// <para><b>Connection (Owner)</b></para>
/// <para>Schema Name: owner_connections</para>
/// </summary>
public List<Connection> GetConnections_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "ownerid", Columns); }
/// <summary>
/// <para><b>Contact (Owner)</b></para>
/// <para>Schema Name: owner_contacts</para>
/// </summary>
public List<Contact> GetContacts_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Contact>(Service, this.Id, "contact", "ownerid", Columns); }
/// <summary>
/// <para><b>Contact (Owner)</b></para>
/// <para>Schema Name: owner_contacts</para>
/// </summary>
public List<Contact> GetContacts_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Contact>(Service, this.Id, "contact", "ownerid", Columns); }
/// <summary>
/// <para><b>Contract (Owner)</b></para>
/// <para>Schema Name: owner_contracts</para>
/// </summary>
public List<Contract> GetContracts_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Contract>(Service, this.Id, "contract", "ownerid", Columns); }
/// <summary>
/// <para><b>Contract (Owner)</b></para>
/// <para>Schema Name: owner_contracts</para>
/// </summary>
public List<Contract> GetContracts_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Contract>(Service, this.Id, "contract", "ownerid", Columns); }
/// <summary>
/// <para><b>RecordCreationAndUpdateRule (Owner)</b></para>
/// <para>Schema Name: owner_convertrule</para>
/// </summary>
public List<RecordCreationAndUpdateRule> GetRecordCreationAndUpdateRules_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecordCreationAndUpdateRule>(Service, this.Id, "convertrule", "ownerid", Columns); }
/// <summary>
/// <para><b>RecordCreationAndUpdateRule (Owner)</b></para>
/// <para>Schema Name: owner_convertrule</para>
/// </summary>
public List<RecordCreationAndUpdateRule> GetRecordCreationAndUpdateRules_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecordCreationAndUpdateRule>(Service, this.Id, "convertrule", "ownerid", Columns); }
/// <summary>
/// <para><b>OpportunityRelationship (Owner)</b></para>
/// <para>Schema Name: owner_customeropportunityroles</para>
/// </summary>
public List<OpportunityRelationship> GetOpportunityRelationships_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityRelationship>(Service, this.Id, "customeropportunityrole", "ownerid", Columns); }
/// <summary>
/// <para><b>OpportunityRelationship (Owner)</b></para>
/// <para>Schema Name: owner_customeropportunityroles</para>
/// </summary>
public List<OpportunityRelationship> GetOpportunityRelationships_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityRelationship>(Service, this.Id, "customeropportunityrole", "ownerid", Columns); }
/// <summary>
/// <para><b>CustomerRelationship (Owner)</b></para>
/// <para>Schema Name: owner_customerrelationships</para>
/// </summary>
public List<CustomerRelationship> GetCustomerRelationships_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CustomerRelationship>(Service, this.Id, "customerrelationship", "ownerid", Columns); }
/// <summary>
/// <para><b>CustomerRelationship (Owner)</b></para>
/// <para>Schema Name: owner_customerrelationships</para>
/// </summary>
public List<CustomerRelationship> GetCustomerRelationships_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CustomerRelationship>(Service, this.Id, "customerrelationship", "ownerid", Columns); }
/// <summary>
/// <para><b>DuplicateDetectionRule (Owner)</b></para>
/// <para>Schema Name: owner_duplicaterules</para>
/// </summary>
public List<DuplicateDetectionRule> GetDuplicateDetectionRules_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateDetectionRule>(Service, this.Id, "duplicaterule", "ownerid", Columns); }
/// <summary>
/// <para><b>DuplicateDetectionRule (Owner)</b></para>
/// <para>Schema Name: owner_duplicaterules</para>
/// </summary>
public List<DuplicateDetectionRule> GetDuplicateDetectionRules_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateDetectionRule>(Service, this.Id, "duplicaterule", "ownerid", Columns); }
/// <summary>
/// <para><b>PropertyInstance (Owner)</b></para>
/// <para>Schema Name: Owner_dynamicproperyinstance</para>
/// </summary>
public List<PropertyInstance> GetPropertyInstances_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PropertyInstance>(Service, this.Id, "dynamicpropertyinstance", "ownerid", Columns); }
/// <summary>
/// <para><b>PropertyInstance (Owner)</b></para>
/// <para>Schema Name: Owner_dynamicproperyinstance</para>
/// </summary>
public List<PropertyInstance> GetPropertyInstances_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PropertyInstance>(Service, this.Id, "dynamicpropertyinstance", "ownerid", Columns); }
/// <summary>
/// <para><b>EmailServerProfile (Owner)</b></para>
/// <para>Schema Name: owner_emailserverprofile</para>
/// </summary>
public List<EmailServerProfile> GetEmailServerProfiles_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EmailServerProfile>(Service, this.Id, "emailserverprofile", "ownerid", Columns); }
/// <summary>
/// <para><b>EmailServerProfile (Owner)</b></para>
/// <para>Schema Name: owner_emailserverprofile</para>
/// </summary>
public List<EmailServerProfile> GetEmailServerProfiles_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EmailServerProfile>(Service, this.Id, "emailserverprofile", "ownerid", Columns); }
/// <summary>
/// <para><b>EmailSignature (Owner)</b></para>
/// <para>Schema Name: owner_emailsignatures</para>
/// </summary>
public List<EmailSignature> GetEmailSignatures_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EmailSignature>(Service, this.Id, "emailsignature", "ownerid", Columns); }
/// <summary>
/// <para><b>EmailSignature (Owner)</b></para>
/// <para>Schema Name: owner_emailsignatures</para>
/// </summary>
public List<EmailSignature> GetEmailSignatures_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EmailSignature>(Service, this.Id, "emailsignature", "ownerid", Columns); }
/// <summary>
/// <para><b>Entitlement (Owner)</b></para>
/// <para>Schema Name: owner_entitlement</para>
/// </summary>
public List<Entitlement> GetEntitlements_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Entitlement>(Service, this.Id, "entitlement", "ownerid", Columns); }
/// <summary>
/// <para><b>Entitlement (Owner)</b></para>
/// <para>Schema Name: owner_entitlement</para>
/// </summary>
public List<Entitlement> GetEntitlements_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Entitlement>(Service, this.Id, "entitlement", "ownerid", Columns); }
/// <summary>
/// <para><b>ExchangeSyncIdMapping ()</b></para>
/// <para>Schema Name: owner_exchangesyncidmapping</para>
/// </summary>
public List<ExchangeSyncIdMapping> GetExchangeSyncIdMappings (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ExchangeSyncIdMapping>(Service, this.Id, "exchangesyncidmapping", "ownerid", Columns); }
/// <summary>
/// <para><b>ExchangeSyncIdMapping ()</b></para>
/// <para>Schema Name: owner_exchangesyncidmapping</para>
/// </summary>
public List<ExchangeSyncIdMapping> GetExchangeSyncIdMappings (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ExchangeSyncIdMapping>(Service, this.Id, "exchangesyncidmapping", "ownerid", Columns); }
/// <summary>
/// <para><b>ExternalParty (Owner)</b></para>
/// <para>Schema Name: owner_externalparty</para>
/// </summary>
public List<ExternalParty> GetExternalParties_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ExternalParty>(Service, this.Id, "externalparty", "ownerid", Columns); }
/// <summary>
/// <para><b>ExternalParty (Owner)</b></para>
/// <para>Schema Name: owner_externalparty</para>
/// </summary>
public List<ExternalParty> GetExternalParties_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ExternalParty>(Service, this.Id, "externalparty", "ownerid", Columns); }
/// <summary>
/// <para><b>Feedback (Owner)</b></para>
/// <para>Schema Name: owner_feedback</para>
/// </summary>
public List<Feedback> GetFeedback_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Feedback>(Service, this.Id, "feedback", "ownerid", Columns); }
/// <summary>
/// <para><b>Feedback (Owner)</b></para>
/// <para>Schema Name: owner_feedback</para>
/// </summary>
public List<Feedback> GetFeedback_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Feedback>(Service, this.Id, "feedback", "ownerid", Columns); }
/// <summary>
/// <para><b>BookingUpdateTrigger (Owner)</b></para>
/// <para>Schema Name: owner_fpssa_bookingupdatetrigger</para>
/// </summary>
public List<BookingUpdateTrigger> GetBookingUpdateTriggers_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingUpdateTrigger>(Service, this.Id, "fpssa_bookingupdatetrigger", "ownerid", Columns); }
/// <summary>
/// <para><b>BookingUpdateTrigger (Owner)</b></para>
/// <para>Schema Name: owner_fpssa_bookingupdatetrigger</para>
/// </summary>
public List<BookingUpdateTrigger> GetBookingUpdateTriggers_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingUpdateTrigger>(Service, this.Id, "fpssa_bookingupdatetrigger", "ownerid", Columns); }
/// <summary>
/// <para><b>Goal (Manager)</b></para>
/// <para>Schema Name: owner_goal</para>
/// </summary>
public List<Goal> GetGoals_Manager (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Goal>(Service, this.Id, "goal", "ownerid", Columns); }
/// <summary>
/// <para><b>Goal (Manager)</b></para>
/// <para>Schema Name: owner_goal</para>
/// </summary>
public List<Goal> GetGoals_Manager (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Goal>(Service, this.Id, "goal", "ownerid", Columns); }
/// <summary>
/// <para><b>RollupQuery (Owner)</b></para>
/// <para>Schema Name: owner_goalrollupquery</para>
/// </summary>
public List<RollupQuery> GetRollupQueries_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RollupQuery>(Service, this.Id, "goalrollupquery", "ownerid", Columns); }
/// <summary>
/// <para><b>RollupQuery (Owner)</b></para>
/// <para>Schema Name: owner_goalrollupquery</para>
/// </summary>
public List<RollupQuery> GetRollupQueries_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RollupQuery>(Service, this.Id, "goalrollupquery", "ownerid", Columns); }
/// <summary>
/// <para><b>DataImport (Owner)</b></para>
/// <para>Schema Name: owner_imports</para>
/// </summary>
public List<DataImport> GetDataImports_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DataImport>(Service, this.Id, "import", "ownerid", Columns); }
/// <summary>
/// <para><b>DataImport (Owner)</b></para>
/// <para>Schema Name: owner_imports</para>
/// </summary>
public List<DataImport> GetDataImports_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DataImport>(Service, this.Id, "import", "ownerid", Columns); }
/// <summary>
/// <para><b>ImportData (Owner)</b></para>
/// <para>Schema Name: owner_importdatas</para>
/// </summary>
public List<ImportData> GetImportData_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ImportData>(Service, this.Id, "importdata", "ownerid", Columns); }
/// <summary>
/// <para><b>ImportData (Owner)</b></para>
/// <para>Schema Name: owner_importdatas</para>
/// </summary>
public List<ImportData> GetImportData_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ImportData>(Service, this.Id, "importdata", "ownerid", Columns); }
/// <summary>
/// <para><b>ImportSourceFile (Owner)</b></para>
/// <para>Schema Name: owner_importfiles</para>
/// </summary>
public List<ImportSourceFile> GetImports_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ImportSourceFile>(Service, this.Id, "importfile", "ownerid", Columns); }
/// <summary>
/// <para><b>ImportSourceFile (Owner)</b></para>
/// <para>Schema Name: owner_importfiles</para>
/// </summary>
public List<ImportSourceFile> GetImports_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ImportSourceFile>(Service, this.Id, "importfile", "ownerid", Columns); }
/// <summary>
/// <para><b>ImportLog (Owner)</b></para>
/// <para>Schema Name: owner_importlogs</para>
/// </summary>
public List<ImportLog> GetImportLogs_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ImportLog>(Service, this.Id, "importlog", "ownerid", Columns); }
/// <summary>
/// <para><b>ImportLog (Owner)</b></para>
/// <para>Schema Name: owner_importlogs</para>
/// </summary>
public List<ImportLog> GetImportLogs_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ImportLog>(Service, this.Id, "importlog", "ownerid", Columns); }
/// <summary>
/// <para><b>DataMap (Owner)</b></para>
/// <para>Schema Name: owner_importmaps</para>
/// </summary>
public List<DataMap> GetDataMaps_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DataMap>(Service, this.Id, "importmap", "ownerid", Columns); }
/// <summary>
/// <para><b>DataMap (Owner)</b></para>
/// <para>Schema Name: owner_importmaps</para>
/// </summary>
public List<DataMap> GetDataMaps_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DataMap>(Service, this.Id, "importmap", "ownerid", Columns); }
/// <summary>
/// <para><b>@Case (Owner)</b></para>
/// <para>Schema Name: owner_incidents</para>
/// </summary>
public List<@Case> GetCases_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<@Case>(Service, this.Id, "incident", "ownerid", Columns); }
/// <summary>
/// <para><b>@Case (Owner)</b></para>
/// <para>Schema Name: owner_incidents</para>
/// </summary>
public List<@Case> GetCases_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<@Case>(Service, this.Id, "incident", "ownerid", Columns); }
/// <summary>
/// <para><b>InteractionForEmail (Owner)</b></para>
/// <para>Schema Name: owner_interactionforemail</para>
/// </summary>
public List<InteractionForEmail> GetInteractionsForEmail_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InteractionForEmail>(Service, this.Id, "interactionforemail", "ownerid", Columns); }
/// <summary>
/// <para><b>InteractionForEmail (Owner)</b></para>
/// <para>Schema Name: owner_interactionforemail</para>
/// </summary>
public List<InteractionForEmail> GetInteractionsForEmail_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InteractionForEmail>(Service, this.Id, "interactionforemail", "ownerid", Columns); }
/// <summary>
/// <para><b>Invoice (Owner)</b></para>
/// <para>Schema Name: owner_invoices</para>
/// </summary>
public List<Invoice> GetInvoices_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Invoice>(Service, this.Id, "invoice", "ownerid", Columns); }
/// <summary>
/// <para><b>Invoice (Owner)</b></para>
/// <para>Schema Name: owner_invoices</para>
/// </summary>
public List<Invoice> GetInvoices_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Invoice>(Service, this.Id, "invoice", "ownerid", Columns); }
/// <summary>
/// <para><b>KnowledgeArticle (Owner)</b></para>
/// <para>Schema Name: owner_knowledgearticle</para>
/// </summary>
public List<KnowledgeArticle> GetKnowledgeArticles_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<KnowledgeArticle>(Service, this.Id, "knowledgearticle", "ownerid", Columns); }
/// <summary>
/// <para><b>KnowledgeArticle (Owner)</b></para>
/// <para>Schema Name: owner_knowledgearticle</para>
/// </summary>
public List<KnowledgeArticle> GetKnowledgeArticles_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<KnowledgeArticle>(Service, this.Id, "knowledgearticle", "ownerid", Columns); }
/// <summary>
/// <para><b>Lead (Owner)</b></para>
/// <para>Schema Name: owner_leads</para>
/// </summary>
public List<Lead> GetLeads_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Lead>(Service, this.Id, "lead", "ownerid", Columns); }
/// <summary>
/// <para><b>Lead (Owner)</b></para>
/// <para>Schema Name: owner_leads</para>
/// </summary>
public List<Lead> GetLeads_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Lead>(Service, this.Id, "lead", "ownerid", Columns); }
/// <summary>
/// <para><b>MarketingList (Owner)</b></para>
/// <para>Schema Name: owner_lists</para>
/// </summary>
public List<MarketingList> GetMarketingLists_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MarketingList>(Service, this.Id, "list", "ownerid", Columns); }
/// <summary>
/// <para><b>MarketingList (Owner)</b></para>
/// <para>Schema Name: owner_lists</para>
/// </summary>
public List<MarketingList> GetMarketingLists_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MarketingList>(Service, this.Id, "list", "ownerid", Columns); }
/// <summary>
/// <para><b>Mailbox (Owner)</b></para>
/// <para>Schema Name: owner_mailbox</para>
/// </summary>
public List<Mailbox> GetMailboxes_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Mailbox>(Service, this.Id, "mailbox", "ownerid", Columns); }
/// <summary>
/// <para><b>Mailbox (Owner)</b></para>
/// <para>Schema Name: owner_mailbox</para>
/// </summary>
public List<Mailbox> GetMailboxes_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Mailbox>(Service, this.Id, "mailbox", "ownerid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Owner)</b></para>
/// <para>Schema Name: owner_mailboxtrackingfolder</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "ownerid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Owner)</b></para>
/// <para>Schema Name: owner_mailboxtrackingfolder</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "ownerid", Columns); }
/// <summary>
/// <para><b>MailMergeTemplate (Owner)</b></para>
/// <para>Schema Name: owner_mailmergetemplates</para>
/// </summary>
public List<MailMergeTemplate> GetMailMergeTemplates_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailMergeTemplate>(Service, this.Id, "mailmergetemplate", "ownerid", Columns); }
/// <summary>
/// <para><b>MailMergeTemplate (Owner)</b></para>
/// <para>Schema Name: owner_mailmergetemplates</para>
/// </summary>
public List<MailMergeTemplate> GetMailMergeTemplates_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailMergeTemplate>(Service, this.Id, "mailmergetemplate", "ownerid", Columns); }
/// <summary>
/// <para><b>AccountProjectPriceList (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_accountpricelist</para>
/// </summary>
public List<AccountProjectPriceList> GetProjectPriceLists_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AccountProjectPriceList>(Service, this.Id, "msdyn_accountpricelist", "ownerid", Columns); }
/// <summary>
/// <para><b>AccountProjectPriceList (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_accountpricelist</para>
/// </summary>
public List<AccountProjectPriceList> GetProjectPriceLists_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AccountProjectPriceList>(Service, this.Id, "msdyn_accountpricelist", "ownerid", Columns); }
/// <summary>
/// <para><b>Actual (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_actual</para>
/// </summary>
public List<Actual> GetActuals_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Actual>(Service, this.Id, "msdyn_actual", "ownerid", Columns); }
/// <summary>
/// <para><b>Actual (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_actual</para>
/// </summary>
public List<Actual> GetActuals_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Actual>(Service, this.Id, "msdyn_actual", "ownerid", Columns); }
/// <summary>
/// <para><b>Agreement (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_agreement</para>
/// </summary>
public List<Agreement> GetAgreements_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Agreement>(Service, this.Id, "msdyn_agreement", "ownerid", Columns); }
/// <summary>
/// <para><b>Agreement (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_agreement</para>
/// </summary>
public List<Agreement> GetAgreements_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Agreement>(Service, this.Id, "msdyn_agreement", "ownerid", Columns); }
/// <summary>
/// <para><b>AgreementBookingDate (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_agreementbookingdate</para>
/// </summary>
public List<AgreementBookingDate> GetAgreementBookingDates_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingDate>(Service, this.Id, "msdyn_agreementbookingdate", "ownerid", Columns); }
/// <summary>
/// <para><b>AgreementBookingDate (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_agreementbookingdate</para>
/// </summary>
public List<AgreementBookingDate> GetAgreementBookingDates_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingDate>(Service, this.Id, "msdyn_agreementbookingdate", "ownerid", Columns); }
/// <summary>
/// <para><b>AgreementBookingIncident (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_agreementbookingincident</para>
/// </summary>
public List<AgreementBookingIncident> GetAgreementBookingIncidents_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingIncident>(Service, this.Id, "msdyn_agreementbookingincident", "ownerid", Columns); }
/// <summary>
/// <para><b>AgreementBookingIncident (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_agreementbookingincident</para>
/// </summary>
public List<AgreementBookingIncident> GetAgreementBookingIncidents_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingIncident>(Service, this.Id, "msdyn_agreementbookingincident", "ownerid", Columns); }
/// <summary>
/// <para><b>AgreementBookingProduct (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_agreementbookingproduct</para>
/// </summary>
public List<AgreementBookingProduct> GetAgreementBookingProducts_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingProduct>(Service, this.Id, "msdyn_agreementbookingproduct", "ownerid", Columns); }
/// <summary>
/// <para><b>AgreementBookingProduct (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_agreementbookingproduct</para>
/// </summary>
public List<AgreementBookingProduct> GetAgreementBookingProducts_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingProduct>(Service, this.Id, "msdyn_agreementbookingproduct", "ownerid", Columns); }
/// <summary>
/// <para><b>AgreementBookingService (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_agreementbookingservice</para>
/// </summary>
public List<AgreementBookingService> GetAgreementBookingServices_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingService>(Service, this.Id, "msdyn_agreementbookingservice", "ownerid", Columns); }
/// <summary>
/// <para><b>AgreementBookingService (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_agreementbookingservice</para>
/// </summary>
public List<AgreementBookingService> GetAgreementBookingServices_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingService>(Service, this.Id, "msdyn_agreementbookingservice", "ownerid", Columns); }
/// <summary>
/// <para><b>AgreementBookingServiceTask (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_agreementbookingservicetask</para>
/// </summary>
public List<AgreementBookingServiceTask> GetAgreementBookingServiceTasks_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingServiceTask>(Service, this.Id, "msdyn_agreementbookingservicetask", "ownerid", Columns); }
/// <summary>
/// <para><b>AgreementBookingServiceTask (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_agreementbookingservicetask</para>
/// </summary>
public List<AgreementBookingServiceTask> GetAgreementBookingServiceTasks_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingServiceTask>(Service, this.Id, "msdyn_agreementbookingservicetask", "ownerid", Columns); }
/// <summary>
/// <para><b>AgreementBookingSetup (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_agreementbookingsetup</para>
/// </summary>
public List<AgreementBookingSetup> GetAgreementBookingSetups_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingSetup>(Service, this.Id, "msdyn_agreementbookingsetup", "ownerid", Columns); }
/// <summary>
/// <para><b>AgreementBookingSetup (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_agreementbookingsetup</para>
/// </summary>
public List<AgreementBookingSetup> GetAgreementBookingSetups_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingSetup>(Service, this.Id, "msdyn_agreementbookingsetup", "ownerid", Columns); }
/// <summary>
/// <para><b>AgreementInvoiceDate (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_agreementinvoicedate</para>
/// </summary>
public List<AgreementInvoiceDate> GetAgreementInvoiceDates_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementInvoiceDate>(Service, this.Id, "msdyn_agreementinvoicedate", "ownerid", Columns); }
/// <summary>
/// <para><b>AgreementInvoiceDate (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_agreementinvoicedate</para>
/// </summary>
public List<AgreementInvoiceDate> GetAgreementInvoiceDates_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementInvoiceDate>(Service, this.Id, "msdyn_agreementinvoicedate", "ownerid", Columns); }
/// <summary>
/// <para><b>AgreementInvoiceProduct (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_agreementinvoiceproduct</para>
/// </summary>
public List<AgreementInvoiceProduct> GetAgreementInvoiceProducts_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementInvoiceProduct>(Service, this.Id, "msdyn_agreementinvoiceproduct", "ownerid", Columns); }
/// <summary>
/// <para><b>AgreementInvoiceProduct (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_agreementinvoiceproduct</para>
/// </summary>
public List<AgreementInvoiceProduct> GetAgreementInvoiceProducts_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementInvoiceProduct>(Service, this.Id, "msdyn_agreementinvoiceproduct", "ownerid", Columns); }
/// <summary>
/// <para><b>AgreementInvoiceSetup (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_agreementinvoicesetup</para>
/// </summary>
public List<AgreementInvoiceSetup> GetAgreementInvoiceSetups_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementInvoiceSetup>(Service, this.Id, "msdyn_agreementinvoicesetup", "ownerid", Columns); }
/// <summary>
/// <para><b>AgreementInvoiceSetup (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_agreementinvoicesetup</para>
/// </summary>
public List<AgreementInvoiceSetup> GetAgreementInvoiceSetups_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementInvoiceSetup>(Service, this.Id, "msdyn_agreementinvoicesetup", "ownerid", Columns); }
/// <summary>
/// <para><b>AgreementSub_Status (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_agreementsubstatus</para>
/// </summary>
public List<AgreementSub_Status> GetAgreementSub_Statuses_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementSub_Status>(Service, this.Id, "msdyn_agreementsubstatus", "ownerid", Columns); }
/// <summary>
/// <para><b>AgreementSub_Status (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_agreementsubstatus</para>
/// </summary>
public List<AgreementSub_Status> GetAgreementSub_Statuses_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementSub_Status>(Service, this.Id, "msdyn_agreementsubstatus", "ownerid", Columns); }
/// <summary>
/// <para><b>Approval (Owner)</b></para>
/// <para>Schema Name: msdyn_approval_owner_ownerid</para>
/// </summary>
public List<Approval> GetApprovals_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Approval>(Service, this.Id, "msdyn_approval", "ownerid", Columns); }
/// <summary>
/// <para><b>Approval (Owner)</b></para>
/// <para>Schema Name: msdyn_approval_owner_ownerid</para>
/// </summary>
public List<Approval> GetApprovals_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Approval>(Service, this.Id, "msdyn_approval", "ownerid", Columns); }
/// <summary>
/// <para><b>BookingAlert (Owner)</b></para>
/// <para>Schema Name: msdyn_bookingalert_owner_ownerid</para>
/// </summary>
public List<BookingAlert> GetBookingAlerts_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlert>(Service, this.Id, "msdyn_bookingalert", "ownerid", Columns); }
/// <summary>
/// <para><b>BookingAlert (Owner)</b></para>
/// <para>Schema Name: msdyn_bookingalert_owner_ownerid</para>
/// </summary>
public List<BookingAlert> GetBookingAlerts_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlert>(Service, this.Id, "msdyn_bookingalert", "ownerid", Columns); }
/// <summary>
/// <para><b>BookingAlertStatus (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_bookingalertstatus</para>
/// </summary>
public List<BookingAlertStatus> GetBookingAlertStatuses_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlertStatus>(Service, this.Id, "msdyn_bookingalertstatus", "ownerid", Columns); }
/// <summary>
/// <para><b>BookingAlertStatus (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_bookingalertstatus</para>
/// </summary>
public List<BookingAlertStatus> GetBookingAlertStatuses_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlertStatus>(Service, this.Id, "msdyn_bookingalertstatus", "ownerid", Columns); }
/// <summary>
/// <para><b>BookingChange (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_bookingchange</para>
/// </summary>
public List<BookingChange> GetBookingChanges_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingChange>(Service, this.Id, "msdyn_bookingchange", "ownerid", Columns); }
/// <summary>
/// <para><b>BookingChange (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_bookingchange</para>
/// </summary>
public List<BookingChange> GetBookingChanges_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingChange>(Service, this.Id, "msdyn_bookingchange", "ownerid", Columns); }
/// <summary>
/// <para><b>BookingJournal (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_bookingjournal</para>
/// </summary>
public List<BookingJournal> GetBookingJournal_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingJournal>(Service, this.Id, "msdyn_bookingjournal", "ownerid", Columns); }
/// <summary>
/// <para><b>BookingJournal (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_bookingjournal</para>
/// </summary>
public List<BookingJournal> GetBookingJournal_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingJournal>(Service, this.Id, "msdyn_bookingjournal", "ownerid", Columns); }
/// <summary>
/// <para><b>BookingRule (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_bookingrule</para>
/// </summary>
public List<BookingRule> GetBookingRules_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingRule>(Service, this.Id, "msdyn_bookingrule", "ownerid", Columns); }
/// <summary>
/// <para><b>BookingRule (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_bookingrule</para>
/// </summary>
public List<BookingRule> GetBookingRules_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingRule>(Service, this.Id, "msdyn_bookingrule", "ownerid", Columns); }
/// <summary>
/// <para><b>BookingSetupMetadata (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_bookingsetupmetadata</para>
/// </summary>
public List<BookingSetupMetadata> GetBookingSetupMetadataRecords_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingSetupMetadata>(Service, this.Id, "msdyn_bookingsetupmetadata", "ownerid", Columns); }
/// <summary>
/// <para><b>BookingSetupMetadata (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_bookingsetupmetadata</para>
/// </summary>
public List<BookingSetupMetadata> GetBookingSetupMetadataRecords_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingSetupMetadata>(Service, this.Id, "msdyn_bookingsetupmetadata", "ownerid", Columns); }
/// <summary>
/// <para><b>BookingTimestamp (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_bookingtimestamp</para>
/// </summary>
public List<BookingTimestamp> GetBookingTimestamps_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingTimestamp>(Service, this.Id, "msdyn_bookingtimestamp", "ownerid", Columns); }
/// <summary>
/// <para><b>BookingTimestamp (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_bookingtimestamp</para>
/// </summary>
public List<BookingTimestamp> GetBookingTimestamps_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingTimestamp>(Service, this.Id, "msdyn_bookingtimestamp", "ownerid", Columns); }
/// <summary>
/// <para><b>CompetencyRequirement_Deprecated (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_characteristicreqforteammember</para>
/// </summary>
public List<CompetencyRequirement_Deprecated> GetCompetencyRequirements_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CompetencyRequirement_Deprecated>(Service, this.Id, "msdyn_characteristicreqforteammember", "ownerid", Columns); }
/// <summary>
/// <para><b>CompetencyRequirement_Deprecated (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_characteristicreqforteammember</para>
/// </summary>
public List<CompetencyRequirement_Deprecated> GetCompetencyRequirements_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CompetencyRequirement_Deprecated>(Service, this.Id, "msdyn_characteristicreqforteammember", "ownerid", Columns); }
/// <summary>
/// <para><b>ContactPriceList (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_contactpricelist</para>
/// </summary>
public List<ContactPriceList> GetContactPriceLists_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ContactPriceList>(Service, this.Id, "msdyn_contactpricelist", "ownerid", Columns); }
/// <summary>
/// <para><b>ContactPriceList (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_contactpricelist</para>
/// </summary>
public List<ContactPriceList> GetContactPriceLists_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ContactPriceList>(Service, this.Id, "msdyn_contactpricelist", "ownerid", Columns); }
/// <summary>
/// <para><b>ProjectContractLineMilestone (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_contractlinescheduleofvalue</para>
/// </summary>
public List<ProjectContractLineMilestone> GetProjectContractLineMilestones_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineMilestone>(Service, this.Id, "msdyn_contractlinescheduleofvalue", "ownerid", Columns); }
/// <summary>
/// <para><b>ProjectContractLineMilestone (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_contractlinescheduleofvalue</para>
/// </summary>
public List<ProjectContractLineMilestone> GetProjectContractLineMilestones_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineMilestone>(Service, this.Id, "msdyn_contractlinescheduleofvalue", "ownerid", Columns); }
/// <summary>
/// <para><b>CustomerAsset (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_customerasset</para>
/// </summary>
public List<CustomerAsset> GetCustomerAssets_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CustomerAsset>(Service, this.Id, "msdyn_customerasset", "ownerid", Columns); }
/// <summary>
/// <para><b>CustomerAsset (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_customerasset</para>
/// </summary>
public List<CustomerAsset> GetCustomerAssets_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CustomerAsset>(Service, this.Id, "msdyn_customerasset", "ownerid", Columns); }
/// <summary>
/// <para><b>ActualDataExport_Deprecated (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_dataexport</para>
/// </summary>
public List<ActualDataExport_Deprecated> GetActualDataExports_Deprecated__Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActualDataExport_Deprecated>(Service, this.Id, "msdyn_dataexport", "ownerid", Columns); }
/// <summary>
/// <para><b>ActualDataExport_Deprecated (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_dataexport</para>
/// </summary>
public List<ActualDataExport_Deprecated> GetActualDataExports_Deprecated__Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActualDataExport_Deprecated>(Service, this.Id, "msdyn_dataexport", "ownerid", Columns); }
/// <summary>
/// <para><b>Delegation (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_delegation</para>
/// </summary>
public List<Delegation> GetDelegations_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Delegation>(Service, this.Id, "msdyn_delegation", "ownerid", Columns); }
/// <summary>
/// <para><b>Delegation (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_delegation</para>
/// </summary>
public List<Delegation> GetDelegations_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Delegation>(Service, this.Id, "msdyn_delegation", "ownerid", Columns); }
/// <summary>
/// <para><b>Estimate (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_estimate</para>
/// </summary>
public List<Estimate> GetEstimates_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Estimate>(Service, this.Id, "msdyn_estimate", "ownerid", Columns); }
/// <summary>
/// <para><b>Estimate (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_estimate</para>
/// </summary>
public List<Estimate> GetEstimates_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Estimate>(Service, this.Id, "msdyn_estimate", "ownerid", Columns); }
/// <summary>
/// <para><b>EstimateLine (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_estimateline</para>
/// </summary>
public List<EstimateLine> GetEstimateLines_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EstimateLine>(Service, this.Id, "msdyn_estimateline", "ownerid", Columns); }
/// <summary>
/// <para><b>EstimateLine (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_estimateline</para>
/// </summary>
public List<EstimateLine> GetEstimateLines_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EstimateLine>(Service, this.Id, "msdyn_estimateline", "ownerid", Columns); }
/// <summary>
/// <para><b>Expense (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_expense</para>
/// </summary>
public List<Expense> GetExpenses_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Expense>(Service, this.Id, "msdyn_expense", "ownerid", Columns); }
/// <summary>
/// <para><b>Expense (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_expense</para>
/// </summary>
public List<Expense> GetExpenses_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Expense>(Service, this.Id, "msdyn_expense", "ownerid", Columns); }
/// <summary>
/// <para><b>ExpenseReceipt (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_expensereceipt</para>
/// </summary>
public List<ExpenseReceipt> GetExpenseReceipts_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ExpenseReceipt>(Service, this.Id, "msdyn_expensereceipt", "ownerid", Columns); }
/// <summary>
/// <para><b>ExpenseReceipt (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_expensereceipt</para>
/// </summary>
public List<ExpenseReceipt> GetExpenseReceipts_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ExpenseReceipt>(Service, this.Id, "msdyn_expensereceipt", "ownerid", Columns); }
/// <summary>
/// <para><b>Fact (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_fact</para>
/// </summary>
public List<Fact> GetFacts_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fact>(Service, this.Id, "msdyn_fact", "ownerid", Columns); }
/// <summary>
/// <para><b>Fact (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_fact</para>
/// </summary>
public List<Fact> GetFacts_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fact>(Service, this.Id, "msdyn_fact", "ownerid", Columns); }
/// <summary>
/// <para><b>FieldComputation (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_fieldcomputation</para>
/// </summary>
public List<FieldComputation> GetFieldComputations_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldComputation>(Service, this.Id, "msdyn_fieldcomputation", "ownerid", Columns); }
/// <summary>
/// <para><b>FieldComputation (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_fieldcomputation</para>
/// </summary>
public List<FieldComputation> GetFieldComputations_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldComputation>(Service, this.Id, "msdyn_fieldcomputation", "ownerid", Columns); }
/// <summary>
/// <para><b>FieldServiceSetting (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_fieldservicesetting</para>
/// </summary>
public List<FieldServiceSetting> GetFieldServiceSettings_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldServiceSetting>(Service, this.Id, "msdyn_fieldservicesetting", "ownerid", Columns); }
/// <summary>
/// <para><b>FieldServiceSetting (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_fieldservicesetting</para>
/// </summary>
public List<FieldServiceSetting> GetFieldServiceSettings_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldServiceSetting>(Service, this.Id, "msdyn_fieldservicesetting", "ownerid", Columns); }
/// <summary>
/// <para><b>FindWorkEvent (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_findworkevent</para>
/// </summary>
public List<FindWorkEvent> GetFindWorkEvents_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FindWorkEvent>(Service, this.Id, "msdyn_findworkevent", "ownerid", Columns); }
/// <summary>
/// <para><b>FindWorkEvent (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_findworkevent</para>
/// </summary>
public List<FindWorkEvent> GetFindWorkEvents_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FindWorkEvent>(Service, this.Id, "msdyn_findworkevent", "ownerid", Columns); }
/// <summary>
/// <para><b>IncidentType (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_incidenttype</para>
/// </summary>
public List<IncidentType> GetIncidentTypes_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IncidentType>(Service, this.Id, "msdyn_incidenttype", "ownerid", Columns); }
/// <summary>
/// <para><b>IncidentType (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_incidenttype</para>
/// </summary>
public List<IncidentType> GetIncidentTypes_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IncidentType>(Service, this.Id, "msdyn_incidenttype", "ownerid", Columns); }
/// <summary>
/// <para><b>IncidentTypeCharacteristic (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_incidenttypecharacteristic</para>
/// </summary>
public List<IncidentTypeCharacteristic> GetIncidentTypeCharacteristics_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IncidentTypeCharacteristic>(Service, this.Id, "msdyn_incidenttypecharacteristic", "ownerid", Columns); }
/// <summary>
/// <para><b>IncidentTypeCharacteristic (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_incidenttypecharacteristic</para>
/// </summary>
public List<IncidentTypeCharacteristic> GetIncidentTypeCharacteristics_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IncidentTypeCharacteristic>(Service, this.Id, "msdyn_incidenttypecharacteristic", "ownerid", Columns); }
/// <summary>
/// <para><b>IncidentTypeProduct (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_incidenttypeproduct</para>
/// </summary>
public List<IncidentTypeProduct> GetIncidentTypeProducts_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IncidentTypeProduct>(Service, this.Id, "msdyn_incidenttypeproduct", "ownerid", Columns); }
/// <summary>
/// <para><b>IncidentTypeProduct (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_incidenttypeproduct</para>
/// </summary>
public List<IncidentTypeProduct> GetIncidentTypeProducts_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IncidentTypeProduct>(Service, this.Id, "msdyn_incidenttypeproduct", "ownerid", Columns); }
/// <summary>
/// <para><b>IncidentTypeService (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_incidenttypeservice</para>
/// </summary>
public List<IncidentTypeService> GetIncidentTypeServices_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IncidentTypeService>(Service, this.Id, "msdyn_incidenttypeservice", "ownerid", Columns); }
/// <summary>
/// <para><b>IncidentTypeService (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_incidenttypeservice</para>
/// </summary>
public List<IncidentTypeService> GetIncidentTypeServices_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IncidentTypeService>(Service, this.Id, "msdyn_incidenttypeservice", "ownerid", Columns); }
/// <summary>
/// <para><b>IncidentTypeServiceTask (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_incidenttypeservicetask</para>
/// </summary>
public List<IncidentTypeServiceTask> GetIncidentTypeServiceTasks_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IncidentTypeServiceTask>(Service, this.Id, "msdyn_incidenttypeservicetask", "ownerid", Columns); }
/// <summary>
/// <para><b>IncidentTypeServiceTask (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_incidenttypeservicetask</para>
/// </summary>
public List<IncidentTypeServiceTask> GetIncidentTypeServiceTasks_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IncidentTypeServiceTask>(Service, this.Id, "msdyn_incidenttypeservicetask", "ownerid", Columns); }
/// <summary>
/// <para><b>IntegrationJob (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_integrationjob</para>
/// </summary>
public List<IntegrationJob> GetIntegrationJobs_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IntegrationJob>(Service, this.Id, "msdyn_integrationjob", "ownerid", Columns); }
/// <summary>
/// <para><b>IntegrationJob (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_integrationjob</para>
/// </summary>
public List<IntegrationJob> GetIntegrationJobs_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IntegrationJob>(Service, this.Id, "msdyn_integrationjob", "ownerid", Columns); }
/// <summary>
/// <para><b>IntegrationJobDetail (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_integrationjobdetail</para>
/// </summary>
public List<IntegrationJobDetail> GetIntegrationJobDetails_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IntegrationJobDetail>(Service, this.Id, "msdyn_integrationjobdetail", "ownerid", Columns); }
/// <summary>
/// <para><b>IntegrationJobDetail (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_integrationjobdetail</para>
/// </summary>
public List<IntegrationJobDetail> GetIntegrationJobDetails_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IntegrationJobDetail>(Service, this.Id, "msdyn_integrationjobdetail", "ownerid", Columns); }
/// <summary>
/// <para><b>InventoryAdjustment (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_inventoryadjustment</para>
/// </summary>
public List<InventoryAdjustment> GetInventoryAdjustments_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InventoryAdjustment>(Service, this.Id, "msdyn_inventoryadjustment", "ownerid", Columns); }
/// <summary>
/// <para><b>InventoryAdjustment (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_inventoryadjustment</para>
/// </summary>
public List<InventoryAdjustment> GetInventoryAdjustments_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InventoryAdjustment>(Service, this.Id, "msdyn_inventoryadjustment", "ownerid", Columns); }
/// <summary>
/// <para><b>InventoryAdjustmentProduct (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_inventoryadjustmentproduct</para>
/// </summary>
public List<InventoryAdjustmentProduct> GetInventoryAdjustmentProducts_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InventoryAdjustmentProduct>(Service, this.Id, "msdyn_inventoryadjustmentproduct", "ownerid", Columns); }
/// <summary>
/// <para><b>InventoryAdjustmentProduct (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_inventoryadjustmentproduct</para>
/// </summary>
public List<InventoryAdjustmentProduct> GetInventoryAdjustmentProducts_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InventoryAdjustmentProduct>(Service, this.Id, "msdyn_inventoryadjustmentproduct", "ownerid", Columns); }
/// <summary>
/// <para><b>InventoryJournal (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_inventoryjournal</para>
/// </summary>
public List<InventoryJournal> GetInventoryJournals_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InventoryJournal>(Service, this.Id, "msdyn_inventoryjournal", "ownerid", Columns); }
/// <summary>
/// <para><b>InventoryJournal (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_inventoryjournal</para>
/// </summary>
public List<InventoryJournal> GetInventoryJournals_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InventoryJournal>(Service, this.Id, "msdyn_inventoryjournal", "ownerid", Columns); }
/// <summary>
/// <para><b>InventoryTransfer (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_inventorytransfer</para>
/// </summary>
public List<InventoryTransfer> GetInventoryTransfers_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InventoryTransfer>(Service, this.Id, "msdyn_inventorytransfer", "ownerid", Columns); }
/// <summary>
/// <para><b>InventoryTransfer (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_inventorytransfer</para>
/// </summary>
public List<InventoryTransfer> GetInventoryTransfers_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InventoryTransfer>(Service, this.Id, "msdyn_inventorytransfer", "ownerid", Columns); }
/// <summary>
/// <para><b>InvoiceLineDetail (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_invoicelinetransaction</para>
/// </summary>
public List<InvoiceLineDetail> GetInvoiceLineDetails_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceLineDetail>(Service, this.Id, "msdyn_invoicelinetransaction", "ownerid", Columns); }
/// <summary>
/// <para><b>InvoiceLineDetail (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_invoicelinetransaction</para>
/// </summary>
public List<InvoiceLineDetail> GetInvoiceLineDetails_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceLineDetail>(Service, this.Id, "msdyn_invoicelinetransaction", "ownerid", Columns); }
/// <summary>
/// <para><b>Journal (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_journal</para>
/// </summary>
public List<Journal> GetJournals_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Journal>(Service, this.Id, "msdyn_journal", "ownerid", Columns); }
/// <summary>
/// <para><b>Journal (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_journal</para>
/// </summary>
public List<Journal> GetJournals_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Journal>(Service, this.Id, "msdyn_journal", "ownerid", Columns); }
/// <summary>
/// <para><b>JournalLine (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_journalline</para>
/// </summary>
public List<JournalLine> GetJournalLines_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<JournalLine>(Service, this.Id, "msdyn_journalline", "ownerid", Columns); }
/// <summary>
/// <para><b>JournalLine (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_journalline</para>
/// </summary>
public List<JournalLine> GetJournalLines_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<JournalLine>(Service, this.Id, "msdyn_journalline", "ownerid", Columns); }
/// <summary>
/// <para><b>OpportunityLineResourceCategory (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_opportunitylineresourcecategory</para>
/// </summary>
public List<OpportunityLineResourceCategory> GetOpportunityLineResourceCategories_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLineResourceCategory>(Service, this.Id, "msdyn_opportunitylineresourcecategory", "ownerid", Columns); }
/// <summary>
/// <para><b>OpportunityLineResourceCategory (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_opportunitylineresourcecategory</para>
/// </summary>
public List<OpportunityLineResourceCategory> GetOpportunityLineResourceCategories_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLineResourceCategory>(Service, this.Id, "msdyn_opportunitylineresourcecategory", "ownerid", Columns); }
/// <summary>
/// <para><b>OpportunityLineDetail (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_opportunitylinetransaction</para>
/// </summary>
public List<OpportunityLineDetail> GetOpportunityLineDetails_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLineDetail>(Service, this.Id, "msdyn_opportunitylinetransaction", "ownerid", Columns); }
/// <summary>
/// <para><b>OpportunityLineDetail (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_opportunitylinetransaction</para>
/// </summary>
public List<OpportunityLineDetail> GetOpportunityLineDetails_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLineDetail>(Service, this.Id, "msdyn_opportunitylinetransaction", "ownerid", Columns); }
/// <summary>
/// <para><b>OpportunityLineTransactionCategory (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_opportunitylinetransactioncategory</para>
/// </summary>
public List<OpportunityLineTransactionCategory> GetOpportunityLineTransactionCategories_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLineTransactionCategory>(Service, this.Id, "msdyn_opportunitylinetransactioncategory", "ownerid", Columns); }
/// <summary>
/// <para><b>OpportunityLineTransactionCategory (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_opportunitylinetransactioncategory</para>
/// </summary>
public List<OpportunityLineTransactionCategory> GetOpportunityLineTransactionCategories_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLineTransactionCategory>(Service, this.Id, "msdyn_opportunitylinetransactioncategory", "ownerid", Columns); }
/// <summary>
/// <para><b>OpportunityLineTransactionClassification (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_opportunitylinetransactionclassificatio</para>
/// </summary>
public List<OpportunityLineTransactionClassification> GetOpportunityLineTransactionClassifications_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLineTransactionClassification>(Service, this.Id, "msdyn_opportunitylinetransactionclassificatio", "ownerid", Columns); }
/// <summary>
/// <para><b>OpportunityLineTransactionClassification (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_opportunitylinetransactionclassificatio</para>
/// </summary>
public List<OpportunityLineTransactionClassification> GetOpportunityLineTransactionClassifications_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLineTransactionClassification>(Service, this.Id, "msdyn_opportunitylinetransactionclassificatio", "ownerid", Columns); }
/// <summary>
/// <para><b>OpportunityProjectPriceList (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_opportunitypricelist</para>
/// </summary>
public List<OpportunityProjectPriceList> GetProjectPriceLists_Owner2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityProjectPriceList>(Service, this.Id, "msdyn_opportunitypricelist", "ownerid", Columns); }
/// <summary>
/// <para><b>OpportunityProjectPriceList (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_opportunitypricelist</para>
/// </summary>
public List<OpportunityProjectPriceList> GetProjectPriceLists_Owner2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityProjectPriceList>(Service, this.Id, "msdyn_opportunitypricelist", "ownerid", Columns); }
/// <summary>
/// <para><b>OrderInvoicingDate (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_orderinvoicingdate</para>
/// </summary>
public List<OrderInvoicingDate> GetOrderInvoicingDates_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderInvoicingDate>(Service, this.Id, "msdyn_orderinvoicingdate", "ownerid", Columns); }
/// <summary>
/// <para><b>OrderInvoicingDate (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_orderinvoicingdate</para>
/// </summary>
public List<OrderInvoicingDate> GetOrderInvoicingDates_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderInvoicingDate>(Service, this.Id, "msdyn_orderinvoicingdate", "ownerid", Columns); }
/// <summary>
/// <para><b>OrderInvoicingProduct (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_orderinvoicingproduct</para>
/// </summary>
public List<OrderInvoicingProduct> GetOrderInvoicingProducts_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderInvoicingProduct>(Service, this.Id, "msdyn_orderinvoicingproduct", "ownerid", Columns); }
/// <summary>
/// <para><b>OrderInvoicingProduct (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_orderinvoicingproduct</para>
/// </summary>
public List<OrderInvoicingProduct> GetOrderInvoicingProducts_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderInvoicingProduct>(Service, this.Id, "msdyn_orderinvoicingproduct", "ownerid", Columns); }
/// <summary>
/// <para><b>OrderInvoicingSetup (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_orderinvoicingsetup</para>
/// </summary>
public List<OrderInvoicingSetup> GetOrderInvoicingSetups_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderInvoicingSetup>(Service, this.Id, "msdyn_orderinvoicingsetup", "ownerid", Columns); }
/// <summary>
/// <para><b>OrderInvoicingSetup (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_orderinvoicingsetup</para>
/// </summary>
public List<OrderInvoicingSetup> GetOrderInvoicingSetups_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderInvoicingSetup>(Service, this.Id, "msdyn_orderinvoicingsetup", "ownerid", Columns); }
/// <summary>
/// <para><b>OrderInvoicingSetupDate (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_orderinvoicingsetupdate</para>
/// </summary>
public List<OrderInvoicingSetupDate> GetOrderInvoicingSetupDates_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderInvoicingSetupDate>(Service, this.Id, "msdyn_orderinvoicingsetupdate", "ownerid", Columns); }
/// <summary>
/// <para><b>OrderInvoicingSetupDate (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_orderinvoicingsetupdate</para>
/// </summary>
public List<OrderInvoicingSetupDate> GetOrderInvoicingSetupDates_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderInvoicingSetupDate>(Service, this.Id, "msdyn_orderinvoicingsetupdate", "ownerid", Columns); }
/// <summary>
/// <para><b>ProjectContractLineResourceCategory (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_orderlineresourcecategory</para>
/// </summary>
public List<ProjectContractLineResourceCategory> GetProjectContractLineResourceCategories_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineResourceCategory>(Service, this.Id, "msdyn_orderlineresourcecategory", "ownerid", Columns); }
/// <summary>
/// <para><b>ProjectContractLineResourceCategory (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_orderlineresourcecategory</para>
/// </summary>
public List<ProjectContractLineResourceCategory> GetProjectContractLineResourceCategories_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineResourceCategory>(Service, this.Id, "msdyn_orderlineresourcecategory", "ownerid", Columns); }
/// <summary>
/// <para><b>ProjectContractLineDetail (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_orderlinetransaction</para>
/// </summary>
public List<ProjectContractLineDetail> GetProjectContractLineDetails_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineDetail>(Service, this.Id, "msdyn_orderlinetransaction", "ownerid", Columns); }
/// <summary>
/// <para><b>ProjectContractLineDetail (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_orderlinetransaction</para>
/// </summary>
public List<ProjectContractLineDetail> GetProjectContractLineDetails_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineDetail>(Service, this.Id, "msdyn_orderlinetransaction", "ownerid", Columns); }
/// <summary>
/// <para><b>ProjectContractLineTransactionCategory (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_orderlinetransactioncategory</para>
/// </summary>
public List<ProjectContractLineTransactionCategory> GetProjectContractLineTransactionCategories_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineTransactionCategory>(Service, this.Id, "msdyn_orderlinetransactioncategory", "ownerid", Columns); }
/// <summary>
/// <para><b>ProjectContractLineTransactionCategory (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_orderlinetransactioncategory</para>
/// </summary>
public List<ProjectContractLineTransactionCategory> GetProjectContractLineTransactionCategories_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineTransactionCategory>(Service, this.Id, "msdyn_orderlinetransactioncategory", "ownerid", Columns); }
/// <summary>
/// <para><b>ProjectContractLineTransactionClassification (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_orderlinetransactionclassification</para>
/// </summary>
public List<ProjectContractLineTransactionClassification> GetProjectContractLineTransactionClassifications_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineTransactionClassification>(Service, this.Id, "msdyn_orderlinetransactionclassification", "ownerid", Columns); }
/// <summary>
/// <para><b>ProjectContractLineTransactionClassification (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_orderlinetransactionclassification</para>
/// </summary>
public List<ProjectContractLineTransactionClassification> GetProjectContractLineTransactionClassifications_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineTransactionClassification>(Service, this.Id, "msdyn_orderlinetransactionclassification", "ownerid", Columns); }
/// <summary>
/// <para><b>ProjectContractProjectPriceList (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_orderpricelist</para>
/// </summary>
public List<ProjectContractProjectPriceList> GetProjectPriceLists_Owner3 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractProjectPriceList>(Service, this.Id, "msdyn_orderpricelist", "ownerid", Columns); }
/// <summary>
/// <para><b>ProjectContractProjectPriceList (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_orderpricelist</para>
/// </summary>
public List<ProjectContractProjectPriceList> GetProjectPriceLists_Owner3 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractProjectPriceList>(Service, this.Id, "msdyn_orderpricelist", "ownerid", Columns); }
/// <summary>
/// <para><b>Payment (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_payment</para>
/// </summary>
public List<Payment> GetPayments_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Payment>(Service, this.Id, "msdyn_payment", "ownerid", Columns); }
/// <summary>
/// <para><b>Payment (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_payment</para>
/// </summary>
public List<Payment> GetPayments_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Payment>(Service, this.Id, "msdyn_payment", "ownerid", Columns); }
/// <summary>
/// <para><b>PaymentDetail (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_paymentdetail</para>
/// </summary>
public List<PaymentDetail> GetPaymentDetail_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PaymentDetail>(Service, this.Id, "msdyn_paymentdetail", "ownerid", Columns); }
/// <summary>
/// <para><b>PaymentDetail (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_paymentdetail</para>
/// </summary>
public List<PaymentDetail> GetPaymentDetail_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PaymentDetail>(Service, this.Id, "msdyn_paymentdetail", "ownerid", Columns); }
/// <summary>
/// <para><b>PaymentMethod (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_paymentmethod</para>
/// </summary>
public List<PaymentMethod> GetPaymentMethods_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PaymentMethod>(Service, this.Id, "msdyn_paymentmethod", "ownerid", Columns); }
/// <summary>
/// <para><b>PaymentMethod (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_paymentmethod</para>
/// </summary>
public List<PaymentMethod> GetPaymentMethods_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PaymentMethod>(Service, this.Id, "msdyn_paymentmethod", "ownerid", Columns); }
/// <summary>
/// <para><b>PaymentTerm (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_paymentterm</para>
/// </summary>
public List<PaymentTerm> GetPaymentTerms_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PaymentTerm>(Service, this.Id, "msdyn_paymentterm", "ownerid", Columns); }
/// <summary>
/// <para><b>PaymentTerm (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_paymentterm</para>
/// </summary>
public List<PaymentTerm> GetPaymentTerms_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PaymentTerm>(Service, this.Id, "msdyn_paymentterm", "ownerid", Columns); }
/// <summary>
/// <para><b>ProfileAlbum (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_postalbum</para>
/// </summary>
public List<ProfileAlbum> GetProfileAlbums_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProfileAlbum>(Service, this.Id, "msdyn_postalbum", "ownerid", Columns); }
/// <summary>
/// <para><b>ProfileAlbum (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_postalbum</para>
/// </summary>
public List<ProfileAlbum> GetProfileAlbums_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProfileAlbum>(Service, this.Id, "msdyn_postalbum", "ownerid", Columns); }
/// <summary>
/// <para><b>PostalCode (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_postalcode</para>
/// </summary>
public List<PostalCode> GetPostalCodes_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostalCode>(Service, this.Id, "msdyn_postalcode", "ownerid", Columns); }
/// <summary>
/// <para><b>PostalCode (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_postalcode</para>
/// </summary>
public List<PostalCode> GetPostalCodes_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostalCode>(Service, this.Id, "msdyn_postalcode", "ownerid", Columns); }
/// <summary>
/// <para><b>Priority (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_priority</para>
/// </summary>
public List<Priority> GetPriorities_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Priority>(Service, this.Id, "msdyn_priority", "ownerid", Columns); }
/// <summary>
/// <para><b>Priority (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_priority</para>
/// </summary>
public List<Priority> GetPriorities_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Priority>(Service, this.Id, "msdyn_priority", "ownerid", Columns); }
/// <summary>
/// <para><b>Project (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_project</para>
/// </summary>
public List<Project> GetProjects_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Project>(Service, this.Id, "msdyn_project", "ownerid", Columns); }
/// <summary>
/// <para><b>Project (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_project</para>
/// </summary>
public List<Project> GetProjects_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Project>(Service, this.Id, "msdyn_project", "ownerid", Columns); }
/// <summary>
/// <para><b>ProjectApproval (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_projectapproval</para>
/// </summary>
public List<ProjectApproval> GetProjectApproval_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectApproval>(Service, this.Id, "msdyn_projectapproval", "ownerid", Columns); }
/// <summary>
/// <para><b>ProjectApproval (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_projectapproval</para>
/// </summary>
public List<ProjectApproval> GetProjectApproval_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectApproval>(Service, this.Id, "msdyn_projectapproval", "ownerid", Columns); }
/// <summary>
/// <para><b>ProjectPriceList (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_projectpricelist</para>
/// </summary>
public List<ProjectPriceList> GetProjectPriceLists_Owner4 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectPriceList>(Service, this.Id, "msdyn_projectpricelist", "ownerid", Columns); }
/// <summary>
/// <para><b>ProjectPriceList (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_projectpricelist</para>
/// </summary>
public List<ProjectPriceList> GetProjectPriceLists_Owner4 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectPriceList>(Service, this.Id, "msdyn_projectpricelist", "ownerid", Columns); }
/// <summary>
/// <para><b>ProjectTask (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_projecttask</para>
/// </summary>
public List<ProjectTask> GetProjectTasks_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTask>(Service, this.Id, "msdyn_projecttask", "ownerid", Columns); }
/// <summary>
/// <para><b>ProjectTask (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_projecttask</para>
/// </summary>
public List<ProjectTask> GetProjectTasks_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTask>(Service, this.Id, "msdyn_projecttask", "ownerid", Columns); }
/// <summary>
/// <para><b>ProjectTaskDependency (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_projecttaskdependency</para>
/// </summary>
public List<ProjectTaskDependency> GetProjectTaskDependencies_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTaskDependency>(Service, this.Id, "msdyn_projecttaskdependency", "ownerid", Columns); }
/// <summary>
/// <para><b>ProjectTaskDependency (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_projecttaskdependency</para>
/// </summary>
public List<ProjectTaskDependency> GetProjectTaskDependencies_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTaskDependency>(Service, this.Id, "msdyn_projecttaskdependency", "ownerid", Columns); }
/// <summary>
/// <para><b>ProjectTaskStatusUser (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_projecttaskstatususer</para>
/// </summary>
public List<ProjectTaskStatusUser> GetProjectTaskStatusUser_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTaskStatusUser>(Service, this.Id, "msdyn_projecttaskstatususer", "ownerid", Columns); }
/// <summary>
/// <para><b>ProjectTaskStatusUser (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_projecttaskstatususer</para>
/// </summary>
public List<ProjectTaskStatusUser> GetProjectTaskStatusUser_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTaskStatusUser>(Service, this.Id, "msdyn_projecttaskstatususer", "ownerid", Columns); }
/// <summary>
/// <para><b>ProjectTeamMember (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_projectteam</para>
/// </summary>
public List<ProjectTeamMember> GetProjectTeamMembers_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTeamMember>(Service, this.Id, "msdyn_projectteam", "ownerid", Columns); }
/// <summary>
/// <para><b>ProjectTeamMember (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_projectteam</para>
/// </summary>
public List<ProjectTeamMember> GetProjectTeamMembers_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTeamMember>(Service, this.Id, "msdyn_projectteam", "ownerid", Columns); }
/// <summary>
/// <para><b>ProjectTransactionCategory (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_projecttransactioncategory</para>
/// </summary>
public List<ProjectTransactionCategory> GetProjectTransactionCategories_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTransactionCategory>(Service, this.Id, "msdyn_projecttransactioncategory", "ownerid", Columns); }
/// <summary>
/// <para><b>ProjectTransactionCategory (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_projecttransactioncategory</para>
/// </summary>
public List<ProjectTransactionCategory> GetProjectTransactionCategories_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTransactionCategory>(Service, this.Id, "msdyn_projecttransactioncategory", "ownerid", Columns); }
/// <summary>
/// <para><b>PurchaseOrder (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_purchaseorder</para>
/// </summary>
public List<PurchaseOrder> GetPurchaseOrders_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrder>(Service, this.Id, "msdyn_purchaseorder", "ownerid", Columns); }
/// <summary>
/// <para><b>PurchaseOrder (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_purchaseorder</para>
/// </summary>
public List<PurchaseOrder> GetPurchaseOrders_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrder>(Service, this.Id, "msdyn_purchaseorder", "ownerid", Columns); }
/// <summary>
/// <para><b>PurchaseOrderBill (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_purchaseorderbill</para>
/// </summary>
public List<PurchaseOrderBill> GetPurchaseOrderBills_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderBill>(Service, this.Id, "msdyn_purchaseorderbill", "ownerid", Columns); }
/// <summary>
/// <para><b>PurchaseOrderBill (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_purchaseorderbill</para>
/// </summary>
public List<PurchaseOrderBill> GetPurchaseOrderBills_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderBill>(Service, this.Id, "msdyn_purchaseorderbill", "ownerid", Columns); }
/// <summary>
/// <para><b>PurchaseOrderProduct (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_purchaseorderproduct</para>
/// </summary>
public List<PurchaseOrderProduct> GetPurchaseOrderProducts_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderProduct>(Service, this.Id, "msdyn_purchaseorderproduct", "ownerid", Columns); }
/// <summary>
/// <para><b>PurchaseOrderProduct (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_purchaseorderproduct</para>
/// </summary>
public List<PurchaseOrderProduct> GetPurchaseOrderProducts_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderProduct>(Service, this.Id, "msdyn_purchaseorderproduct", "ownerid", Columns); }
/// <summary>
/// <para><b>PurchaseOrderReceipt (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_purchaseorderreceipt</para>
/// </summary>
public List<PurchaseOrderReceipt> GetPurchaseOrderReceipts_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderReceipt>(Service, this.Id, "msdyn_purchaseorderreceipt", "ownerid", Columns); }
/// <summary>
/// <para><b>PurchaseOrderReceipt (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_purchaseorderreceipt</para>
/// </summary>
public List<PurchaseOrderReceipt> GetPurchaseOrderReceipts_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderReceipt>(Service, this.Id, "msdyn_purchaseorderreceipt", "ownerid", Columns); }
/// <summary>
/// <para><b>PurchaseOrderReceiptProduct (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_purchaseorderreceiptproduct</para>
/// </summary>
public List<PurchaseOrderReceiptProduct> GetPurchaseOrderReceiptProducts_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderReceiptProduct>(Service, this.Id, "msdyn_purchaseorderreceiptproduct", "ownerid", Columns); }
/// <summary>
/// <para><b>PurchaseOrderReceiptProduct (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_purchaseorderreceiptproduct</para>
/// </summary>
public List<PurchaseOrderReceiptProduct> GetPurchaseOrderReceiptProducts_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderReceiptProduct>(Service, this.Id, "msdyn_purchaseorderreceiptproduct", "ownerid", Columns); }
/// <summary>
/// <para><b>PurchaseOrderSubStatus (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_purchaseordersubstatus</para>
/// </summary>
public List<PurchaseOrderSubStatus> GetPurchaseOrderSubStatuses_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderSubStatus>(Service, this.Id, "msdyn_purchaseordersubstatus", "ownerid", Columns); }
/// <summary>
/// <para><b>PurchaseOrderSubStatus (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_purchaseordersubstatus</para>
/// </summary>
public List<PurchaseOrderSubStatus> GetPurchaseOrderSubStatuses_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderSubStatus>(Service, this.Id, "msdyn_purchaseordersubstatus", "ownerid", Columns); }
/// <summary>
/// <para><b>QuoteBookingIncident (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_quotebookingincident</para>
/// </summary>
public List<QuoteBookingIncident> GetQuoteBookingIncidents_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingIncident>(Service, this.Id, "msdyn_quotebookingincident", "ownerid", Columns); }
/// <summary>
/// <para><b>QuoteBookingIncident (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_quotebookingincident</para>
/// </summary>
public List<QuoteBookingIncident> GetQuoteBookingIncidents_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingIncident>(Service, this.Id, "msdyn_quotebookingincident", "ownerid", Columns); }
/// <summary>
/// <para><b>QuoteBookingProduct (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_quotebookingproduct</para>
/// </summary>
public List<QuoteBookingProduct> GetQuoteBookingProducts_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingProduct>(Service, this.Id, "msdyn_quotebookingproduct", "ownerid", Columns); }
/// <summary>
/// <para><b>QuoteBookingProduct (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_quotebookingproduct</para>
/// </summary>
public List<QuoteBookingProduct> GetQuoteBookingProducts_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingProduct>(Service, this.Id, "msdyn_quotebookingproduct", "ownerid", Columns); }
/// <summary>
/// <para><b>QuoteBookingService (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_quotebookingservice</para>
/// </summary>
public List<QuoteBookingService> GetQuoteBookingServices_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingService>(Service, this.Id, "msdyn_quotebookingservice", "ownerid", Columns); }
/// <summary>
/// <para><b>QuoteBookingService (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_quotebookingservice</para>
/// </summary>
public List<QuoteBookingService> GetQuoteBookingServices_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingService>(Service, this.Id, "msdyn_quotebookingservice", "ownerid", Columns); }
/// <summary>
/// <para><b>QuoteBookingServiceTask (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_quotebookingservicetask</para>
/// </summary>
public List<QuoteBookingServiceTask> GetQuoteBookingServiceTasks_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingServiceTask>(Service, this.Id, "msdyn_quotebookingservicetask", "ownerid", Columns); }
/// <summary>
/// <para><b>QuoteBookingServiceTask (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_quotebookingservicetask</para>
/// </summary>
public List<QuoteBookingServiceTask> GetQuoteBookingServiceTasks_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingServiceTask>(Service, this.Id, "msdyn_quotebookingservicetask", "ownerid", Columns); }
/// <summary>
/// <para><b>QuoteBookingSetup (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_quotebookingsetup</para>
/// </summary>
public List<QuoteBookingSetup> GetQuoteBookingSetups_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingSetup>(Service, this.Id, "msdyn_quotebookingsetup", "ownerid", Columns); }
/// <summary>
/// <para><b>QuoteBookingSetup (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_quotebookingsetup</para>
/// </summary>
public List<QuoteBookingSetup> GetQuoteBookingSetups_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingSetup>(Service, this.Id, "msdyn_quotebookingsetup", "ownerid", Columns); }
/// <summary>
/// <para><b>QuoteInvoicingProduct (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_quoteinvoicingproduct</para>
/// </summary>
public List<QuoteInvoicingProduct> GetQuoteInvoicingProducts_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteInvoicingProduct>(Service, this.Id, "msdyn_quoteinvoicingproduct", "ownerid", Columns); }
/// <summary>
/// <para><b>QuoteInvoicingProduct (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_quoteinvoicingproduct</para>
/// </summary>
public List<QuoteInvoicingProduct> GetQuoteInvoicingProducts_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteInvoicingProduct>(Service, this.Id, "msdyn_quoteinvoicingproduct", "ownerid", Columns); }
/// <summary>
/// <para><b>QuoteInvoicingSetup (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_quoteinvoicingsetup</para>
/// </summary>
public List<QuoteInvoicingSetup> GetQuoteInvoicingSetups_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteInvoicingSetup>(Service, this.Id, "msdyn_quoteinvoicingsetup", "ownerid", Columns); }
/// <summary>
/// <para><b>QuoteInvoicingSetup (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_quoteinvoicingsetup</para>
/// </summary>
public List<QuoteInvoicingSetup> GetQuoteInvoicingSetups_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteInvoicingSetup>(Service, this.Id, "msdyn_quoteinvoicingsetup", "ownerid", Columns); }
/// <summary>
/// <para><b>QuoteLineAnalyticsBreakdown (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_quotelineanalyticsbreakdown</para>
/// </summary>
public List<QuoteLineAnalyticsBreakdown> GetQuoteLineAnalyticsBreakdown_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineAnalyticsBreakdown>(Service, this.Id, "msdyn_quotelineanalyticsbreakdown", "ownerid", Columns); }
/// <summary>
/// <para><b>QuoteLineAnalyticsBreakdown (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_quotelineanalyticsbreakdown</para>
/// </summary>
public List<QuoteLineAnalyticsBreakdown> GetQuoteLineAnalyticsBreakdown_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineAnalyticsBreakdown>(Service, this.Id, "msdyn_quotelineanalyticsbreakdown", "ownerid", Columns); }
/// <summary>
/// <para><b>QuoteLineResourceCategory (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_quotelineresourcecategory</para>
/// </summary>
public List<QuoteLineResourceCategory> GetQuoteLineResourceCategories_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineResourceCategory>(Service, this.Id, "msdyn_quotelineresourcecategory", "ownerid", Columns); }
/// <summary>
/// <para><b>QuoteLineResourceCategory (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_quotelineresourcecategory</para>
/// </summary>
public List<QuoteLineResourceCategory> GetQuoteLineResourceCategories_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineResourceCategory>(Service, this.Id, "msdyn_quotelineresourcecategory", "ownerid", Columns); }
/// <summary>
/// <para><b>QuoteLineMilestone (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_quotelinescheduleofvalue</para>
/// </summary>
public List<QuoteLineMilestone> GetQuoteLineMilestones_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineMilestone>(Service, this.Id, "msdyn_quotelinescheduleofvalue", "ownerid", Columns); }
/// <summary>
/// <para><b>QuoteLineMilestone (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_quotelinescheduleofvalue</para>
/// </summary>
public List<QuoteLineMilestone> GetQuoteLineMilestones_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineMilestone>(Service, this.Id, "msdyn_quotelinescheduleofvalue", "ownerid", Columns); }
/// <summary>
/// <para><b>QuoteLineDetail (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_quotelinetransaction</para>
/// </summary>
public List<QuoteLineDetail> GetQuoteLineDetail_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineDetail>(Service, this.Id, "msdyn_quotelinetransaction", "ownerid", Columns); }
/// <summary>
/// <para><b>QuoteLineDetail (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_quotelinetransaction</para>
/// </summary>
public List<QuoteLineDetail> GetQuoteLineDetail_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineDetail>(Service, this.Id, "msdyn_quotelinetransaction", "ownerid", Columns); }
/// <summary>
/// <para><b>QuoteLineTransactionCategory (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_quotelinetransactioncategory</para>
/// </summary>
public List<QuoteLineTransactionCategory> GetQuoteLineTransactionCategories_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineTransactionCategory>(Service, this.Id, "msdyn_quotelinetransactioncategory", "ownerid", Columns); }
/// <summary>
/// <para><b>QuoteLineTransactionCategory (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_quotelinetransactioncategory</para>
/// </summary>
public List<QuoteLineTransactionCategory> GetQuoteLineTransactionCategories_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineTransactionCategory>(Service, this.Id, "msdyn_quotelinetransactioncategory", "ownerid", Columns); }
/// <summary>
/// <para><b>QuoteLineTransactionClassification (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_quotelinetransactionclassification</para>
/// </summary>
public List<QuoteLineTransactionClassification> GetQuoteLineTransactionClassifications_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineTransactionClassification>(Service, this.Id, "msdyn_quotelinetransactionclassification", "ownerid", Columns); }
/// <summary>
/// <para><b>QuoteLineTransactionClassification (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_quotelinetransactionclassification</para>
/// </summary>
public List<QuoteLineTransactionClassification> GetQuoteLineTransactionClassifications_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineTransactionClassification>(Service, this.Id, "msdyn_quotelinetransactionclassification", "ownerid", Columns); }
/// <summary>
/// <para><b>QuoteProjectPriceList (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_quotepricelist</para>
/// </summary>
public List<QuoteProjectPriceList> GetProjectPriceLists_Owner5 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteProjectPriceList>(Service, this.Id, "msdyn_quotepricelist", "ownerid", Columns); }
/// <summary>
/// <para><b>QuoteProjectPriceList (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_quotepricelist</para>
/// </summary>
public List<QuoteProjectPriceList> GetProjectPriceLists_Owner5 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteProjectPriceList>(Service, this.Id, "msdyn_quotepricelist", "ownerid", Columns); }
/// <summary>
/// <para><b>RequirementCharacteristic (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_requirementcharacteristic</para>
/// </summary>
public List<RequirementCharacteristic> GetRequirementCharacteristics_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementCharacteristic>(Service, this.Id, "msdyn_requirementcharacteristic", "ownerid", Columns); }
/// <summary>
/// <para><b>RequirementCharacteristic (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_requirementcharacteristic</para>
/// </summary>
public List<RequirementCharacteristic> GetRequirementCharacteristics_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementCharacteristic>(Service, this.Id, "msdyn_requirementcharacteristic", "ownerid", Columns); }
/// <summary>
/// <para><b>RequirementOrganizationUnit (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_requirementorganizationunit</para>
/// </summary>
public List<RequirementOrganizationUnit> GetRequirementOrganizationUnits_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementOrganizationUnit>(Service, this.Id, "msdyn_requirementorganizationunit", "ownerid", Columns); }
/// <summary>
/// <para><b>RequirementOrganizationUnit (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_requirementorganizationunit</para>
/// </summary>
public List<RequirementOrganizationUnit> GetRequirementOrganizationUnits_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementOrganizationUnit>(Service, this.Id, "msdyn_requirementorganizationunit", "ownerid", Columns); }
/// <summary>
/// <para><b>RequirementResourceCategory (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_requirementresourcecategory</para>
/// </summary>
public List<RequirementResourceCategory> GetRequirementResourceCategory_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementResourceCategory>(Service, this.Id, "msdyn_requirementresourcecategory", "ownerid", Columns); }
/// <summary>
/// <para><b>RequirementResourceCategory (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_requirementresourcecategory</para>
/// </summary>
public List<RequirementResourceCategory> GetRequirementResourceCategory_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementResourceCategory>(Service, this.Id, "msdyn_requirementresourcecategory", "ownerid", Columns); }
/// <summary>
/// <para><b>RequirementResourcePreference (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_requirementresourcepreference</para>
/// </summary>
public List<RequirementResourcePreference> GetRequirementResourcePreferences_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementResourcePreference>(Service, this.Id, "msdyn_requirementresourcepreference", "ownerid", Columns); }
/// <summary>
/// <para><b>RequirementResourcePreference (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_requirementresourcepreference</para>
/// </summary>
public List<RequirementResourcePreference> GetRequirementResourcePreferences_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementResourcePreference>(Service, this.Id, "msdyn_requirementresourcepreference", "ownerid", Columns); }
/// <summary>
/// <para><b>RequirementStatus (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_requirementstatus</para>
/// </summary>
public List<RequirementStatus> GetRequirementStatuses_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementStatus>(Service, this.Id, "msdyn_requirementstatus", "ownerid", Columns); }
/// <summary>
/// <para><b>RequirementStatus (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_requirementstatus</para>
/// </summary>
public List<RequirementStatus> GetRequirementStatuses_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RequirementStatus>(Service, this.Id, "msdyn_requirementstatus", "ownerid", Columns); }
/// <summary>
/// <para><b>ResourceAssignment (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_resourceassignment</para>
/// </summary>
public List<ResourceAssignment> GetResourceAssignments_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceAssignment>(Service, this.Id, "msdyn_resourceassignment", "ownerid", Columns); }
/// <summary>
/// <para><b>ResourceAssignment (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_resourceassignment</para>
/// </summary>
public List<ResourceAssignment> GetResourceAssignments_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceAssignment>(Service, this.Id, "msdyn_resourceassignment", "ownerid", Columns); }
/// <summary>
/// <para><b>ResourceAssignmentDetail (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_resourceassignmentdetail</para>
/// </summary>
public List<ResourceAssignmentDetail> GetResourceAssignmentDetails_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceAssignmentDetail>(Service, this.Id, "msdyn_resourceassignmentdetail", "ownerid", Columns); }
/// <summary>
/// <para><b>ResourceAssignmentDetail (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_resourceassignmentdetail</para>
/// </summary>
public List<ResourceAssignmentDetail> GetResourceAssignmentDetails_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceAssignmentDetail>(Service, this.Id, "msdyn_resourceassignmentdetail", "ownerid", Columns); }
/// <summary>
/// <para><b>ResourcePayType (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_resourcepaytype</para>
/// </summary>
public List<ResourcePayType> GetResourcePayTypes_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourcePayType>(Service, this.Id, "msdyn_resourcepaytype", "ownerid", Columns); }
/// <summary>
/// <para><b>ResourcePayType (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_resourcepaytype</para>
/// </summary>
public List<ResourcePayType> GetResourcePayTypes_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourcePayType>(Service, this.Id, "msdyn_resourcepaytype", "ownerid", Columns); }
/// <summary>
/// <para><b>ResourceRequest (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_resourcerequest</para>
/// </summary>
public List<ResourceRequest> GetResourceRequests_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceRequest>(Service, this.Id, "msdyn_resourcerequest", "ownerid", Columns); }
/// <summary>
/// <para><b>ResourceRequest (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_resourcerequest</para>
/// </summary>
public List<ResourceRequest> GetResourceRequests_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceRequest>(Service, this.Id, "msdyn_resourcerequest", "ownerid", Columns); }
/// <summary>
/// <para><b>ResourceRequirement (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_resourcerequirement</para>
/// </summary>
public List<ResourceRequirement> GetResourceRequirements_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceRequirement>(Service, this.Id, "msdyn_resourcerequirement", "ownerid", Columns); }
/// <summary>
/// <para><b>ResourceRequirement (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_resourcerequirement</para>
/// </summary>
public List<ResourceRequirement> GetResourceRequirements_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceRequirement>(Service, this.Id, "msdyn_resourcerequirement", "ownerid", Columns); }
/// <summary>
/// <para><b>ResourceRequirementDetail (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_resourcerequirementdetail</para>
/// </summary>
public List<ResourceRequirementDetail> GetResourceRequirementDetails_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceRequirementDetail>(Service, this.Id, "msdyn_resourcerequirementdetail", "ownerid", Columns); }
/// <summary>
/// <para><b>ResourceRequirementDetail (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_resourcerequirementdetail</para>
/// </summary>
public List<ResourceRequirementDetail> GetResourceRequirementDetails_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceRequirementDetail>(Service, this.Id, "msdyn_resourcerequirementdetail", "ownerid", Columns); }
/// <summary>
/// <para><b>ResourceTerritory (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_resourceterritory</para>
/// </summary>
public List<ResourceTerritory> GetResourceTerritories_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceTerritory>(Service, this.Id, "msdyn_resourceterritory", "ownerid", Columns); }
/// <summary>
/// <para><b>ResourceTerritory (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_resourceterritory</para>
/// </summary>
public List<ResourceTerritory> GetResourceTerritories_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceTerritory>(Service, this.Id, "msdyn_resourceterritory", "ownerid", Columns); }
/// <summary>
/// <para><b>RMA (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_rma</para>
/// </summary>
public List<RMA> GetRMAs_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMA>(Service, this.Id, "msdyn_rma", "ownerid", Columns); }
/// <summary>
/// <para><b>RMA (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_rma</para>
/// </summary>
public List<RMA> GetRMAs_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMA>(Service, this.Id, "msdyn_rma", "ownerid", Columns); }
/// <summary>
/// <para><b>RMAProduct (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_rmaproduct</para>
/// </summary>
public List<RMAProduct> GetRMAProducts_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMAProduct>(Service, this.Id, "msdyn_rmaproduct", "ownerid", Columns); }
/// <summary>
/// <para><b>RMAProduct (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_rmaproduct</para>
/// </summary>
public List<RMAProduct> GetRMAProducts_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMAProduct>(Service, this.Id, "msdyn_rmaproduct", "ownerid", Columns); }
/// <summary>
/// <para><b>RMAReceipt (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_rmareceipt</para>
/// </summary>
public List<RMAReceipt> GetRMAReceipts_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMAReceipt>(Service, this.Id, "msdyn_rmareceipt", "ownerid", Columns); }
/// <summary>
/// <para><b>RMAReceipt (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_rmareceipt</para>
/// </summary>
public List<RMAReceipt> GetRMAReceipts_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMAReceipt>(Service, this.Id, "msdyn_rmareceipt", "ownerid", Columns); }
/// <summary>
/// <para><b>RMAReceiptProduct (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_rmareceiptproduct</para>
/// </summary>
public List<RMAReceiptProduct> GetRMAReceiptProducts_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMAReceiptProduct>(Service, this.Id, "msdyn_rmareceiptproduct", "ownerid", Columns); }
/// <summary>
/// <para><b>RMAReceiptProduct (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_rmareceiptproduct</para>
/// </summary>
public List<RMAReceiptProduct> GetRMAReceiptProducts_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMAReceiptProduct>(Service, this.Id, "msdyn_rmareceiptproduct", "ownerid", Columns); }
/// <summary>
/// <para><b>RMASub_Status (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_rmasubstatus</para>
/// </summary>
public List<RMASub_Status> GetRMASub_Statuses_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMASub_Status>(Service, this.Id, "msdyn_rmasubstatus", "ownerid", Columns); }
/// <summary>
/// <para><b>RMASub_Status (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_rmasubstatus</para>
/// </summary>
public List<RMASub_Status> GetRMASub_Statuses_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMASub_Status>(Service, this.Id, "msdyn_rmasubstatus", "ownerid", Columns); }
/// <summary>
/// <para><b>RoleCompetencyRequirement (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_rolecompetencyrequirement</para>
/// </summary>
public List<RoleCompetencyRequirement> GetRoleCompetencyRequirement_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RoleCompetencyRequirement>(Service, this.Id, "msdyn_rolecompetencyrequirement", "ownerid", Columns); }
/// <summary>
/// <para><b>RoleCompetencyRequirement (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_rolecompetencyrequirement</para>
/// </summary>
public List<RoleCompetencyRequirement> GetRoleCompetencyRequirement_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RoleCompetencyRequirement>(Service, this.Id, "msdyn_rolecompetencyrequirement", "ownerid", Columns); }
/// <summary>
/// <para><b>RoleUtilization (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_roleutilization</para>
/// </summary>
public List<RoleUtilization> GetRoleUtilization_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RoleUtilization>(Service, this.Id, "msdyn_roleutilization", "ownerid", Columns); }
/// <summary>
/// <para><b>RoleUtilization (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_roleutilization</para>
/// </summary>
public List<RoleUtilization> GetRoleUtilization_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RoleUtilization>(Service, this.Id, "msdyn_roleutilization", "ownerid", Columns); }
/// <summary>
/// <para><b>RTV (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_rtv</para>
/// </summary>
public List<RTV> GetRTVs_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTV>(Service, this.Id, "msdyn_rtv", "ownerid", Columns); }
/// <summary>
/// <para><b>RTV (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_rtv</para>
/// </summary>
public List<RTV> GetRTVs_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTV>(Service, this.Id, "msdyn_rtv", "ownerid", Columns); }
/// <summary>
/// <para><b>RTVProduct (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_rtvproduct</para>
/// </summary>
public List<RTVProduct> GetRTVProducts_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTVProduct>(Service, this.Id, "msdyn_rtvproduct", "ownerid", Columns); }
/// <summary>
/// <para><b>RTVProduct (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_rtvproduct</para>
/// </summary>
public List<RTVProduct> GetRTVProducts_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTVProduct>(Service, this.Id, "msdyn_rtvproduct", "ownerid", Columns); }
/// <summary>
/// <para><b>RTVSub_Status (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_rtvsubstatus</para>
/// </summary>
public List<RTVSub_Status> GetRTVSub_Statuses_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTVSub_Status>(Service, this.Id, "msdyn_rtvsubstatus", "ownerid", Columns); }
/// <summary>
/// <para><b>RTVSub_Status (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_rtvsubstatus</para>
/// </summary>
public List<RTVSub_Status> GetRTVSub_Statuses_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTVSub_Status>(Service, this.Id, "msdyn_rtvsubstatus", "ownerid", Columns); }
/// <summary>
/// <para><b>ScheduleBoardSetting (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_scheduleboardsetting</para>
/// </summary>
public List<ScheduleBoardSetting> GetScheduleBoardSettings_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ScheduleBoardSetting>(Service, this.Id, "msdyn_scheduleboardsetting", "ownerid", Columns); }
/// <summary>
/// <para><b>ScheduleBoardSetting (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_scheduleboardsetting</para>
/// </summary>
public List<ScheduleBoardSetting> GetScheduleBoardSettings_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ScheduleBoardSetting>(Service, this.Id, "msdyn_scheduleboardsetting", "ownerid", Columns); }
/// <summary>
/// <para><b>ServiceTaskType (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_servicetasktype</para>
/// </summary>
public List<ServiceTaskType> GetServiceTaskTypes_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceTaskType>(Service, this.Id, "msdyn_servicetasktype", "ownerid", Columns); }
/// <summary>
/// <para><b>ServiceTaskType (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_servicetasktype</para>
/// </summary>
public List<ServiceTaskType> GetServiceTaskTypes_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceTaskType>(Service, this.Id, "msdyn_servicetasktype", "ownerid", Columns); }
/// <summary>
/// <para><b>ShipVia (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_shipvia</para>
/// </summary>
public List<ShipVia> GetShipVia_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ShipVia>(Service, this.Id, "msdyn_shipvia", "ownerid", Columns); }
/// <summary>
/// <para><b>ShipVia (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_shipvia</para>
/// </summary>
public List<ShipVia> GetShipVia_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ShipVia>(Service, this.Id, "msdyn_shipvia", "ownerid", Columns); }
/// <summary>
/// <para><b>SystemUserSchedulerSetting (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_systemuserschedulersetting</para>
/// </summary>
public List<SystemUserSchedulerSetting> GetSystemUserSchedulerSetting_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemUserSchedulerSetting>(Service, this.Id, "msdyn_systemuserschedulersetting", "ownerid", Columns); }
/// <summary>
/// <para><b>SystemUserSchedulerSetting (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_systemuserschedulersetting</para>
/// </summary>
public List<SystemUserSchedulerSetting> GetSystemUserSchedulerSetting_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemUserSchedulerSetting>(Service, this.Id, "msdyn_systemuserschedulersetting", "ownerid", Columns); }
/// <summary>
/// <para><b>TaxCode (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_taxcode</para>
/// </summary>
public List<TaxCode> GetTaxCodes_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TaxCode>(Service, this.Id, "msdyn_taxcode", "ownerid", Columns); }
/// <summary>
/// <para><b>TaxCode (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_taxcode</para>
/// </summary>
public List<TaxCode> GetTaxCodes_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TaxCode>(Service, this.Id, "msdyn_taxcode", "ownerid", Columns); }
/// <summary>
/// <para><b>TaxCodeDetail (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_taxcodedetail</para>
/// </summary>
public List<TaxCodeDetail> GetTaxCodeDetails_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TaxCodeDetail>(Service, this.Id, "msdyn_taxcodedetail", "ownerid", Columns); }
/// <summary>
/// <para><b>TaxCodeDetail (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_taxcodedetail</para>
/// </summary>
public List<TaxCodeDetail> GetTaxCodeDetails_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TaxCodeDetail>(Service, this.Id, "msdyn_taxcodedetail", "ownerid", Columns); }
/// <summary>
/// <para><b>TimeEntry (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_timeentry</para>
/// </summary>
public List<TimeEntry> GetTimeEntries_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TimeEntry>(Service, this.Id, "msdyn_timeentry", "ownerid", Columns); }
/// <summary>
/// <para><b>TimeEntry (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_timeentry</para>
/// </summary>
public List<TimeEntry> GetTimeEntries_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TimeEntry>(Service, this.Id, "msdyn_timeentry", "ownerid", Columns); }
/// <summary>
/// <para><b>TimeGroup (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_timegroup</para>
/// </summary>
public List<TimeGroup> GetTimeGroups_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TimeGroup>(Service, this.Id, "msdyn_timegroup", "ownerid", Columns); }
/// <summary>
/// <para><b>TimeGroup (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_timegroup</para>
/// </summary>
public List<TimeGroup> GetTimeGroups_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TimeGroup>(Service, this.Id, "msdyn_timegroup", "ownerid", Columns); }
/// <summary>
/// <para><b>TimeGroupDetail (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_timegroupdetail</para>
/// </summary>
public List<TimeGroupDetail> GetTimeGroupDetails_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TimeGroupDetail>(Service, this.Id, "msdyn_timegroupdetail", "ownerid", Columns); }
/// <summary>
/// <para><b>TimeGroupDetail (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_timegroupdetail</para>
/// </summary>
public List<TimeGroupDetail> GetTimeGroupDetails_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TimeGroupDetail>(Service, this.Id, "msdyn_timegroupdetail", "ownerid", Columns); }
/// <summary>
/// <para><b>TimeOffCalendar (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_timeoffcalendar</para>
/// </summary>
public List<TimeOffCalendar> GetTimeOffCalendars_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TimeOffCalendar>(Service, this.Id, "msdyn_timeoffcalendar", "ownerid", Columns); }
/// <summary>
/// <para><b>TimeOffCalendar (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_timeoffcalendar</para>
/// </summary>
public List<TimeOffCalendar> GetTimeOffCalendars_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TimeOffCalendar>(Service, this.Id, "msdyn_timeoffcalendar", "ownerid", Columns); }
/// <summary>
/// <para><b>TimeOffRequest (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_timeoffrequest</para>
/// </summary>
public List<TimeOffRequest> GetTimeOffRequests_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TimeOffRequest>(Service, this.Id, "msdyn_timeoffrequest", "ownerid", Columns); }
/// <summary>
/// <para><b>TimeOffRequest (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_timeoffrequest</para>
/// </summary>
public List<TimeOffRequest> GetTimeOffRequests_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TimeOffRequest>(Service, this.Id, "msdyn_timeoffrequest", "ownerid", Columns); }
/// <summary>
/// <para><b>TransactionConnection (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_transactionconnection</para>
/// </summary>
public List<TransactionConnection> GetTransactionConnections_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TransactionConnection>(Service, this.Id, "msdyn_transactionconnection", "ownerid", Columns); }
/// <summary>
/// <para><b>TransactionConnection (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_transactionconnection</para>
/// </summary>
public List<TransactionConnection> GetTransactionConnections_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TransactionConnection>(Service, this.Id, "msdyn_transactionconnection", "ownerid", Columns); }
/// <summary>
/// <para><b>TransactionOrigin (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_transactionorigin</para>
/// </summary>
public List<TransactionOrigin> GetTransactionOrigins_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TransactionOrigin>(Service, this.Id, "msdyn_transactionorigin", "ownerid", Columns); }
/// <summary>
/// <para><b>TransactionOrigin (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_transactionorigin</para>
/// </summary>
public List<TransactionOrigin> GetTransactionOrigins_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TransactionOrigin>(Service, this.Id, "msdyn_transactionorigin", "ownerid", Columns); }
/// <summary>
/// <para><b>UserWorkHistory (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_userworkhistory</para>
/// </summary>
public List<UserWorkHistory> GetUserWorkHistory_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserWorkHistory>(Service, this.Id, "msdyn_userworkhistory", "ownerid", Columns); }
/// <summary>
/// <para><b>UserWorkHistory (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_userworkhistory</para>
/// </summary>
public List<UserWorkHistory> GetUserWorkHistory_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserWorkHistory>(Service, this.Id, "msdyn_userworkhistory", "ownerid", Columns); }
/// <summary>
/// <para><b>Filter (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_wallsavedqueryusersettings</para>
/// </summary>
public List<Filter> GetFilters_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Filter>(Service, this.Id, "msdyn_wallsavedqueryusersettings", "ownerid", Columns); }
/// <summary>
/// <para><b>Filter (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_wallsavedqueryusersettings</para>
/// </summary>
public List<Filter> GetFilters_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Filter>(Service, this.Id, "msdyn_wallsavedqueryusersettings", "ownerid", Columns); }
/// <summary>
/// <para><b>Warehouse (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_warehouse</para>
/// </summary>
public List<Warehouse> GetWarehouses_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Warehouse>(Service, this.Id, "msdyn_warehouse", "ownerid", Columns); }
/// <summary>
/// <para><b>Warehouse (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_warehouse</para>
/// </summary>
public List<Warehouse> GetWarehouses_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Warehouse>(Service, this.Id, "msdyn_warehouse", "ownerid", Columns); }
/// <summary>
/// <para><b>WorkTemplate (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_workhourtemplate</para>
/// </summary>
public List<WorkTemplate> GetWorkTemplate_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkTemplate>(Service, this.Id, "msdyn_workhourtemplate", "ownerid", Columns); }
/// <summary>
/// <para><b>WorkTemplate (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_workhourtemplate</para>
/// </summary>
public List<WorkTemplate> GetWorkTemplate_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkTemplate>(Service, this.Id, "msdyn_workhourtemplate", "ownerid", Columns); }
/// <summary>
/// <para><b>WorkOrder (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_workorder</para>
/// </summary>
public List<WorkOrder> GetWorkOrders_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrder>(Service, this.Id, "msdyn_workorder", "ownerid", Columns); }
/// <summary>
/// <para><b>WorkOrder (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_workorder</para>
/// </summary>
public List<WorkOrder> GetWorkOrders_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrder>(Service, this.Id, "msdyn_workorder", "ownerid", Columns); }
/// <summary>
/// <para><b>WorkOrderCharacteristic_Deprecated (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_workordercharacteristic</para>
/// </summary>
public List<WorkOrderCharacteristic_Deprecated> GetWorkOrderCharacteristics_Deprecated__Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderCharacteristic_Deprecated>(Service, this.Id, "msdyn_workordercharacteristic", "ownerid", Columns); }
/// <summary>
/// <para><b>WorkOrderCharacteristic_Deprecated (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_workordercharacteristic</para>
/// </summary>
public List<WorkOrderCharacteristic_Deprecated> GetWorkOrderCharacteristics_Deprecated__Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderCharacteristic_Deprecated>(Service, this.Id, "msdyn_workordercharacteristic", "ownerid", Columns); }
/// <summary>
/// <para><b>WorkOrderIncident (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_workorderincident</para>
/// </summary>
public List<WorkOrderIncident> GetWorkOrderIncidents_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderIncident>(Service, this.Id, "msdyn_workorderincident", "ownerid", Columns); }
/// <summary>
/// <para><b>WorkOrderIncident (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_workorderincident</para>
/// </summary>
public List<WorkOrderIncident> GetWorkOrderIncidents_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderIncident>(Service, this.Id, "msdyn_workorderincident", "ownerid", Columns); }
/// <summary>
/// <para><b>WorkOrderProduct (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_workorderproduct</para>
/// </summary>
public List<WorkOrderProduct> GetWorkOrderProducts_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderProduct>(Service, this.Id, "msdyn_workorderproduct", "ownerid", Columns); }
/// <summary>
/// <para><b>WorkOrderProduct (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_workorderproduct</para>
/// </summary>
public List<WorkOrderProduct> GetWorkOrderProducts_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderProduct>(Service, this.Id, "msdyn_workorderproduct", "ownerid", Columns); }
/// <summary>
/// <para><b>ResourceRestriction_Deprecated (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_workorderresourcerestriction</para>
/// </summary>
public List<ResourceRestriction_Deprecated> GetResourceRestrictions_Deprecated__Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceRestriction_Deprecated>(Service, this.Id, "msdyn_workorderresourcerestriction", "ownerid", Columns); }
/// <summary>
/// <para><b>ResourceRestriction_Deprecated (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_workorderresourcerestriction</para>
/// </summary>
public List<ResourceRestriction_Deprecated> GetResourceRestrictions_Deprecated__Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceRestriction_Deprecated>(Service, this.Id, "msdyn_workorderresourcerestriction", "ownerid", Columns); }
/// <summary>
/// <para><b>WorkOrderService (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_workorderservice</para>
/// </summary>
public List<WorkOrderService> GetWorkOrderServices_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderService>(Service, this.Id, "msdyn_workorderservice", "ownerid", Columns); }
/// <summary>
/// <para><b>WorkOrderService (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_workorderservice</para>
/// </summary>
public List<WorkOrderService> GetWorkOrderServices_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderService>(Service, this.Id, "msdyn_workorderservice", "ownerid", Columns); }
/// <summary>
/// <para><b>WorkOrderServiceTask (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_workorderservicetask</para>
/// </summary>
public List<WorkOrderServiceTask> GetWorkOrderServiceTasks_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderServiceTask>(Service, this.Id, "msdyn_workorderservicetask", "ownerid", Columns); }
/// <summary>
/// <para><b>WorkOrderServiceTask (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_workorderservicetask</para>
/// </summary>
public List<WorkOrderServiceTask> GetWorkOrderServiceTasks_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderServiceTask>(Service, this.Id, "msdyn_workorderservicetask", "ownerid", Columns); }
/// <summary>
/// <para><b>WorkOrderSub_Status (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_workordersubstatus</para>
/// </summary>
public List<WorkOrderSub_Status> GetWorkOrderSub_Statuses_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderSub_Status>(Service, this.Id, "msdyn_workordersubstatus", "ownerid", Columns); }
/// <summary>
/// <para><b>WorkOrderSub_Status (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_workordersubstatus</para>
/// </summary>
public List<WorkOrderSub_Status> GetWorkOrderSub_Statuses_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderSub_Status>(Service, this.Id, "msdyn_workordersubstatus", "ownerid", Columns); }
/// <summary>
/// <para><b>WorkOrderType (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_workordertype</para>
/// </summary>
public List<WorkOrderType> GetWorkOrderTypes_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderType>(Service, this.Id, "msdyn_workordertype", "ownerid", Columns); }
/// <summary>
/// <para><b>WorkOrderType (Owner)</b></para>
/// <para>Schema Name: owner_msdyn_workordertype</para>
/// </summary>
public List<WorkOrderType> GetWorkOrderTypes_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderType>(Service, this.Id, "msdyn_workordertype", "ownerid", Columns); }
/// <summary>
/// <para><b>OfficeDocument (Owner)</b></para>
/// <para>Schema Name: owner_officedocument</para>
/// </summary>
public List<OfficeDocument> GetOfficeDocuments_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OfficeDocument>(Service, this.Id, "officedocument", "ownerid", Columns); }
/// <summary>
/// <para><b>OfficeDocument (Owner)</b></para>
/// <para>Schema Name: owner_officedocument</para>
/// </summary>
public List<OfficeDocument> GetOfficeDocuments_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OfficeDocument>(Service, this.Id, "officedocument", "ownerid", Columns); }
/// <summary>
/// <para><b>Opportunity (Owner)</b></para>
/// <para>Schema Name: owner_opportunitys</para>
/// </summary>
public List<Opportunity> GetOpportunities_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Opportunity>(Service, this.Id, "opportunity", "ownerid", Columns); }
/// <summary>
/// <para><b>Opportunity (Owner)</b></para>
/// <para>Schema Name: owner_opportunitys</para>
/// </summary>
public List<Opportunity> GetOpportunities_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Opportunity>(Service, this.Id, "opportunity", "ownerid", Columns); }
/// <summary>
/// <para><b>PersonalDocumentTemplate (Owner)</b></para>
/// <para>Schema Name: owner_personaldocumenttemplates</para>
/// </summary>
public List<PersonalDocumentTemplate> GetPersonalDocumentTemplates_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PersonalDocumentTemplate>(Service, this.Id, "personaldocumenttemplate", "ownerid", Columns); }
/// <summary>
/// <para><b>PersonalDocumentTemplate (Owner)</b></para>
/// <para>Schema Name: owner_personaldocumenttemplates</para>
/// </summary>
public List<PersonalDocumentTemplate> GetPersonalDocumentTemplates_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PersonalDocumentTemplate>(Service, this.Id, "personaldocumenttemplate", "ownerid", Columns); }
/// <summary>
/// <para><b>Follow (Owner)</b></para>
/// <para>Schema Name: owner_postfollows</para>
/// </summary>
public List<Follow> GetFollows_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Follow>(Service, this.Id, "postfollow", "ownerid", Columns); }
/// <summary>
/// <para><b>Follow (Owner)</b></para>
/// <para>Schema Name: owner_postfollows</para>
/// </summary>
public List<Follow> GetFollows_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Follow>(Service, this.Id, "postfollow", "ownerid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Owner)</b></para>
/// <para>Schema Name: owner_processsessions</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "ownerid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Owner)</b></para>
/// <para>Schema Name: owner_processsessions</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "ownerid", Columns); }
/// <summary>
/// <para><b>Queue (Owner)</b></para>
/// <para>Schema Name: owner_queues</para>
/// </summary>
public List<Queue> GetQueues_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Queue>(Service, this.Id, "queue", "ownerid", Columns); }
/// <summary>
/// <para><b>Queue (Owner)</b></para>
/// <para>Schema Name: owner_queues</para>
/// </summary>
public List<Queue> GetQueues_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Queue>(Service, this.Id, "queue", "ownerid", Columns); }
/// <summary>
/// <para><b>Quote (Owner)</b></para>
/// <para>Schema Name: owner_quotes</para>
/// </summary>
public List<Quote> GetQuotes_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Quote>(Service, this.Id, "quote", "ownerid", Columns); }
/// <summary>
/// <para><b>Quote (Owner)</b></para>
/// <para>Schema Name: owner_quotes</para>
/// </summary>
public List<Quote> GetQuotes_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Quote>(Service, this.Id, "quote", "ownerid", Columns); }
/// <summary>
/// <para><b>RatingModel (Owner)</b></para>
/// <para>Schema Name: owner_ratingmodel</para>
/// </summary>
public List<RatingModel> GetRatingModels_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RatingModel>(Service, this.Id, "ratingmodel", "ownerid", Columns); }
/// <summary>
/// <para><b>RatingModel (Owner)</b></para>
/// <para>Schema Name: owner_ratingmodel</para>
/// </summary>
public List<RatingModel> GetRatingModels_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RatingModel>(Service, this.Id, "ratingmodel", "ownerid", Columns); }
/// <summary>
/// <para><b>RatingValue (Owner)</b></para>
/// <para>Schema Name: owner_ratingvalue</para>
/// </summary>
public List<RatingValue> GetRatingValues_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RatingValue>(Service, this.Id, "ratingvalue", "ownerid", Columns); }
/// <summary>
/// <para><b>RatingValue (Owner)</b></para>
/// <para>Schema Name: owner_ratingvalue</para>
/// </summary>
public List<RatingValue> GetRatingValues_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RatingValue>(Service, this.Id, "ratingvalue", "ownerid", Columns); }
/// <summary>
/// <para><b>RecurrenceRule (Owner)</b></para>
/// <para>Schema Name: owner_recurrencerules</para>
/// </summary>
public List<RecurrenceRule> GetRecurrenceRules_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecurrenceRule>(Service, this.Id, "recurrencerule", "ownerid", Columns); }
/// <summary>
/// <para><b>RecurrenceRule (Owner)</b></para>
/// <para>Schema Name: owner_recurrencerules</para>
/// </summary>
public List<RecurrenceRule> GetRecurrenceRules_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecurrenceRule>(Service, this.Id, "recurrencerule", "ownerid", Columns); }
/// <summary>
/// <para><b>Report (Owner)</b></para>
/// <para>Schema Name: owner_reports</para>
/// </summary>
public List<Report> GetReports_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Report>(Service, this.Id, "report", "ownerid", Columns); }
/// <summary>
/// <para><b>Report (Owner)</b></para>
/// <para>Schema Name: owner_reports</para>
/// </summary>
public List<Report> GetReports_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Report>(Service, this.Id, "report", "ownerid", Columns); }
/// <summary>
/// <para><b>RoutingRuleSet (Owner)</b></para>
/// <para>Schema Name: owner_routingrule</para>
/// </summary>
public List<RoutingRuleSet> GetRoutingRuleSets_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RoutingRuleSet>(Service, this.Id, "routingrule", "ownerid", Columns); }
/// <summary>
/// <para><b>RoutingRuleSet (Owner)</b></para>
/// <para>Schema Name: owner_routingrule</para>
/// </summary>
public List<RoutingRuleSet> GetRoutingRuleSets_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RoutingRuleSet>(Service, this.Id, "routingrule", "ownerid", Columns); }
/// <summary>
/// <para><b>Order (Owner)</b></para>
/// <para>Schema Name: owner_salesorders</para>
/// </summary>
public List<Order> GetOrders_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Order>(Service, this.Id, "salesorder", "ownerid", Columns); }
/// <summary>
/// <para><b>Order (Owner)</b></para>
/// <para>Schema Name: owner_salesorders</para>
/// </summary>
public List<Order> GetOrders_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Order>(Service, this.Id, "salesorder", "ownerid", Columns); }
/// <summary>
/// <para><b>SharepointDocument (Owner)</b></para>
/// <para>Schema Name: owner_sharepointdocument</para>
/// </summary>
public List<SharepointDocument> GetDocuments_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SharepointDocument>(Service, this.Id, "sharepointdocument", "ownerid", Columns); }
/// <summary>
/// <para><b>SharepointDocument (Owner)</b></para>
/// <para>Schema Name: owner_sharepointdocument</para>
/// </summary>
public List<SharepointDocument> GetDocuments_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SharepointDocument>(Service, this.Id, "sharepointdocument", "ownerid", Columns); }
/// <summary>
/// <para><b>DocumentLocation (Owner)</b></para>
/// <para>Schema Name: owner_sharepointdocumentlocation</para>
/// </summary>
public List<DocumentLocation> GetDocumentLocations_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DocumentLocation>(Service, this.Id, "sharepointdocumentlocation", "ownerid", Columns); }
/// <summary>
/// <para><b>DocumentLocation (Owner)</b></para>
/// <para>Schema Name: owner_sharepointdocumentlocation</para>
/// </summary>
public List<DocumentLocation> GetDocumentLocations_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DocumentLocation>(Service, this.Id, "sharepointdocumentlocation", "ownerid", Columns); }
/// <summary>
/// <para><b>SharePointSite (Owner)</b></para>
/// <para>Schema Name: owner_sharepointsite</para>
/// </summary>
public List<SharePointSite> GetSharePointSites_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SharePointSite>(Service, this.Id, "sharepointsite", "ownerid", Columns); }
/// <summary>
/// <para><b>SharePointSite (Owner)</b></para>
/// <para>Schema Name: owner_sharepointsite</para>
/// </summary>
public List<SharePointSite> GetSharePointSites_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SharePointSite>(Service, this.Id, "sharepointsite", "ownerid", Columns); }
/// <summary>
/// <para><b>SLA (Owner)</b></para>
/// <para>Schema Name: owner_slas</para>
/// </summary>
public List<SLA> GetSLAs_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SLA>(Service, this.Id, "sla", "ownerid", Columns); }
/// <summary>
/// <para><b>SLA (Owner)</b></para>
/// <para>Schema Name: owner_slas</para>
/// </summary>
public List<SLA> GetSLAs_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SLA>(Service, this.Id, "sla", "ownerid", Columns); }
/// <summary>
/// <para><b>SLAKPIInstance (Owner)</b></para>
/// <para>Schema Name: slakpiinstance_owner</para>
/// </summary>
public List<SLAKPIInstance> GetSLAKPIInstances_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SLAKPIInstance>(Service, this.Id, "slakpiinstance", "ownerid", Columns); }
/// <summary>
/// <para><b>SLAKPIInstance (Owner)</b></para>
/// <para>Schema Name: slakpiinstance_owner</para>
/// </summary>
public List<SLAKPIInstance> GetSLAKPIInstances_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SLAKPIInstance>(Service, this.Id, "slakpiinstance", "ownerid", Columns); }
/// <summary>
/// <para><b>SocialProfile (Owner)</b></para>
/// <para>Schema Name: owner_SocialProfile</para>
/// </summary>
public List<SocialProfile> GetSocialProfiles_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialProfile>(Service, this.Id, "socialprofile", "ownerid", Columns); }
/// <summary>
/// <para><b>SocialProfile (Owner)</b></para>
/// <para>Schema Name: owner_SocialProfile</para>
/// </summary>
public List<SocialProfile> GetSocialProfiles_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialProfile>(Service, this.Id, "socialprofile", "ownerid", Columns); }
/// <summary>
/// <para><b>SyncError (Owner)</b></para>
/// <para>Schema Name: owner_SyncError</para>
/// </summary>
public List<SyncError> GetSyncErrors_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "ownerid", Columns); }
/// <summary>
/// <para><b>SyncError (Owner)</b></para>
/// <para>Schema Name: owner_SyncError</para>
/// </summary>
public List<SyncError> GetSyncErrors_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "ownerid", Columns); }
/// <summary>
/// <para><b>EmailTemplate (Owner)</b></para>
/// <para>Schema Name: owner_templates</para>
/// </summary>
public List<EmailTemplate> GetEmailTemplates_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EmailTemplate>(Service, this.Id, "template", "ownerid", Columns); }
/// <summary>
/// <para><b>EmailTemplate (Owner)</b></para>
/// <para>Schema Name: owner_templates</para>
/// </summary>
public List<EmailTemplate> GetEmailTemplates_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EmailTemplate>(Service, this.Id, "template", "ownerid", Columns); }
/// <summary>
/// <para><b>UserApplicationMetadata (Owner)</b></para>
/// <para>Schema Name: owner_userapplicationmetadata</para>
/// </summary>
public List<UserApplicationMetadata> GetUserApplicationMetadataCollection_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserApplicationMetadata>(Service, this.Id, "userapplicationmetadata", "ownerid", Columns); }
/// <summary>
/// <para><b>UserApplicationMetadata (Owner)</b></para>
/// <para>Schema Name: owner_userapplicationmetadata</para>
/// </summary>
public List<UserApplicationMetadata> GetUserApplicationMetadataCollection_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserApplicationMetadata>(Service, this.Id, "userapplicationmetadata", "ownerid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Owner)</b></para>
/// <para>Schema Name: owner_userentityinstancedata</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "ownerid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Owner)</b></para>
/// <para>Schema Name: owner_userentityinstancedata</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "ownerid", Columns); }
/// <summary>
/// <para><b>UserEntityUISettings (Owner)</b></para>
/// <para>Schema Name: owner_userentityuisettings</para>
/// </summary>
public List<UserEntityUISettings> GetUserEntityUISettings_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityUISettings>(Service, this.Id, "userentityuisettings", "ownerid", Columns); }
/// <summary>
/// <para><b>UserEntityUISettings (Owner)</b></para>
/// <para>Schema Name: owner_userentityuisettings</para>
/// </summary>
public List<UserEntityUISettings> GetUserEntityUISettings_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityUISettings>(Service, this.Id, "userentityuisettings", "ownerid", Columns); }
/// <summary>
/// <para><b>UserDashboard (Owner)</b></para>
/// <para>Schema Name: owner_userform</para>
/// </summary>
public List<UserDashboard> GetUserDashboards_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserDashboard>(Service, this.Id, "userform", "ownerid", Columns); }
/// <summary>
/// <para><b>UserDashboard (Owner)</b></para>
/// <para>Schema Name: owner_userform</para>
/// </summary>
public List<UserDashboard> GetUserDashboards_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserDashboard>(Service, this.Id, "userform", "ownerid", Columns); }
/// <summary>
/// <para><b>SavedView (Owner)</b></para>
/// <para>Schema Name: owner_userquerys</para>
/// </summary>
public List<SavedView> GetSavedViews_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SavedView>(Service, this.Id, "userquery", "ownerid", Columns); }
/// <summary>
/// <para><b>SavedView (Owner)</b></para>
/// <para>Schema Name: owner_userquerys</para>
/// </summary>
public List<SavedView> GetSavedViews_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SavedView>(Service, this.Id, "userquery", "ownerid", Columns); }
/// <summary>
/// <para><b>UserChart (Owner)</b></para>
/// <para>Schema Name: owner_userqueryvisualizations</para>
/// </summary>
public List<UserChart> GetUserCharts_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserChart>(Service, this.Id, "userqueryvisualization", "ownerid", Columns); }
/// <summary>
/// <para><b>UserChart (Owner)</b></para>
/// <para>Schema Name: owner_userqueryvisualizations</para>
/// </summary>
public List<UserChart> GetUserCharts_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserChart>(Service, this.Id, "userqueryvisualization", "ownerid", Columns); }
/// <summary>
/// <para><b>Process (Owner)</b></para>
/// <para>Schema Name: owner_workflows</para>
/// </summary>
public List<Process> GetProcesses_Owner (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Process>(Service, this.Id, "workflow", "ownerid", Columns); }
/// <summary>
/// <para><b>Process (Owner)</b></para>
/// <para>Schema Name: owner_workflows</para>
/// </summary>
public List<Process> GetProcesses_Owner (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Process>(Service, this.Id, "workflow", "ownerid", Columns); }


        

        

        

        public static class Properties
{
	/// <summary><para>versionnumber</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
	/// <summary><para>owneridtype</para>
	/// <para>owneridtype</para></summary>
	public const string OwnerIdType = "owneridtype";
	/// <summary><para>Owner</para>
	/// <para>ownerid</para></summary>
	public const string OwnerId = "ownerid";
	/// <summary><para>Owner Name</para>
	/// <para>name</para></summary>
	public const string OwnerName = "name";
	/// <summary><para>Yomi Name</para>
	/// <para>yominame</para></summary>
	public const string YomiName = "yominame";
}

    }
}

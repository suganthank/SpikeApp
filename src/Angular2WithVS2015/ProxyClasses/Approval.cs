// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("msdyn_approval")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class Approval : BaseProxyClass
    {
        public new const string LogicalName = "msdyn_approval";
        public const int ObjectTypeCode = 10029;
        public const string PrimaryIdAttribute = "activityid";
        public const string PrimaryNameAttribute = "subject";
        
        static Approval()
        {
            BaseProxyClass.RegisterProxyType(typeof(Approval), "msdyn_approval");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public Approval() : base(new Entity("msdyn_approval")) { }
        public Approval(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<Approval>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: owneridtype</para>
///</summary>
[AttributeLogicalNameAttribute("owneridtype")]
public string OwnerIdType
{
	get { return this.GetPropertyValue<string>("owneridtype"); }
	set { this.SetPropertyValue<string>("owneridtype", value, "OwnerIdType"); }
}
///<summary>
///<para>Logical Name: sendermailboxidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("sendermailboxidname")]
public string SenderMailboxIdName
{
	get { return this.GetPropertyValue<string>("sendermailboxidname"); }
}
///<summary>
///<para>Logical Name: owneridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridname")]
public string OwnerIdName
{
	get { return this.GetPropertyValue<string>("owneridname"); }
}
///<summary>
///<para>Logical Name: slainvokedidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("slainvokedidname")]
public string SLAInvokedIdName
{
	get { return this.GetPropertyValue<string>("slainvokedidname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: regardingobjectidname</para>
///<para>Max Length: 400 characters</para>
///</summary>
[AttributeLogicalNameAttribute("regardingobjectidname")]
public string RegardingObjectIdName
{
	get { return this.GetPropertyValue<string>("regardingobjectidname"); }
	set { this.SetPropertyValue("regardingobjectidname", value, 400, "RegardingObjectIdName"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: owneridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridyominame")]
public string OwnerIdYomiName
{
	get { return this.GetPropertyValue<string>("owneridyominame"); }
}
///<summary>
///<para>Logical Name: regardingobjectidyominame</para>
///<para>Max Length: 400 characters</para>
///</summary>
[AttributeLogicalNameAttribute("regardingobjectidyominame")]
public string RegardingObjectIdYomiName
{
	get { return this.GetPropertyValue<string>("regardingobjectidyominame"); }
	set { this.SetPropertyValue("regardingobjectidyominame", value, 400, "RegardingObjectIdYomiName"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: regardingobjecttypecode</para>
///</summary>
[AttributeLogicalNameAttribute("regardingobjecttypecode")]
public string RegardingObjectTypeCode
{
	get { return this.GetPropertyValue<string>("regardingobjecttypecode"); }
	set { this.SetPropertyValue<string>("regardingobjecttypecode", value, "RegardingObjectTypeCode"); }
}
///<summary>
///<para>Logical Name: msdyn_characteristicname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_characteristicname")]
public string Msdyn_CharacteristicName
{
	get { return this.GetPropertyValue<string>("msdyn_characteristicname"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyidname")]
public string TransactionCurrencyIdName
{
	get { return this.GetPropertyValue<string>("transactioncurrencyidname"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: serviceidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("serviceidname")]
public string ServiceIdName
{
	get { return this.GetPropertyValue<string>("serviceidname"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: slaname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("slaname")]
public string SLAName
{
	get { return this.GetPropertyValue<string>("slaname"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: activityid</para>
///</summary>
[AttributeLogicalNameAttribute("activityid")]
public Guid ActivityId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: activityadditionalparams</para>
///<para>Max Length: 8192 characters</para>
///</summary>
[AttributeLogicalNameAttribute("activityadditionalparams")]
public string ActivityAdditionalParameters
{
	get { return this.GetPropertyValue<string>("activityadditionalparams"); }
	set { this.SetPropertyValue("activityadditionalparams", value, 8192, "ActivityAdditionalParameters"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eActivityStatus? ActivityStatus
{
	get
	{
		if (ActivityStatus_OptionSetValue != null) { return (eActivityStatus)ActivityStatus_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ActivityStatus_OptionSetValue = new OptionSetValue((int)value); }
		else this.ActivityStatus_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue ActivityStatus_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
	set { this.SetPropertyValue<OptionSetValue>("statecode", value, "ActivityStatus_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ActivityStatus_Text(IOrganizationService Service)
{
	return this.ActivityStatus_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ActivityStatus_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ActivityStatus_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: activitytypecode</para>
///</summary>
[AttributeLogicalNameAttribute("activitytypecode")]
public string ActivityType
{
	get { return this.GetPropertyValue<string>("activitytypecode"); }
}
///<summary>
///<para>Logical Name: actualdurationminutes</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("actualdurationminutes")]
public int? ActualDuration
{
	get { return this.GetPropertyValue<int?>("actualdurationminutes"); }
	set { this.SetPropertyValue("actualdurationminutes", (int?)value, (int)0, (int)2147483647, "ActualDuration"); }
}
///<summary>
///<para>Logical Name: actualend</para>
///</summary>
[AttributeLogicalNameAttribute("actualend")]
public DateTime? ActualEnd
{
	get { return this.GetPropertyValue<DateTime?>("actualend"); }
	set { this.SetPropertyValue<DateTime?>("actualend", value, "ActualEnd"); }
}
///<summary>
///<para>Logical Name: actualstart</para>
///</summary>
[AttributeLogicalNameAttribute("actualstart")]
public DateTime? ActualStart
{
	get { return this.GetPropertyValue<DateTime?>("actualstart"); }
	set { this.SetPropertyValue<DateTime?>("actualstart", value, "ActualStart"); }
}
/// <summary>
///Logical Name: msdyn_approvalstatus
/// </summary>
[AttributeLogicalNameAttribute("msdyn_approvalstatus")]
public eEntityApprovalState? ApprovalStatus
{
	get
	{
		if (ApprovalStatus_OptionSetValue != null) { return (eEntityApprovalState)ApprovalStatus_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ApprovalStatus_OptionSetValue = new OptionSetValue((int)value); }
		else this.ApprovalStatus_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_approvalstatus</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_approvalstatus")]
public OptionSetValue ApprovalStatus_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_approvalstatus"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_approvalstatus", value, "ApprovalStatus_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ApprovalStatus_Text(IOrganizationService Service)
{
	return this.ApprovalStatus_OptionSetValue.GetOptionSetText(Service, this, "msdyn_approvalstatus");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ApprovalStatus_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ApprovalStatus_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: to</para>
///</summary>
[AttributeLogicalNameAttribute("to")]
public EntityCollection Approvers
{
	get { return this.GetPropertyValue<EntityCollection>("to"); }
	set { this.SetPropertyValue<EntityCollection>("to", value, "Approvers"); }
}
///<summary>
///<para>Logical Name: bcc</para>
///</summary>
[AttributeLogicalNameAttribute("bcc")]
public EntityCollection BCC
{
	get { return this.GetPropertyValue<EntityCollection>("bcc"); }
	set { this.SetPropertyValue<EntityCollection>("bcc", value, "BCC"); }
}
///<summary>
///<para>Logical Name: cc</para>
///</summary>
[AttributeLogicalNameAttribute("cc")]
public EntityCollection CC
{
	get { return this.GetPropertyValue<EntityCollection>("cc"); }
	set { this.SetPropertyValue<EntityCollection>("cc", value, "CC"); }
}
///<summary>
///<para>Logical Name: msdyn_characteristic</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_characteristic")]
public EntityReference Characteristic
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_characteristic"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_characteristic", value, "Characteristic"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyid</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyid")]
public EntityReference Currency
{
	get { return this.GetPropertyValue<EntityReference>("transactioncurrencyid"); }
	set { this.SetPropertyValue<EntityReference>("transactioncurrencyid", value, "Currency"); }
}
///<summary>
///<para>Logical Name: customers</para>
///</summary>
[AttributeLogicalNameAttribute("customers")]
public EntityCollection Customers
{
	get { return this.GetPropertyValue<EntityCollection>("customers"); }
	set { this.SetPropertyValue<EntityCollection>("customers", value, "Customers"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? DateCreated
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: deliverylastattemptedon</para>
///</summary>
[AttributeLogicalNameAttribute("deliverylastattemptedon")]
public DateTime? DateDeliveryLastAttempted
{
	get { return this.GetPropertyValue<DateTime?>("deliverylastattemptedon"); }
}
///<summary>
///<para>Logical Name: senton</para>
///</summary>
[AttributeLogicalNameAttribute("senton")]
public DateTime? DateSent
{
	get { return this.GetPropertyValue<DateTime?>("senton"); }
}
///<summary>
///<para>Logical Name: postponeactivityprocessinguntil</para>
///</summary>
[AttributeLogicalNameAttribute("postponeactivityprocessinguntil")]
public DateTime? DelayActivityProcessingUntil
{
	get { return this.GetPropertyValue<DateTime?>("postponeactivityprocessinguntil"); }
}
/// <summary>
///Logical Name: deliveryprioritycode
/// </summary>
[AttributeLogicalNameAttribute("deliveryprioritycode")]
public eDeliveryPriority? DeliveryPriority
{
	get
	{
		if (DeliveryPriority_OptionSetValue != null) { return (eDeliveryPriority)DeliveryPriority_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.DeliveryPriority_OptionSetValue = new OptionSetValue((int)value); }
		else this.DeliveryPriority_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: deliveryprioritycode</para>
///</summary>
[AttributeLogicalNameAttribute("deliveryprioritycode")]
public OptionSetValue DeliveryPriority_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("deliveryprioritycode"); }
	set { this.SetPropertyValue<OptionSetValue>("deliveryprioritycode", value, "DeliveryPriority_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string DeliveryPriority_Text(IOrganizationService Service)
{
	return this.DeliveryPriority_OptionSetValue.GetOptionSetText(Service, this, "deliveryprioritycode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string DeliveryPriority_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.DeliveryPriority_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: description</para>
///<para>Max Length: 2000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("description")]
public string Description
{
	get { return this.GetPropertyValue<string>("description"); }
	set { this.SetPropertyValue("description", value, 2000, "Description"); }
}
///<summary>
///<para>Logical Name: scheduledend</para>
///</summary>
[AttributeLogicalNameAttribute("scheduledend")]
public DateTime? DueDate
{
	get { return this.GetPropertyValue<DateTime?>("scheduledend"); }
	set { this.SetPropertyValue<DateTime?>("scheduledend", value, "DueDate"); }
}
///<summary>
///<para>Logical Name: exchangeitemid</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("exchangeitemid")]
public string ExchangeItemID
{
	get { return this.GetPropertyValue<string>("exchangeitemid"); }
	set { this.SetPropertyValue("exchangeitemid", value, 200, "ExchangeItemID"); }
}
///<summary>
///<para>Logical Name: exchangerate</para>
///<para>Minimum Value: 0.0000000001</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 10</para>
///</summary>
[AttributeLogicalNameAttribute("exchangerate")]
public decimal? ExchangeRate
{
	get { return this.GetPropertyValue<decimal?>("exchangerate"); }
}
///<summary>
///<para>Logical Name: exchangeweblink</para>
///<para>Max Length: 1250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("exchangeweblink")]
public string ExchangeWebLink
{
	get { return this.GetPropertyValue<string>("exchangeweblink"); }
	set { this.SetPropertyValue("exchangeweblink", value, 1250, "ExchangeWebLink"); }
}
///<summary>
///<para>Logical Name: from</para>
///</summary>
[AttributeLogicalNameAttribute("from")]
public EntityCollection @From
{
	get { return this.GetPropertyValue<EntityCollection>("from"); }
	set { this.SetPropertyValue<EntityCollection>("from", value, "@From"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? ImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "ImportSequenceNumber"); }
}
///<summary>
///<para>Logical Name: isbilled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isbilled")]
public bool? IsBilled
{
	get { return this.GetPropertyValue<bool?>("isbilled"); }
	set { this.SetPropertyValue<bool?>("isbilled", value, "IsBilled"); }
}
///<summary>
///<para>Logical Name: ismapiprivate</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("ismapiprivate")]
public bool? IsPrivate
{
	get { return this.GetPropertyValue<bool?>("ismapiprivate"); }
	set { this.SetPropertyValue<bool?>("ismapiprivate", value, "IsPrivate"); }
}
///<summary>
///<para>Logical Name: isregularactivity</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isregularactivity")]
public bool? IsRegularActivity
{
	get { return this.GetPropertyValue<bool?>("isregularactivity"); }
}
///<summary>
///<para>Logical Name: isworkflowcreated</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isworkflowcreated")]
public bool? IsWorkflowCreated
{
	get { return this.GetPropertyValue<bool?>("isworkflowcreated"); }
	set { this.SetPropertyValue<bool?>("isworkflowcreated", value, "IsWorkflowCreated"); }
}
///<summary>
///<para>Logical Name: lastonholdtime</para>
///</summary>
[AttributeLogicalNameAttribute("lastonholdtime")]
public DateTime? LastOnHoldTime
{
	get { return this.GetPropertyValue<DateTime?>("lastonholdtime"); }
	set { this.SetPropertyValue<DateTime?>("lastonholdtime", value, "LastOnHoldTime"); }
}
///<summary>
///<para>Logical Name: slainvokedid</para>
///</summary>
[AttributeLogicalNameAttribute("slainvokedid")]
public EntityReference LastSLAApplied
{
	get { return this.GetPropertyValue<EntityReference>("slainvokedid"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? LastUpdated
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: leftvoicemail</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("leftvoicemail")]
public bool? LeftVoiceMail
{
	get { return this.GetPropertyValue<bool?>("leftvoicemail"); }
	set { this.SetPropertyValue<bool?>("leftvoicemail", value, "LeftVoiceMail"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: onholdtime</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("onholdtime")]
public int? OnHoldTime_Minutes
{
	get { return this.GetPropertyValue<int?>("onholdtime"); }
}
///<summary>
///<para>Logical Name: optionalattendees</para>
///</summary>
[AttributeLogicalNameAttribute("optionalattendees")]
public EntityCollection OptionalAttendees
{
	get { return this.GetPropertyValue<EntityCollection>("optionalattendees"); }
	set { this.SetPropertyValue<EntityCollection>("optionalattendees", value, "OptionalAttendees"); }
}
///<summary>
///<para>Logical Name: organizer</para>
///</summary>
[AttributeLogicalNameAttribute("organizer")]
public EntityCollection Organizer
{
	get { return this.GetPropertyValue<EntityCollection>("organizer"); }
	set { this.SetPropertyValue<EntityCollection>("organizer", value, "Organizer"); }
}
///<summary>
///<para>Logical Name: partners</para>
///</summary>
[AttributeLogicalNameAttribute("partners")]
public EntityCollection OutsourceVendors
{
	get { return this.GetPropertyValue<EntityCollection>("partners"); }
	set { this.SetPropertyValue<EntityCollection>("partners", value, "OutsourceVendors"); }
}
///<summary>
///<para>Logical Name: ownerid</para>
///</summary>
[AttributeLogicalNameAttribute("ownerid")]
public EntityReference Owner
{
	get { return this.GetPropertyValue<EntityReference>("ownerid"); }
	set { this.SetPropertyValue<EntityReference>("ownerid", value, "Owner"); }
}
///<summary>
///<para>Logical Name: owningbusinessunit</para>
///</summary>
[AttributeLogicalNameAttribute("owningbusinessunit")]
public EntityReference OwningBusinessUnit
{
	get { return this.GetPropertyValue<EntityReference>("owningbusinessunit"); }
}
///<summary>
///<para>Logical Name: owningteam</para>
///</summary>
[AttributeLogicalNameAttribute("owningteam")]
public EntityReference OwningTeam
{
	get { return this.GetPropertyValue<EntityReference>("owningteam"); }
}
///<summary>
///<para>Logical Name: owninguser</para>
///</summary>
[AttributeLogicalNameAttribute("owninguser")]
public EntityReference OwningUser
{
	get { return this.GetPropertyValue<EntityReference>("owninguser"); }
}
/// <summary>
///Logical Name: prioritycode
/// </summary>
[AttributeLogicalNameAttribute("prioritycode")]
public ePriority? Priority
{
	get
	{
		if (Priority_OptionSetValue != null) { return (ePriority)Priority_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Priority_OptionSetValue = new OptionSetValue((int)value); }
		else this.Priority_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: prioritycode</para>
///</summary>
[AttributeLogicalNameAttribute("prioritycode")]
public OptionSetValue Priority_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("prioritycode"); }
	set { this.SetPropertyValue<OptionSetValue>("prioritycode", value, "Priority_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Priority_Text(IOrganizationService Service)
{
	return this.Priority_OptionSetValue.GetOptionSetText(Service, this, "prioritycode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Priority_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Priority_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: processid</para>
///</summary>
[AttributeLogicalNameAttribute("processid")]
public Guid Process
{
	get { return this.GetPropertyValue<Guid>("processid"); }
	set { this.SetPropertyValue<Guid>("processid", value, "Process"); }
}
///<summary>
///<para>Logical Name: stageid</para>
///</summary>
[AttributeLogicalNameAttribute("stageid")]
public Guid ProcessStage
{
	get { return this.GetPropertyValue<Guid>("stageid"); }
	set { this.SetPropertyValue<Guid>("stageid", value, "ProcessStage"); }
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? RecordCreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "RecordCreatedOn"); }
}
/// <summary>
///Logical Name: instancetypecode
/// </summary>
[AttributeLogicalNameAttribute("instancetypecode")]
public eAppointmentType? RecurringInstanceType
{
	get
	{
		if (RecurringInstanceType_OptionSetValue != null) { return (eAppointmentType)RecurringInstanceType_OptionSetValue.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: instancetypecode</para>
///</summary>
[AttributeLogicalNameAttribute("instancetypecode")]
public OptionSetValue RecurringInstanceType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("instancetypecode"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string RecurringInstanceType_Text(IOrganizationService Service)
{
	return this.RecurringInstanceType_OptionSetValue.GetOptionSetText(Service, this, "instancetypecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string RecurringInstanceType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.RecurringInstanceType_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: regardingobjectid</para>
///</summary>
[AttributeLogicalNameAttribute("regardingobjectid")]
public EntityReference Regarding
{
	get { return this.GetPropertyValue<EntityReference>("regardingobjectid"); }
	set { this.SetPropertyValue<EntityReference>("regardingobjectid", value, "Regarding"); }
}
///<summary>
///<para>Logical Name: requiredattendees</para>
///</summary>
[AttributeLogicalNameAttribute("requiredattendees")]
public EntityCollection RequiredAttendees
{
	get { return this.GetPropertyValue<EntityCollection>("requiredattendees"); }
	set { this.SetPropertyValue<EntityCollection>("requiredattendees", value, "RequiredAttendees"); }
}
///<summary>
///<para>Logical Name: resources</para>
///</summary>
[AttributeLogicalNameAttribute("resources")]
public EntityCollection Resources
{
	get { return this.GetPropertyValue<EntityCollection>("resources"); }
	set { this.SetPropertyValue<EntityCollection>("resources", value, "Resources"); }
}
///<summary>
///<para>Logical Name: scheduleddurationminutes</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("scheduleddurationminutes")]
public int? ScheduledDuration
{
	get { return this.GetPropertyValue<int?>("scheduleddurationminutes"); }
	set { this.SetPropertyValue("scheduleddurationminutes", (int?)value, (int)0, (int)2147483647, "ScheduledDuration"); }
}
///<summary>
///<para>Logical Name: sendermailboxid</para>
///</summary>
[AttributeLogicalNameAttribute("sendermailboxid")]
public EntityReference SendersMailbox
{
	get { return this.GetPropertyValue<EntityReference>("sendermailboxid"); }
}
///<summary>
///<para>Logical Name: seriesid</para>
///</summary>
[AttributeLogicalNameAttribute("seriesid")]
public Guid SeriesId
{
	get { return this.GetPropertyValue<Guid>("seriesid"); }
}
///<summary>
///<para>Logical Name: serviceid</para>
///</summary>
[AttributeLogicalNameAttribute("serviceid")]
public EntityReference Service
{
	get { return this.GetPropertyValue<EntityReference>("serviceid"); }
	set { this.SetPropertyValue<EntityReference>("serviceid", value, "Service"); }
}
///<summary>
///<para>Logical Name: slaid</para>
///</summary>
[AttributeLogicalNameAttribute("slaid")]
public EntityReference SLA
{
	get { return this.GetPropertyValue<EntityReference>("slaid"); }
	set { this.SetPropertyValue<EntityReference>("slaid", value, "SLA"); }
}
/// <summary>
///Logical Name: community
/// </summary>
[AttributeLogicalNameAttribute("community")]
public eSocialChannel? SocialChannel
{
	get
	{
		if (SocialChannel_OptionSetValue != null) { return (eSocialChannel)SocialChannel_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.SocialChannel_OptionSetValue = new OptionSetValue((int)value); }
		else this.SocialChannel_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: community</para>
///</summary>
[AttributeLogicalNameAttribute("community")]
public OptionSetValue SocialChannel_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("community"); }
	set { this.SetPropertyValue<OptionSetValue>("community", value, "SocialChannel_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string SocialChannel_Text(IOrganizationService Service)
{
	return this.SocialChannel_OptionSetValue.GetOptionSetText(Service, this, "community");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string SocialChannel_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.SocialChannel_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: sortdate</para>
///</summary>
[AttributeLogicalNameAttribute("sortdate")]
public DateTime? SortDate
{
	get { return this.GetPropertyValue<DateTime?>("sortdate"); }
	set { this.SetPropertyValue<DateTime?>("sortdate", value, "SortDate"); }
}
///<summary>
///<para>Logical Name: scheduledstart</para>
///</summary>
[AttributeLogicalNameAttribute("scheduledstart")]
public DateTime? StartDate
{
	get { return this.GetPropertyValue<DateTime?>("scheduledstart"); }
	set { this.SetPropertyValue<DateTime?>("scheduledstart", value, "StartDate"); }
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? StatusReason
{
	get
	{
		if (StatusReason_OptionSetValue != null) { return (eStatusReason)StatusReason_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StatusReason_OptionSetValue = new OptionSetValue((int)value); }
		else this.StatusReason_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue StatusReason_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "StatusReason_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string StatusReason_Text(IOrganizationService Service)
{
	return this.StatusReason_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string StatusReason_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.StatusReason_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: subject</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("subject")]
public string Subject
{
	get { return this.GetPropertyValue<string>("subject"); }
	set { this.SetPropertyValue("subject", value, 200, "Subject"); }
}
///<summary>
///<para>Logical Name: timezoneruleversionnumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("timezoneruleversionnumber")]
public int? TimeZoneRuleVersionNumber
{
	get { return this.GetPropertyValue<int?>("timezoneruleversionnumber"); }
	set { this.SetPropertyValue("timezoneruleversionnumber", (int?)value, (int)-1, (int)2147483647, "TimeZoneRuleVersionNumber"); }
}
///<summary>
///<para>Logical Name: traversedpath</para>
///<para>Max Length: 1250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("traversedpath")]
public string TraversedPath
{
	get { return this.GetPropertyValue<string>("traversedpath"); }
	set { this.SetPropertyValue("traversedpath", value, 1250, "TraversedPath"); }
}
///<summary>
///<para>Logical Name: utcconversiontimezonecode</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utcconversiontimezonecode")]
public int? UTCConversionTimeZoneCode
{
	get { return this.GetPropertyValue<int?>("utcconversiontimezonecode"); }
	set { this.SetPropertyValue("utcconversiontimezonecode", (int?)value, (int)-1, (int)2147483647, "UTCConversionTimeZoneCode"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}


        /// <summary>
/// <para><b>ActionCard (Regarding)</b></para>
/// <para>Schema Name: msdyn_approval_ActionCards</para>
/// </summary>
public List<ActionCard> GetActionCards_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActionCard>(Service, this.Id, "actioncard", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ActionCard (Regarding)</b></para>
/// <para>Schema Name: msdyn_approval_ActionCards</para>
/// </summary>
public List<ActionCard> GetActionCards_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActionCard>(Service, this.Id, "actioncard", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ActivityParty (Activity)</b></para>
/// <para>Schema Name: msdyn_approval_activity_parties</para>
/// </summary>
public List<ActivityParty> GetActivityParties_Activity (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActivityParty>(Service, this.Id, "activityparty", "activityid", Columns); }
/// <summary>
/// <para><b>ActivityParty (Activity)</b></para>
/// <para>Schema Name: msdyn_approval_activity_parties</para>
/// </summary>
public List<ActivityParty> GetActivityParties_Activity (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActivityParty>(Service, this.Id, "activityparty", "activityid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: msdyn_approval_Annotations</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: msdyn_approval_Annotations</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: msdyn_approval_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: msdyn_approval_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: msdyn_approval_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: msdyn_approval_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>CampaignResponse (Originating Activity)</b></para>
/// <para>Schema Name: CampaignResponse_msdyn_approvals</para>
/// </summary>
public List<CampaignResponse> GetCampaignResponses_OriginatingActivity (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CampaignResponse>(Service, this.Id, "campaignresponse", "originatingactivityid", Columns); }
/// <summary>
/// <para><b>CampaignResponse (Originating Activity)</b></para>
/// <para>Schema Name: CampaignResponse_msdyn_approvals</para>
/// </summary>
public List<CampaignResponse> GetCampaignResponses_OriginatingActivity (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CampaignResponse>(Service, this.Id, "campaignresponse", "originatingactivityid", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: msdyn_approval_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: msdyn_approval_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: msdyn_approval_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: msdyn_approval_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: msdyn_approval_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: msdyn_approval_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: msdyn_approval_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: msdyn_approval_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: msdyn_approval_MailboxTrackingFolders</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: msdyn_approval_MailboxTrackingFolders</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: msdyn_approval_PrincipalObjectAttributeAccesses</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: msdyn_approval_PrincipalObjectAttributeAccesses</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: msdyn_approval_ProcessSession</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: msdyn_approval_ProcessSession</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>QueueItem (Object)</b></para>
/// <para>Schema Name: msdyn_approval_QueueItems</para>
/// </summary>
public List<QueueItem> GetQueueItems_Object (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QueueItem>(Service, this.Id, "queueitem", "objectid", Columns); }
/// <summary>
/// <para><b>QueueItem (Object)</b></para>
/// <para>Schema Name: msdyn_approval_QueueItems</para>
/// </summary>
public List<QueueItem> GetQueueItems_Object (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QueueItem>(Service, this.Id, "queueitem", "objectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: msdyn_approval_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: msdyn_approval_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: msdyn_approval_UserEntityInstanceDatas</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: msdyn_approval_UserEntityInstanceDatas</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        

        

        public enum eActivityStatus
{
	///<summary><para>Open</para>
	///<para>Value = 0</para></summary>
	[Description("Open")]
	Open = 0, 
	///<summary><para>Completed</para>
	///<para>Value = 1</para></summary>
	[Description("Completed")]
	Completed = 1, 
	///<summary><para>Canceled</para>
	///<para>Value = 2</para></summary>
	[Description("Canceled")]
	Canceled = 2, 
	///<summary><para>Scheduled</para>
	///<para>Value = 3</para></summary>
	[Description("Scheduled")]
	Scheduled = 3
}
public enum eEntityApprovalState
{
	///<summary><para>Saved</para>
	///<para>Value = 192350000</para></summary>
	[Description("Saved")]
	Saved = 192350000, 
	///<summary><para>Pending Approval</para>
	///<para>Value = 192350001</para></summary>
	[Description("Pending Approval")]
	PendingApproval = 192350001, 
	///<summary><para>Rejected</para>
	///<para>Value = 192350002</para></summary>
	[Description("Rejected")]
	Rejected = 192350002, 
	///<summary><para>Approved</para>
	///<para>Value = 192350003</para></summary>
	[Description("Approved")]
	Approved = 192350003, 
	///<summary><para>Recalled</para>
	///<para>Value = 192350004</para></summary>
	[Description("Recalled")]
	Recalled = 192350004
}
public enum eDeliveryPriority
{
	///<summary><para>Low</para>
	///<para>Value = 0</para></summary>
	[Description("Low")]
	Low = 0, 
	///<summary><para>Normal</para>
	///<para>Value = 1</para></summary>
	[Description("Normal")]
	Normal = 1, 
	///<summary><para>High</para>
	///<para>Value = 2</para></summary>
	[Description("High")]
	High = 2
}
public enum ePriority
{
	///<summary><para>Low</para>
	///<para>Value = 0</para></summary>
	[Description("Low")]
	Low = 0, 
	///<summary><para>Normal</para>
	///<para>Value = 1</para></summary>
	[Description("Normal")]
	Normal = 1, 
	///<summary><para>High</para>
	///<para>Value = 2</para></summary>
	[Description("High")]
	High = 2
}
public enum eAppointmentType
{
	///<summary><para>Not Recurring</para>
	///<para>Value = 0</para></summary>
	[Description("Not Recurring")]
	NotRecurring = 0, 
	///<summary><para>Recurring Master</para>
	///<para>Value = 1</para></summary>
	[Description("Recurring Master")]
	RecurringMaster = 1, 
	///<summary><para>Recurring Instance</para>
	///<para>Value = 2</para></summary>
	[Description("Recurring Instance")]
	RecurringInstance = 2, 
	///<summary><para>Recurring Exception</para>
	///<para>Value = 3</para></summary>
	[Description("Recurring Exception")]
	RecurringException = 3, 
	///<summary><para>Recurring Future Exception</para>
	///<para>Value = 4</para></summary>
	[Description("Recurring Future Exception")]
	RecurringFutureException = 4
}
public enum eSocialChannel
{
	///<summary><para>Facebook</para>
	///<para>Value = 1</para></summary>
	[Description("Facebook")]
	Facebook = 1, 
	///<summary><para>Twitter</para>
	///<para>Value = 2</para></summary>
	[Description("Twitter")]
	Twitter = 2, 
	///<summary><para>Other</para>
	///<para>Value = 0</para></summary>
	[Description("Other")]
	Other = 0
}
public enum eStatusReason
{
	///<summary><para>Open</para>
	///<para>Value = 1</para></summary>
	[Description("Open")]
	Open_Open = 1, 
	///<summary><para>Completed</para>
	///<para>Value = 2</para></summary>
	[Description("Completed")]
	Completed_Completed = 2, 
	///<summary><para>Canceled</para>
	///<para>Value = 3</para></summary>
	[Description("Canceled")]
	Canceled_Canceled = 3, 
	///<summary><para>Scheduled</para>
	///<para>Value = 4</para></summary>
	[Description("Scheduled")]
	Scheduled_Scheduled = 4
}
public void SetState(IOrganizationService Service, eActivityStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eActivityStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>owneridtype</para>
	/// <para>owneridtype</para></summary>
	public const string OwnerIdType = "owneridtype";
	/// <summary><para>sendermailboxidname</para>
	/// <para>sendermailboxidname</para></summary>
	public const string SenderMailboxIdName = "sendermailboxidname";
	/// <summary><para>owneridname</para>
	/// <para>owneridname</para></summary>
	public const string OwnerIdName = "owneridname";
	/// <summary><para>slainvokedidname</para>
	/// <para>slainvokedidname</para></summary>
	public const string SLAInvokedIdName = "slainvokedidname";
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>regardingobjectidname</para>
	/// <para>regardingobjectidname</para></summary>
	public const string RegardingObjectIdName = "regardingobjectidname";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>owneridyominame</para>
	/// <para>owneridyominame</para></summary>
	public const string OwnerIdYomiName = "owneridyominame";
	/// <summary><para>regardingobjectidyominame</para>
	/// <para>regardingobjectidyominame</para></summary>
	public const string RegardingObjectIdYomiName = "regardingobjectidyominame";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>regardingobjecttypecode</para>
	/// <para>regardingobjecttypecode</para></summary>
	public const string RegardingObjectTypeCode = "regardingobjecttypecode";
	/// <summary><para>msdyn_characteristicname</para>
	/// <para>msdyn_characteristicname</para></summary>
	public const string Msdyn_CharacteristicName = "msdyn_characteristicname";
	/// <summary><para>transactioncurrencyidname</para>
	/// <para>transactioncurrencyidname</para></summary>
	public const string TransactionCurrencyIdName = "transactioncurrencyidname";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>serviceidname</para>
	/// <para>serviceidname</para></summary>
	public const string ServiceIdName = "serviceidname";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>slaname</para>
	/// <para>slaname</para></summary>
	public const string SLAName = "slaname";
	/// <summary><para>Activity</para>
	/// <para>activityid</para></summary>
	public const string ActivityId = "activityid";
	/// <summary><para>Activity Additional Parameters</para>
	/// <para>activityadditionalparams</para></summary>
	public const string ActivityAdditionalParameters = "activityadditionalparams";
	/// <summary><para>Activity Status</para>
	/// <para>statecode</para></summary>
	public const string ActivityStatus = "statecode";
	/// <summary><para>Activity Type</para>
	/// <para>activitytypecode</para></summary>
	public const string ActivityType = "activitytypecode";
	/// <summary><para>Actual Duration</para>
	/// <para>actualdurationminutes</para></summary>
	public const string ActualDuration = "actualdurationminutes";
	/// <summary><para>Actual End</para>
	/// <para>actualend</para></summary>
	public const string ActualEnd = "actualend";
	/// <summary><para>Actual Start</para>
	/// <para>actualstart</para></summary>
	public const string ActualStart = "actualstart";
	/// <summary><para>Approval Status</para>
	/// <para>msdyn_approvalstatus</para></summary>
	public const string ApprovalStatus = "msdyn_approvalstatus";
	/// <summary><para>Approvers</para>
	/// <para>to</para></summary>
	public const string Approvers = "to";
	/// <summary><para>BCC</para>
	/// <para>bcc</para></summary>
	public const string BCC = "bcc";
	/// <summary><para>CC</para>
	/// <para>cc</para></summary>
	public const string CC = "cc";
	/// <summary><para>Characteristic</para>
	/// <para>msdyn_characteristic</para></summary>
	public const string Characteristic = "msdyn_characteristic";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Currency</para>
	/// <para>transactioncurrencyid</para></summary>
	public const string Currency = "transactioncurrencyid";
	/// <summary><para>Customers</para>
	/// <para>customers</para></summary>
	public const string Customers = "customers";
	/// <summary><para>Date Created</para>
	/// <para>createdon</para></summary>
	public const string DateCreated = "createdon";
	/// <summary><para>Date Delivery Last Attempted</para>
	/// <para>deliverylastattemptedon</para></summary>
	public const string DateDeliveryLastAttempted = "deliverylastattemptedon";
	/// <summary><para>Date Sent</para>
	/// <para>senton</para></summary>
	public const string DateSent = "senton";
	/// <summary><para>Delay activity processing until</para>
	/// <para>postponeactivityprocessinguntil</para></summary>
	public const string DelayActivityProcessingUntil = "postponeactivityprocessinguntil";
	/// <summary><para>Delivery Priority</para>
	/// <para>deliveryprioritycode</para></summary>
	public const string DeliveryPriority = "deliveryprioritycode";
	/// <summary><para>Description</para>
	/// <para>description</para></summary>
	public const string Description = "description";
	/// <summary><para>Due Date</para>
	/// <para>scheduledend</para></summary>
	public const string DueDate = "scheduledend";
	/// <summary><para>Exchange Item ID</para>
	/// <para>exchangeitemid</para></summary>
	public const string ExchangeItemID = "exchangeitemid";
	/// <summary><para>Exchange Rate</para>
	/// <para>exchangerate</para></summary>
	public const string ExchangeRate = "exchangerate";
	/// <summary><para>Exchange WebLink</para>
	/// <para>exchangeweblink</para></summary>
	public const string ExchangeWebLink = "exchangeweblink";
	/// <summary><para>From</para>
	/// <para>from</para></summary>
	public const string @From = "from";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string ImportSequenceNumber = "importsequencenumber";
	/// <summary><para>Is Billed</para>
	/// <para>isbilled</para></summary>
	public const string IsBilled = "isbilled";
	/// <summary><para>Is Private</para>
	/// <para>ismapiprivate</para></summary>
	public const string IsPrivate = "ismapiprivate";
	/// <summary><para>Is Regular Activity</para>
	/// <para>isregularactivity</para></summary>
	public const string IsRegularActivity = "isregularactivity";
	/// <summary><para>Is Workflow Created</para>
	/// <para>isworkflowcreated</para></summary>
	public const string IsWorkflowCreated = "isworkflowcreated";
	/// <summary><para>Last On Hold Time</para>
	/// <para>lastonholdtime</para></summary>
	public const string LastOnHoldTime = "lastonholdtime";
	/// <summary><para>Last SLA applied</para>
	/// <para>slainvokedid</para></summary>
	public const string LastSLAApplied = "slainvokedid";
	/// <summary><para>Last Updated</para>
	/// <para>modifiedon</para></summary>
	public const string LastUpdated = "modifiedon";
	/// <summary><para>Left Voice Mail</para>
	/// <para>leftvoicemail</para></summary>
	public const string LeftVoiceMail = "leftvoicemail";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>On Hold Time (Minutes)</para>
	/// <para>onholdtime</para></summary>
	public const string OnHoldTime_Minutes = "onholdtime";
	/// <summary><para>Optional Attendees</para>
	/// <para>optionalattendees</para></summary>
	public const string OptionalAttendees = "optionalattendees";
	/// <summary><para>Organizer</para>
	/// <para>organizer</para></summary>
	public const string Organizer = "organizer";
	/// <summary><para>Outsource Vendors</para>
	/// <para>partners</para></summary>
	public const string OutsourceVendors = "partners";
	/// <summary><para>Owner</para>
	/// <para>ownerid</para></summary>
	public const string Owner = "ownerid";
	/// <summary><para>Owning Business Unit</para>
	/// <para>owningbusinessunit</para></summary>
	public const string OwningBusinessUnit = "owningbusinessunit";
	/// <summary><para>Owning Team</para>
	/// <para>owningteam</para></summary>
	public const string OwningTeam = "owningteam";
	/// <summary><para>Owning User</para>
	/// <para>owninguser</para></summary>
	public const string OwningUser = "owninguser";
	/// <summary><para>Priority</para>
	/// <para>prioritycode</para></summary>
	public const string Priority = "prioritycode";
	/// <summary><para>Process</para>
	/// <para>processid</para></summary>
	public const string Process = "processid";
	/// <summary><para>Process Stage</para>
	/// <para>stageid</para></summary>
	public const string ProcessStage = "stageid";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string RecordCreatedOn = "overriddencreatedon";
	/// <summary><para>Recurring Instance Type</para>
	/// <para>instancetypecode</para></summary>
	public const string RecurringInstanceType = "instancetypecode";
	/// <summary><para>Regarding</para>
	/// <para>regardingobjectid</para></summary>
	public const string Regarding = "regardingobjectid";
	/// <summary><para>Required Attendees</para>
	/// <para>requiredattendees</para></summary>
	public const string RequiredAttendees = "requiredattendees";
	/// <summary><para>Resources</para>
	/// <para>resources</para></summary>
	public const string Resources = "resources";
	/// <summary><para>Scheduled Duration</para>
	/// <para>scheduleddurationminutes</para></summary>
	public const string ScheduledDuration = "scheduleddurationminutes";
	/// <summary><para>Sender's Mailbox</para>
	/// <para>sendermailboxid</para></summary>
	public const string SendersMailbox = "sendermailboxid";
	/// <summary><para>Series Id</para>
	/// <para>seriesid</para></summary>
	public const string SeriesId = "seriesid";
	/// <summary><para>Service</para>
	/// <para>serviceid</para></summary>
	public const string Service = "serviceid";
	/// <summary><para>SLA</para>
	/// <para>slaid</para></summary>
	public const string SLA = "slaid";
	/// <summary><para>Social Channel</para>
	/// <para>community</para></summary>
	public const string SocialChannel = "community";
	/// <summary><para>Sort Date</para>
	/// <para>sortdate</para></summary>
	public const string SortDate = "sortdate";
	/// <summary><para>Start Date</para>
	/// <para>scheduledstart</para></summary>
	public const string StartDate = "scheduledstart";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string StatusReason = "statuscode";
	/// <summary><para>Subject</para>
	/// <para>subject</para></summary>
	public const string Subject = "subject";
	/// <summary><para>Time Zone Rule Version Number</para>
	/// <para>timezoneruleversionnumber</para></summary>
	public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
	/// <summary><para>Traversed Path</para>
	/// <para>traversedpath</para></summary>
	public const string TraversedPath = "traversedpath";
	/// <summary><para>UTC Conversion Time Zone Code</para>
	/// <para>utcconversiontimezonecode</para></summary>
	public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
}

    }
}

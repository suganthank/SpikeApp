// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("workflow")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class Process : BaseProxyClass
    {
        public new const string LogicalName = "workflow";
        public const int ObjectTypeCode = 4703;
        public const string PrimaryIdAttribute = "workflowid";
        public const string PrimaryNameAttribute = "name";
        public const string PrimaryImageAttribute = "entityimage";
        static Process()
        {
            BaseProxyClass.RegisterProxyType(typeof(Process), "workflow");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public Process() : base(new Entity("workflow")) { }
        public Process(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<Process>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}
///<summary>
///<para>Logical Name: entityimage_timestamp</para>
///</summary>
[AttributeLogicalNameAttribute("entityimage_timestamp")]
public int? EntityImage_Timestamp
{
	get { return this.GetPropertyValue<int?>("entityimage_timestamp"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: owneridtype</para>
///</summary>
[AttributeLogicalNameAttribute("owneridtype")]
public string OwnerIdType
{
	get { return this.GetPropertyValue<string>("owneridtype"); }
	set { this.SetPropertyValue<string>("owneridtype", value, "OwnerIdType"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: workflowidunique</para>
///</summary>
[AttributeLogicalNameAttribute("workflowidunique")]
public Guid WorkflowIdUnique
{
	get { return this.GetPropertyValue<Guid>("workflowidunique"); }
}
///<summary>
///<para>Logical Name: plugintypeid</para>
///</summary>
[AttributeLogicalNameAttribute("plugintypeid")]
public EntityReference PluginTypeId
{
	get { return this.GetPropertyValue<EntityReference>("plugintypeid"); }
}
///<summary>
///<para>Logical Name: owneridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridname")]
public string OwnerIdName
{
	get { return this.GetPropertyValue<string>("owneridname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: parentworkflowidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("parentworkflowidname")]
public string ParentWorkflowIdName
{
	get { return this.GetPropertyValue<string>("parentworkflowidname"); }
}
///<summary>
///<para>Logical Name: owningbusinessunitname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owningbusinessunitname")]
public string OwningBusinessUnitName
{
	get { return this.GetPropertyValue<string>("owningbusinessunitname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: activeworkflowidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("activeworkflowidname")]
public string ActiveWorkflowIdName
{
	get { return this.GetPropertyValue<string>("activeworkflowidname"); }
}
///<summary>
///<para>Logical Name: owneridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridyominame")]
public string OwnerIdYomiName
{
	get { return this.GetPropertyValue<string>("owneridyominame"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: entityimage_url</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("entityimage_url")]
public string EntityImage_URL
{
	get { return this.GetPropertyValue<string>("entityimage_url"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: xaml</para>
///<para>Max Length: 1073741823 characters</para>
///</summary>
[AttributeLogicalNameAttribute("xaml")]
public string Xaml
{
	get { return this.GetPropertyValue<string>("xaml"); }
	set { this.SetPropertyValue("xaml", value, 1073741823, "Xaml"); }
}
///<summary>
///<para>Logical Name: activeworkflowid</para>
///</summary>
[AttributeLogicalNameAttribute("activeworkflowid")]
public EntityReference ActiveProcessID
{
	get { return this.GetPropertyValue<EntityReference>("activeworkflowid"); }
}
/// <summary>
///Logical Name: businessprocesstype
/// </summary>
[AttributeLogicalNameAttribute("businessprocesstype")]
public eBusinessProcessType? BusinessProcessType
{
	get
	{
		if (BusinessProcessType_OptionSetValue != null) { return (eBusinessProcessType)BusinessProcessType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.BusinessProcessType_OptionSetValue = new OptionSetValue((int)value); }
		else this.BusinessProcessType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: businessprocesstype</para>
///</summary>
[AttributeLogicalNameAttribute("businessprocesstype")]
public OptionSetValue BusinessProcessType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("businessprocesstype"); }
	set { this.SetPropertyValue<OptionSetValue>("businessprocesstype", value, "BusinessProcessType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string BusinessProcessType_Text(IOrganizationService Service)
{
	return this.BusinessProcessType_OptionSetValue.GetOptionSetText(Service, this, "businessprocesstype");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string BusinessProcessType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.BusinessProcessType_OptionSetValue.Value);
}
/// <summary>
///Logical Name: category
/// </summary>
[AttributeLogicalNameAttribute("category")]
public eCategory? Category
{
	get
	{
		if (Category_OptionSetValue != null) { return (eCategory)Category_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Category_OptionSetValue = new OptionSetValue((int)value); }
		else this.Category_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: category</para>
///</summary>
[AttributeLogicalNameAttribute("category")]
public OptionSetValue Category_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("category"); }
	set { this.SetPropertyValue<OptionSetValue>("category", value, "Category_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Category_Text(IOrganizationService Service)
{
	return this.Category_OptionSetValue.GetOptionSetText(Service, this, "category");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Category_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Category_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: clientdata</para>
///<para>Max Length: 1073741823 characters</para>
///</summary>
[AttributeLogicalNameAttribute("clientdata")]
public string ClientData
{
	get { return this.GetPropertyValue<string>("clientdata"); }
}
/// <summary>
///Logical Name: componentstate
/// </summary>
[AttributeLogicalNameAttribute("componentstate")]
public eComponentState? ComponentState
{
	get
	{
		if (ComponentState_OptionSetValue != null) { return (eComponentState)ComponentState_OptionSetValue.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: componentstate</para>
///</summary>
[AttributeLogicalNameAttribute("componentstate")]
public OptionSetValue ComponentState_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("componentstate"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ComponentState_Text(IOrganizationService Service)
{
	return this.ComponentState_OptionSetValue.GetOptionSetText(Service, this, "componentstate");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ComponentState_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ComponentState_OptionSetValue.Value);
}
/// <summary>
///Logical Name: createstage
/// </summary>
[AttributeLogicalNameAttribute("createstage")]
public eWorkflowStage? CreateStage
{
	get
	{
		if (CreateStage_OptionSetValue != null) { return (eWorkflowStage)CreateStage_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.CreateStage_OptionSetValue = new OptionSetValue((int)value); }
		else this.CreateStage_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: createstage</para>
///</summary>
[AttributeLogicalNameAttribute("createstage")]
public OptionSetValue CreateStage_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("createstage"); }
	set { this.SetPropertyValue<OptionSetValue>("createstage", value, "CreateStage_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string CreateStage_Text(IOrganizationService Service)
{
	return this.CreateStage_OptionSetValue.GetOptionSetText(Service, this, "createstage");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string CreateStage_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.CreateStage_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: iscustomizable</para>
///</summary>
[AttributeLogicalNameAttribute("iscustomizable")]
public BooleanManagedProperty Customizable
{
	get { return this.GetPropertyValue<BooleanManagedProperty>("iscustomizable"); }
	set { this.SetPropertyValue<BooleanManagedProperty>("iscustomizable", value, "Customizable"); }
}
///<summary>
///<para>Logical Name: asyncautodelete</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("asyncautodelete")]
public bool? DeleteJobOnCompletion
{
	get { return this.GetPropertyValue<bool?>("asyncautodelete"); }
	set { this.SetPropertyValue<bool?>("asyncautodelete", value, "DeleteJobOnCompletion"); }
}
/// <summary>
///Logical Name: deletestage
/// </summary>
[AttributeLogicalNameAttribute("deletestage")]
public eWorkflowStage? DeleteStage
{
	get
	{
		if (DeleteStage_OptionSetValue != null) { return (eWorkflowStage)DeleteStage_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.DeleteStage_OptionSetValue = new OptionSetValue((int)value); }
		else this.DeleteStage_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: deletestage</para>
///</summary>
[AttributeLogicalNameAttribute("deletestage")]
public OptionSetValue DeleteStage_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("deletestage"); }
	set { this.SetPropertyValue<OptionSetValue>("deletestage", value, "DeleteStage_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string DeleteStage_Text(IOrganizationService Service)
{
	return this.DeleteStage_OptionSetValue.GetOptionSetText(Service, this, "deletestage");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string DeleteStage_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.DeleteStage_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: description</para>
///<para>Max Length: 100000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("description")]
public string Description
{
	get { return this.GetPropertyValue<string>("description"); }
	set { this.SetPropertyValue("description", value, 100000, "Description"); }
}
///<summary>
///<para>Logical Name: entityimageid</para>
///</summary>
[AttributeLogicalNameAttribute("entityimageid")]
public Guid EntityImageId
{
	get { return this.GetPropertyValue<Guid>("entityimageid"); }
}
///<summary>
///<para>Logical Name: formid</para>
///</summary>
[AttributeLogicalNameAttribute("formid")]
public Guid FormID
{
	get { return this.GetPropertyValue<Guid>("formid"); }
	set { this.SetPropertyValue<Guid>("formid", value, "FormID"); }
}
///<summary>
///<para>Logical Name: inputparameters</para>
///<para>Max Length: 1073741823 characters</para>
///</summary>
[AttributeLogicalNameAttribute("inputparameters")]
public string InputParameters
{
	get { return this.GetPropertyValue<string>("inputparameters"); }
	set { this.SetPropertyValue("inputparameters", value, 1073741823, "InputParameters"); }
}
///<summary>
///<para>Logical Name: introducedversion</para>
///<para>Max Length: 48 characters</para>
///</summary>
[AttributeLogicalNameAttribute("introducedversion")]
public string IntroducedVersion
{
	get { return this.GetPropertyValue<string>("introducedversion"); }
	set { this.SetPropertyValue("introducedversion", value, 48, "IntroducedVersion"); }
}
///<summary>
///<para>Logical Name: subprocess</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("subprocess")]
public bool? IsChildProcess
{
	get { return this.GetPropertyValue<bool?>("subprocess"); }
	set { this.SetPropertyValue<bool?>("subprocess", value, "IsChildProcess"); }
}
///<summary>
///<para>Logical Name: iscrmuiworkflow</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("iscrmuiworkflow")]
public bool? IsCRMProcess
{
	get { return this.GetPropertyValue<bool?>("iscrmuiworkflow"); }
}
///<summary>
///<para>Logical Name: ismanaged</para>
///<para>True = Managed</para>
///<para>False = Unmanaged</para>
///</summary>
[AttributeLogicalNameAttribute("ismanaged")]
public bool? IsManaged
{
	get { return this.GetPropertyValue<bool?>("ismanaged"); }
}
///<summary>
///<para>Logical Name: istransacted</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("istransacted")]
public bool? IsTransacted
{
	get { return this.GetPropertyValue<bool?>("istransacted"); }
	set { this.SetPropertyValue<bool?>("istransacted", value, "IsTransacted"); }
}
///<summary>
///<para>Logical Name: languagecode</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("languagecode")]
public int? Language
{
	get { return this.GetPropertyValue<int?>("languagecode"); }
	set { this.SetPropertyValue("languagecode", (int?)value, (int)0, (int)2147483647, "Language"); }
}
///<summary>
///<para>Logical Name: syncworkflowlogonfailure</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("syncworkflowlogonfailure")]
public bool? LogUponFailure
{
	get { return this.GetPropertyValue<bool?>("syncworkflowlogonfailure"); }
	set { this.SetPropertyValue<bool?>("syncworkflowlogonfailure", value, "LogUponFailure"); }
}
/// <summary>
///Logical Name: mode
/// </summary>
[AttributeLogicalNameAttribute("mode")]
public eMode? Mode
{
	get
	{
		if (Mode_OptionSetValue != null) { return (eMode)Mode_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Mode_OptionSetValue = new OptionSetValue((int)value); }
		else this.Mode_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: mode</para>
///</summary>
[AttributeLogicalNameAttribute("mode")]
public OptionSetValue Mode_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("mode"); }
	set { this.SetPropertyValue<OptionSetValue>("mode", value, "Mode_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Mode_Text(IOrganizationService Service)
{
	return this.Mode_OptionSetValue.GetOptionSetText(Service, this, "mode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Mode_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Mode_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: ownerid</para>
///</summary>
[AttributeLogicalNameAttribute("ownerid")]
public EntityReference Owner
{
	get { return this.GetPropertyValue<EntityReference>("ownerid"); }
	set { this.SetPropertyValue<EntityReference>("ownerid", value, "Owner"); }
}
///<summary>
///<para>Logical Name: owningbusinessunit</para>
///</summary>
[AttributeLogicalNameAttribute("owningbusinessunit")]
public EntityReference OwningBusinessUnit
{
	get { return this.GetPropertyValue<EntityReference>("owningbusinessunit"); }
}
///<summary>
///<para>Logical Name: owningteam</para>
///</summary>
[AttributeLogicalNameAttribute("owningteam")]
public EntityReference OwningTeam
{
	get { return this.GetPropertyValue<EntityReference>("owningteam"); }
}
///<summary>
///<para>Logical Name: owninguser</para>
///</summary>
[AttributeLogicalNameAttribute("owninguser")]
public EntityReference OwningUser
{
	get { return this.GetPropertyValue<EntityReference>("owninguser"); }
}
///<summary>
///<para>Logical Name: parentworkflowid</para>
///</summary>
[AttributeLogicalNameAttribute("parentworkflowid")]
public EntityReference ParentProcessID
{
	get { return this.GetPropertyValue<EntityReference>("parentworkflowid"); }
}
///<summary>
///<para>Logical Name: primaryentity</para>
///</summary>
[AttributeLogicalNameAttribute("primaryentity")]
public string PrimaryEntity
{
	get { return this.GetPropertyValue<string>("primaryentity"); }
	set { this.SetPropertyValue<string>("primaryentity", value, "PrimaryEntity"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: workflowid</para>
///</summary>
[AttributeLogicalNameAttribute("workflowid")]
public Guid ProcessId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: name</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("name")]
public string ProcessName
{
	get { return this.GetPropertyValue<string>("name"); }
	set { this.SetPropertyValue("name", value, 100, "ProcessName"); }
}
///<summary>
///<para>Logical Name: processorder</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("processorder")]
public int? ProcessOrder
{
	get { return this.GetPropertyValue<int?>("processorder"); }
	set { this.SetPropertyValue("processorder", (int?)value, (int)0, (int)2147483647, "ProcessOrder"); }
}
///<summary>
///<para>Logical Name: rank</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("rank")]
public int? Rank
{
	get { return this.GetPropertyValue<int?>("rank"); }
	set { this.SetPropertyValue("rank", (int?)value, (int)-2147483648, (int)2147483647, "Rank"); }
}
///<summary>
///<para>Logical Name: overwritetime</para>
///</summary>
[AttributeLogicalNameAttribute("overwritetime")]
public DateTime? RecordOverwriteTime
{
	get { return this.GetPropertyValue<DateTime?>("overwritetime"); }
}
///<summary>
///<para>Logical Name: rendererobjecttypecode</para>
///</summary>
[AttributeLogicalNameAttribute("rendererobjecttypecode")]
public string RendererType
{
	get { return this.GetPropertyValue<string>("rendererobjecttypecode"); }
	set { this.SetPropertyValue<string>("rendererobjecttypecode", value, "RendererType"); }
}
///<summary>
///<para>Logical Name: processroleassignment</para>
///<para>Max Length: 1048576 characters</para>
///</summary>
[AttributeLogicalNameAttribute("processroleassignment")]
public string RoleAssignmentForProcess
{
	get { return this.GetPropertyValue<string>("processroleassignment"); }
	set { this.SetPropertyValue("processroleassignment", value, 1048576, "RoleAssignmentForProcess"); }
}
///<summary>
///<para>Logical Name: ondemand</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("ondemand")]
public bool? RunAsOnDemand
{
	get { return this.GetPropertyValue<bool?>("ondemand"); }
	set { this.SetPropertyValue<bool?>("ondemand", value, "RunAsOnDemand"); }
}
/// <summary>
///Logical Name: runas
/// </summary>
[AttributeLogicalNameAttribute("runas")]
public eExecutingUser? RunAsUser
{
	get
	{
		if (RunAsUser_OptionSetValue != null) { return (eExecutingUser)RunAsUser_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.RunAsUser_OptionSetValue = new OptionSetValue((int)value); }
		else this.RunAsUser_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: runas</para>
///</summary>
[AttributeLogicalNameAttribute("runas")]
public OptionSetValue RunAsUser_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("runas"); }
	set { this.SetPropertyValue<OptionSetValue>("runas", value, "RunAsUser_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string RunAsUser_Text(IOrganizationService Service)
{
	return this.RunAsUser_OptionSetValue.GetOptionSetText(Service, this, "runas");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string RunAsUser_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.RunAsUser_OptionSetValue.Value);
}
/// <summary>
///Logical Name: scope
/// </summary>
[AttributeLogicalNameAttribute("scope")]
public eScope? Scope
{
	get
	{
		if (Scope_OptionSetValue != null) { return (eScope)Scope_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Scope_OptionSetValue = new OptionSetValue((int)value); }
		else this.Scope_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: scope</para>
///</summary>
[AttributeLogicalNameAttribute("scope")]
public OptionSetValue Scope_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("scope"); }
	set { this.SetPropertyValue<OptionSetValue>("scope", value, "Scope_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Scope_Text(IOrganizationService Service)
{
	return this.Scope_OptionSetValue.GetOptionSetText(Service, this, "scope");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Scope_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Scope_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: sdkmessageid</para>
///</summary>
[AttributeLogicalNameAttribute("sdkmessageid")]
public EntityReference SDKMessage
{
	get { return this.GetPropertyValue<EntityReference>("sdkmessageid"); }
}
///<summary>
///<para>Logical Name: solutionid</para>
///</summary>
[AttributeLogicalNameAttribute("solutionid")]
public Guid Solution
{
	get { return this.GetPropertyValue<Guid>("solutionid"); }
}
///<summary>
///<para>Logical Name: supportingsolutionid</para>
///</summary>
[AttributeLogicalNameAttribute("supportingsolutionid")]
public Guid Solution2
{
	get { return this.GetPropertyValue<Guid>("supportingsolutionid"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eStatus? Status
{
	get
	{
		if (Status_OptionSetValue != null) { return (eStatus)Status_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Status_OptionSetValue = new OptionSetValue((int)value); }
		else this.Status_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue Status_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
	set { this.SetPropertyValue<OptionSetValue>("statecode", value, "Status_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Status_Text(IOrganizationService Service)
{
	return this.Status_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Status_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Status_OptionSetValue.Value);
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? StatusReason
{
	get
	{
		if (StatusReason_OptionSetValue != null) { return (eStatusReason)StatusReason_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StatusReason_OptionSetValue = new OptionSetValue((int)value); }
		else this.StatusReason_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue StatusReason_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "StatusReason_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string StatusReason_Text(IOrganizationService Service)
{
	return this.StatusReason_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string StatusReason_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.StatusReason_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: triggeroncreate</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("triggeroncreate")]
public bool? TriggerOnCreate
{
	get { return this.GetPropertyValue<bool?>("triggeroncreate"); }
	set { this.SetPropertyValue<bool?>("triggeroncreate", value, "TriggerOnCreate"); }
}
///<summary>
///<para>Logical Name: triggerondelete</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("triggerondelete")]
public bool? TriggerOnDelete
{
	get { return this.GetPropertyValue<bool?>("triggerondelete"); }
	set { this.SetPropertyValue<bool?>("triggerondelete", value, "TriggerOnDelete"); }
}
///<summary>
///<para>Logical Name: triggeronupdateattributelist</para>
///<para>Max Length: 1073741823 characters</para>
///</summary>
[AttributeLogicalNameAttribute("triggeronupdateattributelist")]
public string TriggerOnUpdateAttributeList
{
	get { return this.GetPropertyValue<string>("triggeronupdateattributelist"); }
	set { this.SetPropertyValue("triggeronupdateattributelist", value, 1073741823, "TriggerOnUpdateAttributeList"); }
}
/// <summary>
///Logical Name: type
/// </summary>
[AttributeLogicalNameAttribute("type")]
public eType? Type
{
	get
	{
		if (Type_OptionSetValue != null) { return (eType)Type_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Type_OptionSetValue = new OptionSetValue((int)value); }
		else this.Type_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: type</para>
///</summary>
[AttributeLogicalNameAttribute("type")]
public OptionSetValue Type_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("type"); }
	set { this.SetPropertyValue<OptionSetValue>("type", value, "Type_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Type_Text(IOrganizationService Service)
{
	return this.Type_OptionSetValue.GetOptionSetText(Service, this, "type");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Type_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Type_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: uniquename</para>
///<para>Max Length: 256 characters</para>
///</summary>
[AttributeLogicalNameAttribute("uniquename")]
public string UniqueName
{
	get { return this.GetPropertyValue<string>("uniquename"); }
	set { this.SetPropertyValue("uniquename", value, 256, "UniqueName"); }
}
/// <summary>
///Logical Name: updatestage
/// </summary>
[AttributeLogicalNameAttribute("updatestage")]
public eWorkflowStage? UpdateStage
{
	get
	{
		if (UpdateStage_OptionSetValue != null) { return (eWorkflowStage)UpdateStage_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.UpdateStage_OptionSetValue = new OptionSetValue((int)value); }
		else this.UpdateStage_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: updatestage</para>
///</summary>
[AttributeLogicalNameAttribute("updatestage")]
public OptionSetValue UpdateStage_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("updatestage"); }
	set { this.SetPropertyValue<OptionSetValue>("updatestage", value, "UpdateStage_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string UpdateStage_Text(IOrganizationService Service)
{
	return this.UpdateStage_OptionSetValue.GetOptionSetText(Service, this, "updatestage");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string UpdateStage_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.UpdateStage_OptionSetValue.Value);
}


        /// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: Workflow_Annotation</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: Workflow_Annotation</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Workflow Activation Id)</b></para>
/// <para>Schema Name: lk_asyncoperation_workflowactivationid</para>
/// </summary>
public List<SystemJob> GetSystemJobs_WorkflowActivationId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "workflowactivationid", Columns); }
/// <summary>
/// <para><b>SystemJob (Workflow Activation Id)</b></para>
/// <para>Schema Name: lk_asyncoperation_workflowactivationid</para>
/// </summary>
public List<SystemJob> GetSystemJobs_WorkflowActivationId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "workflowactivationid", Columns); }
/// <summary>
/// <para><b>ChannelAccessProfileRule (Workflow)</b></para>
/// <para>Schema Name: workflowid_profilerule</para>
/// </summary>
public List<ChannelAccessProfileRule> GetChannelAccessProfileRules_Workflow (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ChannelAccessProfileRule>(Service, this.Id, "channelaccessprofilerule", "workflowid", Columns); }
/// <summary>
/// <para><b>ChannelAccessProfileRule (Workflow)</b></para>
/// <para>Schema Name: workflowid_profilerule</para>
/// </summary>
public List<ChannelAccessProfileRule> GetChannelAccessProfileRules_Workflow (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ChannelAccessProfileRule>(Service, this.Id, "channelaccessprofilerule", "workflowid", Columns); }
/// <summary>
/// <para><b>RecordCreationAndUpdateRule (Workflow)</b></para>
/// <para>Schema Name: workflowid_convertrule</para>
/// </summary>
public List<RecordCreationAndUpdateRule> GetRecordCreationAndUpdateRules_Workflow (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecordCreationAndUpdateRule>(Service, this.Id, "convertrule", "workflowid", Columns); }
/// <summary>
/// <para><b>RecordCreationAndUpdateRule (Workflow)</b></para>
/// <para>Schema Name: workflowid_convertrule</para>
/// </summary>
public List<RecordCreationAndUpdateRule> GetRecordCreationAndUpdateRules_Workflow (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecordCreationAndUpdateRule>(Service, this.Id, "convertrule", "workflowid", Columns); }
/// <summary>
/// <para><b>RecordCreationAndUpdateRuleItem (Workflow ID)</b></para>
/// <para>Schema Name: convertruleitembase_workflowid</para>
/// </summary>
public List<RecordCreationAndUpdateRuleItem> GetRecordCreationAndUpdateRuleItems_WorkflowID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecordCreationAndUpdateRuleItem>(Service, this.Id, "convertruleitem", "workflowid", Columns); }
/// <summary>
/// <para><b>RecordCreationAndUpdateRuleItem (Workflow ID)</b></para>
/// <para>Schema Name: convertruleitembase_workflowid</para>
/// </summary>
public List<RecordCreationAndUpdateRuleItem> GetRecordCreationAndUpdateRuleItems_WorkflowID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecordCreationAndUpdateRuleItem>(Service, this.Id, "convertruleitem", "workflowid", Columns); }
/// <summary>
/// <para><b>ExpiredProcess (Process Id)</b></para>
/// <para>Schema Name: lk_expiredprocess_processid</para>
/// </summary>
public List<ExpiredProcess> GetExpiredProcess_ProcessId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ExpiredProcess>(Service, this.Id, "expiredprocess", "processid", Columns); }
/// <summary>
/// <para><b>ExpiredProcess (Process Id)</b></para>
/// <para>Schema Name: lk_expiredprocess_processid</para>
/// </summary>
public List<ExpiredProcess> GetExpiredProcess_ProcessId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ExpiredProcess>(Service, this.Id, "expiredprocess", "processid", Columns); }
/// <summary>
/// <para><b>LeadToOpportunitySalesProcess (Process Id)</b></para>
/// <para>Schema Name: lk_leadtoopportunitysalesprocess_processid</para>
/// </summary>
public List<LeadToOpportunitySalesProcess> GetLeadToOpportunitySalesProcess_ProcessId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<LeadToOpportunitySalesProcess>(Service, this.Id, "leadtoopportunitysalesprocess", "processid", Columns); }
/// <summary>
/// <para><b>LeadToOpportunitySalesProcess (Process Id)</b></para>
/// <para>Schema Name: lk_leadtoopportunitysalesprocess_processid</para>
/// </summary>
public List<LeadToOpportunitySalesProcess> GetLeadToOpportunitySalesProcess_ProcessId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<LeadToOpportunitySalesProcess>(Service, this.Id, "leadtoopportunitysalesprocess", "processid", Columns); }
/// <summary>
/// <para><b>PurchaseOrderBusinessProcess (Process)</b></para>
/// <para>Schema Name: lk_msdyn_bpf_2c5fe86acc8b414b8322ae571000c799_processid</para>
/// </summary>
public List<PurchaseOrderBusinessProcess> GetPurchaseOrderBusinessProcess_Process (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderBusinessProcess>(Service, this.Id, "msdyn_bpf_2c5fe86acc8b414b8322ae571000c799", "processid", Columns); }
/// <summary>
/// <para><b>PurchaseOrderBusinessProcess (Process)</b></para>
/// <para>Schema Name: lk_msdyn_bpf_2c5fe86acc8b414b8322ae571000c799_processid</para>
/// </summary>
public List<PurchaseOrderBusinessProcess> GetPurchaseOrderBusinessProcess_Process (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderBusinessProcess>(Service, this.Id, "msdyn_bpf_2c5fe86acc8b414b8322ae571000c799", "processid", Columns); }
/// <summary>
/// <para><b>ProjectStages (Process)</b></para>
/// <para>Schema Name: lk_msdyn_bpf_665e73aa18c247d886bfc50499c73b82_processid</para>
/// </summary>
public List<ProjectStages> GetProjectStages_Process (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectStages>(Service, this.Id, "msdyn_bpf_665e73aa18c247d886bfc50499c73b82", "processid", Columns); }
/// <summary>
/// <para><b>ProjectStages (Process)</b></para>
/// <para>Schema Name: lk_msdyn_bpf_665e73aa18c247d886bfc50499c73b82_processid</para>
/// </summary>
public List<ProjectStages> GetProjectStages_Process (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectStages>(Service, this.Id, "msdyn_bpf_665e73aa18c247d886bfc50499c73b82", "processid", Columns); }
/// <summary>
/// <para><b>CaseToWorkOrderBusinessProcess (Process)</b></para>
/// <para>Schema Name: lk_msdyn_bpf_989e9b1857e24af18787d5143b67523b_processid</para>
/// </summary>
public List<CaseToWorkOrderBusinessProcess> GetCaseToWorkOrderBusinessProcess_Process (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CaseToWorkOrderBusinessProcess>(Service, this.Id, "msdyn_bpf_989e9b1857e24af18787d5143b67523b", "processid", Columns); }
/// <summary>
/// <para><b>CaseToWorkOrderBusinessProcess (Process)</b></para>
/// <para>Schema Name: lk_msdyn_bpf_989e9b1857e24af18787d5143b67523b_processid</para>
/// </summary>
public List<CaseToWorkOrderBusinessProcess> GetCaseToWorkOrderBusinessProcess_Process (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CaseToWorkOrderBusinessProcess>(Service, this.Id, "msdyn_bpf_989e9b1857e24af18787d5143b67523b", "processid", Columns); }
/// <summary>
/// <para><b>AgreementBusinessProcess (Process)</b></para>
/// <para>Schema Name: lk_msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3_processid</para>
/// </summary>
public List<AgreementBusinessProcess> GetAgreementBusinessProcess_Process (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBusinessProcess>(Service, this.Id, "msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3", "processid", Columns); }
/// <summary>
/// <para><b>AgreementBusinessProcess (Process)</b></para>
/// <para>Schema Name: lk_msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3_processid</para>
/// </summary>
public List<AgreementBusinessProcess> GetAgreementBusinessProcess_Process (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBusinessProcess>(Service, this.Id, "msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3", "processid", Columns); }
/// <summary>
/// <para><b>WorkOrderBusinessProcess (Process)</b></para>
/// <para>Schema Name: lk_msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39_processid</para>
/// </summary>
public List<WorkOrderBusinessProcess> GetWorkOrderBusinessProcess_Process (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderBusinessProcess>(Service, this.Id, "msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39", "processid", Columns); }
/// <summary>
/// <para><b>WorkOrderBusinessProcess (Process)</b></para>
/// <para>Schema Name: lk_msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39_processid</para>
/// </summary>
public List<WorkOrderBusinessProcess> GetWorkOrderBusinessProcess_Process (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderBusinessProcess>(Service, this.Id, "msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39", "processid", Columns); }
/// <summary>
/// <para><b>InvoiceProcess (Process)</b></para>
/// <para>Schema Name: lk_msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d_processid</para>
/// </summary>
public List<InvoiceProcess> GetInvoiceProcess_Process (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceProcess>(Service, this.Id, "msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d", "processid", Columns); }
/// <summary>
/// <para><b>InvoiceProcess (Process)</b></para>
/// <para>Schema Name: lk_msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d_processid</para>
/// </summary>
public List<InvoiceProcess> GetInvoiceProcess_Process (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceProcess>(Service, this.Id, "msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d", "processid", Columns); }
/// <summary>
/// <para><b>NewProcess (Process Id)</b></para>
/// <para>Schema Name: lk_newprocess_processid</para>
/// </summary>
public List<NewProcess> GetNewProcess_ProcessId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<NewProcess>(Service, this.Id, "newprocess", "processid", Columns); }
/// <summary>
/// <para><b>NewProcess (Process Id)</b></para>
/// <para>Schema Name: lk_newprocess_processid</para>
/// </summary>
public List<NewProcess> GetNewProcess_ProcessId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<NewProcess>(Service, this.Id, "newprocess", "processid", Columns); }
/// <summary>
/// <para><b>OpportunitySalesProcess (Process Id)</b></para>
/// <para>Schema Name: lk_opportunitysalesprocess_processid</para>
/// </summary>
public List<OpportunitySalesProcess> GetOpportunitySalesProcess_ProcessId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunitySalesProcess>(Service, this.Id, "opportunitysalesprocess", "processid", Columns); }
/// <summary>
/// <para><b>OpportunitySalesProcess (Process Id)</b></para>
/// <para>Schema Name: lk_opportunitysalesprocess_processid</para>
/// </summary>
public List<OpportunitySalesProcess> GetOpportunitySalesProcess_ProcessId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunitySalesProcess>(Service, this.Id, "opportunitysalesprocess", "processid", Columns); }
/// <summary>
/// <para><b>PhoneToCaseProcess (Process Id)</b></para>
/// <para>Schema Name: lk_phonetocaseprocess_processid</para>
/// </summary>
public List<PhoneToCaseProcess> GetPhoneToCaseProcess_ProcessId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneToCaseProcess>(Service, this.Id, "phonetocaseprocess", "processid", Columns); }
/// <summary>
/// <para><b>PhoneToCaseProcess (Process Id)</b></para>
/// <para>Schema Name: lk_phonetocaseprocess_processid</para>
/// </summary>
public List<PhoneToCaseProcess> GetPhoneToCaseProcess_ProcessId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneToCaseProcess>(Service, this.Id, "phonetocaseprocess", "processid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Process)</b></para>
/// <para>Schema Name: lk_processsession_processid</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Process (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "processid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Process)</b></para>
/// <para>Schema Name: lk_processsession_processid</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Process (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "processid", Columns); }
/// <summary>
/// <para><b>ProcessStage (Process)</b></para>
/// <para>Schema Name: process_processstage</para>
/// </summary>
public List<ProcessStage> GetProcessStages_Process (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessStage>(Service, this.Id, "processstage", "processid", Columns); }
/// <summary>
/// <para><b>ProcessStage (Process)</b></para>
/// <para>Schema Name: process_processstage</para>
/// </summary>
public List<ProcessStage> GetProcessStages_Process (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessStage>(Service, this.Id, "processstage", "processid", Columns); }
/// <summary>
/// <para><b>ProcessTrigger (Process)</b></para>
/// <para>Schema Name: process_processtrigger</para>
/// </summary>
public List<ProcessTrigger> GetProcessTriggers_Process (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessTrigger>(Service, this.Id, "processtrigger", "processid", Columns); }
/// <summary>
/// <para><b>ProcessTrigger (Process)</b></para>
/// <para>Schema Name: process_processtrigger</para>
/// </summary>
public List<ProcessTrigger> GetProcessTriggers_Process (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessTrigger>(Service, this.Id, "processtrigger", "processid", Columns); }
/// <summary>
/// <para><b>RoutingRuleSet (Workflow)</b></para>
/// <para>Schema Name: Workflow_routingrule</para>
/// </summary>
public List<RoutingRuleSet> GetRoutingRuleSets_Workflow (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RoutingRuleSet>(Service, this.Id, "routingrule", "workflowid", Columns); }
/// <summary>
/// <para><b>RoutingRuleSet (Workflow)</b></para>
/// <para>Schema Name: Workflow_routingrule</para>
/// </summary>
public List<RoutingRuleSet> GetRoutingRuleSets_Workflow (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RoutingRuleSet>(Service, this.Id, "routingrule", "workflowid", Columns); }
/// <summary>
/// <para><b>SLA (Workflow ID)</b></para>
/// <para>Schema Name: slabase_workflowid</para>
/// </summary>
public List<SLA> GetSLAs_WorkflowID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SLA>(Service, this.Id, "sla", "workflowid", Columns); }
/// <summary>
/// <para><b>SLA (Workflow ID)</b></para>
/// <para>Schema Name: slabase_workflowid</para>
/// </summary>
public List<SLA> GetSLAs_WorkflowID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SLA>(Service, this.Id, "sla", "workflowid", Columns); }
/// <summary>
/// <para><b>SLAItem (Workflow ID)</b></para>
/// <para>Schema Name: slaitembase_workflowid</para>
/// </summary>
public List<SLAItem> GetSLAItems_WorkflowID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SLAItem>(Service, this.Id, "slaitem", "workflowid", Columns); }
/// <summary>
/// <para><b>SLAItem (Workflow ID)</b></para>
/// <para>Schema Name: slaitembase_workflowid</para>
/// </summary>
public List<SLAItem> GetSLAItems_WorkflowID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SLAItem>(Service, this.Id, "slaitem", "workflowid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: Workflow_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: Workflow_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>TranslationProcess (Process Id)</b></para>
/// <para>Schema Name: lk_translationprocess_processid</para>
/// </summary>
public List<TranslationProcess> GetTranslationProcess_ProcessId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TranslationProcess>(Service, this.Id, "translationprocess", "processid", Columns); }
/// <summary>
/// <para><b>TranslationProcess (Process Id)</b></para>
/// <para>Schema Name: lk_translationprocess_processid</para>
/// </summary>
public List<TranslationProcess> GetTranslationProcess_ProcessId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TranslationProcess>(Service, this.Id, "translationprocess", "processid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_workflow</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_workflow</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>Process (Active Process ID)</b></para>
/// <para>Schema Name: workflow_active_workflow</para>
/// </summary>
public List<Process> GetProcesses_ActiveProcessID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Process>(Service, this.Id, "workflow", "activeworkflowid", Columns); }
/// <summary>
/// <para><b>Process (Active Process ID)</b></para>
/// <para>Schema Name: workflow_active_workflow</para>
/// </summary>
public List<Process> GetProcesses_ActiveProcessID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Process>(Service, this.Id, "workflow", "activeworkflowid", Columns); }
/// <summary>
/// <para><b>Process (Parent Process ID)</b></para>
/// <para>Schema Name: workflow_parent_workflow</para>
/// </summary>
public List<Process> GetProcesses_ParentProcessID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Process>(Service, this.Id, "workflow", "parentworkflowid", Columns); }
/// <summary>
/// <para><b>Process (Parent Process ID)</b></para>
/// <para>Schema Name: workflow_parent_workflow</para>
/// </summary>
public List<Process> GetProcesses_ParentProcessID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Process>(Service, this.Id, "workflow", "parentworkflowid", Columns); }
/// <summary>
/// <para><b>ProcessDependency (Process)</b></para>
/// <para>Schema Name: workflow_dependencies</para>
/// </summary>
public List<ProcessDependency> GetProcessDependencies_Process (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessDependency>(Service, this.Id, "workflowdependency", "workflowid", Columns); }
/// <summary>
/// <para><b>ProcessDependency (Process)</b></para>
/// <para>Schema Name: workflow_dependencies</para>
/// </summary>
public List<ProcessDependency> GetProcessDependencies_Process (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessDependency>(Service, this.Id, "workflowdependency", "workflowid", Columns); }


        

        

        public enum eBusinessProcessType
{
	///<summary><para>Business Flow</para>
	///<para>Value = 0</para></summary>
	[Description("Business Flow")]
	BusinessFlow = 0, 
	///<summary><para>Task Flow</para>
	///<para>Value = 1</para></summary>
	[Description("Task Flow")]
	TaskFlow = 1
}
public enum eCategory
{
	///<summary><para>Workflow</para>
	///<para>Value = 0</para></summary>
	[Description("Workflow")]
	Workflow = 0, 
	///<summary><para>Dialog</para>
	///<para>Value = 1</para></summary>
	[Description("Dialog")]
	Dialog = 1, 
	///<summary><para>Business Rule</para>
	///<para>Value = 2</para></summary>
	[Description("Business Rule")]
	BusinessRule = 2, 
	///<summary><para>Action</para>
	///<para>Value = 3</para></summary>
	[Description("Action")]
	Action = 3, 
	///<summary><para>Business Process Flow</para>
	///<para>Value = 4</para></summary>
	[Description("Business Process Flow")]
	BusinessProcessFlow = 4
}
public enum eComponentState
{
	///<summary><para>Published</para>
	///<para>Value = 0</para></summary>
	[Description("Published")]
	Published = 0, 
	///<summary><para>Unpublished</para>
	///<para>Value = 1</para></summary>
	[Description("Unpublished")]
	Unpublished = 1, 
	///<summary><para>Deleted</para>
	///<para>Value = 2</para></summary>
	[Description("Deleted")]
	Deleted = 2, 
	///<summary><para>Deleted Unpublished</para>
	///<para>Value = 3</para></summary>
	[Description("Deleted Unpublished")]
	DeletedUnpublished = 3
}
public enum eWorkflowStage
{
	///<summary><para>Pre-operation</para>
	///<para>Value = 20</para></summary>
	[Description("Pre-operation")]
	Pre_operation = 20, 
	///<summary><para>Post-operation</para>
	///<para>Value = 40</para></summary>
	[Description("Post-operation")]
	Post_operation = 40
}
public enum eMode
{
	///<summary><para>Background</para>
	///<para>Value = 0</para></summary>
	[Description("Background")]
	Background = 0, 
	///<summary><para>Real-time</para>
	///<para>Value = 1</para></summary>
	[Description("Real-time")]
	Real_time = 1
}
public enum eExecutingUser
{
	///<summary><para>Owner</para>
	///<para>Value = 0</para></summary>
	[Description("Owner")]
	Owner = 0, 
	///<summary><para>Calling User</para>
	///<para>Value = 1</para></summary>
	[Description("Calling User")]
	CallingUser = 1
}
public enum eScope
{
	///<summary><para>User</para>
	///<para>Value = 1</para></summary>
	[Description("User")]
	User = 1, 
	///<summary><para>Business Unit</para>
	///<para>Value = 2</para></summary>
	[Description("Business Unit")]
	BusinessUnit = 2, 
	///<summary><para>Parent: Child Business Units</para>
	///<para>Value = 3</para></summary>
	[Description("Parent: Child Business Units")]
	Parent_ChildBusinessUnits = 3, 
	///<summary><para>Organization</para>
	///<para>Value = 4</para></summary>
	[Description("Organization")]
	Organization = 4
}
public enum eStatus
{
	///<summary><para>Draft</para>
	///<para>Value = 0</para></summary>
	[Description("Draft")]
	Draft = 0, 
	///<summary><para>Activated</para>
	///<para>Value = 1</para></summary>
	[Description("Activated")]
	Activated = 1
}
public enum eStatusReason
{
	///<summary><para>Draft</para>
	///<para>Value = 1</para></summary>
	[Description("Draft")]
	Draft_Draft = 1, 
	///<summary><para>Activated</para>
	///<para>Value = 2</para></summary>
	[Description("Activated")]
	Activated_Activated = 2
}
public enum eType
{
	///<summary><para>Definition</para>
	///<para>Value = 1</para></summary>
	[Description("Definition")]
	Definition = 1, 
	///<summary><para>Activation</para>
	///<para>Value = 2</para></summary>
	[Description("Activation")]
	Activation = 2, 
	///<summary><para>Template</para>
	///<para>Value = 3</para></summary>
	[Description("Template")]
	Template = 3
}
public void SetState(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>versionnumber</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
	/// <summary><para>entityimage_timestamp</para>
	/// <para>entityimage_timestamp</para></summary>
	public const string EntityImage_Timestamp = "entityimage_timestamp";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>owneridtype</para>
	/// <para>owneridtype</para></summary>
	public const string OwnerIdType = "owneridtype";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>workflowidunique</para>
	/// <para>workflowidunique</para></summary>
	public const string WorkflowIdUnique = "workflowidunique";
	/// <summary><para>plugintypeid</para>
	/// <para>plugintypeid</para></summary>
	public const string PluginTypeId = "plugintypeid";
	/// <summary><para>owneridname</para>
	/// <para>owneridname</para></summary>
	public const string OwnerIdName = "owneridname";
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>parentworkflowidname</para>
	/// <para>parentworkflowidname</para></summary>
	public const string ParentWorkflowIdName = "parentworkflowidname";
	/// <summary><para>owningbusinessunitname</para>
	/// <para>owningbusinessunitname</para></summary>
	public const string OwningBusinessUnitName = "owningbusinessunitname";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>activeworkflowidname</para>
	/// <para>activeworkflowidname</para></summary>
	public const string ActiveWorkflowIdName = "activeworkflowidname";
	/// <summary><para>owneridyominame</para>
	/// <para>owneridyominame</para></summary>
	public const string OwnerIdYomiName = "owneridyominame";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>entityimage_url</para>
	/// <para>entityimage_url</para></summary>
	public const string EntityImage_URL = "entityimage_url";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>xaml</para>
	/// <para>xaml</para></summary>
	public const string Xaml = "xaml";
	/// <summary><para>Active Process ID</para>
	/// <para>activeworkflowid</para></summary>
	public const string ActiveProcessID = "activeworkflowid";
	/// <summary><para>Business Process Type</para>
	/// <para>businessprocesstype</para></summary>
	public const string BusinessProcessType = "businessprocesstype";
	/// <summary><para>Category</para>
	/// <para>category</para></summary>
	public const string Category = "category";
	/// <summary><para>Client Data</para>
	/// <para>clientdata</para></summary>
	public const string ClientData = "clientdata";
	/// <summary><para>Component State</para>
	/// <para>componentstate</para></summary>
	public const string ComponentState = "componentstate";
	/// <summary><para>Create Stage</para>
	/// <para>createstage</para></summary>
	public const string CreateStage = "createstage";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Customizable</para>
	/// <para>iscustomizable</para></summary>
	public const string Customizable = "iscustomizable";
	/// <summary><para>Delete Job On Completion</para>
	/// <para>asyncautodelete</para></summary>
	public const string DeleteJobOnCompletion = "asyncautodelete";
	/// <summary><para>Delete stage</para>
	/// <para>deletestage</para></summary>
	public const string DeleteStage = "deletestage";
	/// <summary><para>Description</para>
	/// <para>description</para></summary>
	public const string Description = "description";
	/// <summary><para>Entity Image Id</para>
	/// <para>entityimageid</para></summary>
	public const string EntityImageId = "entityimageid";
	/// <summary><para>Form ID</para>
	/// <para>formid</para></summary>
	public const string FormID = "formid";
	/// <summary><para>Input Parameters</para>
	/// <para>inputparameters</para></summary>
	public const string InputParameters = "inputparameters";
	/// <summary><para>Introduced Version</para>
	/// <para>introducedversion</para></summary>
	public const string IntroducedVersion = "introducedversion";
	/// <summary><para>Is Child Process</para>
	/// <para>subprocess</para></summary>
	public const string IsChildProcess = "subprocess";
	/// <summary><para>Is CRM Process</para>
	/// <para>iscrmuiworkflow</para></summary>
	public const string IsCRMProcess = "iscrmuiworkflow";
	/// <summary><para>Is Managed</para>
	/// <para>ismanaged</para></summary>
	public const string IsManaged = "ismanaged";
	/// <summary><para>Is Transacted</para>
	/// <para>istransacted</para></summary>
	public const string IsTransacted = "istransacted";
	/// <summary><para>Language</para>
	/// <para>languagecode</para></summary>
	public const string Language = "languagecode";
	/// <summary><para>Log upon Failure</para>
	/// <para>syncworkflowlogonfailure</para></summary>
	public const string LogUponFailure = "syncworkflowlogonfailure";
	/// <summary><para>Mode</para>
	/// <para>mode</para></summary>
	public const string Mode = "mode";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>Owner</para>
	/// <para>ownerid</para></summary>
	public const string Owner = "ownerid";
	/// <summary><para>Owning Business Unit</para>
	/// <para>owningbusinessunit</para></summary>
	public const string OwningBusinessUnit = "owningbusinessunit";
	/// <summary><para>Owning Team</para>
	/// <para>owningteam</para></summary>
	public const string OwningTeam = "owningteam";
	/// <summary><para>Owning User</para>
	/// <para>owninguser</para></summary>
	public const string OwningUser = "owninguser";
	/// <summary><para>Parent Process ID</para>
	/// <para>parentworkflowid</para></summary>
	public const string ParentProcessID = "parentworkflowid";
	/// <summary><para>Primary Entity</para>
	/// <para>primaryentity</para></summary>
	public const string PrimaryEntity = "primaryentity";
	/// <summary><para>Process</para>
	/// <para>workflowid</para></summary>
	public const string ProcessId = "workflowid";
	/// <summary><para>Process Name</para>
	/// <para>name</para></summary>
	public const string ProcessName = "name";
	/// <summary><para>Process Order</para>
	/// <para>processorder</para></summary>
	public const string ProcessOrder = "processorder";
	/// <summary><para>Rank</para>
	/// <para>rank</para></summary>
	public const string Rank = "rank";
	/// <summary><para>Record Overwrite Time</para>
	/// <para>overwritetime</para></summary>
	public const string RecordOverwriteTime = "overwritetime";
	/// <summary><para>Renderer Type</para>
	/// <para>rendererobjecttypecode</para></summary>
	public const string RendererType = "rendererobjecttypecode";
	/// <summary><para>Role assignment for Process</para>
	/// <para>processroleassignment</para></summary>
	public const string RoleAssignmentForProcess = "processroleassignment";
	/// <summary><para>Run as On Demand</para>
	/// <para>ondemand</para></summary>
	public const string RunAsOnDemand = "ondemand";
	/// <summary><para>Run As User</para>
	/// <para>runas</para></summary>
	public const string RunAsUser = "runas";
	/// <summary><para>Scope</para>
	/// <para>scope</para></summary>
	public const string Scope = "scope";
	/// <summary><para>SDK Message</para>
	/// <para>sdkmessageid</para></summary>
	public const string SDKMessage = "sdkmessageid";
	/// <summary><para>Solution</para>
	/// <para>solutionid</para></summary>
	public const string Solution = "solutionid";
	/// <summary><para>Solution</para>
	/// <para>supportingsolutionid</para></summary>
	public const string Solution2 = "supportingsolutionid";
	/// <summary><para>Status</para>
	/// <para>statecode</para></summary>
	public const string Status = "statecode";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string StatusReason = "statuscode";
	/// <summary><para>Trigger On Create</para>
	/// <para>triggeroncreate</para></summary>
	public const string TriggerOnCreate = "triggeroncreate";
	/// <summary><para>Trigger On Delete</para>
	/// <para>triggerondelete</para></summary>
	public const string TriggerOnDelete = "triggerondelete";
	/// <summary><para>Trigger On Update Attribute List</para>
	/// <para>triggeronupdateattributelist</para></summary>
	public const string TriggerOnUpdateAttributeList = "triggeronupdateattributelist";
	/// <summary><para>Type</para>
	/// <para>type</para></summary>
	public const string Type = "type";
	/// <summary><para>Unique Name</para>
	/// <para>uniquename</para></summary>
	public const string UniqueName = "uniquename";
	/// <summary><para>Update Stage</para>
	/// <para>updatestage</para></summary>
	public const string UpdateStage = "updatestage";
}

    }
}

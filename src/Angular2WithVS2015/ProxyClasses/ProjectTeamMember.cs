// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("msdyn_projectteam")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class ProjectTeamMember : BaseProxyClass
    {
        public new const string LogicalName = "msdyn_projectteam";
        public const int ObjectTypeCode = 10072;
        public const string PrimaryIdAttribute = "msdyn_projectteamid";
        public const string PrimaryNameAttribute = "msdyn_name";
        
        static ProjectTeamMember()
        {
            BaseProxyClass.RegisterProxyType(typeof(ProjectTeamMember), "msdyn_projectteam");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public ProjectTeamMember() : base(new Entity("msdyn_projectteam")) { }
        public ProjectTeamMember(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<ProjectTeamMember>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: owneridtype</para>
///</summary>
[AttributeLogicalNameAttribute("owneridtype")]
public string OwnerIdType
{
	get { return this.GetPropertyValue<string>("owneridtype"); }
	set { this.SetPropertyValue<string>("owneridtype", value, "OwnerIdType"); }
}
///<summary>
///<para>Logical Name: owneridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridname")]
public string OwnerIdName
{
	get { return this.GetPropertyValue<string>("owneridname"); }
}
///<summary>
///<para>Logical Name: msdyn_bookableresourceidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_bookableresourceidname")]
public string Msdyn_bookableresourceidName
{
	get { return this.GetPropertyValue<string>("msdyn_bookableresourceidname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_resourcecategoryname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_resourcecategoryname")]
public string Msdyn_resourcecategoryName
{
	get { return this.GetPropertyValue<string>("msdyn_resourcecategoryname"); }
}
///<summary>
///<para>Logical Name: msdyn_projectname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_projectname")]
public string Msdyn_projectName
{
	get { return this.GetPropertyValue<string>("msdyn_projectname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_worktemplatename</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_worktemplatename")]
public string Msdyn_worktemplateName
{
	get { return this.GetPropertyValue<string>("msdyn_worktemplatename"); }
}
///<summary>
///<para>Logical Name: owneridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridyominame")]
public string OwnerIdYomiName
{
	get { return this.GetPropertyValue<string>("owneridyominame"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_resourcerequirementidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_resourcerequirementidname")]
public string Msdyn_resourcerequirementidName
{
	get { return this.GetPropertyValue<string>("msdyn_resourcerequirementidname"); }
}
/// <summary>
///Logical Name: msdyn_allocationmethod
/// </summary>
[AttributeLogicalNameAttribute("msdyn_allocationmethod")]
public eAllocationMethod? AllocationMethod
{
	get
	{
		if (AllocationMethod_OptionSetValue != null) { return (eAllocationMethod)AllocationMethod_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.AllocationMethod_OptionSetValue = new OptionSetValue((int)value); }
		else this.AllocationMethod_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_allocationmethod</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_allocationmethod")]
public OptionSetValue AllocationMethod_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_allocationmethod"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_allocationmethod", value, "AllocationMethod_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string AllocationMethod_Text(IOrganizationService Service)
{
	return this.AllocationMethod_OptionSetValue.GetOptionSetText(Service, this, "msdyn_allocationmethod");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string AllocationMethod_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.AllocationMethod_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_applicantcount</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_applicantcount")]
public int? ApplicantCount
{
	get { return this.GetPropertyValue<int?>("msdyn_applicantcount"); }
}
///<summary>
///<para>Logical Name: msdyn_applicantcount_date</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_applicantcount_date")]
public DateTime? ApplicantCount_LastUpdatedOn
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_applicantcount_date"); }
}
///<summary>
///<para>Logical Name: msdyn_applicantcount_state</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_applicantcount_state")]
public int? ApplicantCount_State
{
	get { return this.GetPropertyValue<int?>("msdyn_applicantcount_state"); }
}
///<summary>
///<para>Logical Name: msdyn_applicantsavailable</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_applicantsavailable")]
public bool? ApplicantsAvailable
{
	get { return this.GetPropertyValue<bool?>("msdyn_applicantsavailable"); }
}
///<summary>
///<para>Logical Name: msdyn_assignedhours</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_assignedhours")]
public decimal? AssignedHours
{
	get { return this.GetPropertyValue<decimal?>("msdyn_assignedhours"); }
	set { this.SetPropertyValue("msdyn_assignedhours", (decimal?)value, (decimal)0, (decimal)100000000000, "AssignedHours"); }
}
/// <summary>
///Logical Name: msdyn_billingtype
/// </summary>
[AttributeLogicalNameAttribute("msdyn_billingtype")]
public eBillingType? BillingType
{
	get
	{
		if (BillingType_OptionSetValue != null) { return (eBillingType)BillingType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.BillingType_OptionSetValue = new OptionSetValue((int)value); }
		else this.BillingType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_billingtype</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_billingtype")]
public OptionSetValue BillingType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_billingtype"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_billingtype", value, "BillingType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string BillingType_Text(IOrganizationService Service)
{
	return this.BillingType_OptionSetValue.GetOptionSetText(Service, this, "msdyn_billingtype");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string BillingType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.BillingType_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_bookableresourceid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_bookableresourceid")]
public EntityReference BookableResource
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_bookableresourceid"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_bookableresourceid", value, "BookableResource"); }
}
///<summary>
///<para>Logical Name: msdyn_hardbookedhours</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_hardbookedhours")]
public decimal? BookedHours
{
	get { return this.GetPropertyValue<decimal?>("msdyn_hardbookedhours"); }
	set { this.SetPropertyValue("msdyn_hardbookedhours", (decimal?)value, (decimal)0, (decimal)100000000000, "BookedHours"); }
}
///<summary>
///<para>Logical Name: msdyn_calendarid</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_calendarid")]
public string CalendarId
{
	get { return this.GetPropertyValue<string>("msdyn_calendarid"); }
	set { this.SetPropertyValue("msdyn_calendarid", value, 100, "CalendarId"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: msdyn_description</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_description")]
public string Description
{
	get { return this.GetPropertyValue<string>("msdyn_description"); }
	set { this.SetPropertyValue("msdyn_description", value, 250, "Description"); }
}
///<summary>
///<para>Logical Name: msdyn_from</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_from")]
public DateTime? @From
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_from"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_from", value, "@From"); }
}
///<summary>
///<para>Logical Name: msdyn_hours</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_hours")]
public decimal? Hours
{
	get { return this.GetPropertyValue<decimal?>("msdyn_hours"); }
	set { this.SetPropertyValue("msdyn_hours", (decimal?)value, (decimal)0, (decimal)100000000000, "Hours"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? ImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "ImportSequenceNumber"); }
}
/// <summary>
///Logical Name: msdyn_membershipstatus
/// </summary>
[AttributeLogicalNameAttribute("msdyn_membershipstatus")]
public eMembershipStatus? MembershipStatus
{
	get
	{
		if (MembershipStatus_OptionSetValue != null) { return (eMembershipStatus)MembershipStatus_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.MembershipStatus_OptionSetValue = new OptionSetValue((int)value); }
		else this.MembershipStatus_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_membershipstatus</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_membershipstatus")]
public OptionSetValue MembershipStatus_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_membershipstatus"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_membershipstatus", value, "MembershipStatus_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string MembershipStatus_Text(IOrganizationService Service)
{
	return this.MembershipStatus_OptionSetValue.GetOptionSetText(Service, this, "msdyn_membershipstatus");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string MembershipStatus_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.MembershipStatus_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: msdyn_msprojectclientid</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_msprojectclientid")]
public string MSProjectClientId
{
	get { return this.GetPropertyValue<string>("msdyn_msprojectclientid"); }
	set { this.SetPropertyValue("msdyn_msprojectclientid", value, 100, "MSProjectClientId"); }
}
///<summary>
///<para>Logical Name: msdyn_number</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_number")]
public int? Number
{
	get { return this.GetPropertyValue<int?>("msdyn_number"); }
	set { this.SetPropertyValue("msdyn_number", (int?)value, (int)0, (int)100, "Number"); }
}
///<summary>
///<para>Logical Name: ownerid</para>
///</summary>
[AttributeLogicalNameAttribute("ownerid")]
public EntityReference Owner
{
	get { return this.GetPropertyValue<EntityReference>("ownerid"); }
	set { this.SetPropertyValue<EntityReference>("ownerid", value, "Owner"); }
}
///<summary>
///<para>Logical Name: owningbusinessunit</para>
///</summary>
[AttributeLogicalNameAttribute("owningbusinessunit")]
public EntityReference OwningBusinessUnit
{
	get { return this.GetPropertyValue<EntityReference>("owningbusinessunit"); }
}
///<summary>
///<para>Logical Name: owningteam</para>
///</summary>
[AttributeLogicalNameAttribute("owningteam")]
public EntityReference OwningTeam
{
	get { return this.GetPropertyValue<EntityReference>("owningteam"); }
}
///<summary>
///<para>Logical Name: owninguser</para>
///</summary>
[AttributeLogicalNameAttribute("owninguser")]
public EntityReference OwningUser
{
	get { return this.GetPropertyValue<EntityReference>("owninguser"); }
}
///<summary>
///<para>Logical Name: msdyn_percentage</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_percentage")]
public decimal? Percentage
{
	get { return this.GetPropertyValue<decimal?>("msdyn_percentage"); }
	set { this.SetPropertyValue("msdyn_percentage", (decimal?)value, (decimal)0, (decimal)100, "Percentage"); }
}
///<summary>
///<para>Logical Name: msdyn_roledescription</para>
///<para>Max Length: 2000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_roledescription")]
public string PositionDescription
{
	get { return this.GetPropertyValue<string>("msdyn_roledescription"); }
	set { this.SetPropertyValue("msdyn_roledescription", value, 2000, "PositionDescription"); }
}
///<summary>
///<para>Logical Name: msdyn_name</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_name")]
public string PositionName
{
	get { return this.GetPropertyValue<string>("msdyn_name"); }
	set { this.SetPropertyValue("msdyn_name", value, 100, "PositionName"); }
}
///<summary>
///<para>Logical Name: msdyn_project</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_project")]
public EntityReference Project
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_project"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_project", value, "Project"); }
}
///<summary>
///<para>Logical Name: msdyn_projectapprover</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_projectapprover")]
public bool? ProjectApprover
{
	get { return this.GetPropertyValue<bool?>("msdyn_projectapprover"); }
	set { this.SetPropertyValue<bool?>("msdyn_projectapprover", value, "ProjectApprover"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: msdyn_projectteamid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_projectteamid")]
public Guid ProjectTeamId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? RecordCreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "RecordCreatedOn"); }
}
///<summary>
///<para>Logical Name: msdyn_hoursrequested</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_hoursrequested")]
public double? RequiredHours
{
	get { return this.GetPropertyValue<double?>("msdyn_hoursrequested"); }
	set { this.SetPropertyValue("msdyn_hoursrequested", (double?)value, (double)0, (double)1000000000, "RequiredHours"); }
}
///<summary>
///<para>Logical Name: msdyn_requiredhours</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_requiredhours")]
public decimal? RequiredHours2
{
	get { return this.GetPropertyValue<decimal?>("msdyn_requiredhours"); }
	set { this.SetPropertyValue("msdyn_requiredhours", (decimal?)value, (decimal)0, (decimal)100000000000, "RequiredHours2"); }
}
///<summary>
///<para>Logical Name: msdyn_resourcerequirementid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_resourcerequirementid")]
public EntityReference ResourceRequirement
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_resourcerequirementid"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_resourcerequirementid", value, "ResourceRequirement"); }
}
///<summary>
///<para>Logical Name: msdyn_resourcecategory</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_resourcecategory")]
public EntityReference Role
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_resourcecategory"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_resourcecategory", value, "Role"); }
}
///<summary>
///<para>Logical Name: msdyn_softbookedhours</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_softbookedhours")]
public decimal? SoftBook
{
	get { return this.GetPropertyValue<decimal?>("msdyn_softbookedhours"); }
	set { this.SetPropertyValue("msdyn_softbookedhours", (decimal?)value, (decimal)0, (decimal)100000000000, "SoftBook"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eStatus? Status
{
	get
	{
		if (Status_OptionSetValue != null) { return (eStatus)Status_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Status_OptionSetValue = new OptionSetValue((int)value); }
		else this.Status_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue Status_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
	set { this.SetPropertyValue<OptionSetValue>("statecode", value, "Status_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Status_Text(IOrganizationService Service)
{
	return this.Status_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Status_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Status_OptionSetValue.Value);
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? StatusReason
{
	get
	{
		if (StatusReason_OptionSetValue != null) { return (eStatusReason)StatusReason_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StatusReason_OptionSetValue = new OptionSetValue((int)value); }
		else this.StatusReason_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue StatusReason_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "StatusReason_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string StatusReason_Text(IOrganizationService Service)
{
	return this.StatusReason_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string StatusReason_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.StatusReason_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: timezoneruleversionnumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("timezoneruleversionnumber")]
public int? TimeZoneRuleVersionNumber
{
	get { return this.GetPropertyValue<int?>("timezoneruleversionnumber"); }
	set { this.SetPropertyValue("timezoneruleversionnumber", (int?)value, (int)-1, (int)2147483647, "TimeZoneRuleVersionNumber"); }
}
///<summary>
///<para>Logical Name: msdyn_to</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_to")]
public DateTime? To
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_to"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_to", value, "To"); }
}
///<summary>
///<para>Logical Name: utcconversiontimezonecode</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utcconversiontimezonecode")]
public int? UTCConversionTimeZoneCode
{
	get { return this.GetPropertyValue<int?>("utcconversiontimezonecode"); }
	set { this.SetPropertyValue("utcconversiontimezonecode", (int?)value, (int)-1, (int)2147483647, "UTCConversionTimeZoneCode"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}
///<summary>
///<para>Logical Name: msdyn_worktemplate</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_worktemplate")]
public EntityReference WorkTemplate
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_worktemplate"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_worktemplate", value, "WorkTemplate"); }
}


        /// <summary>
/// <para><b>Activity (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectteam_ActivityPointers</para>
/// </summary>
public List<Activity> GetActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Activity>(Service, this.Id, "activitypointer", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Activity (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectteam_ActivityPointers</para>
/// </summary>
public List<Activity> GetActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Activity>(Service, this.Id, "activitypointer", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectteam_Annotations</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectteam_Annotations</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Appointment (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectteam_Appointments</para>
/// </summary>
public List<Appointment> GetAppointments_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Appointment>(Service, this.Id, "appointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Appointment (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectteam_Appointments</para>
/// </summary>
public List<Appointment> GetAppointments_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Appointment>(Service, this.Id, "appointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectteam_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectteam_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BookableResourceBooking (Project Team Member)</b></para>
/// <para>Schema Name: msdyn_msdyn_projectteam_bookableresourcebooking_projectteamid</para>
/// </summary>
public List<BookableResourceBooking> GetBookableResourceBookings_ProjectTeamMember (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBooking>(Service, this.Id, "bookableresourcebooking", "msdyn_projectteamid", Columns); }
/// <summary>
/// <para><b>BookableResourceBooking (Project Team Member)</b></para>
/// <para>Schema Name: msdyn_msdyn_projectteam_bookableresourcebooking_projectteamid</para>
/// </summary>
public List<BookableResourceBooking> GetBookableResourceBookings_ProjectTeamMember (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBooking>(Service, this.Id, "bookableresourcebooking", "msdyn_projectteamid", Columns); }
/// <summary>
/// <para><b>BookableResourceBookingHeader (Project Team Member)</b></para>
/// <para>Schema Name: msdyn_msdyn_projectteam_bookableresourcebookingheader_projectteamid</para>
/// </summary>
public List<BookableResourceBookingHeader> GetBookableResourceBookingHeaders_ProjectTeamMember (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBookingHeader>(Service, this.Id, "bookableresourcebookingheader", "msdyn_projectteamid", Columns); }
/// <summary>
/// <para><b>BookableResourceBookingHeader (Project Team Member)</b></para>
/// <para>Schema Name: msdyn_msdyn_projectteam_bookableresourcebookingheader_projectteamid</para>
/// </summary>
public List<BookableResourceBookingHeader> GetBookableResourceBookingHeaders_ProjectTeamMember (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookableResourceBookingHeader>(Service, this.Id, "bookableresourcebookingheader", "msdyn_projectteamid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: msdyn_projectteam_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: msdyn_projectteam_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: msdyn_projectteam_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: msdyn_projectteam_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: msdyn_projectteam_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: msdyn_projectteam_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: msdyn_projectteam_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: msdyn_projectteam_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: msdyn_projectteam_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: msdyn_projectteam_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>Email (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectteam_Emails</para>
/// </summary>
public List<Email> GetEmailMessages_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Email (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectteam_Emails</para>
/// </summary>
public List<Email> GetEmailMessages_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Fax (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectteam_Faxes</para>
/// </summary>
public List<Fax> GetFaxes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fax>(Service, this.Id, "fax", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Fax (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectteam_Faxes</para>
/// </summary>
public List<Fax> GetFaxes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fax>(Service, this.Id, "fax", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Letter (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectteam_Letters</para>
/// </summary>
public List<Letter> GetLetters_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Letter>(Service, this.Id, "letter", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Letter (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectteam_Letters</para>
/// </summary>
public List<Letter> GetLetters_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Letter>(Service, this.Id, "letter", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: msdyn_projectteam_MailboxTrackingFolders</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: msdyn_projectteam_MailboxTrackingFolders</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Approval (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectteam_msdyn_approvals</para>
/// </summary>
public List<Approval> GetApprovals_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Approval>(Service, this.Id, "msdyn_approval", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Approval (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectteam_msdyn_approvals</para>
/// </summary>
public List<Approval> GetApprovals_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Approval>(Service, this.Id, "msdyn_approval", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BookingAlert (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectteam_msdyn_bookingalerts</para>
/// </summary>
public List<BookingAlert> GetBookingAlerts_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlert>(Service, this.Id, "msdyn_bookingalert", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BookingAlert (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectteam_msdyn_bookingalerts</para>
/// </summary>
public List<BookingAlert> GetBookingAlerts_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlert>(Service, this.Id, "msdyn_bookingalert", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>FindWorkEvent (Work)</b></para>
/// <para>Schema Name: msdyn_msdyn_projectteam_msdyn_findworkevent_Work</para>
/// </summary>
public List<FindWorkEvent> GetFindWorkEvents_Work (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FindWorkEvent>(Service, this.Id, "msdyn_findworkevent", "msdyn_work", Columns); }
/// <summary>
/// <para><b>FindWorkEvent (Work)</b></para>
/// <para>Schema Name: msdyn_msdyn_projectteam_msdyn_findworkevent_Work</para>
/// </summary>
public List<FindWorkEvent> GetFindWorkEvents_Work (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FindWorkEvent>(Service, this.Id, "msdyn_findworkevent", "msdyn_work", Columns); }
/// <summary>
/// <para><b>ProjectTask (Assigned Team Members)</b></para>
/// <para>Schema Name: msdyn_msdyn_projectteam_msdyn_projecttask_AssignedTeamMembers</para>
/// </summary>
public List<ProjectTask> GetProjectTasks_AssignedTeamMembers (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTask>(Service, this.Id, "msdyn_projecttask", "msdyn_assignedteammembers", Columns); }
/// <summary>
/// <para><b>ProjectTask (Assigned Team Members)</b></para>
/// <para>Schema Name: msdyn_msdyn_projectteam_msdyn_projecttask_AssignedTeamMembers</para>
/// </summary>
public List<ProjectTask> GetProjectTasks_AssignedTeamMembers (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTask>(Service, this.Id, "msdyn_projecttask", "msdyn_assignedteammembers", Columns); }
/// <summary>
/// <para><b>ProjectTeamMemberSign_Up (Team Membership)</b></para>
/// <para>Schema Name: msdyn_msdyn_projectteam_msdyn_projectteammembersignup_TeamMembership</para>
/// </summary>
public List<ProjectTeamMemberSign_Up> GetProjectTeamMembersSign_Up_TeamMembership (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTeamMemberSign_Up>(Service, this.Id, "msdyn_projectteammembersignup", "msdyn_teammembership", Columns); }
/// <summary>
/// <para><b>ProjectTeamMemberSign_Up (Team Membership)</b></para>
/// <para>Schema Name: msdyn_msdyn_projectteam_msdyn_projectteammembersignup_TeamMembership</para>
/// </summary>
public List<ProjectTeamMemberSign_Up> GetProjectTeamMembersSign_Up_TeamMembership (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectTeamMemberSign_Up>(Service, this.Id, "msdyn_projectteammembersignup", "msdyn_teammembership", Columns); }
/// <summary>
/// <para><b>ResourceAssignment (Project Team)</b></para>
/// <para>Schema Name: msdyn_msdyn_projectteam_msdyn_resourceassignment_projectteamid</para>
/// </summary>
public List<ResourceAssignment> GetResourceAssignments_ProjectTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceAssignment>(Service, this.Id, "msdyn_resourceassignment", "msdyn_projectteamid", Columns); }
/// <summary>
/// <para><b>ResourceAssignment (Project Team)</b></para>
/// <para>Schema Name: msdyn_msdyn_projectteam_msdyn_resourceassignment_projectteamid</para>
/// </summary>
public List<ResourceAssignment> GetResourceAssignments_ProjectTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ResourceAssignment>(Service, this.Id, "msdyn_resourceassignment", "msdyn_projectteamid", Columns); }
/// <summary>
/// <para><b>PhoneCall (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectteam_PhoneCalls</para>
/// </summary>
public List<PhoneCall> GetPhoneCalls_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneCall>(Service, this.Id, "phonecall", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PhoneCall (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectteam_PhoneCalls</para>
/// </summary>
public List<PhoneCall> GetPhoneCalls_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneCall>(Service, this.Id, "phonecall", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: msdyn_projectteam_PrincipalObjectAttributeAccesses</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: msdyn_projectteam_PrincipalObjectAttributeAccesses</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectteam_ProcessSession</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectteam_ProcessSession</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>RecurringAppointment (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectteam_RecurringAppointmentMasters</para>
/// </summary>
public List<RecurringAppointment> GetRecurringAppointments_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecurringAppointment>(Service, this.Id, "recurringappointmentmaster", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>RecurringAppointment (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectteam_RecurringAppointmentMasters</para>
/// </summary>
public List<RecurringAppointment> GetRecurringAppointments_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecurringAppointment>(Service, this.Id, "recurringappointmentmaster", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ServiceActivity (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectteam_ServiceAppointments</para>
/// </summary>
public List<ServiceActivity> GetServiceActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceActivity>(Service, this.Id, "serviceappointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ServiceActivity (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectteam_ServiceAppointments</para>
/// </summary>
public List<ServiceActivity> GetServiceActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceActivity>(Service, this.Id, "serviceappointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SocialActivity (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectteam_SocialActivities</para>
/// </summary>
public List<SocialActivity> GetSocialActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialActivity>(Service, this.Id, "socialactivity", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SocialActivity (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectteam_SocialActivities</para>
/// </summary>
public List<SocialActivity> GetSocialActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialActivity>(Service, this.Id, "socialactivity", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: msdyn_projectteam_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: msdyn_projectteam_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Task (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectteam_Tasks</para>
/// </summary>
public List<Task> GetTasks_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Task>(Service, this.Id, "task", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Task (Regarding)</b></para>
/// <para>Schema Name: msdyn_projectteam_Tasks</para>
/// </summary>
public List<Task> GetTasks_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Task>(Service, this.Id, "task", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: msdyn_projectteam_UserEntityInstanceDatas</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: msdyn_projectteam_UserEntityInstanceDatas</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        

        

        public enum eAllocationMethod
{
	///<summary><para>None</para>
	///<para>Value = 192350000</para></summary>
	[Description("None")]
	None = 192350000, 
	///<summary><para>Full Capacity</para>
	///<para>Value = 192350001</para></summary>
	[Description("Full Capacity")]
	FullCapacity = 192350001, 
	///<summary><para>Percentage Capacity</para>
	///<para>Value = 192350004</para></summary>
	[Description("Percentage Capacity")]
	PercentageCapacity = 192350004, 
	///<summary><para>By Hours - Distribute evenly</para>
	///<para>Value = 192350003</para></summary>
	[Description("By Hours - Distribute evenly")]
	ByHours_DistributeEvenly = 192350003, 
	///<summary><para>By Hours - Front load</para>
	///<para>Value = 192350005</para></summary>
	[Description("By Hours - Front load")]
	ByHours_FrontLoad = 192350005
}
public enum eBillingType
{
	///<summary><para>Non Chargeable</para>
	///<para>Value = 192350000</para></summary>
	[Description("Non Chargeable")]
	NonChargeable = 192350000, 
	///<summary><para>Chargeable</para>
	///<para>Value = 192350001</para></summary>
	[Description("Chargeable")]
	Chargeable = 192350001, 
	///<summary><para>Complimentary</para>
	///<para>Value = 192350002</para></summary>
	[Description("Complimentary")]
	Complimentary = 192350002, 
	///<summary><para>Not Available</para>
	///<para>Value = 192350003</para></summary>
	[Description("Not Available")]
	NotAvailable = 192350003
}
public enum eMembershipStatus
{
	///<summary><para>Requested</para>
	///<para>Value = 1</para></summary>
	[Description("Requested")]
	Requested = 1, 
	///<summary><para>Assigned</para>
	///<para>Value = 2</para></summary>
	[Description("Assigned")]
	Assigned = 2, 
	///<summary><para>Declined</para>
	///<para>Value = 3</para></summary>
	[Description("Declined")]
	Declined = 3
}
public enum eStatus
{
	///<summary><para>Active</para>
	///<para>Value = 0</para></summary>
	[Description("Active")]
	Active = 0, 
	///<summary><para>Inactive</para>
	///<para>Value = 1</para></summary>
	[Description("Inactive")]
	Inactive = 1
}
public enum eStatusReason
{
	///<summary><para>Active</para>
	///<para>Value = 1</para></summary>
	[Description("Active")]
	Active_Active = 1, 
	///<summary><para>Inactive</para>
	///<para>Value = 2</para></summary>
	[Description("Inactive")]
	Inactive_Inactive = 2
}
public void SetState(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>owneridtype</para>
	/// <para>owneridtype</para></summary>
	public const string OwnerIdType = "owneridtype";
	/// <summary><para>owneridname</para>
	/// <para>owneridname</para></summary>
	public const string OwnerIdName = "owneridname";
	/// <summary><para>msdyn_bookableresourceidname</para>
	/// <para>msdyn_bookableresourceidname</para></summary>
	public const string Msdyn_bookableresourceidName = "msdyn_bookableresourceidname";
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>msdyn_resourcecategoryname</para>
	/// <para>msdyn_resourcecategoryname</para></summary>
	public const string Msdyn_resourcecategoryName = "msdyn_resourcecategoryname";
	/// <summary><para>msdyn_projectname</para>
	/// <para>msdyn_projectname</para></summary>
	public const string Msdyn_projectName = "msdyn_projectname";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>msdyn_worktemplatename</para>
	/// <para>msdyn_worktemplatename</para></summary>
	public const string Msdyn_worktemplateName = "msdyn_worktemplatename";
	/// <summary><para>owneridyominame</para>
	/// <para>owneridyominame</para></summary>
	public const string OwnerIdYomiName = "owneridyominame";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>msdyn_resourcerequirementidname</para>
	/// <para>msdyn_resourcerequirementidname</para></summary>
	public const string Msdyn_resourcerequirementidName = "msdyn_resourcerequirementidname";
	/// <summary><para>Allocation method</para>
	/// <para>msdyn_allocationmethod</para></summary>
	public const string AllocationMethod = "msdyn_allocationmethod";
	/// <summary><para>Applicant count</para>
	/// <para>msdyn_applicantcount</para></summary>
	public const string ApplicantCount = "msdyn_applicantcount";
	/// <summary><para>Applicant count (Last Updated On)</para>
	/// <para>msdyn_applicantcount_date</para></summary>
	public const string ApplicantCount_LastUpdatedOn = "msdyn_applicantcount_date";
	/// <summary><para>Applicant count (State)</para>
	/// <para>msdyn_applicantcount_state</para></summary>
	public const string ApplicantCount_State = "msdyn_applicantcount_state";
	/// <summary><para>Applicants available</para>
	/// <para>msdyn_applicantsavailable</para></summary>
	public const string ApplicantsAvailable = "msdyn_applicantsavailable";
	/// <summary><para>Assigned Hours</para>
	/// <para>msdyn_assignedhours</para></summary>
	public const string AssignedHours = "msdyn_assignedhours";
	/// <summary><para>Billing Type</para>
	/// <para>msdyn_billingtype</para></summary>
	public const string BillingType = "msdyn_billingtype";
	/// <summary><para>Bookable Resource</para>
	/// <para>msdyn_bookableresourceid</para></summary>
	public const string BookableResource = "msdyn_bookableresourceid";
	/// <summary><para>Booked Hours</para>
	/// <para>msdyn_hardbookedhours</para></summary>
	public const string BookedHours = "msdyn_hardbookedhours";
	/// <summary><para>Calendar Id</para>
	/// <para>msdyn_calendarid</para></summary>
	public const string CalendarId = "msdyn_calendarid";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Description</para>
	/// <para>msdyn_description</para></summary>
	public const string Description = "msdyn_description";
	/// <summary><para>From</para>
	/// <para>msdyn_from</para></summary>
	public const string @From = "msdyn_from";
	/// <summary><para>Hours</para>
	/// <para>msdyn_hours</para></summary>
	public const string Hours = "msdyn_hours";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string ImportSequenceNumber = "importsequencenumber";
	/// <summary><para>Membership Status</para>
	/// <para>msdyn_membershipstatus</para></summary>
	public const string MembershipStatus = "msdyn_membershipstatus";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>MS Project Client Id</para>
	/// <para>msdyn_msprojectclientid</para></summary>
	public const string MSProjectClientId = "msdyn_msprojectclientid";
	/// <summary><para>Number</para>
	/// <para>msdyn_number</para></summary>
	public const string Number = "msdyn_number";
	/// <summary><para>Owner</para>
	/// <para>ownerid</para></summary>
	public const string Owner = "ownerid";
	/// <summary><para>Owning Business Unit</para>
	/// <para>owningbusinessunit</para></summary>
	public const string OwningBusinessUnit = "owningbusinessunit";
	/// <summary><para>Owning Team</para>
	/// <para>owningteam</para></summary>
	public const string OwningTeam = "owningteam";
	/// <summary><para>Owning User</para>
	/// <para>owninguser</para></summary>
	public const string OwningUser = "owninguser";
	/// <summary><para>Percentage</para>
	/// <para>msdyn_percentage</para></summary>
	public const string Percentage = "msdyn_percentage";
	/// <summary><para>Position Description</para>
	/// <para>msdyn_roledescription</para></summary>
	public const string PositionDescription = "msdyn_roledescription";
	/// <summary><para>Position Name</para>
	/// <para>msdyn_name</para></summary>
	public const string PositionName = "msdyn_name";
	/// <summary><para>project</para>
	/// <para>msdyn_project</para></summary>
	public const string Project = "msdyn_project";
	/// <summary><para>Project Approver</para>
	/// <para>msdyn_projectapprover</para></summary>
	public const string ProjectApprover = "msdyn_projectapprover";
	/// <summary><para>Project Team</para>
	/// <para>msdyn_projectteamid</para></summary>
	public const string ProjectTeamId = "msdyn_projectteamid";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string RecordCreatedOn = "overriddencreatedon";
	/// <summary><para>Required Hours</para>
	/// <para>msdyn_hoursrequested</para></summary>
	public const string RequiredHours = "msdyn_hoursrequested";
	/// <summary><para>Required Hours</para>
	/// <para>msdyn_requiredhours</para></summary>
	public const string RequiredHours2 = "msdyn_requiredhours";
	/// <summary><para>Resource Requirement</para>
	/// <para>msdyn_resourcerequirementid</para></summary>
	public const string ResourceRequirement = "msdyn_resourcerequirementid";
	/// <summary><para>Role</para>
	/// <para>msdyn_resourcecategory</para></summary>
	public const string Role = "msdyn_resourcecategory";
	/// <summary><para>Soft Book</para>
	/// <para>msdyn_softbookedhours</para></summary>
	public const string SoftBook = "msdyn_softbookedhours";
	/// <summary><para>Status</para>
	/// <para>statecode</para></summary>
	public const string Status = "statecode";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string StatusReason = "statuscode";
	/// <summary><para>Time Zone Rule Version Number</para>
	/// <para>timezoneruleversionnumber</para></summary>
	public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
	/// <summary><para>To</para>
	/// <para>msdyn_to</para></summary>
	public const string To = "msdyn_to";
	/// <summary><para>UTC Conversion Time Zone Code</para>
	/// <para>utcconversiontimezonecode</para></summary>
	public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
	/// <summary><para>Work Template</para>
	/// <para>msdyn_worktemplate</para></summary>
	public const string WorkTemplate = "msdyn_worktemplate";
}

    }
}

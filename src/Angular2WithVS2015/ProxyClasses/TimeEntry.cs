// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("msdyn_timeentry")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class TimeEntry : BaseProxyClass
    {
        public new const string LogicalName = "msdyn_timeentry";
        public const int ObjectTypeCode = 10089;
        public const string PrimaryIdAttribute = "msdyn_timeentryid";
        public const string PrimaryNameAttribute = "msdyn_description";
        
        static TimeEntry()
        {
            BaseProxyClass.RegisterProxyType(typeof(TimeEntry), "msdyn_timeentry");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public TimeEntry() : base(new Entity("msdyn_timeentry")) { }
        public TimeEntry(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<TimeEntry>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_bookableresourcename</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_bookableresourcename")]
public string Msdyn_bookableresourceName
{
	get { return this.GetPropertyValue<string>("msdyn_bookableresourcename"); }
}
///<summary>
///<para>Logical Name: owneridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridname")]
public string OwnerIdName
{
	get { return this.GetPropertyValue<string>("owneridname"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_projectname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_projectname")]
public string Msdyn_projectName
{
	get { return this.GetPropertyValue<string>("msdyn_projectname"); }
}
///<summary>
///<para>Logical Name: owneridtype</para>
///</summary>
[AttributeLogicalNameAttribute("owneridtype")]
public string OwnerIdType
{
	get { return this.GetPropertyValue<string>("owneridtype"); }
	set { this.SetPropertyValue<string>("owneridtype", value, "OwnerIdType"); }
}
///<summary>
///<para>Logical Name: msdyn_resourceorganizationalunitidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_resourceorganizationalunitidname")]
public string Msdyn_ResourceOrganizationalUnitIdName
{
	get { return this.GetPropertyValue<string>("msdyn_resourceorganizationalunitidname"); }
}
///<summary>
///<para>Logical Name: msdyn_managername</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_managername")]
public string Msdyn_managerName
{
	get { return this.GetPropertyValue<string>("msdyn_managername"); }
}
///<summary>
///<para>Logical Name: owneridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridyominame")]
public string OwnerIdYomiName
{
	get { return this.GetPropertyValue<string>("owneridyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_projecttaskname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_projecttaskname")]
public string Msdyn_projectTaskName
{
	get { return this.GetPropertyValue<string>("msdyn_projecttaskname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_manageryominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_manageryominame")]
public string Msdyn_managerYomiName
{
	get { return this.GetPropertyValue<string>("msdyn_manageryominame"); }
}
///<summary>
///<para>Logical Name: msdyn_resourcecategoryname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_resourcecategoryname")]
public string Msdyn_resourceCategoryName
{
	get { return this.GetPropertyValue<string>("msdyn_resourcecategoryname"); }
}
///<summary>
///<para>Logical Name: msdyn_bookableresource</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_bookableresource")]
public EntityReference BookableResource
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_bookableresource"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_bookableresource", value, "BookableResource"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: msdyn_date</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_date")]
public DateTime? Date
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_date"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_date", value, "Date"); }
}
///<summary>
///<para>Logical Name: msdyn_duration</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_duration")]
public int? Duration
{
	get { return this.GetPropertyValue<int?>("msdyn_duration"); }
	set { this.SetPropertyValue("msdyn_duration", (int?)value, (int)0, (int)2147483647, "Duration"); }
}
/// <summary>
///Logical Name: msdyn_entrystatus
/// </summary>
[AttributeLogicalNameAttribute("msdyn_entrystatus")]
public eTimeEntryStatus? EntryStatus
{
	get
	{
		if (EntryStatus_OptionSetValue != null) { return (eTimeEntryStatus)EntryStatus_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.EntryStatus_OptionSetValue = new OptionSetValue((int)value); }
		else this.EntryStatus_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_entrystatus</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_entrystatus")]
public OptionSetValue EntryStatus_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_entrystatus"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_entrystatus", value, "EntryStatus_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string EntryStatus_Text(IOrganizationService Service)
{
	return this.EntryStatus_OptionSetValue.GetOptionSetText(Service, this, "msdyn_entrystatus");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string EntryStatus_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.EntryStatus_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_externaldescription</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_externaldescription")]
public string ExternalComments
{
	get { return this.GetPropertyValue<string>("msdyn_externaldescription"); }
	set { this.SetPropertyValue("msdyn_externaldescription", value, 100, "ExternalComments"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? ImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "ImportSequenceNumber"); }
}
///<summary>
///<para>Logical Name: msdyn_description</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_description")]
public string InternalComments
{
	get { return this.GetPropertyValue<string>("msdyn_description"); }
	set { this.SetPropertyValue("msdyn_description", value, 100, "InternalComments"); }
}
///<summary>
///<para>Logical Name: msdyn_manager</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_manager")]
public EntityReference Manager
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_manager"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_manager", value, "Manager"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: ownerid</para>
///</summary>
[AttributeLogicalNameAttribute("ownerid")]
public EntityReference Owner
{
	get { return this.GetPropertyValue<EntityReference>("ownerid"); }
	set { this.SetPropertyValue<EntityReference>("ownerid", value, "Owner"); }
}
///<summary>
///<para>Logical Name: owningbusinessunit</para>
///</summary>
[AttributeLogicalNameAttribute("owningbusinessunit")]
public EntityReference OwningBusinessUnit
{
	get { return this.GetPropertyValue<EntityReference>("owningbusinessunit"); }
}
///<summary>
///<para>Logical Name: owningteam</para>
///</summary>
[AttributeLogicalNameAttribute("owningteam")]
public EntityReference OwningTeam
{
	get { return this.GetPropertyValue<EntityReference>("owningteam"); }
}
///<summary>
///<para>Logical Name: owninguser</para>
///</summary>
[AttributeLogicalNameAttribute("owninguser")]
public EntityReference OwningUser
{
	get { return this.GetPropertyValue<EntityReference>("owninguser"); }
}
///<summary>
///<para>Logical Name: msdyn_project</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_project")]
public EntityReference Project
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_project"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_project", value, "Project"); }
}
///<summary>
///<para>Logical Name: msdyn_projecttask</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_projecttask")]
public EntityReference ProjectTask
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_projecttask"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_projecttask", value, "ProjectTask"); }
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? RecordCreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "RecordCreatedOn"); }
}
///<summary>
///<para>Logical Name: msdyn_relateditemid</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_relateditemid")]
public string RelatedItemIdentifier
{
	get { return this.GetPropertyValue<string>("msdyn_relateditemid"); }
	set { this.SetPropertyValue("msdyn_relateditemid", value, 200, "RelatedItemIdentifier"); }
}
/// <summary>
///Logical Name: msdyn_relateditemtype
/// </summary>
[AttributeLogicalNameAttribute("msdyn_relateditemtype")]
public eRelatedItemType? RelatedItemType
{
	get
	{
		if (RelatedItemType_OptionSetValue != null) { return (eRelatedItemType)RelatedItemType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.RelatedItemType_OptionSetValue = new OptionSetValue((int)value); }
		else this.RelatedItemType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_relateditemtype</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_relateditemtype")]
public OptionSetValue RelatedItemType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_relateditemtype"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_relateditemtype", value, "RelatedItemType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string RelatedItemType_Text(IOrganizationService Service)
{
	return this.RelatedItemType_OptionSetValue.GetOptionSetText(Service, this, "msdyn_relateditemtype");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string RelatedItemType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.RelatedItemType_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_resourceorganizationalunitid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_resourceorganizationalunitid")]
public EntityReference ResourcingUnit
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_resourceorganizationalunitid"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_resourceorganizationalunitid", value, "ResourcingUnit"); }
}
///<summary>
///<para>Logical Name: msdyn_resourcecategory</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_resourcecategory")]
public EntityReference Role
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_resourcecategory"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_resourcecategory", value, "Role"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eStatus? Status
{
	get
	{
		if (Status_OptionSetValue != null) { return (eStatus)Status_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Status_OptionSetValue = new OptionSetValue((int)value); }
		else this.Status_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue Status_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
	set { this.SetPropertyValue<OptionSetValue>("statecode", value, "Status_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Status_Text(IOrganizationService Service)
{
	return this.Status_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Status_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Status_OptionSetValue.Value);
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? StatusReason
{
	get
	{
		if (StatusReason_OptionSetValue != null) { return (eStatusReason)StatusReason_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StatusReason_OptionSetValue = new OptionSetValue((int)value); }
		else this.StatusReason_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue StatusReason_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "StatusReason_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string StatusReason_Text(IOrganizationService Service)
{
	return this.StatusReason_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string StatusReason_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.StatusReason_OptionSetValue.Value);
}
/// <summary>
///Logical Name: msdyn_targetentrystatus
/// </summary>
[AttributeLogicalNameAttribute("msdyn_targetentrystatus")]
public eTimeEntryStatus? TargetEntryStatus
{
	get
	{
		if (TargetEntryStatus_OptionSetValue != null) { return (eTimeEntryStatus)TargetEntryStatus_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.TargetEntryStatus_OptionSetValue = new OptionSetValue((int)value); }
		else this.TargetEntryStatus_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_targetentrystatus</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_targetentrystatus")]
public OptionSetValue TargetEntryStatus_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_targetentrystatus"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_targetentrystatus", value, "TargetEntryStatus_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string TargetEntryStatus_Text(IOrganizationService Service)
{
	return this.TargetEntryStatus_OptionSetValue.GetOptionSetText(Service, this, "msdyn_targetentrystatus");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string TargetEntryStatus_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.TargetEntryStatus_OptionSetValue.Value);
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: msdyn_timeentryid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_timeentryid")]
public Guid TimeEntryId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: timezoneruleversionnumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("timezoneruleversionnumber")]
public int? TimeZoneRuleVersionNumber
{
	get { return this.GetPropertyValue<int?>("timezoneruleversionnumber"); }
	set { this.SetPropertyValue("timezoneruleversionnumber", (int?)value, (int)-1, (int)2147483647, "TimeZoneRuleVersionNumber"); }
}
/// <summary>
///Logical Name: msdyn_type
/// </summary>
[AttributeLogicalNameAttribute("msdyn_type")]
public eTimeEntryType? Type
{
	get
	{
		if (Type_OptionSetValue != null) { return (eTimeEntryType)Type_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Type_OptionSetValue = new OptionSetValue((int)value); }
		else this.Type_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_type</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_type")]
public OptionSetValue Type_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_type"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_type", value, "Type_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Type_Text(IOrganizationService Service)
{
	return this.Type_OptionSetValue.GetOptionSetText(Service, this, "msdyn_type");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Type_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Type_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: utcconversiontimezonecode</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utcconversiontimezonecode")]
public int? UTCConversionTimeZoneCode
{
	get { return this.GetPropertyValue<int?>("utcconversiontimezonecode"); }
	set { this.SetPropertyValue("utcconversiontimezonecode", (int?)value, (int)-1, (int)2147483647, "UTCConversionTimeZoneCode"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}


        /// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: msdyn_timeentry_Annotations</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: msdyn_timeentry_Annotations</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: msdyn_timeentry_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: msdyn_timeentry_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: msdyn_timeentry_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: msdyn_timeentry_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: msdyn_timeentry_MailboxTrackingFolders</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: msdyn_timeentry_MailboxTrackingFolders</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ProjectApproval (Time Entry)</b></para>
/// <para>Schema Name: msdyn_msdyn_timeentry_msdyn_projectapproval_TimeEntry</para>
/// </summary>
public List<ProjectApproval> GetProjectApproval_TimeEntry (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectApproval>(Service, this.Id, "msdyn_projectapproval", "msdyn_timeentry", Columns); }
/// <summary>
/// <para><b>ProjectApproval (Time Entry)</b></para>
/// <para>Schema Name: msdyn_msdyn_timeentry_msdyn_projectapproval_TimeEntry</para>
/// </summary>
public List<ProjectApproval> GetProjectApproval_TimeEntry (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectApproval>(Service, this.Id, "msdyn_projectapproval", "msdyn_timeentry", Columns); }
/// <summary>
/// <para><b>TimeOffCalendar (Time Entry)</b></para>
/// <para>Schema Name: msdyn_msdyn_timeentry_msdyn_timeoffcalendar_timeEntry</para>
/// </summary>
public List<TimeOffCalendar> GetTimeOffCalendars_TimeEntry (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TimeOffCalendar>(Service, this.Id, "msdyn_timeoffcalendar", "msdyn_timeentry", Columns); }
/// <summary>
/// <para><b>TimeOffCalendar (Time Entry)</b></para>
/// <para>Schema Name: msdyn_msdyn_timeentry_msdyn_timeoffcalendar_timeEntry</para>
/// </summary>
public List<TimeOffCalendar> GetTimeOffCalendars_TimeEntry (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TimeOffCalendar>(Service, this.Id, "msdyn_timeoffcalendar", "msdyn_timeentry", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: msdyn_timeentry_PrincipalObjectAttributeAccesses</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: msdyn_timeentry_PrincipalObjectAttributeAccesses</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: msdyn_timeentry_ProcessSession</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: msdyn_timeentry_ProcessSession</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: msdyn_timeentry_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: msdyn_timeentry_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: msdyn_timeentry_UserEntityInstanceDatas</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: msdyn_timeentry_UserEntityInstanceDatas</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        

        

        public enum eTimeEntryStatus
{
	///<summary><para>Draft</para>
	///<para>Value = 192350000</para></summary>
	[Description("Draft")]
	Draft = 192350000, 
	///<summary><para>Returned</para>
	///<para>Value = 192350001</para></summary>
	[Description("Returned")]
	Returned = 192350001, 
	///<summary><para>Approved</para>
	///<para>Value = 192350002</para></summary>
	[Description("Approved")]
	Approved = 192350002, 
	///<summary><para>Submitted</para>
	///<para>Value = 192350003</para></summary>
	[Description("Submitted")]
	Submitted = 192350003
}
public enum eRelatedItemType
{
	///<summary><para>None</para>
	///<para>Value = 192350000</para></summary>
	[Description("None")]
	None = 192350000, 
	///<summary><para>Resource Booking</para>
	///<para>Value = 192350001</para></summary>
	[Description("Resource Booking")]
	ResourceBooking = 192350001, 
	///<summary><para>Resource Assignment</para>
	///<para>Value = 192350002</para></summary>
	[Description("Resource Assignment")]
	ResourceAssignment = 192350002, 
	///<summary><para>Exchange Appointments</para>
	///<para>Value = 192350100</para></summary>
	[Description("Exchange Appointments")]
	ExchangeAppointments = 192350100
}
public enum eStatus
{
	///<summary><para>Active</para>
	///<para>Value = 0</para></summary>
	[Description("Active")]
	Active = 0, 
	///<summary><para>Inactive</para>
	///<para>Value = 1</para></summary>
	[Description("Inactive")]
	Inactive = 1
}
public enum eStatusReason
{
	///<summary><para>Active</para>
	///<para>Value = 1</para></summary>
	[Description("Active")]
	Active_Active = 1, 
	///<summary><para>Inactive</para>
	///<para>Value = 2</para></summary>
	[Description("Inactive")]
	Inactive_Inactive = 2
}
public enum eTimeEntryType
{
	///<summary><para>Work</para>
	///<para>Value = 192350000</para></summary>
	[Description("Work")]
	Work = 192350000, 
	///<summary><para>Absence</para>
	///<para>Value = 192350001</para></summary>
	[Description("Absence")]
	Absence = 192350001, 
	///<summary><para>Vacation</para>
	///<para>Value = 192350002</para></summary>
	[Description("Vacation")]
	Vacation = 192350002
}
public void SetState(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>msdyn_bookableresourcename</para>
	/// <para>msdyn_bookableresourcename</para></summary>
	public const string Msdyn_bookableresourceName = "msdyn_bookableresourcename";
	/// <summary><para>owneridname</para>
	/// <para>owneridname</para></summary>
	public const string OwnerIdName = "owneridname";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>msdyn_projectname</para>
	/// <para>msdyn_projectname</para></summary>
	public const string Msdyn_projectName = "msdyn_projectname";
	/// <summary><para>owneridtype</para>
	/// <para>owneridtype</para></summary>
	public const string OwnerIdType = "owneridtype";
	/// <summary><para>msdyn_resourceorganizationalunitidname</para>
	/// <para>msdyn_resourceorganizationalunitidname</para></summary>
	public const string Msdyn_ResourceOrganizationalUnitIdName = "msdyn_resourceorganizationalunitidname";
	/// <summary><para>msdyn_managername</para>
	/// <para>msdyn_managername</para></summary>
	public const string Msdyn_managerName = "msdyn_managername";
	/// <summary><para>owneridyominame</para>
	/// <para>owneridyominame</para></summary>
	public const string OwnerIdYomiName = "owneridyominame";
	/// <summary><para>msdyn_projecttaskname</para>
	/// <para>msdyn_projecttaskname</para></summary>
	public const string Msdyn_projectTaskName = "msdyn_projecttaskname";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>msdyn_manageryominame</para>
	/// <para>msdyn_manageryominame</para></summary>
	public const string Msdyn_managerYomiName = "msdyn_manageryominame";
	/// <summary><para>msdyn_resourcecategoryname</para>
	/// <para>msdyn_resourcecategoryname</para></summary>
	public const string Msdyn_resourceCategoryName = "msdyn_resourcecategoryname";
	/// <summary><para>Bookable Resource</para>
	/// <para>msdyn_bookableresource</para></summary>
	public const string BookableResource = "msdyn_bookableresource";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Date</para>
	/// <para>msdyn_date</para></summary>
	public const string Date = "msdyn_date";
	/// <summary><para>Duration</para>
	/// <para>msdyn_duration</para></summary>
	public const string Duration = "msdyn_duration";
	/// <summary><para>Entry Status</para>
	/// <para>msdyn_entrystatus</para></summary>
	public const string EntryStatus = "msdyn_entrystatus";
	/// <summary><para>External Comments</para>
	/// <para>msdyn_externaldescription</para></summary>
	public const string ExternalComments = "msdyn_externaldescription";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string ImportSequenceNumber = "importsequencenumber";
	/// <summary><para>Internal Comments</para>
	/// <para>msdyn_description</para></summary>
	public const string InternalComments = "msdyn_description";
	/// <summary><para>Manager</para>
	/// <para>msdyn_manager</para></summary>
	public const string Manager = "msdyn_manager";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>Owner</para>
	/// <para>ownerid</para></summary>
	public const string Owner = "ownerid";
	/// <summary><para>Owning Business Unit</para>
	/// <para>owningbusinessunit</para></summary>
	public const string OwningBusinessUnit = "owningbusinessunit";
	/// <summary><para>Owning Team</para>
	/// <para>owningteam</para></summary>
	public const string OwningTeam = "owningteam";
	/// <summary><para>Owning User</para>
	/// <para>owninguser</para></summary>
	public const string OwningUser = "owninguser";
	/// <summary><para>Project</para>
	/// <para>msdyn_project</para></summary>
	public const string Project = "msdyn_project";
	/// <summary><para>Project Task</para>
	/// <para>msdyn_projecttask</para></summary>
	public const string ProjectTask = "msdyn_projecttask";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string RecordCreatedOn = "overriddencreatedon";
	/// <summary><para>Related item identifier</para>
	/// <para>msdyn_relateditemid</para></summary>
	public const string RelatedItemIdentifier = "msdyn_relateditemid";
	/// <summary><para>Related item type</para>
	/// <para>msdyn_relateditemtype</para></summary>
	public const string RelatedItemType = "msdyn_relateditemtype";
	/// <summary><para>Resourcing Unit</para>
	/// <para>msdyn_resourceorganizationalunitid</para></summary>
	public const string ResourcingUnit = "msdyn_resourceorganizationalunitid";
	/// <summary><para>Role</para>
	/// <para>msdyn_resourcecategory</para></summary>
	public const string Role = "msdyn_resourcecategory";
	/// <summary><para>Status</para>
	/// <para>statecode</para></summary>
	public const string Status = "statecode";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string StatusReason = "statuscode";
	/// <summary><para>Target Entry Status</para>
	/// <para>msdyn_targetentrystatus</para></summary>
	public const string TargetEntryStatus = "msdyn_targetentrystatus";
	/// <summary><para>Time Entry</para>
	/// <para>msdyn_timeentryid</para></summary>
	public const string TimeEntryId = "msdyn_timeentryid";
	/// <summary><para>Time Zone Rule Version Number</para>
	/// <para>timezoneruleversionnumber</para></summary>
	public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
	/// <summary><para>Type</para>
	/// <para>msdyn_type</para></summary>
	public const string Type = "msdyn_type";
	/// <summary><para>UTC Conversion Time Zone Code</para>
	/// <para>utcconversiontimezonecode</para></summary>
	public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
}

    }
}

// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("lead")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class Lead : BaseProxyClass
    {
        public new const string LogicalName = "lead";
        public const int ObjectTypeCode = 4;
        public const string PrimaryIdAttribute = "leadid";
        public const string PrimaryNameAttribute = "fullname";
        public const string PrimaryImageAttribute = "entityimage";
        static Lead()
        {
            BaseProxyClass.RegisterProxyType(typeof(Lead), "lead");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public Lead() : base(new Entity("lead")) { }
        public Lead(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<Lead>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: entityimage_timestamp</para>
///</summary>
[AttributeLogicalNameAttribute("entityimage_timestamp")]
public int? EntityImage_Timestamp
{
	get { return this.GetPropertyValue<int?>("entityimage_timestamp"); }
}
///<summary>
///<para>Logical Name: contactidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("contactidname")]
public string ContactIdName
{
	get { return this.GetPropertyValue<string>("contactidname"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyidname")]
public string TransactionCurrencyIdName
{
	get { return this.GetPropertyValue<string>("transactioncurrencyidname"); }
}
///<summary>
///<para>Logical Name: accountidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("accountidname")]
public string AccountIdName
{
	get { return this.GetPropertyValue<string>("accountidname"); }
}
///<summary>
///<para>Logical Name: relatedobjectidname</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("relatedobjectidname")]
public string RelatedObjectIdName
{
	get { return this.GetPropertyValue<string>("relatedobjectidname"); }
}
///<summary>
///<para>Logical Name: campaignidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("campaignidname")]
public string CampaignIdName
{
	get { return this.GetPropertyValue<string>("campaignidname"); }
}
///<summary>
///<para>Logical Name: masterleadidyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("masterleadidyominame")]
public string MasterLeadIdYomiName
{
	get { return this.GetPropertyValue<string>("masterleadidyominame"); }
}
///<summary>
///<para>Logical Name: owneridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridyominame")]
public string OwnerIdYomiName
{
	get { return this.GetPropertyValue<string>("owneridyominame"); }
}
///<summary>
///<para>Logical Name: parentaccountidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("parentaccountidname")]
public string ParentAccountIdName
{
	get { return this.GetPropertyValue<string>("parentaccountidname"); }
}
///<summary>
///<para>Logical Name: parentaccountidyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("parentaccountidyominame")]
public string ParentAccountIdYomiName
{
	get { return this.GetPropertyValue<string>("parentaccountidyominame"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: entityimage_url</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("entityimage_url")]
public string EntityImage_URL
{
	get { return this.GetPropertyValue<string>("entityimage_url"); }
}
///<summary>
///<para>Logical Name: parentcontactidyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("parentcontactidyominame")]
public string ParentContactIdYomiName
{
	get { return this.GetPropertyValue<string>("parentcontactidyominame"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: customeridyominame</para>
///<para>Max Length: 450 characters</para>
///</summary>
[AttributeLogicalNameAttribute("customeridyominame")]
public string CustomerIdYomiName
{
	get { return this.GetPropertyValue<string>("customeridyominame"); }
}
///<summary>
///<para>Logical Name: slainvokedidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("slainvokedidname")]
public string SLAInvokedIdName
{
	get { return this.GetPropertyValue<string>("slainvokedidname"); }
}
///<summary>
///<para>Logical Name: masterleadidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("masterleadidname")]
public string MasterLeadIdName
{
	get { return this.GetPropertyValue<string>("masterleadidname"); }
}
///<summary>
///<para>Logical Name: owneridtype</para>
///</summary>
[AttributeLogicalNameAttribute("owneridtype")]
public string OwnerIdType
{
	get { return this.GetPropertyValue<string>("owneridtype"); }
	set { this.SetPropertyValue<string>("owneridtype", value, "OwnerIdType"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: qualifyingopportunityidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("qualifyingopportunityidname")]
public string QualifyingOpportunityIdName
{
	get { return this.GetPropertyValue<string>("qualifyingopportunityidname"); }
}
///<summary>
///<para>Logical Name: customeridname</para>
///<para>Max Length: 160 characters</para>
///</summary>
[AttributeLogicalNameAttribute("customeridname")]
public string CustomerIdName
{
	get { return this.GetPropertyValue<string>("customeridname"); }
}
///<summary>
///<para>Logical Name: contactidyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("contactidyominame")]
public string ContactIdYomiName
{
	get { return this.GetPropertyValue<string>("contactidyominame"); }
}
///<summary>
///<para>Logical Name: originatingcaseidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("originatingcaseidname")]
public string OriginatingCaseIdName
{
	get { return this.GetPropertyValue<string>("originatingcaseidname"); }
}
///<summary>
///<para>Logical Name: parentcontactidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("parentcontactidname")]
public string ParentContactIdName
{
	get { return this.GetPropertyValue<string>("parentcontactidname"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: owneridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridname")]
public string OwnerIdName
{
	get { return this.GetPropertyValue<string>("owneridname"); }
}
///<summary>
///<para>Logical Name: accountidyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("accountidyominame")]
public string AccountIdYomiName
{
	get { return this.GetPropertyValue<string>("accountidyominame"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: slaname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("slaname")]
public string SLAName
{
	get { return this.GetPropertyValue<string>("slaname"); }
}
///<summary>
///<para>Logical Name: accountid</para>
///</summary>
[AttributeLogicalNameAttribute("accountid")]
public EntityReference Account
{
	get { return this.GetPropertyValue<EntityReference>("accountid"); }
}
///<summary>
///<para>Logical Name: address1_composite</para>
///<para>Max Length: 1000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_composite")]
public string Address1
{
	get { return this.GetPropertyValue<string>("address1_composite"); }
}
/// <summary>
///Logical Name: address1_addresstypecode
/// </summary>
[AttributeLogicalNameAttribute("address1_addresstypecode")]
public eAddress1_AddressType? Address1_AddressType
{
	get
	{
		if (Address1_AddressType_OptionSetValue != null) { return (eAddress1_AddressType)Address1_AddressType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Address1_AddressType_OptionSetValue = new OptionSetValue((int)value); }
		else this.Address1_AddressType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: address1_addresstypecode</para>
///</summary>
[AttributeLogicalNameAttribute("address1_addresstypecode")]
public OptionSetValue Address1_AddressType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("address1_addresstypecode"); }
	set { this.SetPropertyValue<OptionSetValue>("address1_addresstypecode", value, "Address1_AddressType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Address1_AddressType_Text(IOrganizationService Service)
{
	return this.Address1_AddressType_OptionSetValue.GetOptionSetText(Service, this, "address1_addresstypecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Address1_AddressType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Address1_AddressType_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: address1_county</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_county")]
public string Address1_County
{
	get { return this.GetPropertyValue<string>("address1_county"); }
	set { this.SetPropertyValue("address1_county", value, 50, "Address1_County"); }
}
///<summary>
///<para>Logical Name: address1_fax</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_fax")]
public string Address1_Fax
{
	get { return this.GetPropertyValue<string>("address1_fax"); }
	set { this.SetPropertyValue("address1_fax", value, 50, "Address1_Fax"); }
}
///<summary>
///<para>Logical Name: address1_addressid</para>
///</summary>
[AttributeLogicalNameAttribute("address1_addressid")]
public Guid Address1_ID
{
	get { return this.GetPropertyValue<Guid>("address1_addressid"); }
	set { this.SetPropertyValue<Guid>("address1_addressid", value, "Address1_ID"); }
}
///<summary>
///<para>Logical Name: address1_latitude</para>
///<para>Minimum Value: -90</para>
///<para>Maximum Value: 90</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("address1_latitude")]
public double? Address1_Latitude
{
	get { return this.GetPropertyValue<double?>("address1_latitude"); }
	set { this.SetPropertyValue("address1_latitude", (double?)value, (double)-90, (double)90, "Address1_Latitude"); }
}
///<summary>
///<para>Logical Name: address1_longitude</para>
///<para>Minimum Value: -180</para>
///<para>Maximum Value: 180</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("address1_longitude")]
public double? Address1_Longitude
{
	get { return this.GetPropertyValue<double?>("address1_longitude"); }
	set { this.SetPropertyValue("address1_longitude", (double?)value, (double)-180, (double)180, "Address1_Longitude"); }
}
///<summary>
///<para>Logical Name: address1_name</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_name")]
public string Address1_Name
{
	get { return this.GetPropertyValue<string>("address1_name"); }
	set { this.SetPropertyValue("address1_name", value, 100, "Address1_Name"); }
}
///<summary>
///<para>Logical Name: address1_postofficebox</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_postofficebox")]
public string Address1_PostOfficeBox
{
	get { return this.GetPropertyValue<string>("address1_postofficebox"); }
	set { this.SetPropertyValue("address1_postofficebox", value, 20, "Address1_PostOfficeBox"); }
}
/// <summary>
///Logical Name: address1_shippingmethodcode
/// </summary>
[AttributeLogicalNameAttribute("address1_shippingmethodcode")]
public eAddress1_ShippingMethod? Address1_ShippingMethod
{
	get
	{
		if (Address1_ShippingMethod_OptionSetValue != null) { return (eAddress1_ShippingMethod)Address1_ShippingMethod_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Address1_ShippingMethod_OptionSetValue = new OptionSetValue((int)value); }
		else this.Address1_ShippingMethod_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: address1_shippingmethodcode</para>
///</summary>
[AttributeLogicalNameAttribute("address1_shippingmethodcode")]
public OptionSetValue Address1_ShippingMethod_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("address1_shippingmethodcode"); }
	set { this.SetPropertyValue<OptionSetValue>("address1_shippingmethodcode", value, "Address1_ShippingMethod_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Address1_ShippingMethod_Text(IOrganizationService Service)
{
	return this.Address1_ShippingMethod_OptionSetValue.GetOptionSetText(Service, this, "address1_shippingmethodcode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Address1_ShippingMethod_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Address1_ShippingMethod_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: address1_telephone1</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_telephone1")]
public string Address1_Telephone1
{
	get { return this.GetPropertyValue<string>("address1_telephone1"); }
	set { this.SetPropertyValue("address1_telephone1", value, 50, "Address1_Telephone1"); }
}
///<summary>
///<para>Logical Name: address1_telephone2</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_telephone2")]
public string Address1_Telephone2
{
	get { return this.GetPropertyValue<string>("address1_telephone2"); }
	set { this.SetPropertyValue("address1_telephone2", value, 50, "Address1_Telephone2"); }
}
///<summary>
///<para>Logical Name: address1_telephone3</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_telephone3")]
public string Address1_Telephone3
{
	get { return this.GetPropertyValue<string>("address1_telephone3"); }
	set { this.SetPropertyValue("address1_telephone3", value, 50, "Address1_Telephone3"); }
}
///<summary>
///<para>Logical Name: address1_upszone</para>
///<para>Max Length: 4 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_upszone")]
public string Address1_UPSZone
{
	get { return this.GetPropertyValue<string>("address1_upszone"); }
	set { this.SetPropertyValue("address1_upszone", value, 4, "Address1_UPSZone"); }
}
///<summary>
///<para>Logical Name: address1_utcoffset</para>
///<para>Minimum Value: -1500</para>
///<para>Maximum Value: 1500</para>
///</summary>
[AttributeLogicalNameAttribute("address1_utcoffset")]
public int? Address1_UTCOffset
{
	get { return this.GetPropertyValue<int?>("address1_utcoffset"); }
	set { this.SetPropertyValue("address1_utcoffset", (int?)value, (int)-1500, (int)1500, "Address1_UTCOffset"); }
}
///<summary>
///<para>Logical Name: address2_composite</para>
///<para>Max Length: 1000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_composite")]
public string Address2
{
	get { return this.GetPropertyValue<string>("address2_composite"); }
}
/// <summary>
///Logical Name: address2_addresstypecode
/// </summary>
[AttributeLogicalNameAttribute("address2_addresstypecode")]
public eAddress2_AddressType? Address2_AddressType
{
	get
	{
		if (Address2_AddressType_OptionSetValue != null) { return (eAddress2_AddressType)Address2_AddressType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Address2_AddressType_OptionSetValue = new OptionSetValue((int)value); }
		else this.Address2_AddressType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: address2_addresstypecode</para>
///</summary>
[AttributeLogicalNameAttribute("address2_addresstypecode")]
public OptionSetValue Address2_AddressType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("address2_addresstypecode"); }
	set { this.SetPropertyValue<OptionSetValue>("address2_addresstypecode", value, "Address2_AddressType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Address2_AddressType_Text(IOrganizationService Service)
{
	return this.Address2_AddressType_OptionSetValue.GetOptionSetText(Service, this, "address2_addresstypecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Address2_AddressType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Address2_AddressType_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: address2_city</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_city")]
public string Address2_City
{
	get { return this.GetPropertyValue<string>("address2_city"); }
	set { this.SetPropertyValue("address2_city", value, 80, "Address2_City"); }
}
///<summary>
///<para>Logical Name: address2_country</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_country")]
public string Address2_Country_Region
{
	get { return this.GetPropertyValue<string>("address2_country"); }
	set { this.SetPropertyValue("address2_country", value, 80, "Address2_Country_Region"); }
}
///<summary>
///<para>Logical Name: address2_county</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_county")]
public string Address2_County
{
	get { return this.GetPropertyValue<string>("address2_county"); }
	set { this.SetPropertyValue("address2_county", value, 50, "Address2_County"); }
}
///<summary>
///<para>Logical Name: address2_fax</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_fax")]
public string Address2_Fax
{
	get { return this.GetPropertyValue<string>("address2_fax"); }
	set { this.SetPropertyValue("address2_fax", value, 50, "Address2_Fax"); }
}
///<summary>
///<para>Logical Name: address2_addressid</para>
///</summary>
[AttributeLogicalNameAttribute("address2_addressid")]
public Guid Address2_ID
{
	get { return this.GetPropertyValue<Guid>("address2_addressid"); }
	set { this.SetPropertyValue<Guid>("address2_addressid", value, "Address2_ID"); }
}
///<summary>
///<para>Logical Name: address2_latitude</para>
///<para>Minimum Value: -90</para>
///<para>Maximum Value: 90</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("address2_latitude")]
public double? Address2_Latitude
{
	get { return this.GetPropertyValue<double?>("address2_latitude"); }
	set { this.SetPropertyValue("address2_latitude", (double?)value, (double)-90, (double)90, "Address2_Latitude"); }
}
///<summary>
///<para>Logical Name: address2_longitude</para>
///<para>Minimum Value: -180</para>
///<para>Maximum Value: 180</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("address2_longitude")]
public double? Address2_Longitude
{
	get { return this.GetPropertyValue<double?>("address2_longitude"); }
	set { this.SetPropertyValue("address2_longitude", (double?)value, (double)-180, (double)180, "Address2_Longitude"); }
}
///<summary>
///<para>Logical Name: address2_name</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_name")]
public string Address2_Name
{
	get { return this.GetPropertyValue<string>("address2_name"); }
	set { this.SetPropertyValue("address2_name", value, 100, "Address2_Name"); }
}
///<summary>
///<para>Logical Name: address2_postofficebox</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_postofficebox")]
public string Address2_PostOfficeBox
{
	get { return this.GetPropertyValue<string>("address2_postofficebox"); }
	set { this.SetPropertyValue("address2_postofficebox", value, 20, "Address2_PostOfficeBox"); }
}
/// <summary>
///Logical Name: address2_shippingmethodcode
/// </summary>
[AttributeLogicalNameAttribute("address2_shippingmethodcode")]
public eAddress2_ShippingMethod? Address2_ShippingMethod
{
	get
	{
		if (Address2_ShippingMethod_OptionSetValue != null) { return (eAddress2_ShippingMethod)Address2_ShippingMethod_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Address2_ShippingMethod_OptionSetValue = new OptionSetValue((int)value); }
		else this.Address2_ShippingMethod_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: address2_shippingmethodcode</para>
///</summary>
[AttributeLogicalNameAttribute("address2_shippingmethodcode")]
public OptionSetValue Address2_ShippingMethod_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("address2_shippingmethodcode"); }
	set { this.SetPropertyValue<OptionSetValue>("address2_shippingmethodcode", value, "Address2_ShippingMethod_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Address2_ShippingMethod_Text(IOrganizationService Service)
{
	return this.Address2_ShippingMethod_OptionSetValue.GetOptionSetText(Service, this, "address2_shippingmethodcode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Address2_ShippingMethod_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Address2_ShippingMethod_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: address2_stateorprovince</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_stateorprovince")]
public string Address2_State_Province
{
	get { return this.GetPropertyValue<string>("address2_stateorprovince"); }
	set { this.SetPropertyValue("address2_stateorprovince", value, 50, "Address2_State_Province"); }
}
///<summary>
///<para>Logical Name: address2_line1</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_line1")]
public string Address2_Street1
{
	get { return this.GetPropertyValue<string>("address2_line1"); }
	set { this.SetPropertyValue("address2_line1", value, 250, "Address2_Street1"); }
}
///<summary>
///<para>Logical Name: address2_line2</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_line2")]
public string Address2_Street2
{
	get { return this.GetPropertyValue<string>("address2_line2"); }
	set { this.SetPropertyValue("address2_line2", value, 250, "Address2_Street2"); }
}
///<summary>
///<para>Logical Name: address2_line3</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_line3")]
public string Address2_Street3
{
	get { return this.GetPropertyValue<string>("address2_line3"); }
	set { this.SetPropertyValue("address2_line3", value, 250, "Address2_Street3"); }
}
///<summary>
///<para>Logical Name: address2_telephone1</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_telephone1")]
public string Address2_Telephone1
{
	get { return this.GetPropertyValue<string>("address2_telephone1"); }
	set { this.SetPropertyValue("address2_telephone1", value, 50, "Address2_Telephone1"); }
}
///<summary>
///<para>Logical Name: address2_telephone2</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_telephone2")]
public string Address2_Telephone2
{
	get { return this.GetPropertyValue<string>("address2_telephone2"); }
	set { this.SetPropertyValue("address2_telephone2", value, 50, "Address2_Telephone2"); }
}
///<summary>
///<para>Logical Name: address2_telephone3</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_telephone3")]
public string Address2_Telephone3
{
	get { return this.GetPropertyValue<string>("address2_telephone3"); }
	set { this.SetPropertyValue("address2_telephone3", value, 50, "Address2_Telephone3"); }
}
///<summary>
///<para>Logical Name: address2_upszone</para>
///<para>Max Length: 4 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_upszone")]
public string Address2_UPSZone
{
	get { return this.GetPropertyValue<string>("address2_upszone"); }
	set { this.SetPropertyValue("address2_upszone", value, 4, "Address2_UPSZone"); }
}
///<summary>
///<para>Logical Name: address2_utcoffset</para>
///<para>Minimum Value: -1500</para>
///<para>Maximum Value: 1500</para>
///</summary>
[AttributeLogicalNameAttribute("address2_utcoffset")]
public int? Address2_UTCOffset
{
	get { return this.GetPropertyValue<int?>("address2_utcoffset"); }
	set { this.SetPropertyValue("address2_utcoffset", (int?)value, (int)-1500, (int)1500, "Address2_UTCOffset"); }
}
///<summary>
///<para>Logical Name: address2_postalcode</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_postalcode")]
public string Address2_ZIP_PostalCode
{
	get { return this.GetPropertyValue<string>("address2_postalcode"); }
	set { this.SetPropertyValue("address2_postalcode", value, 20, "Address2_ZIP_PostalCode"); }
}
///<summary>
///<para>Logical Name: revenue</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? AnnualRevenue
{
	get
	{
		if (AnnualRevenueMoney != null) { return AnnualRevenueMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.AnnualRevenueMoney = new Money(value.Value); }
		else this.AnnualRevenueMoney = null;
	}
}
///<summary>
///<para>Logical Name: revenue</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("revenue")]
public Money AnnualRevenueMoney
{
	get { return this.GetPropertyValue<Money>("revenue"); }
	set { this.SetPropertyValue("revenue", (Money)value, (decimal)0, (decimal)100000000000000, "AnnualRevenueMoney"); }
}
///<summary>
///<para>Logical Name: revenue_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? AnnualRevenue_Base
{
	get
	{
		if (AnnualRevenue_BaseMoney != null) { return AnnualRevenue_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: revenue_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("revenue_base")]
public Money AnnualRevenue_BaseMoney
{
	get { return this.GetPropertyValue<Money>("revenue_base"); }
}
///<summary>
///<para>Logical Name: isautocreate</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isautocreate")]
public bool? Auto_created
{
	get { return this.GetPropertyValue<bool?>("isautocreate"); }
}
/// <summary>
///Logical Name: budgetstatus
/// </summary>
[AttributeLogicalNameAttribute("budgetstatus")]
public eBudget? Budget
{
	get
	{
		if (Budget_OptionSetValue != null) { return (eBudget)Budget_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Budget_OptionSetValue = new OptionSetValue((int)value); }
		else this.Budget_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: budgetstatus</para>
///</summary>
[AttributeLogicalNameAttribute("budgetstatus")]
public OptionSetValue Budget_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("budgetstatus"); }
	set { this.SetPropertyValue<OptionSetValue>("budgetstatus", value, "Budget_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Budget_Text(IOrganizationService Service)
{
	return this.Budget_OptionSetValue.GetOptionSetText(Service, this, "budgetstatus");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Budget_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Budget_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: budgetamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? BudgetAmount
{
	get
	{
		if (BudgetAmountMoney != null) { return BudgetAmountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.BudgetAmountMoney = new Money(value.Value); }
		else this.BudgetAmountMoney = null;
	}
}
///<summary>
///<para>Logical Name: budgetamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("budgetamount")]
public Money BudgetAmountMoney
{
	get { return this.GetPropertyValue<Money>("budgetamount"); }
	set { this.SetPropertyValue("budgetamount", (Money)value, (decimal)0, (decimal)1000000000000, "BudgetAmountMoney"); }
}
///<summary>
///<para>Logical Name: budgetamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? BudgetAmount_Base
{
	get
	{
		if (BudgetAmount_BaseMoney != null) { return BudgetAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: budgetamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("budgetamount_base")]
public Money BudgetAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("budgetamount_base"); }
}
///<summary>
///<para>Logical Name: telephone1</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("telephone1")]
public string BusinessPhone
{
	get { return this.GetPropertyValue<string>("telephone1"); }
	set { this.SetPropertyValue("telephone1", value, 50, "BusinessPhone"); }
}
///<summary>
///<para>Logical Name: address1_city</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_city")]
public string City
{
	get { return this.GetPropertyValue<string>("address1_city"); }
	set { this.SetPropertyValue("address1_city", value, 80, "City"); }
}
///<summary>
///<para>Logical Name: companyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("companyname")]
public string CompanyName
{
	get { return this.GetPropertyValue<string>("companyname"); }
	set { this.SetPropertyValue("companyname", value, 100, "CompanyName"); }
}
///<summary>
///<para>Logical Name: confirminterest</para>
///<para>True = No</para>
///<para>False = Yes</para>
///</summary>
[AttributeLogicalNameAttribute("confirminterest")]
public bool? ConfirmInterest
{
	get { return this.GetPropertyValue<bool?>("confirminterest"); }
	set { this.SetPropertyValue<bool?>("confirminterest", value, "ConfirmInterest"); }
}
///<summary>
///<para>Logical Name: contactid</para>
///</summary>
[AttributeLogicalNameAttribute("contactid")]
public EntityReference Contact
{
	get { return this.GetPropertyValue<EntityReference>("contactid"); }
}
///<summary>
///<para>Logical Name: address1_country</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_country")]
public string Country_Region
{
	get { return this.GetPropertyValue<string>("address1_country"); }
	set { this.SetPropertyValue("address1_country", value, 80, "Country_Region"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyid</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyid")]
public EntityReference Currency
{
	get { return this.GetPropertyValue<EntityReference>("transactioncurrencyid"); }
	set { this.SetPropertyValue<EntityReference>("transactioncurrencyid", value, "Currency"); }
}
///<summary>
///<para>Logical Name: customerid</para>
///</summary>
[AttributeLogicalNameAttribute("customerid")]
public EntityReference Customer
{
	get { return this.GetPropertyValue<EntityReference>("customerid"); }
	set { this.SetPropertyValue<EntityReference>("customerid", value, "Customer"); }
}
///<summary>
///<para>Logical Name: customeridtype</para>
///</summary>
[AttributeLogicalNameAttribute("customeridtype")]
public string CustomerType
{
	get { return this.GetPropertyValue<string>("customeridtype"); }
	set { this.SetPropertyValue<string>("customeridtype", value, "CustomerType"); }
}
///<summary>
///<para>Logical Name: decisionmaker</para>
///<para>True = completed</para>
///<para>False = mark complete</para>
///</summary>
[AttributeLogicalNameAttribute("decisionmaker")]
public bool? DecisionMaker
{
	get { return this.GetPropertyValue<bool?>("decisionmaker"); }
	set { this.SetPropertyValue<bool?>("decisionmaker", value, "DecisionMaker"); }
}
///<summary>
///<para>Logical Name: description</para>
///<para>Max Length: 2000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("description")]
public string Description
{
	get { return this.GetPropertyValue<string>("description"); }
	set { this.SetPropertyValue("description", value, 2000, "Description"); }
}
///<summary>
///<para>Logical Name: donotbulkemail</para>
///<para>True = Do Not Allow</para>
///<para>False = Allow</para>
///</summary>
[AttributeLogicalNameAttribute("donotbulkemail")]
public bool? DoNotAllowBulkEmails
{
	get { return this.GetPropertyValue<bool?>("donotbulkemail"); }
	set { this.SetPropertyValue<bool?>("donotbulkemail", value, "DoNotAllowBulkEmails"); }
}
///<summary>
///<para>Logical Name: donotemail</para>
///<para>True = Do Not Allow</para>
///<para>False = Allow</para>
///</summary>
[AttributeLogicalNameAttribute("donotemail")]
public bool? DoNotAllowEmails
{
	get { return this.GetPropertyValue<bool?>("donotemail"); }
	set { this.SetPropertyValue<bool?>("donotemail", value, "DoNotAllowEmails"); }
}
///<summary>
///<para>Logical Name: donotfax</para>
///<para>True = Do Not Allow</para>
///<para>False = Allow</para>
///</summary>
[AttributeLogicalNameAttribute("donotfax")]
public bool? DoNotAllowFaxes
{
	get { return this.GetPropertyValue<bool?>("donotfax"); }
	set { this.SetPropertyValue<bool?>("donotfax", value, "DoNotAllowFaxes"); }
}
///<summary>
///<para>Logical Name: donotpostalmail</para>
///<para>True = Do Not Allow</para>
///<para>False = Allow</para>
///</summary>
[AttributeLogicalNameAttribute("donotpostalmail")]
public bool? DoNotAllowMails
{
	get { return this.GetPropertyValue<bool?>("donotpostalmail"); }
	set { this.SetPropertyValue<bool?>("donotpostalmail", value, "DoNotAllowMails"); }
}
///<summary>
///<para>Logical Name: donotphone</para>
///<para>True = Do Not Allow</para>
///<para>False = Allow</para>
///</summary>
[AttributeLogicalNameAttribute("donotphone")]
public bool? DoNotAllowPhoneCalls
{
	get { return this.GetPropertyValue<bool?>("donotphone"); }
	set { this.SetPropertyValue<bool?>("donotphone", value, "DoNotAllowPhoneCalls"); }
}
///<summary>
///<para>Logical Name: emailaddress1</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("emailaddress1")]
public string Email
{
	get { return this.GetPropertyValue<string>("emailaddress1"); }
	set { this.SetPropertyValue("emailaddress1", value, 100, "Email"); }
}
///<summary>
///<para>Logical Name: emailaddress2</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("emailaddress2")]
public string EmailAddress2
{
	get { return this.GetPropertyValue<string>("emailaddress2"); }
	set { this.SetPropertyValue("emailaddress2", value, 100, "EmailAddress2"); }
}
///<summary>
///<para>Logical Name: emailaddress3</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("emailaddress3")]
public string EmailAddress3
{
	get { return this.GetPropertyValue<string>("emailaddress3"); }
	set { this.SetPropertyValue("emailaddress3", value, 100, "EmailAddress3"); }
}
///<summary>
///<para>Logical Name: entityimageid</para>
///</summary>
[AttributeLogicalNameAttribute("entityimageid")]
public Guid EntityImageId
{
	get { return this.GetPropertyValue<Guid>("entityimageid"); }
}
///<summary>
///<para>Logical Name: estimatedclosedate</para>
///</summary>
[AttributeLogicalNameAttribute("estimatedclosedate")]
public DateTime? Est_CloseDate
{
	get { return this.GetPropertyValue<DateTime?>("estimatedclosedate"); }
	set { this.SetPropertyValue<DateTime?>("estimatedclosedate", value, "Est_CloseDate"); }
}
///<summary>
///<para>Logical Name: estimatedamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? Est_Value
{
	get
	{
		if (Est_ValueMoney != null) { return Est_ValueMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Est_ValueMoney = new Money(value.Value); }
		else this.Est_ValueMoney = null;
	}
}
///<summary>
///<para>Logical Name: estimatedamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("estimatedamount")]
public Money Est_ValueMoney
{
	get { return this.GetPropertyValue<Money>("estimatedamount"); }
	set { this.SetPropertyValue("estimatedamount", (Money)value, (decimal)0, (decimal)1000000000000, "Est_ValueMoney"); }
}
///<summary>
///<para>Logical Name: estimatedamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? Est_Value_Base
{
	get
	{
		if (Est_Value_BaseMoney != null) { return Est_Value_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: estimatedamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("estimatedamount_base")]
public Money Est_Value_BaseMoney
{
	get { return this.GetPropertyValue<Money>("estimatedamount_base"); }
}
///<summary>
///<para>Logical Name: estimatedvalue</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("estimatedvalue")]
public double? Est_Value_deprecated
{
	get { return this.GetPropertyValue<double?>("estimatedvalue"); }
	set { this.SetPropertyValue("estimatedvalue", (double?)value, (double)0, (double)1000000000, "Est_Value_deprecated"); }
}
///<summary>
///<para>Logical Name: evaluatefit</para>
///<para>True = No</para>
///<para>False = Yes</para>
///</summary>
[AttributeLogicalNameAttribute("evaluatefit")]
public bool? EvaluateFit
{
	get { return this.GetPropertyValue<bool?>("evaluatefit"); }
	set { this.SetPropertyValue<bool?>("evaluatefit", value, "EvaluateFit"); }
}
///<summary>
///<para>Logical Name: exchangerate</para>
///<para>Minimum Value: 0.0000000001</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 10</para>
///</summary>
[AttributeLogicalNameAttribute("exchangerate")]
public decimal? ExchangeRate
{
	get { return this.GetPropertyValue<decimal?>("exchangerate"); }
}
///<summary>
///<para>Logical Name: fax</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("fax")]
public string Fax
{
	get { return this.GetPropertyValue<string>("fax"); }
	set { this.SetPropertyValue("fax", value, 50, "Fax"); }
}
///<summary>
///<para>Logical Name: firstname</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("firstname")]
public string FirstName
{
	get { return this.GetPropertyValue<string>("firstname"); }
	set { this.SetPropertyValue("firstname", value, 50, "FirstName"); }
}
///<summary>
///<para>Logical Name: followemail</para>
///<para>True = Allow</para>
///<para>False = Do Not Allow</para>
///</summary>
[AttributeLogicalNameAttribute("followemail")]
public bool? FollowEmailActivity
{
	get { return this.GetPropertyValue<bool?>("followemail"); }
	set { this.SetPropertyValue<bool?>("followemail", value, "FollowEmailActivity"); }
}
///<summary>
///<para>Logical Name: telephone2</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("telephone2")]
public string HomePhone
{
	get { return this.GetPropertyValue<string>("telephone2"); }
	set { this.SetPropertyValue("telephone2", value, 50, "HomePhone"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? ImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "ImportSequenceNumber"); }
}
/// <summary>
///Logical Name: industrycode
/// </summary>
[AttributeLogicalNameAttribute("industrycode")]
public eIndustry? Industry
{
	get
	{
		if (Industry_OptionSetValue != null) { return (eIndustry)Industry_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Industry_OptionSetValue = new OptionSetValue((int)value); }
		else this.Industry_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: industrycode</para>
///</summary>
[AttributeLogicalNameAttribute("industrycode")]
public OptionSetValue Industry_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("industrycode"); }
	set { this.SetPropertyValue<OptionSetValue>("industrycode", value, "Industry_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Industry_Text(IOrganizationService Service)
{
	return this.Industry_OptionSetValue.GetOptionSetText(Service, this, "industrycode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Industry_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Industry_OptionSetValue.Value);
}
/// <summary>
///Logical Name: initialcommunication
/// </summary>
[AttributeLogicalNameAttribute("initialcommunication")]
public eInitialCommunication? InitialCommunication
{
	get
	{
		if (InitialCommunication_OptionSetValue != null) { return (eInitialCommunication)InitialCommunication_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.InitialCommunication_OptionSetValue = new OptionSetValue((int)value); }
		else this.InitialCommunication_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: initialcommunication</para>
///</summary>
[AttributeLogicalNameAttribute("initialcommunication")]
public OptionSetValue InitialCommunication_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("initialcommunication"); }
	set { this.SetPropertyValue<OptionSetValue>("initialcommunication", value, "InitialCommunication_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string InitialCommunication_Text(IOrganizationService Service)
{
	return this.InitialCommunication_OptionSetValue.GetOptionSetText(Service, this, "initialcommunication");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string InitialCommunication_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.InitialCommunication_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: isprivate</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isprivate")]
public bool? IsPrivate
{
	get { return this.GetPropertyValue<bool?>("isprivate"); }
}
///<summary>
///<para>Logical Name: jobtitle</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("jobtitle")]
public string JobTitle
{
	get { return this.GetPropertyValue<string>("jobtitle"); }
	set { this.SetPropertyValue("jobtitle", value, 100, "JobTitle"); }
}
///<summary>
///<para>Logical Name: lastusedincampaign</para>
///</summary>
[AttributeLogicalNameAttribute("lastusedincampaign")]
public DateTime? LastCampaignDate
{
	get { return this.GetPropertyValue<DateTime?>("lastusedincampaign"); }
	set { this.SetPropertyValue<DateTime?>("lastusedincampaign", value, "LastCampaignDate"); }
}
///<summary>
///<para>Logical Name: lastname</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("lastname")]
public string LastName
{
	get { return this.GetPropertyValue<string>("lastname"); }
	set { this.SetPropertyValue("lastname", value, 50, "LastName"); }
}
///<summary>
///<para>Logical Name: lastonholdtime</para>
///</summary>
[AttributeLogicalNameAttribute("lastonholdtime")]
public DateTime? LastOnHoldTime
{
	get { return this.GetPropertyValue<DateTime?>("lastonholdtime"); }
	set { this.SetPropertyValue<DateTime?>("lastonholdtime", value, "LastOnHoldTime"); }
}
///<summary>
///<para>Logical Name: slainvokedid</para>
///</summary>
[AttributeLogicalNameAttribute("slainvokedid")]
public EntityReference LastSLAApplied
{
	get { return this.GetPropertyValue<EntityReference>("slainvokedid"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: leadid</para>
///</summary>
[AttributeLogicalNameAttribute("leadid")]
public Guid LeadId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
/// <summary>
///Logical Name: leadsourcecode
/// </summary>
[AttributeLogicalNameAttribute("leadsourcecode")]
public eLeadSource? LeadSource
{
	get
	{
		if (LeadSource_OptionSetValue != null) { return (eLeadSource)LeadSource_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.LeadSource_OptionSetValue = new OptionSetValue((int)value); }
		else this.LeadSource_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: leadsourcecode</para>
///</summary>
[AttributeLogicalNameAttribute("leadsourcecode")]
public OptionSetValue LeadSource_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("leadsourcecode"); }
	set { this.SetPropertyValue<OptionSetValue>("leadsourcecode", value, "LeadSource_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string LeadSource_Text(IOrganizationService Service)
{
	return this.LeadSource_OptionSetValue.GetOptionSetText(Service, this, "leadsourcecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string LeadSource_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.LeadSource_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: donotsendmm</para>
///<para>True = Do Not Send</para>
///<para>False = Send</para>
///</summary>
[AttributeLogicalNameAttribute("donotsendmm")]
public bool? MarketingMaterial
{
	get { return this.GetPropertyValue<bool?>("donotsendmm"); }
	set { this.SetPropertyValue<bool?>("donotsendmm", value, "MarketingMaterial"); }
}
///<summary>
///<para>Logical Name: masterid</para>
///</summary>
[AttributeLogicalNameAttribute("masterid")]
public EntityReference MasterID
{
	get { return this.GetPropertyValue<EntityReference>("masterid"); }
}
///<summary>
///<para>Logical Name: merged</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("merged")]
public bool? Merged
{
	get { return this.GetPropertyValue<bool?>("merged"); }
}
///<summary>
///<para>Logical Name: middlename</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("middlename")]
public string MiddleName
{
	get { return this.GetPropertyValue<string>("middlename"); }
	set { this.SetPropertyValue("middlename", value, 50, "MiddleName"); }
}
///<summary>
///<para>Logical Name: mobilephone</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("mobilephone")]
public string MobilePhone
{
	get { return this.GetPropertyValue<string>("mobilephone"); }
	set { this.SetPropertyValue("mobilephone", value, 20, "MobilePhone"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: fullname</para>
///<para>Max Length: 160 characters</para>
///</summary>
[AttributeLogicalNameAttribute("fullname")]
public string Name
{
	get { return this.GetPropertyValue<string>("fullname"); }
}
/// <summary>
///Logical Name: need
/// </summary>
[AttributeLogicalNameAttribute("need")]
public eNeed? Need
{
	get
	{
		if (Need_OptionSetValue != null) { return (eNeed)Need_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Need_OptionSetValue = new OptionSetValue((int)value); }
		else this.Need_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: need</para>
///</summary>
[AttributeLogicalNameAttribute("need")]
public OptionSetValue Need_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("need"); }
	set { this.SetPropertyValue<OptionSetValue>("need", value, "Need_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Need_Text(IOrganizationService Service)
{
	return this.Need_OptionSetValue.GetOptionSetText(Service, this, "need");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Need_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Need_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: numberofemployees</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000</para>
///</summary>
[AttributeLogicalNameAttribute("numberofemployees")]
public int? No_OfEmployees
{
	get { return this.GetPropertyValue<int?>("numberofemployees"); }
	set { this.SetPropertyValue("numberofemployees", (int?)value, (int)0, (int)1000000, "No_OfEmployees"); }
}
///<summary>
///<para>Logical Name: onholdtime</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("onholdtime")]
public int? OnHoldTime_Minutes
{
	get { return this.GetPropertyValue<int?>("onholdtime"); }
}
///<summary>
///<para>Logical Name: originatingcaseid</para>
///</summary>
[AttributeLogicalNameAttribute("originatingcaseid")]
public EntityReference OriginatingCase
{
	get { return this.GetPropertyValue<EntityReference>("originatingcaseid"); }
	set { this.SetPropertyValue<EntityReference>("originatingcaseid", value, "OriginatingCase"); }
}
///<summary>
///<para>Logical Name: telephone3</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("telephone3")]
public string OtherPhone
{
	get { return this.GetPropertyValue<string>("telephone3"); }
	set { this.SetPropertyValue("telephone3", value, 50, "OtherPhone"); }
}
///<summary>
///<para>Logical Name: ownerid</para>
///</summary>
[AttributeLogicalNameAttribute("ownerid")]
public EntityReference Owner
{
	get { return this.GetPropertyValue<EntityReference>("ownerid"); }
	set { this.SetPropertyValue<EntityReference>("ownerid", value, "Owner"); }
}
///<summary>
///<para>Logical Name: owningbusinessunit</para>
///</summary>
[AttributeLogicalNameAttribute("owningbusinessunit")]
public EntityReference OwningBusinessUnit
{
	get { return this.GetPropertyValue<EntityReference>("owningbusinessunit"); }
}
///<summary>
///<para>Logical Name: owningteam</para>
///</summary>
[AttributeLogicalNameAttribute("owningteam")]
public EntityReference OwningTeam
{
	get { return this.GetPropertyValue<EntityReference>("owningteam"); }
}
///<summary>
///<para>Logical Name: owninguser</para>
///</summary>
[AttributeLogicalNameAttribute("owninguser")]
public EntityReference OwningUser
{
	get { return this.GetPropertyValue<EntityReference>("owninguser"); }
}
///<summary>
///<para>Logical Name: pager</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("pager")]
public string Pager
{
	get { return this.GetPropertyValue<string>("pager"); }
	set { this.SetPropertyValue("pager", value, 20, "Pager"); }
}
///<summary>
///<para>Logical Name: parentaccountid</para>
///</summary>
[AttributeLogicalNameAttribute("parentaccountid")]
public EntityReference ParentAccountForLead
{
	get { return this.GetPropertyValue<EntityReference>("parentaccountid"); }
	set { this.SetPropertyValue<EntityReference>("parentaccountid", value, "ParentAccountForLead"); }
}
///<summary>
///<para>Logical Name: parentcontactid</para>
///</summary>
[AttributeLogicalNameAttribute("parentcontactid")]
public EntityReference ParentContactForLead
{
	get { return this.GetPropertyValue<EntityReference>("parentcontactid"); }
	set { this.SetPropertyValue<EntityReference>("parentcontactid", value, "ParentContactForLead"); }
}
///<summary>
///<para>Logical Name: participatesinworkflow</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("participatesinworkflow")]
public bool? ParticipatesInWorkflow
{
	get { return this.GetPropertyValue<bool?>("participatesinworkflow"); }
	set { this.SetPropertyValue<bool?>("participatesinworkflow", value, "ParticipatesInWorkflow"); }
}
/// <summary>
///Logical Name: preferredcontactmethodcode
/// </summary>
[AttributeLogicalNameAttribute("preferredcontactmethodcode")]
public ePreferredMethodOfContact? PreferredMethodOfContact
{
	get
	{
		if (PreferredMethodOfContact_OptionSetValue != null) { return (ePreferredMethodOfContact)PreferredMethodOfContact_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.PreferredMethodOfContact_OptionSetValue = new OptionSetValue((int)value); }
		else this.PreferredMethodOfContact_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: preferredcontactmethodcode</para>
///</summary>
[AttributeLogicalNameAttribute("preferredcontactmethodcode")]
public OptionSetValue PreferredMethodOfContact_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("preferredcontactmethodcode"); }
	set { this.SetPropertyValue<OptionSetValue>("preferredcontactmethodcode", value, "PreferredMethodOfContact_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string PreferredMethodOfContact_Text(IOrganizationService Service)
{
	return this.PreferredMethodOfContact_OptionSetValue.GetOptionSetText(Service, this, "preferredcontactmethodcode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string PreferredMethodOfContact_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.PreferredMethodOfContact_OptionSetValue.Value);
}
/// <summary>
///Logical Name: prioritycode
/// </summary>
[AttributeLogicalNameAttribute("prioritycode")]
public ePriority? Priority
{
	get
	{
		if (Priority_OptionSetValue != null) { return (ePriority)Priority_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Priority_OptionSetValue = new OptionSetValue((int)value); }
		else this.Priority_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: prioritycode</para>
///</summary>
[AttributeLogicalNameAttribute("prioritycode")]
public OptionSetValue Priority_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("prioritycode"); }
	set { this.SetPropertyValue<OptionSetValue>("prioritycode", value, "Priority_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Priority_Text(IOrganizationService Service)
{
	return this.Priority_OptionSetValue.GetOptionSetText(Service, this, "prioritycode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Priority_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Priority_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: processid</para>
///</summary>
[AttributeLogicalNameAttribute("processid")]
public Guid Process
{
	get { return this.GetPropertyValue<Guid>("processid"); }
	set { this.SetPropertyValue<Guid>("processid", value, "Process"); }
}
///<summary>
///<para>Logical Name: stageid</para>
///</summary>
[AttributeLogicalNameAttribute("stageid")]
public Guid ProcessStage
{
	get { return this.GetPropertyValue<Guid>("stageid"); }
	set { this.SetPropertyValue<Guid>("stageid", value, "ProcessStage"); }
}
/// <summary>
///Logical Name: purchaseprocess
/// </summary>
[AttributeLogicalNameAttribute("purchaseprocess")]
public ePurchaseProcess? PurchaseProcess
{
	get
	{
		if (PurchaseProcess_OptionSetValue != null) { return (ePurchaseProcess)PurchaseProcess_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.PurchaseProcess_OptionSetValue = new OptionSetValue((int)value); }
		else this.PurchaseProcess_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: purchaseprocess</para>
///</summary>
[AttributeLogicalNameAttribute("purchaseprocess")]
public OptionSetValue PurchaseProcess_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("purchaseprocess"); }
	set { this.SetPropertyValue<OptionSetValue>("purchaseprocess", value, "PurchaseProcess_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string PurchaseProcess_Text(IOrganizationService Service)
{
	return this.PurchaseProcess_OptionSetValue.GetOptionSetText(Service, this, "purchaseprocess");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string PurchaseProcess_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.PurchaseProcess_OptionSetValue.Value);
}
/// <summary>
///Logical Name: purchasetimeframe
/// </summary>
[AttributeLogicalNameAttribute("purchasetimeframe")]
public ePurchaseTimeframe? PurchaseTimeframe
{
	get
	{
		if (PurchaseTimeframe_OptionSetValue != null) { return (ePurchaseTimeframe)PurchaseTimeframe_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.PurchaseTimeframe_OptionSetValue = new OptionSetValue((int)value); }
		else this.PurchaseTimeframe_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: purchasetimeframe</para>
///</summary>
[AttributeLogicalNameAttribute("purchasetimeframe")]
public OptionSetValue PurchaseTimeframe_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("purchasetimeframe"); }
	set { this.SetPropertyValue<OptionSetValue>("purchasetimeframe", value, "PurchaseTimeframe_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string PurchaseTimeframe_Text(IOrganizationService Service)
{
	return this.PurchaseTimeframe_OptionSetValue.GetOptionSetText(Service, this, "purchasetimeframe");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string PurchaseTimeframe_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.PurchaseTimeframe_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: qualificationcomments</para>
///<para>Max Length: 2000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("qualificationcomments")]
public string QualificationComments
{
	get { return this.GetPropertyValue<string>("qualificationcomments"); }
	set { this.SetPropertyValue("qualificationcomments", value, 2000, "QualificationComments"); }
}
///<summary>
///<para>Logical Name: qualifyingopportunityid</para>
///</summary>
[AttributeLogicalNameAttribute("qualifyingopportunityid")]
public EntityReference QualifyingOpportunity
{
	get { return this.GetPropertyValue<EntityReference>("qualifyingopportunityid"); }
	set { this.SetPropertyValue<EntityReference>("qualifyingopportunityid", value, "QualifyingOpportunity"); }
}
/// <summary>
///Logical Name: leadqualitycode
/// </summary>
[AttributeLogicalNameAttribute("leadqualitycode")]
public eRating? Rating
{
	get
	{
		if (Rating_OptionSetValue != null) { return (eRating)Rating_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Rating_OptionSetValue = new OptionSetValue((int)value); }
		else this.Rating_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: leadqualitycode</para>
///</summary>
[AttributeLogicalNameAttribute("leadqualitycode")]
public OptionSetValue Rating_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("leadqualitycode"); }
	set { this.SetPropertyValue<OptionSetValue>("leadqualitycode", value, "Rating_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Rating_Text(IOrganizationService Service)
{
	return this.Rating_OptionSetValue.GetOptionSetText(Service, this, "leadqualitycode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Rating_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Rating_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? RecordCreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "RecordCreatedOn"); }
}
///<summary>
///<para>Logical Name: relatedobjectid</para>
///</summary>
[AttributeLogicalNameAttribute("relatedobjectid")]
public EntityReference RelatedCampaignResponse
{
	get { return this.GetPropertyValue<EntityReference>("relatedobjectid"); }
	set { this.SetPropertyValue<EntityReference>("relatedobjectid", value, "RelatedCampaignResponse"); }
}
/// <summary>
///Logical Name: salesstage
/// </summary>
[AttributeLogicalNameAttribute("salesstage")]
public eLeadSalesStage? SalesStage
{
	get
	{
		if (SalesStage_OptionSetValue != null) { return (eLeadSalesStage)SalesStage_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.SalesStage_OptionSetValue = new OptionSetValue((int)value); }
		else this.SalesStage_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: salesstage</para>
///</summary>
[AttributeLogicalNameAttribute("salesstage")]
public OptionSetValue SalesStage_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("salesstage"); }
	set { this.SetPropertyValue<OptionSetValue>("salesstage", value, "SalesStage_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string SalesStage_Text(IOrganizationService Service)
{
	return this.SalesStage_OptionSetValue.GetOptionSetText(Service, this, "salesstage");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string SalesStage_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.SalesStage_OptionSetValue.Value);
}
/// <summary>
///Logical Name: salesstagecode
/// </summary>
[AttributeLogicalNameAttribute("salesstagecode")]
public eSalesStage? SalesStageCode
{
	get
	{
		if (SalesStageCode_OptionSetValue != null) { return (eSalesStage)SalesStageCode_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.SalesStageCode_OptionSetValue = new OptionSetValue((int)value); }
		else this.SalesStageCode_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: salesstagecode</para>
///</summary>
[AttributeLogicalNameAttribute("salesstagecode")]
public OptionSetValue SalesStageCode_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("salesstagecode"); }
	set { this.SetPropertyValue<OptionSetValue>("salesstagecode", value, "SalesStageCode_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string SalesStageCode_Text(IOrganizationService Service)
{
	return this.SalesStageCode_OptionSetValue.GetOptionSetText(Service, this, "salesstagecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string SalesStageCode_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.SalesStageCode_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: salutation</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("salutation")]
public string Salutation
{
	get { return this.GetPropertyValue<string>("salutation"); }
	set { this.SetPropertyValue("salutation", value, 100, "Salutation"); }
}
///<summary>
///<para>Logical Name: schedulefollowup_prospect</para>
///</summary>
[AttributeLogicalNameAttribute("schedulefollowup_prospect")]
public DateTime? ScheduleFollowUp_Prospect
{
	get { return this.GetPropertyValue<DateTime?>("schedulefollowup_prospect"); }
	set { this.SetPropertyValue<DateTime?>("schedulefollowup_prospect", value, "ScheduleFollowUp_Prospect"); }
}
///<summary>
///<para>Logical Name: schedulefollowup_qualify</para>
///</summary>
[AttributeLogicalNameAttribute("schedulefollowup_qualify")]
public DateTime? ScheduleFollowUp_Qualify
{
	get { return this.GetPropertyValue<DateTime?>("schedulefollowup_qualify"); }
	set { this.SetPropertyValue<DateTime?>("schedulefollowup_qualify", value, "ScheduleFollowUp_Qualify"); }
}
///<summary>
///<para>Logical Name: sic</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("sic")]
public string SICCode
{
	get { return this.GetPropertyValue<string>("sic"); }
	set { this.SetPropertyValue("sic", value, 20, "SICCode"); }
}
///<summary>
///<para>Logical Name: slaid</para>
///</summary>
[AttributeLogicalNameAttribute("slaid")]
public EntityReference SLA
{
	get { return this.GetPropertyValue<EntityReference>("slaid"); }
	set { this.SetPropertyValue<EntityReference>("slaid", value, "SLA"); }
}
///<summary>
///<para>Logical Name: campaignid</para>
///</summary>
[AttributeLogicalNameAttribute("campaignid")]
public EntityReference SourceCampaign
{
	get { return this.GetPropertyValue<EntityReference>("campaignid"); }
	set { this.SetPropertyValue<EntityReference>("campaignid", value, "SourceCampaign"); }
}
///<summary>
///<para>Logical Name: address1_stateorprovince</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_stateorprovince")]
public string State_Province
{
	get { return this.GetPropertyValue<string>("address1_stateorprovince"); }
	set { this.SetPropertyValue("address1_stateorprovince", value, 50, "State_Province"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eStatus? Status
{
	get
	{
		if (Status_OptionSetValue != null) { return (eStatus)Status_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Status_OptionSetValue = new OptionSetValue((int)value); }
		else this.Status_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue Status_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
	set { this.SetPropertyValue<OptionSetValue>("statecode", value, "Status_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Status_Text(IOrganizationService Service)
{
	return this.Status_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Status_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Status_OptionSetValue.Value);
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? StatusReason
{
	get
	{
		if (StatusReason_OptionSetValue != null) { return (eStatusReason)StatusReason_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StatusReason_OptionSetValue = new OptionSetValue((int)value); }
		else this.StatusReason_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue StatusReason_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "StatusReason_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string StatusReason_Text(IOrganizationService Service)
{
	return this.StatusReason_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string StatusReason_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.StatusReason_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: address1_line1</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_line1")]
public string Street1
{
	get { return this.GetPropertyValue<string>("address1_line1"); }
	set { this.SetPropertyValue("address1_line1", value, 250, "Street1"); }
}
///<summary>
///<para>Logical Name: address1_line2</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_line2")]
public string Street2
{
	get { return this.GetPropertyValue<string>("address1_line2"); }
	set { this.SetPropertyValue("address1_line2", value, 250, "Street2"); }
}
///<summary>
///<para>Logical Name: address1_line3</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_line3")]
public string Street3
{
	get { return this.GetPropertyValue<string>("address1_line3"); }
	set { this.SetPropertyValue("address1_line3", value, 250, "Street3"); }
}
///<summary>
///<para>Logical Name: timespentbymeonemailandmeetings</para>
///<para>Max Length: 1250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("timespentbymeonemailandmeetings")]
public string TimeSpentByMe
{
	get { return this.GetPropertyValue<string>("timespentbymeonemailandmeetings"); }
}
///<summary>
///<para>Logical Name: timezoneruleversionnumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("timezoneruleversionnumber")]
public int? TimeZoneRuleVersionNumber
{
	get { return this.GetPropertyValue<int?>("timezoneruleversionnumber"); }
	set { this.SetPropertyValue("timezoneruleversionnumber", (int?)value, (int)-1, (int)2147483647, "TimeZoneRuleVersionNumber"); }
}
///<summary>
///<para>Logical Name: subject</para>
///<para>Max Length: 300 characters</para>
///</summary>
[AttributeLogicalNameAttribute("subject")]
public string Topic
{
	get { return this.GetPropertyValue<string>("subject"); }
	set { this.SetPropertyValue("subject", value, 300, "Topic"); }
}
///<summary>
///<para>Logical Name: traversedpath</para>
///<para>Max Length: 1250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("traversedpath")]
public string TraversedPath
{
	get { return this.GetPropertyValue<string>("traversedpath"); }
	set { this.SetPropertyValue("traversedpath", value, 1250, "TraversedPath"); }
}
/// <summary>
///Logical Name: msdyn_ordertype
/// </summary>
[AttributeLogicalNameAttribute("msdyn_ordertype")]
public eType? Type
{
	get
	{
		if (Type_OptionSetValue != null) { return (eType)Type_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Type_OptionSetValue = new OptionSetValue((int)value); }
		else this.Type_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_ordertype</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_ordertype")]
public OptionSetValue Type_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_ordertype"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_ordertype", value, "Type_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Type_Text(IOrganizationService Service)
{
	return this.Type_OptionSetValue.GetOptionSetText(Service, this, "msdyn_ordertype");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Type_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Type_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: utcconversiontimezonecode</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utcconversiontimezonecode")]
public int? UTCConversionTimeZoneCode
{
	get { return this.GetPropertyValue<int?>("utcconversiontimezonecode"); }
	set { this.SetPropertyValue("utcconversiontimezonecode", (int?)value, (int)-1, (int)2147483647, "UTCConversionTimeZoneCode"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}
///<summary>
///<para>Logical Name: websiteurl</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("websiteurl")]
public string Website
{
	get { return this.GetPropertyValue<string>("websiteurl"); }
	set { this.SetPropertyValue("websiteurl", value, 200, "Website"); }
}
///<summary>
///<para>Logical Name: yomicompanyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("yomicompanyname")]
public string YomiCompanyName
{
	get { return this.GetPropertyValue<string>("yomicompanyname"); }
	set { this.SetPropertyValue("yomicompanyname", value, 100, "YomiCompanyName"); }
}
///<summary>
///<para>Logical Name: yomifirstname</para>
///<para>Max Length: 150 characters</para>
///</summary>
[AttributeLogicalNameAttribute("yomifirstname")]
public string YomiFirstName
{
	get { return this.GetPropertyValue<string>("yomifirstname"); }
	set { this.SetPropertyValue("yomifirstname", value, 150, "YomiFirstName"); }
}
///<summary>
///<para>Logical Name: yomifullname</para>
///<para>Max Length: 450 characters</para>
///</summary>
[AttributeLogicalNameAttribute("yomifullname")]
public string YomiFullName
{
	get { return this.GetPropertyValue<string>("yomifullname"); }
}
///<summary>
///<para>Logical Name: yomilastname</para>
///<para>Max Length: 150 characters</para>
///</summary>
[AttributeLogicalNameAttribute("yomilastname")]
public string YomiLastName
{
	get { return this.GetPropertyValue<string>("yomilastname"); }
	set { this.SetPropertyValue("yomilastname", value, 150, "YomiLastName"); }
}
///<summary>
///<para>Logical Name: yomimiddlename</para>
///<para>Max Length: 150 characters</para>
///</summary>
[AttributeLogicalNameAttribute("yomimiddlename")]
public string YomiMiddleName
{
	get { return this.GetPropertyValue<string>("yomimiddlename"); }
	set { this.SetPropertyValue("yomimiddlename", value, 150, "YomiMiddleName"); }
}
///<summary>
///<para>Logical Name: address1_postalcode</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_postalcode")]
public string ZIP_PostalCode
{
	get { return this.GetPropertyValue<string>("address1_postalcode"); }
	set { this.SetPropertyValue("address1_postalcode", value, 20, "ZIP_PostalCode"); }
}


        /// <summary>
/// <para><b>Account (Originating Lead)</b></para>
/// <para>Schema Name: account_originating_lead</para>
/// </summary>
public List<Account> GetAccounts_OriginatingLead (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Account>(Service, this.Id, "account", "originatingleadid", Columns); }
/// <summary>
/// <para><b>Account (Originating Lead)</b></para>
/// <para>Schema Name: account_originating_lead</para>
/// </summary>
public List<Account> GetAccounts_OriginatingLead (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Account>(Service, this.Id, "account", "originatingleadid", Columns); }
/// <summary>
/// <para><b>ActionCard (Regarding)</b></para>
/// <para>Schema Name: Lead_actioncard</para>
/// </summary>
public List<ActionCard> GetActionCards_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActionCard>(Service, this.Id, "actioncard", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ActionCard (Regarding)</b></para>
/// <para>Schema Name: Lead_actioncard</para>
/// </summary>
public List<ActionCard> GetActionCards_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActionCard>(Service, this.Id, "actioncard", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ActivityParty (Party)</b></para>
/// <para>Schema Name: lead_activity_parties</para>
/// </summary>
public List<ActivityParty> GetActivityParties_Party (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActivityParty>(Service, this.Id, "activityparty", "partyid", Columns); }
/// <summary>
/// <para><b>ActivityParty (Party)</b></para>
/// <para>Schema Name: lead_activity_parties</para>
/// </summary>
public List<ActivityParty> GetActivityParties_Party (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActivityParty>(Service, this.Id, "activityparty", "partyid", Columns); }
/// <summary>
/// <para><b>Activity (Regarding)</b></para>
/// <para>Schema Name: Lead_ActivityPointers</para>
/// </summary>
public List<Activity> GetActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Activity>(Service, this.Id, "activitypointer", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Activity (Regarding)</b></para>
/// <para>Schema Name: Lead_ActivityPointers</para>
/// </summary>
public List<Activity> GetActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Activity>(Service, this.Id, "activitypointer", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: Lead_Annotation</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: Lead_Annotation</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Appointment (Regarding)</b></para>
/// <para>Schema Name: Lead_Appointments</para>
/// </summary>
public List<Appointment> GetAppointments_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Appointment>(Service, this.Id, "appointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Appointment (Regarding)</b></para>
/// <para>Schema Name: Lead_Appointments</para>
/// </summary>
public List<Appointment> GetAppointments_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Appointment>(Service, this.Id, "appointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: Lead_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: Lead_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: Lead_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: Lead_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkOperationLog (Created Object)</b></para>
/// <para>Schema Name: CreatedLead_BulkOperationLogs</para>
/// </summary>
public List<BulkOperationLog> GetBulkOperationLogs_CreatedObject (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkOperationLog>(Service, this.Id, "bulkoperationlog", "createdobjectid", Columns); }
/// <summary>
/// <para><b>BulkOperationLog (Created Object)</b></para>
/// <para>Schema Name: CreatedLead_BulkOperationLogs</para>
/// </summary>
public List<BulkOperationLog> GetBulkOperationLogs_CreatedObject (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkOperationLog>(Service, this.Id, "bulkoperationlog", "createdobjectid", Columns); }
/// <summary>
/// <para><b>BulkOperationLog (Customers Excluded)</b></para>
/// <para>Schema Name: SourceLead_BulkOperationLogs</para>
/// </summary>
public List<BulkOperationLog> GetBulkOperationLogs_CustomersExcluded (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkOperationLog>(Service, this.Id, "bulkoperationlog", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkOperationLog (Customers Excluded)</b></para>
/// <para>Schema Name: SourceLead_BulkOperationLogs</para>
/// </summary>
public List<BulkOperationLog> GetBulkOperationLogs_CustomersExcluded (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkOperationLog>(Service, this.Id, "bulkoperationlog", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: lead_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: lead_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: lead_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: lead_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>Contact (Originating Lead)</b></para>
/// <para>Schema Name: contact_originating_lead</para>
/// </summary>
public List<Contact> GetContacts_OriginatingLead (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Contact>(Service, this.Id, "contact", "originatingleadid", Columns); }
/// <summary>
/// <para><b>Contact (Originating Lead)</b></para>
/// <para>Schema Name: contact_originating_lead</para>
/// </summary>
public List<Contact> GetContacts_OriginatingLead (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Contact>(Service, this.Id, "contact", "originatingleadid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: Lead_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: Lead_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: Lead_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: Lead_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>Email (Sender)</b></para>
/// <para>Schema Name: Lead_Email_EmailSender</para>
/// </summary>
public List<Email> GetEmailMessages_Sender (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "emailsender", Columns); }
/// <summary>
/// <para><b>Email (Sender)</b></para>
/// <para>Schema Name: Lead_Email_EmailSender</para>
/// </summary>
public List<Email> GetEmailMessages_Sender (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "emailsender", Columns); }
/// <summary>
/// <para><b>Email (Regarding)</b></para>
/// <para>Schema Name: Lead_Emails</para>
/// </summary>
public List<Email> GetEmailMessages_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Email (Regarding)</b></para>
/// <para>Schema Name: Lead_Emails</para>
/// </summary>
public List<Email> GetEmailMessages_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Fax (Regarding)</b></para>
/// <para>Schema Name: Lead_Faxes</para>
/// </summary>
public List<Fax> GetFaxes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fax>(Service, this.Id, "fax", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Fax (Regarding)</b></para>
/// <para>Schema Name: Lead_Faxes</para>
/// </summary>
public List<Fax> GetFaxes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fax>(Service, this.Id, "fax", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Lead (Master ID)</b></para>
/// <para>Schema Name: lead_master_lead</para>
/// </summary>
public List<Lead> GetLeads_MasterID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Lead>(Service, this.Id, "lead", "masterid", Columns); }
/// <summary>
/// <para><b>Lead (Master ID)</b></para>
/// <para>Schema Name: lead_master_lead</para>
/// </summary>
public List<Lead> GetLeads_MasterID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Lead>(Service, this.Id, "lead", "masterid", Columns); }
/// <summary>
/// <para><b>LeadAddress (Parent)</b></para>
/// <para>Schema Name: lead_addresses</para>
/// </summary>
public List<LeadAddress> GetLeadAddresses_Parent (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<LeadAddress>(Service, this.Id, "leadaddress", "parentid", Columns); }
/// <summary>
/// <para><b>LeadAddress (Parent)</b></para>
/// <para>Schema Name: lead_addresses</para>
/// </summary>
public List<LeadAddress> GetLeadAddresses_Parent (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<LeadAddress>(Service, this.Id, "leadaddress", "parentid", Columns); }
/// <summary>
/// <para><b>LeadToOpportunitySalesProcess (Lead Id)</b></para>
/// <para>Schema Name: lk_leadtoopportunitysalesprocess_leadid</para>
/// </summary>
public List<LeadToOpportunitySalesProcess> GetLeadToOpportunitySalesProcess_LeadId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<LeadToOpportunitySalesProcess>(Service, this.Id, "leadtoopportunitysalesprocess", "leadid", Columns); }
/// <summary>
/// <para><b>LeadToOpportunitySalesProcess (Lead Id)</b></para>
/// <para>Schema Name: lk_leadtoopportunitysalesprocess_leadid</para>
/// </summary>
public List<LeadToOpportunitySalesProcess> GetLeadToOpportunitySalesProcess_LeadId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<LeadToOpportunitySalesProcess>(Service, this.Id, "leadtoopportunitysalesprocess", "leadid", Columns); }
/// <summary>
/// <para><b>Letter (Regarding)</b></para>
/// <para>Schema Name: Lead_Letters</para>
/// </summary>
public List<Letter> GetLetters_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Letter>(Service, this.Id, "letter", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Letter (Regarding)</b></para>
/// <para>Schema Name: Lead_Letters</para>
/// </summary>
public List<Letter> GetLetters_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Letter>(Service, this.Id, "letter", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: Lead_MailboxTrackingFolder</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: Lead_MailboxTrackingFolder</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Approval (Regarding)</b></para>
/// <para>Schema Name: lead_msdyn_approvals</para>
/// </summary>
public List<Approval> GetApprovals_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Approval>(Service, this.Id, "msdyn_approval", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Approval (Regarding)</b></para>
/// <para>Schema Name: lead_msdyn_approvals</para>
/// </summary>
public List<Approval> GetApprovals_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Approval>(Service, this.Id, "msdyn_approval", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BookingAlert (Regarding)</b></para>
/// <para>Schema Name: lead_msdyn_bookingalerts</para>
/// </summary>
public List<BookingAlert> GetBookingAlerts_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlert>(Service, this.Id, "msdyn_bookingalert", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BookingAlert (Regarding)</b></para>
/// <para>Schema Name: lead_msdyn_bookingalerts</para>
/// </summary>
public List<BookingAlert> GetBookingAlerts_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlert>(Service, this.Id, "msdyn_bookingalert", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Opportunity (Originating Lead)</b></para>
/// <para>Schema Name: opportunity_originating_lead</para>
/// </summary>
public List<Opportunity> GetOpportunities_OriginatingLead (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Opportunity>(Service, this.Id, "opportunity", "originatingleadid", Columns); }
/// <summary>
/// <para><b>Opportunity (Originating Lead)</b></para>
/// <para>Schema Name: opportunity_originating_lead</para>
/// </summary>
public List<Opportunity> GetOpportunities_OriginatingLead (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Opportunity>(Service, this.Id, "opportunity", "originatingleadid", Columns); }
/// <summary>
/// <para><b>PhoneCall (Regarding)</b></para>
/// <para>Schema Name: Lead_Phonecalls</para>
/// </summary>
public List<PhoneCall> GetPhoneCalls_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneCall>(Service, this.Id, "phonecall", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PhoneCall (Regarding)</b></para>
/// <para>Schema Name: Lead_Phonecalls</para>
/// </summary>
public List<PhoneCall> GetPhoneCalls_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneCall>(Service, this.Id, "phonecall", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Follow (Regarding)</b></para>
/// <para>Schema Name: lead_PostFollows</para>
/// </summary>
public List<Follow> GetFollows_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Follow>(Service, this.Id, "postfollow", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Follow (Regarding)</b></para>
/// <para>Schema Name: lead_PostFollows</para>
/// </summary>
public List<Follow> GetFollows_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Follow>(Service, this.Id, "postfollow", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PostRegarding (RegardingObjectId)</b></para>
/// <para>Schema Name: lead_PostRegardings</para>
/// </summary>
public List<PostRegarding> GetPostRegarding_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostRegarding>(Service, this.Id, "postregarding", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PostRegarding (RegardingObjectId)</b></para>
/// <para>Schema Name: lead_PostRegardings</para>
/// </summary>
public List<PostRegarding> GetPostRegarding_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostRegarding>(Service, this.Id, "postregarding", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PostRole (RegardingObjectId)</b></para>
/// <para>Schema Name: lead_PostRoles</para>
/// </summary>
public List<PostRole> GetPostRoles_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostRole>(Service, this.Id, "postrole", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PostRole (RegardingObjectId)</b></para>
/// <para>Schema Name: lead_PostRoles</para>
/// </summary>
public List<PostRole> GetPostRoles_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostRole>(Service, this.Id, "postrole", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: lead_principalobjectattributeaccess</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: lead_principalobjectattributeaccess</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: Lead_ProcessSessions</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: Lead_ProcessSessions</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>RecurringAppointment (Regarding)</b></para>
/// <para>Schema Name: Lead_RecurringAppointmentMasters</para>
/// </summary>
public List<RecurringAppointment> GetRecurringAppointments_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecurringAppointment>(Service, this.Id, "recurringappointmentmaster", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>RecurringAppointment (Regarding)</b></para>
/// <para>Schema Name: Lead_RecurringAppointmentMasters</para>
/// </summary>
public List<RecurringAppointment> GetRecurringAppointments_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecurringAppointment>(Service, this.Id, "recurringappointmentmaster", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ServiceActivity (Regarding)</b></para>
/// <para>Schema Name: Lead_ServiceAppointments</para>
/// </summary>
public List<ServiceActivity> GetServiceActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceActivity>(Service, this.Id, "serviceappointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ServiceActivity (Regarding)</b></para>
/// <para>Schema Name: Lead_ServiceAppointments</para>
/// </summary>
public List<ServiceActivity> GetServiceActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceActivity>(Service, this.Id, "serviceappointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SharepointDocument (Regarding)</b></para>
/// <para>Schema Name: Lead_SharepointDocument</para>
/// </summary>
public List<SharepointDocument> GetDocuments_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SharepointDocument>(Service, this.Id, "sharepointdocument", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SharepointDocument (Regarding)</b></para>
/// <para>Schema Name: Lead_SharepointDocument</para>
/// </summary>
public List<SharepointDocument> GetDocuments_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SharepointDocument>(Service, this.Id, "sharepointdocument", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>DocumentLocation (Regarding)</b></para>
/// <para>Schema Name: Lead_SharepointDocumentLocation</para>
/// </summary>
public List<DocumentLocation> GetDocumentLocations_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DocumentLocation>(Service, this.Id, "sharepointdocumentlocation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>DocumentLocation (Regarding)</b></para>
/// <para>Schema Name: Lead_SharepointDocumentLocation</para>
/// </summary>
public List<DocumentLocation> GetDocumentLocations_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DocumentLocation>(Service, this.Id, "sharepointdocumentlocation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SLAKPIInstance (Regarding)</b></para>
/// <para>Schema Name: slakpiinstance_lead</para>
/// </summary>
public List<SLAKPIInstance> GetSLAKPIInstances_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SLAKPIInstance>(Service, this.Id, "slakpiinstance", "regarding", Columns); }
/// <summary>
/// <para><b>SLAKPIInstance (Regarding)</b></para>
/// <para>Schema Name: slakpiinstance_lead</para>
/// </summary>
public List<SLAKPIInstance> GetSLAKPIInstances_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SLAKPIInstance>(Service, this.Id, "slakpiinstance", "regarding", Columns); }
/// <summary>
/// <para><b>SocialActivity (Regarding)</b></para>
/// <para>Schema Name: Lead_SocialActivities</para>
/// </summary>
public List<SocialActivity> GetSocialActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialActivity>(Service, this.Id, "socialactivity", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SocialActivity (Regarding)</b></para>
/// <para>Schema Name: Lead_SocialActivities</para>
/// </summary>
public List<SocialActivity> GetSocialActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialActivity>(Service, this.Id, "socialactivity", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: Lead_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: Lead_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Task (Regarding)</b></para>
/// <para>Schema Name: Lead_Tasks</para>
/// </summary>
public List<Task> GetTasks_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Task>(Service, this.Id, "task", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Task (Regarding)</b></para>
/// <para>Schema Name: Lead_Tasks</para>
/// </summary>
public List<Task> GetTasks_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Task>(Service, this.Id, "task", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_lead</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_lead</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        /// <summary>
/// <para>Related Entity: <b>Account</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: accountleads_association</para>
/// </summary>
public List<Account> GetAccounts (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<Account>(Service, this, "lead", "leadid", "account", "accountid", "accountleads", "leadid", "accountid", Columns); }
public List<Account> GetAccounts (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<Account>(Service, this, "lead", "leadid", "account", "accountid", "accountleads", "leadid", "accountid", Columns); }
public void RelateAccounts (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "accountleads_association", Items); }
public void RelateAccounts (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "accountleads_association", Items); }
public void UnRelateAccounts (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "accountleads_association", Items); }
public void UnRelateAccounts (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "accountleads_association", Items); }
/// <summary>
/// <para>Related Entity: <b>Contact</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: contactleads_association</para>
/// </summary>
public List<Contact> GetContacts (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<Contact>(Service, this, "lead", "leadid", "contact", "contactid", "contactleads", "leadid", "contactid", Columns); }
public List<Contact> GetContacts (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<Contact>(Service, this, "lead", "leadid", "contact", "contactid", "contactleads", "leadid", "contactid", Columns); }
public void RelateContacts (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "contactleads_association", Items); }
public void RelateContacts (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "contactleads_association", Items); }
public void UnRelateContacts (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "contactleads_association", Items); }
public void UnRelateContacts (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "contactleads_association", Items); }
/// <summary>
/// <para>Related Entity: <b>Product</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: leadproduct_association</para>
/// </summary>
public List<Product> GetProducts (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<Product>(Service, this, "lead", "leadid", "product", "productid", "leadproduct", "leadid", "productid", Columns); }
public List<Product> GetProducts (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<Product>(Service, this, "lead", "leadid", "product", "productid", "leadproduct", "leadid", "productid", Columns); }
public void RelateProducts (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "leadproduct_association", Items); }
public void RelateProducts (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "leadproduct_association", Items); }
public void UnRelateProducts (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "leadproduct_association", Items); }
public void UnRelateProducts (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "leadproduct_association", Items); }
/// <summary>
/// <para>Related Entity: <b>Competitor</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: leadcompetitors_association</para>
/// </summary>
public List<Competitor> GetCompetitors (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<Competitor>(Service, this, "lead", "leadid", "competitor", "competitorid", "leadcompetitors", "leadid", "competitorid", Columns); }
public List<Competitor> GetCompetitors (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<Competitor>(Service, this, "lead", "leadid", "competitor", "competitorid", "leadcompetitors", "leadid", "competitorid", Columns); }
public void RelateCompetitors (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "leadcompetitors_association", Items); }
public void RelateCompetitors (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "leadcompetitors_association", Items); }
public void UnRelateCompetitors (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "leadcompetitors_association", Items); }
public void UnRelateCompetitors (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "leadcompetitors_association", Items); }
/// <summary>
/// <para>Related Entity: <b>Marketing List</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: listlead_association</para>
/// </summary>
public List<MarketingList> GetMarketingLists (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<MarketingList>(Service, this, "lead", "leadid", "list", "listid", "listmember", "entityid", "listid", Columns); }
public List<MarketingList> GetMarketingLists (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<MarketingList>(Service, this, "lead", "leadid", "list", "listid", "listmember", "entityid", "listid", Columns); }
public void RelateMarketingLists (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "listlead_association", Items); }
public void RelateMarketingLists (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "listlead_association", Items); }
public void UnRelateMarketingLists (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "listlead_association", Items); }
public void UnRelateMarketingLists (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "listlead_association", Items); }


        

        public enum eAddress1_AddressType
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eAddress1_ShippingMethod
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eAddress2_AddressType
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eAddress2_ShippingMethod
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eBudget
{
	///<summary><para>No Committed Budget</para>
	///<para>Value = 0</para></summary>
	[Description("No Committed Budget")]
	NoCommittedBudget = 0, 
	///<summary><para>May Buy</para>
	///<para>Value = 1</para></summary>
	[Description("May Buy")]
	MayBuy = 1, 
	///<summary><para>Can Buy</para>
	///<para>Value = 2</para></summary>
	[Description("Can Buy")]
	CanBuy = 2, 
	///<summary><para>Will Buy</para>
	///<para>Value = 3</para></summary>
	[Description("Will Buy")]
	WillBuy = 3
}
public enum eIndustry
{
	///<summary><para>Accounting</para>
	///<para>Value = 1</para></summary>
	[Description("Accounting")]
	Accounting = 1, 
	///<summary><para>Agriculture and Non-petrol Natural Resource Extraction</para>
	///<para>Value = 2</para></summary>
	[Description("Agriculture and Non-petrol Natural Resource Extraction")]
	AgricultureAndNon_petrolNaturalResourceExtraction = 2, 
	///<summary><para>Broadcasting Printing and Publishing</para>
	///<para>Value = 3</para></summary>
	[Description("Broadcasting Printing and Publishing")]
	BroadcastingPrintingAndPublishing = 3, 
	///<summary><para>Brokers</para>
	///<para>Value = 4</para></summary>
	[Description("Brokers")]
	Brokers = 4, 
	///<summary><para>Building Supply Retail</para>
	///<para>Value = 5</para></summary>
	[Description("Building Supply Retail")]
	BuildingSupplyRetail = 5, 
	///<summary><para>Business Services</para>
	///<para>Value = 6</para></summary>
	[Description("Business Services")]
	BusinessServices = 6, 
	///<summary><para>Consulting</para>
	///<para>Value = 7</para></summary>
	[Description("Consulting")]
	Consulting = 7, 
	///<summary><para>Consumer Services</para>
	///<para>Value = 8</para></summary>
	[Description("Consumer Services")]
	ConsumerServices = 8, 
	///<summary><para>Design, Direction and Creative Management</para>
	///<para>Value = 9</para></summary>
	[Description("Design, Direction and Creative Management")]
	Design_DirectionAndCreativeManagement = 9, 
	///<summary><para>Distributors, Dispatchers and Processors</para>
	///<para>Value = 10</para></summary>
	[Description("Distributors, Dispatchers and Processors")]
	Distributors_DispatchersAndProcessors = 10, 
	///<summary><para>Doctor's Offices and Clinics</para>
	///<para>Value = 11</para></summary>
	[Description("Doctor's Offices and Clinics")]
	DoctorsOfficesAndClinics = 11, 
	///<summary><para>Durable Manufacturing</para>
	///<para>Value = 12</para></summary>
	[Description("Durable Manufacturing")]
	DurableManufacturing = 12, 
	///<summary><para>Eating and Drinking Places</para>
	///<para>Value = 13</para></summary>
	[Description("Eating and Drinking Places")]
	EatingAndDrinkingPlaces = 13, 
	///<summary><para>Entertainment Retail</para>
	///<para>Value = 14</para></summary>
	[Description("Entertainment Retail")]
	EntertainmentRetail = 14, 
	///<summary><para>Equipment Rental and Leasing</para>
	///<para>Value = 15</para></summary>
	[Description("Equipment Rental and Leasing")]
	EquipmentRentalAndLeasing = 15, 
	///<summary><para>Financial</para>
	///<para>Value = 16</para></summary>
	[Description("Financial")]
	Financial = 16, 
	///<summary><para>Food and Tobacco Processing</para>
	///<para>Value = 17</para></summary>
	[Description("Food and Tobacco Processing")]
	FoodAndTobaccoProcessing = 17, 
	///<summary><para>Inbound Capital Intensive Processing</para>
	///<para>Value = 18</para></summary>
	[Description("Inbound Capital Intensive Processing")]
	InboundCapitalIntensiveProcessing = 18, 
	///<summary><para>Inbound Repair and Services</para>
	///<para>Value = 19</para></summary>
	[Description("Inbound Repair and Services")]
	InboundRepairAndServices = 19, 
	///<summary><para>Insurance</para>
	///<para>Value = 20</para></summary>
	[Description("Insurance")]
	Insurance = 20, 
	///<summary><para>Legal Services</para>
	///<para>Value = 21</para></summary>
	[Description("Legal Services")]
	LegalServices = 21, 
	///<summary><para>Non-Durable Merchandise Retail</para>
	///<para>Value = 22</para></summary>
	[Description("Non-Durable Merchandise Retail")]
	Non_DurableMerchandiseRetail = 22, 
	///<summary><para>Outbound Consumer Service</para>
	///<para>Value = 23</para></summary>
	[Description("Outbound Consumer Service")]
	OutboundConsumerService = 23, 
	///<summary><para>Petrochemical Extraction and Distribution</para>
	///<para>Value = 24</para></summary>
	[Description("Petrochemical Extraction and Distribution")]
	PetrochemicalExtractionAndDistribution = 24, 
	///<summary><para>Service Retail</para>
	///<para>Value = 25</para></summary>
	[Description("Service Retail")]
	ServiceRetail = 25, 
	///<summary><para>SIG Affiliations</para>
	///<para>Value = 26</para></summary>
	[Description("SIG Affiliations")]
	SIGAffiliations = 26, 
	///<summary><para>Social Services</para>
	///<para>Value = 27</para></summary>
	[Description("Social Services")]
	SocialServices = 27, 
	///<summary><para>Special Outbound Trade Contractors</para>
	///<para>Value = 28</para></summary>
	[Description("Special Outbound Trade Contractors")]
	SpecialOutboundTradeContractors = 28, 
	///<summary><para>Specialty Realty</para>
	///<para>Value = 29</para></summary>
	[Description("Specialty Realty")]
	SpecialtyRealty = 29, 
	///<summary><para>Transportation</para>
	///<para>Value = 30</para></summary>
	[Description("Transportation")]
	Transportation = 30, 
	///<summary><para>Utility Creation and Distribution</para>
	///<para>Value = 31</para></summary>
	[Description("Utility Creation and Distribution")]
	UtilityCreationAndDistribution = 31, 
	///<summary><para>Vehicle Retail</para>
	///<para>Value = 32</para></summary>
	[Description("Vehicle Retail")]
	VehicleRetail = 32, 
	///<summary><para>Wholesale</para>
	///<para>Value = 33</para></summary>
	[Description("Wholesale")]
	Wholesale = 33
}
public enum eInitialCommunication
{
	///<summary><para>Contacted</para>
	///<para>Value = 0</para></summary>
	[Description("Contacted")]
	Contacted = 0, 
	///<summary><para>Not Contacted</para>
	///<para>Value = 1</para></summary>
	[Description("Not Contacted")]
	NotContacted = 1
}
public enum eLeadSource
{
	///<summary><para>Advertisement</para>
	///<para>Value = 1</para></summary>
	[Description("Advertisement")]
	Advertisement = 1, 
	///<summary><para>Employee Referral</para>
	///<para>Value = 2</para></summary>
	[Description("Employee Referral")]
	EmployeeReferral = 2, 
	///<summary><para>External Referral</para>
	///<para>Value = 3</para></summary>
	[Description("External Referral")]
	ExternalReferral = 3, 
	///<summary><para>Partner</para>
	///<para>Value = 4</para></summary>
	[Description("Partner")]
	Partner = 4, 
	///<summary><para>Public Relations</para>
	///<para>Value = 5</para></summary>
	[Description("Public Relations")]
	PublicRelations = 5, 
	///<summary><para>Seminar</para>
	///<para>Value = 6</para></summary>
	[Description("Seminar")]
	Seminar = 6, 
	///<summary><para>Trade Show</para>
	///<para>Value = 7</para></summary>
	[Description("Trade Show")]
	TradeShow = 7, 
	///<summary><para>Web</para>
	///<para>Value = 8</para></summary>
	[Description("Web")]
	Web = 8, 
	///<summary><para>Word of Mouth</para>
	///<para>Value = 9</para></summary>
	[Description("Word of Mouth")]
	WordOfMouth = 9, 
	///<summary><para>Other</para>
	///<para>Value = 10</para></summary>
	[Description("Other")]
	Other = 10
}
public enum eNeed
{
	///<summary><para>Must have</para>
	///<para>Value = 0</para></summary>
	[Description("Must have")]
	MustHave = 0, 
	///<summary><para>Should have</para>
	///<para>Value = 1</para></summary>
	[Description("Should have")]
	ShouldHave = 1, 
	///<summary><para>Good to have</para>
	///<para>Value = 2</para></summary>
	[Description("Good to have")]
	GoodToHave = 2, 
	///<summary><para>No need</para>
	///<para>Value = 3</para></summary>
	[Description("No need")]
	NoNeed = 3
}
public enum ePreferredMethodOfContact
{
	///<summary><para>Any</para>
	///<para>Value = 1</para></summary>
	[Description("Any")]
	Any = 1, 
	///<summary><para>Email</para>
	///<para>Value = 2</para></summary>
	[Description("Email")]
	Email = 2, 
	///<summary><para>Phone</para>
	///<para>Value = 3</para></summary>
	[Description("Phone")]
	Phone = 3, 
	///<summary><para>Fax</para>
	///<para>Value = 4</para></summary>
	[Description("Fax")]
	Fax = 4, 
	///<summary><para>Mail</para>
	///<para>Value = 5</para></summary>
	[Description("Mail")]
	Mail = 5
}
public enum ePriority
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum ePurchaseProcess
{
	///<summary><para>Individual</para>
	///<para>Value = 0</para></summary>
	[Description("Individual")]
	Individual = 0, 
	///<summary><para>Committee</para>
	///<para>Value = 1</para></summary>
	[Description("Committee")]
	Committee = 1, 
	///<summary><para>Unknown</para>
	///<para>Value = 2</para></summary>
	[Description("Unknown")]
	Unknown = 2
}
public enum ePurchaseTimeframe
{
	///<summary><para>Immediate</para>
	///<para>Value = 0</para></summary>
	[Description("Immediate")]
	Immediate = 0, 
	///<summary><para>This Quarter</para>
	///<para>Value = 1</para></summary>
	[Description("This Quarter")]
	ThisQuarter = 1, 
	///<summary><para>Next Quarter</para>
	///<para>Value = 2</para></summary>
	[Description("Next Quarter")]
	NextQuarter = 2, 
	///<summary><para>This Year</para>
	///<para>Value = 3</para></summary>
	[Description("This Year")]
	ThisYear = 3, 
	///<summary><para>Unknown</para>
	///<para>Value = 4</para></summary>
	[Description("Unknown")]
	Unknown = 4
}
public enum eRating
{
	///<summary><para>Hot</para>
	///<para>Value = 1</para></summary>
	[Description("Hot")]
	Hot = 1, 
	///<summary><para>Warm</para>
	///<para>Value = 2</para></summary>
	[Description("Warm")]
	Warm = 2, 
	///<summary><para>Cold</para>
	///<para>Value = 3</para></summary>
	[Description("Cold")]
	Cold = 3
}
public enum eLeadSalesStage
{
	///<summary><para>Qualify</para>
	///<para>Value = 0</para></summary>
	[Description("Qualify")]
	Qualify = 0
}
public enum eSalesStage
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eStatus
{
	///<summary><para>Open</para>
	///<para>Value = 0</para></summary>
	[Description("Open")]
	Open = 0, 
	///<summary><para>Qualified</para>
	///<para>Value = 1</para></summary>
	[Description("Qualified")]
	Qualified = 1, 
	///<summary><para>Disqualified</para>
	///<para>Value = 2</para></summary>
	[Description("Disqualified")]
	Disqualified = 2
}
public enum eStatusReason
{
	///<summary><para>New</para>
	///<para>Value = 1</para></summary>
	[Description("New")]
	_New_Open = 1, 
	///<summary><para>Contacted</para>
	///<para>Value = 2</para></summary>
	[Description("Contacted")]
	Contacted_Open = 2, 
	///<summary><para>Qualified</para>
	///<para>Value = 3</para></summary>
	[Description("Qualified")]
	Qualified_Qualified = 3, 
	///<summary><para>Lost</para>
	///<para>Value = 4</para></summary>
	[Description("Lost")]
	Lost_Disqualified = 4, 
	///<summary><para>Cannot Contact</para>
	///<para>Value = 5</para></summary>
	[Description("Cannot Contact")]
	CannotContact_Disqualified = 5, 
	///<summary><para>No Longer Interested</para>
	///<para>Value = 6</para></summary>
	[Description("No Longer Interested")]
	NoLongerInterested_Disqualified = 6, 
	///<summary><para>Canceled</para>
	///<para>Value = 7</para></summary>
	[Description("Canceled")]
	Canceled_Disqualified = 7
}
public enum eType
{
	///<summary><para>Work based</para>
	///<para>Value = 192350001</para></summary>
	[Description("Work based")]
	WorkBased = 192350001, 
	///<summary><para>Item based</para>
	///<para>Value = 192350000</para></summary>
	[Description("Item based")]
	ItemBased = 192350000, 
	///<summary><para>Service-Maintenance Based</para>
	///<para>Value = 690970002</para></summary>
	[Description("Service-Maintenance Based")]
	Service_MaintenanceBased = 690970002
}
public void SetState(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>entityimage_timestamp</para>
	/// <para>entityimage_timestamp</para></summary>
	public const string EntityImage_Timestamp = "entityimage_timestamp";
	/// <summary><para>contactidname</para>
	/// <para>contactidname</para></summary>
	public const string ContactIdName = "contactidname";
	/// <summary><para>transactioncurrencyidname</para>
	/// <para>transactioncurrencyidname</para></summary>
	public const string TransactionCurrencyIdName = "transactioncurrencyidname";
	/// <summary><para>accountidname</para>
	/// <para>accountidname</para></summary>
	public const string AccountIdName = "accountidname";
	/// <summary><para>relatedobjectidname</para>
	/// <para>relatedobjectidname</para></summary>
	public const string RelatedObjectIdName = "relatedobjectidname";
	/// <summary><para>campaignidname</para>
	/// <para>campaignidname</para></summary>
	public const string CampaignIdName = "campaignidname";
	/// <summary><para>masterleadidyominame</para>
	/// <para>masterleadidyominame</para></summary>
	public const string MasterLeadIdYomiName = "masterleadidyominame";
	/// <summary><para>owneridyominame</para>
	/// <para>owneridyominame</para></summary>
	public const string OwnerIdYomiName = "owneridyominame";
	/// <summary><para>parentaccountidname</para>
	/// <para>parentaccountidname</para></summary>
	public const string ParentAccountIdName = "parentaccountidname";
	/// <summary><para>parentaccountidyominame</para>
	/// <para>parentaccountidyominame</para></summary>
	public const string ParentAccountIdYomiName = "parentaccountidyominame";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>entityimage_url</para>
	/// <para>entityimage_url</para></summary>
	public const string EntityImage_URL = "entityimage_url";
	/// <summary><para>parentcontactidyominame</para>
	/// <para>parentcontactidyominame</para></summary>
	public const string ParentContactIdYomiName = "parentcontactidyominame";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>customeridyominame</para>
	/// <para>customeridyominame</para></summary>
	public const string CustomerIdYomiName = "customeridyominame";
	/// <summary><para>slainvokedidname</para>
	/// <para>slainvokedidname</para></summary>
	public const string SLAInvokedIdName = "slainvokedidname";
	/// <summary><para>masterleadidname</para>
	/// <para>masterleadidname</para></summary>
	public const string MasterLeadIdName = "masterleadidname";
	/// <summary><para>owneridtype</para>
	/// <para>owneridtype</para></summary>
	public const string OwnerIdType = "owneridtype";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>qualifyingopportunityidname</para>
	/// <para>qualifyingopportunityidname</para></summary>
	public const string QualifyingOpportunityIdName = "qualifyingopportunityidname";
	/// <summary><para>customeridname</para>
	/// <para>customeridname</para></summary>
	public const string CustomerIdName = "customeridname";
	/// <summary><para>contactidyominame</para>
	/// <para>contactidyominame</para></summary>
	public const string ContactIdYomiName = "contactidyominame";
	/// <summary><para>originatingcaseidname</para>
	/// <para>originatingcaseidname</para></summary>
	public const string OriginatingCaseIdName = "originatingcaseidname";
	/// <summary><para>parentcontactidname</para>
	/// <para>parentcontactidname</para></summary>
	public const string ParentContactIdName = "parentcontactidname";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>owneridname</para>
	/// <para>owneridname</para></summary>
	public const string OwnerIdName = "owneridname";
	/// <summary><para>accountidyominame</para>
	/// <para>accountidyominame</para></summary>
	public const string AccountIdYomiName = "accountidyominame";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>slaname</para>
	/// <para>slaname</para></summary>
	public const string SLAName = "slaname";
	/// <summary><para>Account</para>
	/// <para>accountid</para></summary>
	public const string Account = "accountid";
	/// <summary><para>Address 1</para>
	/// <para>address1_composite</para></summary>
	public const string Address1 = "address1_composite";
	/// <summary><para>Address 1: Address Type</para>
	/// <para>address1_addresstypecode</para></summary>
	public const string Address1_AddressType = "address1_addresstypecode";
	/// <summary><para>Address 1: County</para>
	/// <para>address1_county</para></summary>
	public const string Address1_County = "address1_county";
	/// <summary><para>Address 1: Fax</para>
	/// <para>address1_fax</para></summary>
	public const string Address1_Fax = "address1_fax";
	/// <summary><para>Address 1: ID</para>
	/// <para>address1_addressid</para></summary>
	public const string Address1_ID = "address1_addressid";
	/// <summary><para>Address 1: Latitude</para>
	/// <para>address1_latitude</para></summary>
	public const string Address1_Latitude = "address1_latitude";
	/// <summary><para>Address 1: Longitude</para>
	/// <para>address1_longitude</para></summary>
	public const string Address1_Longitude = "address1_longitude";
	/// <summary><para>Address 1: Name</para>
	/// <para>address1_name</para></summary>
	public const string Address1_Name = "address1_name";
	/// <summary><para>Address 1: Post Office Box</para>
	/// <para>address1_postofficebox</para></summary>
	public const string Address1_PostOfficeBox = "address1_postofficebox";
	/// <summary><para>Address 1: Shipping Method</para>
	/// <para>address1_shippingmethodcode</para></summary>
	public const string Address1_ShippingMethod = "address1_shippingmethodcode";
	/// <summary><para>Address 1: Telephone 1</para>
	/// <para>address1_telephone1</para></summary>
	public const string Address1_Telephone1 = "address1_telephone1";
	/// <summary><para>Address 1: Telephone 2</para>
	/// <para>address1_telephone2</para></summary>
	public const string Address1_Telephone2 = "address1_telephone2";
	/// <summary><para>Address 1: Telephone 3</para>
	/// <para>address1_telephone3</para></summary>
	public const string Address1_Telephone3 = "address1_telephone3";
	/// <summary><para>Address 1: UPS Zone</para>
	/// <para>address1_upszone</para></summary>
	public const string Address1_UPSZone = "address1_upszone";
	/// <summary><para>Address 1: UTC Offset</para>
	/// <para>address1_utcoffset</para></summary>
	public const string Address1_UTCOffset = "address1_utcoffset";
	/// <summary><para>Address 2</para>
	/// <para>address2_composite</para></summary>
	public const string Address2 = "address2_composite";
	/// <summary><para>Address 2: Address Type</para>
	/// <para>address2_addresstypecode</para></summary>
	public const string Address2_AddressType = "address2_addresstypecode";
	/// <summary><para>Address 2: City</para>
	/// <para>address2_city</para></summary>
	public const string Address2_City = "address2_city";
	/// <summary><para>Address 2: Country/Region</para>
	/// <para>address2_country</para></summary>
	public const string Address2_Country_Region = "address2_country";
	/// <summary><para>Address 2: County</para>
	/// <para>address2_county</para></summary>
	public const string Address2_County = "address2_county";
	/// <summary><para>Address 2: Fax</para>
	/// <para>address2_fax</para></summary>
	public const string Address2_Fax = "address2_fax";
	/// <summary><para>Address 2: ID</para>
	/// <para>address2_addressid</para></summary>
	public const string Address2_ID = "address2_addressid";
	/// <summary><para>Address 2: Latitude</para>
	/// <para>address2_latitude</para></summary>
	public const string Address2_Latitude = "address2_latitude";
	/// <summary><para>Address 2: Longitude</para>
	/// <para>address2_longitude</para></summary>
	public const string Address2_Longitude = "address2_longitude";
	/// <summary><para>Address 2: Name</para>
	/// <para>address2_name</para></summary>
	public const string Address2_Name = "address2_name";
	/// <summary><para>Address 2: Post Office Box</para>
	/// <para>address2_postofficebox</para></summary>
	public const string Address2_PostOfficeBox = "address2_postofficebox";
	/// <summary><para>Address 2: Shipping Method</para>
	/// <para>address2_shippingmethodcode</para></summary>
	public const string Address2_ShippingMethod = "address2_shippingmethodcode";
	/// <summary><para>Address 2: State/Province</para>
	/// <para>address2_stateorprovince</para></summary>
	public const string Address2_State_Province = "address2_stateorprovince";
	/// <summary><para>Address 2: Street 1</para>
	/// <para>address2_line1</para></summary>
	public const string Address2_Street1 = "address2_line1";
	/// <summary><para>Address 2: Street 2</para>
	/// <para>address2_line2</para></summary>
	public const string Address2_Street2 = "address2_line2";
	/// <summary><para>Address 2: Street 3</para>
	/// <para>address2_line3</para></summary>
	public const string Address2_Street3 = "address2_line3";
	/// <summary><para>Address 2: Telephone 1</para>
	/// <para>address2_telephone1</para></summary>
	public const string Address2_Telephone1 = "address2_telephone1";
	/// <summary><para>Address 2: Telephone 2</para>
	/// <para>address2_telephone2</para></summary>
	public const string Address2_Telephone2 = "address2_telephone2";
	/// <summary><para>Address 2: Telephone 3</para>
	/// <para>address2_telephone3</para></summary>
	public const string Address2_Telephone3 = "address2_telephone3";
	/// <summary><para>Address 2: UPS Zone</para>
	/// <para>address2_upszone</para></summary>
	public const string Address2_UPSZone = "address2_upszone";
	/// <summary><para>Address 2: UTC Offset</para>
	/// <para>address2_utcoffset</para></summary>
	public const string Address2_UTCOffset = "address2_utcoffset";
	/// <summary><para>Address 2: ZIP/Postal Code</para>
	/// <para>address2_postalcode</para></summary>
	public const string Address2_ZIP_PostalCode = "address2_postalcode";
	/// <summary><para>Annual Revenue</para>
	/// <para>revenue</para></summary>
	public const string AnnualRevenue = "revenue";
	/// <summary><para>Annual Revenue (Base)</para>
	/// <para>revenue_base</para></summary>
	public const string AnnualRevenue_Base = "revenue_base";
	/// <summary><para>Auto-created</para>
	/// <para>isautocreate</para></summary>
	public const string Auto_created = "isautocreate";
	/// <summary><para>Budget</para>
	/// <para>budgetstatus</para></summary>
	public const string Budget = "budgetstatus";
	/// <summary><para>Budget Amount</para>
	/// <para>budgetamount</para></summary>
	public const string BudgetAmount = "budgetamount";
	/// <summary><para>Budget Amount (Base)</para>
	/// <para>budgetamount_base</para></summary>
	public const string BudgetAmount_Base = "budgetamount_base";
	/// <summary><para>Business Phone</para>
	/// <para>telephone1</para></summary>
	public const string BusinessPhone = "telephone1";
	/// <summary><para>City</para>
	/// <para>address1_city</para></summary>
	public const string City = "address1_city";
	/// <summary><para>Company Name</para>
	/// <para>companyname</para></summary>
	public const string CompanyName = "companyname";
	/// <summary><para>Confirm Interest</para>
	/// <para>confirminterest</para></summary>
	public const string ConfirmInterest = "confirminterest";
	/// <summary><para>Contact</para>
	/// <para>contactid</para></summary>
	public const string Contact = "contactid";
	/// <summary><para>Country/Region</para>
	/// <para>address1_country</para></summary>
	public const string Country_Region = "address1_country";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Currency</para>
	/// <para>transactioncurrencyid</para></summary>
	public const string Currency = "transactioncurrencyid";
	/// <summary><para>Customer</para>
	/// <para>customerid</para></summary>
	public const string Customer = "customerid";
	/// <summary><para>Customer Type</para>
	/// <para>customeridtype</para></summary>
	public const string CustomerType = "customeridtype";
	/// <summary><para>Decision Maker?</para>
	/// <para>decisionmaker</para></summary>
	public const string DecisionMaker = "decisionmaker";
	/// <summary><para>Description</para>
	/// <para>description</para></summary>
	public const string Description = "description";
	/// <summary><para>Do not allow Bulk Emails</para>
	/// <para>donotbulkemail</para></summary>
	public const string DoNotAllowBulkEmails = "donotbulkemail";
	/// <summary><para>Do not allow Emails</para>
	/// <para>donotemail</para></summary>
	public const string DoNotAllowEmails = "donotemail";
	/// <summary><para>Do not allow Faxes</para>
	/// <para>donotfax</para></summary>
	public const string DoNotAllowFaxes = "donotfax";
	/// <summary><para>Do not allow Mails</para>
	/// <para>donotpostalmail</para></summary>
	public const string DoNotAllowMails = "donotpostalmail";
	/// <summary><para>Do not allow Phone Calls</para>
	/// <para>donotphone</para></summary>
	public const string DoNotAllowPhoneCalls = "donotphone";
	/// <summary><para>Email</para>
	/// <para>emailaddress1</para></summary>
	public const string Email = "emailaddress1";
	/// <summary><para>Email Address 2</para>
	/// <para>emailaddress2</para></summary>
	public const string EmailAddress2 = "emailaddress2";
	/// <summary><para>Email Address 3</para>
	/// <para>emailaddress3</para></summary>
	public const string EmailAddress3 = "emailaddress3";
	/// <summary><para>Entity Image Id</para>
	/// <para>entityimageid</para></summary>
	public const string EntityImageId = "entityimageid";
	/// <summary><para>Est. Close Date</para>
	/// <para>estimatedclosedate</para></summary>
	public const string Est_CloseDate = "estimatedclosedate";
	/// <summary><para>Est. Value</para>
	/// <para>estimatedamount</para></summary>
	public const string Est_Value = "estimatedamount";
	/// <summary><para>Est. Value (Base)</para>
	/// <para>estimatedamount_base</para></summary>
	public const string Est_Value_Base = "estimatedamount_base";
	/// <summary><para>Est. Value (deprecated)</para>
	/// <para>estimatedvalue</para></summary>
	public const string Est_Value_deprecated = "estimatedvalue";
	/// <summary><para>Evaluate Fit</para>
	/// <para>evaluatefit</para></summary>
	public const string EvaluateFit = "evaluatefit";
	/// <summary><para>Exchange Rate</para>
	/// <para>exchangerate</para></summary>
	public const string ExchangeRate = "exchangerate";
	/// <summary><para>Fax</para>
	/// <para>fax</para></summary>
	public const string Fax = "fax";
	/// <summary><para>First Name</para>
	/// <para>firstname</para></summary>
	public const string FirstName = "firstname";
	/// <summary><para>Follow Email Activity</para>
	/// <para>followemail</para></summary>
	public const string FollowEmailActivity = "followemail";
	/// <summary><para>Home Phone</para>
	/// <para>telephone2</para></summary>
	public const string HomePhone = "telephone2";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string ImportSequenceNumber = "importsequencenumber";
	/// <summary><para>Industry</para>
	/// <para>industrycode</para></summary>
	public const string Industry = "industrycode";
	/// <summary><para>Initial Communication</para>
	/// <para>initialcommunication</para></summary>
	public const string InitialCommunication = "initialcommunication";
	/// <summary><para>Is Private</para>
	/// <para>isprivate</para></summary>
	public const string IsPrivate = "isprivate";
	/// <summary><para>Job Title</para>
	/// <para>jobtitle</para></summary>
	public const string JobTitle = "jobtitle";
	/// <summary><para>Last Campaign Date</para>
	/// <para>lastusedincampaign</para></summary>
	public const string LastCampaignDate = "lastusedincampaign";
	/// <summary><para>Last Name</para>
	/// <para>lastname</para></summary>
	public const string LastName = "lastname";
	/// <summary><para>Last On Hold Time</para>
	/// <para>lastonholdtime</para></summary>
	public const string LastOnHoldTime = "lastonholdtime";
	/// <summary><para>Last SLA applied</para>
	/// <para>slainvokedid</para></summary>
	public const string LastSLAApplied = "slainvokedid";
	/// <summary><para>Lead</para>
	/// <para>leadid</para></summary>
	public const string LeadId = "leadid";
	/// <summary><para>Lead Source</para>
	/// <para>leadsourcecode</para></summary>
	public const string LeadSource = "leadsourcecode";
	/// <summary><para>Marketing Material</para>
	/// <para>donotsendmm</para></summary>
	public const string MarketingMaterial = "donotsendmm";
	/// <summary><para>Master ID</para>
	/// <para>masterid</para></summary>
	public const string MasterID = "masterid";
	/// <summary><para>Merged</para>
	/// <para>merged</para></summary>
	public const string Merged = "merged";
	/// <summary><para>Middle Name</para>
	/// <para>middlename</para></summary>
	public const string MiddleName = "middlename";
	/// <summary><para>Mobile Phone</para>
	/// <para>mobilephone</para></summary>
	public const string MobilePhone = "mobilephone";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>Name</para>
	/// <para>fullname</para></summary>
	public const string Name = "fullname";
	/// <summary><para>Need</para>
	/// <para>need</para></summary>
	public const string Need = "need";
	/// <summary><para>No. of Employees</para>
	/// <para>numberofemployees</para></summary>
	public const string No_OfEmployees = "numberofemployees";
	/// <summary><para>On Hold Time (Minutes)</para>
	/// <para>onholdtime</para></summary>
	public const string OnHoldTime_Minutes = "onholdtime";
	/// <summary><para>Originating Case</para>
	/// <para>originatingcaseid</para></summary>
	public const string OriginatingCase = "originatingcaseid";
	/// <summary><para>Other Phone</para>
	/// <para>telephone3</para></summary>
	public const string OtherPhone = "telephone3";
	/// <summary><para>Owner</para>
	/// <para>ownerid</para></summary>
	public const string Owner = "ownerid";
	/// <summary><para>Owning Business Unit</para>
	/// <para>owningbusinessunit</para></summary>
	public const string OwningBusinessUnit = "owningbusinessunit";
	/// <summary><para>Owning Team</para>
	/// <para>owningteam</para></summary>
	public const string OwningTeam = "owningteam";
	/// <summary><para>Owning User</para>
	/// <para>owninguser</para></summary>
	public const string OwningUser = "owninguser";
	/// <summary><para>Pager</para>
	/// <para>pager</para></summary>
	public const string Pager = "pager";
	/// <summary><para>Parent Account for lead</para>
	/// <para>parentaccountid</para></summary>
	public const string ParentAccountForLead = "parentaccountid";
	/// <summary><para>Parent Contact for lead</para>
	/// <para>parentcontactid</para></summary>
	public const string ParentContactForLead = "parentcontactid";
	/// <summary><para>Participates in Workflow</para>
	/// <para>participatesinworkflow</para></summary>
	public const string ParticipatesInWorkflow = "participatesinworkflow";
	/// <summary><para>Preferred Method of Contact</para>
	/// <para>preferredcontactmethodcode</para></summary>
	public const string PreferredMethodOfContact = "preferredcontactmethodcode";
	/// <summary><para>Priority</para>
	/// <para>prioritycode</para></summary>
	public const string Priority = "prioritycode";
	/// <summary><para>Process</para>
	/// <para>processid</para></summary>
	public const string Process = "processid";
	/// <summary><para>Process Stage</para>
	/// <para>stageid</para></summary>
	public const string ProcessStage = "stageid";
	/// <summary><para>Purchase Process</para>
	/// <para>purchaseprocess</para></summary>
	public const string PurchaseProcess = "purchaseprocess";
	/// <summary><para>Purchase Timeframe</para>
	/// <para>purchasetimeframe</para></summary>
	public const string PurchaseTimeframe = "purchasetimeframe";
	/// <summary><para>Qualification Comments</para>
	/// <para>qualificationcomments</para></summary>
	public const string QualificationComments = "qualificationcomments";
	/// <summary><para>Qualifying Opportunity</para>
	/// <para>qualifyingopportunityid</para></summary>
	public const string QualifyingOpportunity = "qualifyingopportunityid";
	/// <summary><para>Rating</para>
	/// <para>leadqualitycode</para></summary>
	public const string Rating = "leadqualitycode";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string RecordCreatedOn = "overriddencreatedon";
	/// <summary><para>Related Campaign Response</para>
	/// <para>relatedobjectid</para></summary>
	public const string RelatedCampaignResponse = "relatedobjectid";
	/// <summary><para>Sales Stage</para>
	/// <para>salesstage</para></summary>
	public const string SalesStage = "salesstage";
	/// <summary><para>Sales Stage Code</para>
	/// <para>salesstagecode</para></summary>
	public const string SalesStageCode = "salesstagecode";
	/// <summary><para>Salutation</para>
	/// <para>salutation</para></summary>
	public const string Salutation = "salutation";
	/// <summary><para>Schedule Follow Up (Prospect)</para>
	/// <para>schedulefollowup_prospect</para></summary>
	public const string ScheduleFollowUp_Prospect = "schedulefollowup_prospect";
	/// <summary><para>Schedule Follow Up (Qualify)</para>
	/// <para>schedulefollowup_qualify</para></summary>
	public const string ScheduleFollowUp_Qualify = "schedulefollowup_qualify";
	/// <summary><para>SIC Code</para>
	/// <para>sic</para></summary>
	public const string SICCode = "sic";
	/// <summary><para>SLA</para>
	/// <para>slaid</para></summary>
	public const string SLA = "slaid";
	/// <summary><para>Source Campaign</para>
	/// <para>campaignid</para></summary>
	public const string SourceCampaign = "campaignid";
	/// <summary><para>State/Province</para>
	/// <para>address1_stateorprovince</para></summary>
	public const string State_Province = "address1_stateorprovince";
	/// <summary><para>Status</para>
	/// <para>statecode</para></summary>
	public const string Status = "statecode";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string StatusReason = "statuscode";
	/// <summary><para>Street 1</para>
	/// <para>address1_line1</para></summary>
	public const string Street1 = "address1_line1";
	/// <summary><para>Street 2</para>
	/// <para>address1_line2</para></summary>
	public const string Street2 = "address1_line2";
	/// <summary><para>Street 3</para>
	/// <para>address1_line3</para></summary>
	public const string Street3 = "address1_line3";
	/// <summary><para>Time Spent by me</para>
	/// <para>timespentbymeonemailandmeetings</para></summary>
	public const string TimeSpentByMe = "timespentbymeonemailandmeetings";
	/// <summary><para>Time Zone Rule Version Number</para>
	/// <para>timezoneruleversionnumber</para></summary>
	public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
	/// <summary><para>Topic</para>
	/// <para>subject</para></summary>
	public const string Topic = "subject";
	/// <summary><para>Traversed Path</para>
	/// <para>traversedpath</para></summary>
	public const string TraversedPath = "traversedpath";
	/// <summary><para>Type</para>
	/// <para>msdyn_ordertype</para></summary>
	public const string Type = "msdyn_ordertype";
	/// <summary><para>UTC Conversion Time Zone Code</para>
	/// <para>utcconversiontimezonecode</para></summary>
	public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
	/// <summary><para>Website</para>
	/// <para>websiteurl</para></summary>
	public const string Website = "websiteurl";
	/// <summary><para>Yomi Company Name</para>
	/// <para>yomicompanyname</para></summary>
	public const string YomiCompanyName = "yomicompanyname";
	/// <summary><para>Yomi First Name</para>
	/// <para>yomifirstname</para></summary>
	public const string YomiFirstName = "yomifirstname";
	/// <summary><para>Yomi Full Name</para>
	/// <para>yomifullname</para></summary>
	public const string YomiFullName = "yomifullname";
	/// <summary><para>Yomi Last Name</para>
	/// <para>yomilastname</para></summary>
	public const string YomiLastName = "yomilastname";
	/// <summary><para>Yomi Middle Name</para>
	/// <para>yomimiddlename</para></summary>
	public const string YomiMiddleName = "yomimiddlename";
	/// <summary><para>ZIP/Postal Code</para>
	/// <para>address1_postalcode</para></summary>
	public const string ZIP_PostalCode = "address1_postalcode";
}

    }
}

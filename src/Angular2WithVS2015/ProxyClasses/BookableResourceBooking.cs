// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("bookableresourcebooking")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class BookableResourceBooking : BaseProxyClass
    {
        public new const string LogicalName = "bookableresourcebooking";
        public const int ObjectTypeCode = 1145;
        public const string PrimaryIdAttribute = "bookableresourcebookingid";
        public const string PrimaryNameAttribute = "name";
        
        static BookableResourceBooking()
        {
            BaseProxyClass.RegisterProxyType(typeof(BookableResourceBooking), "bookableresourcebooking");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public BookableResourceBooking() : base(new Entity("bookableresourcebooking")) { }
        public BookableResourceBooking(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<BookableResourceBooking>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}
///<summary>
///<para>Logical Name: owneridtype</para>
///</summary>
[AttributeLogicalNameAttribute("owneridtype")]
public string OwnerIdType
{
	get { return this.GetPropertyValue<string>("owneridtype"); }
	set { this.SetPropertyValue<string>("owneridtype", value, "OwnerIdType"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_projectidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_projectidname")]
public string Msdyn_projectidName
{
	get { return this.GetPropertyValue<string>("msdyn_projectidname"); }
}
///<summary>
///<para>Logical Name: owneridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridname")]
public string OwnerIdName
{
	get { return this.GetPropertyValue<string>("owneridname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_resourcerequirementname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_resourcerequirementname")]
public string Msdyn_ResourceRequirementName
{
	get { return this.GetPropertyValue<string>("msdyn_resourcerequirementname"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_bookingsetupmetadataidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_bookingsetupmetadataidname")]
public string Msdyn_BookingSetupMetadataIdName
{
	get { return this.GetPropertyValue<string>("msdyn_bookingsetupmetadataidname"); }
}
///<summary>
///<para>Logical Name: headername</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("headername")]
public string HeaderName
{
	get { return this.GetPropertyValue<string>("headername"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_projectteamidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_projectteamidname")]
public string Msdyn_projectteamidName
{
	get { return this.GetPropertyValue<string>("msdyn_projectteamidname"); }
}
///<summary>
///<para>Logical Name: owneridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridyominame")]
public string OwnerIdYomiName
{
	get { return this.GetPropertyValue<string>("owneridyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_workordername</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workordername")]
public string Msdyn_WorkOrderName
{
	get { return this.GetPropertyValue<string>("msdyn_workordername"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_agreementbookingdatename</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_agreementbookingdatename")]
public string Msdyn_AgreementBookingDateName
{
	get { return this.GetPropertyValue<string>("msdyn_agreementbookingdatename"); }
}
///<summary>
///<para>Logical Name: msdyn_timegroupdetailselectedname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_timegroupdetailselectedname")]
public string Msdyn_TimeGroupDetailSelectedName
{
	get { return this.GetPropertyValue<string>("msdyn_timegroupdetailselectedname"); }
}
///<summary>
///<para>Logical Name: resourcename</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("resourcename")]
public string ResourceName
{
	get { return this.GetPropertyValue<string>("resourcename"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyidname")]
public string TransactionCurrencyIdName
{
	get { return this.GetPropertyValue<string>("transactioncurrencyidname"); }
}
///<summary>
///<para>Logical Name: bookingstatusname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("bookingstatusname")]
public string BookingStatusName
{
	get { return this.GetPropertyValue<string>("bookingstatusname"); }
}
///<summary>
///<para>Logical Name: msdyn_resourcecategoryidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_resourcecategoryidname")]
public string Msdyn_resourcecategoryidName
{
	get { return this.GetPropertyValue<string>("msdyn_resourcecategoryidname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_resourcegroupname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_resourcegroupname")]
public string Msdyn_ResourceGroupName
{
	get { return this.GetPropertyValue<string>("msdyn_resourcegroupname"); }
}
///<summary>
///<para>Logical Name: msdyn_actualarrivaltime</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_actualarrivaltime")]
public DateTime? ActualArrivalTime
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_actualarrivaltime"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_actualarrivaltime", value, "ActualArrivalTime"); }
}
///<summary>
///<para>Logical Name: msdyn_actualtravelduration</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_actualtravelduration")]
public int? ActualTravelDuration
{
	get { return this.GetPropertyValue<int?>("msdyn_actualtravelduration"); }
	set { this.SetPropertyValue("msdyn_actualtravelduration", (int?)value, (int)0, (int)2147483647, "ActualTravelDuration"); }
}
///<summary>
///<para>Logical Name: msdyn_agreementbookingdate</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_agreementbookingdate")]
public EntityReference AgreementBookingDate
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_agreementbookingdate"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_agreementbookingdate", value, "AgreementBookingDate"); }
}
///<summary>
///<para>Logical Name: msdyn_allowoverlapping</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_allowoverlapping")]
public bool? AllowOverlapping
{
	get { return this.GetPropertyValue<bool?>("msdyn_allowoverlapping"); }
	set { this.SetPropertyValue<bool?>("msdyn_allowoverlapping", value, "AllowOverlapping"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: bookableresourcebookingid</para>
///</summary>
[AttributeLogicalNameAttribute("bookableresourcebookingid")]
public Guid BookableResourceBookingId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
/// <summary>
///Logical Name: msdyn_bookingmethod
/// </summary>
[AttributeLogicalNameAttribute("msdyn_bookingmethod")]
public eResourceScheduleSource? BookingMethod
{
	get
	{
		if (BookingMethod_OptionSetValue != null) { return (eResourceScheduleSource)BookingMethod_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.BookingMethod_OptionSetValue = new OptionSetValue((int)value); }
		else this.BookingMethod_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_bookingmethod</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_bookingmethod")]
public OptionSetValue BookingMethod_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_bookingmethod"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_bookingmethod", value, "BookingMethod_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string BookingMethod_Text(IOrganizationService Service)
{
	return this.BookingMethod_OptionSetValue.GetOptionSetText(Service, this, "msdyn_bookingmethod");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string BookingMethod_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.BookingMethod_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_bookingsetupmetadataid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_bookingsetupmetadataid")]
public EntityReference BookingSetupMetadata
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_bookingsetupmetadataid"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_bookingsetupmetadataid", value, "BookingSetupMetadata"); }
}
///<summary>
///<para>Logical Name: bookingstatus</para>
///</summary>
[AttributeLogicalNameAttribute("bookingstatus")]
public EntityReference BookingStatus
{
	get { return this.GetPropertyValue<EntityReference>("bookingstatus"); }
	set { this.SetPropertyValue<EntityReference>("bookingstatus", value, "BookingStatus"); }
}
/// <summary>
///Logical Name: bookingtype
/// </summary>
[AttributeLogicalNameAttribute("bookingtype")]
public eBookingType? BookingType
{
	get
	{
		if (BookingType_OptionSetValue != null) { return (eBookingType)BookingType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.BookingType_OptionSetValue = new OptionSetValue((int)value); }
		else this.BookingType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: bookingtype</para>
///</summary>
[AttributeLogicalNameAttribute("bookingtype")]
public OptionSetValue BookingType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("bookingtype"); }
	set { this.SetPropertyValue<OptionSetValue>("bookingtype", value, "BookingType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string BookingType_Text(IOrganizationService Service)
{
	return this.BookingType_OptionSetValue.GetOptionSetText(Service, this, "bookingtype");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string BookingType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.BookingType_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_cascadecrewchanges</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_cascadecrewchanges")]
public bool? CascadeCrewChanges
{
	get { return this.GetPropertyValue<bool?>("msdyn_cascadecrewchanges"); }
	set { this.SetPropertyValue<bool?>("msdyn_cascadecrewchanges", value, "CascadeCrewChanges"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyid</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyid")]
public EntityReference Currency
{
	get { return this.GetPropertyValue<EntityReference>("transactioncurrencyid"); }
	set { this.SetPropertyValue<EntityReference>("transactioncurrencyid", value, "Currency"); }
}
///<summary>
///<para>Logical Name: duration</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("duration")]
public int? Duration
{
	get { return this.GetPropertyValue<int?>("duration"); }
	set { this.SetPropertyValue("duration", (int?)value, (int)0, (int)2147483647, "Duration"); }
}
///<summary>
///<para>Logical Name: endtime</para>
///</summary>
[AttributeLogicalNameAttribute("endtime")]
public DateTime? EndTime
{
	get { return this.GetPropertyValue<DateTime?>("endtime"); }
	set { this.SetPropertyValue<DateTime?>("endtime", value, "EndTime"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatedarrivaltime</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatedarrivaltime")]
public DateTime? EstimatedArrivalTime
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_estimatedarrivaltime"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_estimatedarrivaltime", value, "EstimatedArrivalTime"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatedtravelduration</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatedtravelduration")]
public int? EstimatedTravelDuration
{
	get { return this.GetPropertyValue<int?>("msdyn_estimatedtravelduration"); }
	set { this.SetPropertyValue("msdyn_estimatedtravelduration", (int?)value, (int)0, (int)2147483647, "EstimatedTravelDuration"); }
}
///<summary>
///<para>Logical Name: exchangerate</para>
///<para>Minimum Value: 0.0000000001</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 10</para>
///</summary>
[AttributeLogicalNameAttribute("exchangerate")]
public decimal? ExchangeRate
{
	get { return this.GetPropertyValue<decimal?>("exchangerate"); }
}
///<summary>
///<para>Logical Name: header</para>
///</summary>
[AttributeLogicalNameAttribute("header")]
public EntityReference Header
{
	get { return this.GetPropertyValue<EntityReference>("header"); }
	set { this.SetPropertyValue<EntityReference>("header", value, "Header"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? ImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "ImportSequenceNumber"); }
}
///<summary>
///<para>Logical Name: msdyn_internalflags</para>
///<para>Max Length: 1048576 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_internalflags")]
public string InternalFlags
{
	get { return this.GetPropertyValue<string>("msdyn_internalflags"); }
	set { this.SetPropertyValue("msdyn_internalflags", value, 1048576, "InternalFlags"); }
}
///<summary>
///<para>Logical Name: msdyn_latitude</para>
///<para>Minimum Value: -90</para>
///<para>Maximum Value: 90</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_latitude")]
public double? Latitude
{
	get { return this.GetPropertyValue<double?>("msdyn_latitude"); }
	set { this.SetPropertyValue("msdyn_latitude", (double?)value, (double)-90, (double)90, "Latitude"); }
}
///<summary>
///<para>Logical Name: msdyn_longitude</para>
///<para>Minimum Value: -180</para>
///<para>Maximum Value: 180</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_longitude")]
public double? Longitude
{
	get { return this.GetPropertyValue<double?>("msdyn_longitude"); }
	set { this.SetPropertyValue("msdyn_longitude", (double?)value, (double)-180, (double)180, "Longitude"); }
}
///<summary>
///<para>Logical Name: msdyn_milestraveled</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_milestraveled")]
public double? MilesTraveled
{
	get { return this.GetPropertyValue<double?>("msdyn_milestraveled"); }
	set { this.SetPropertyValue("msdyn_milestraveled", (double?)value, (double)0, (double)1000000000, "MilesTraveled"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: name</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("name")]
public string Name
{
	get { return this.GetPropertyValue<string>("name"); }
	set { this.SetPropertyValue("name", value, 100, "Name"); }
}
///<summary>
///<para>Logical Name: ownerid</para>
///</summary>
[AttributeLogicalNameAttribute("ownerid")]
public EntityReference Owner
{
	get { return this.GetPropertyValue<EntityReference>("ownerid"); }
	set { this.SetPropertyValue<EntityReference>("ownerid", value, "Owner"); }
}
///<summary>
///<para>Logical Name: owningbusinessunit</para>
///</summary>
[AttributeLogicalNameAttribute("owningbusinessunit")]
public EntityReference OwningBusinessUnit
{
	get { return this.GetPropertyValue<EntityReference>("owningbusinessunit"); }
}
///<summary>
///<para>Logical Name: owningteam</para>
///</summary>
[AttributeLogicalNameAttribute("owningteam")]
public EntityReference OwningTeam
{
	get { return this.GetPropertyValue<EntityReference>("owningteam"); }
}
///<summary>
///<para>Logical Name: owninguser</para>
///</summary>
[AttributeLogicalNameAttribute("owninguser")]
public EntityReference OwningUser
{
	get { return this.GetPropertyValue<EntityReference>("owninguser"); }
}
///<summary>
///<para>Logical Name: msdyn_preventtimestampcreation</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_preventtimestampcreation")]
public bool? PreventTimestampCreation
{
	get { return this.GetPropertyValue<bool?>("msdyn_preventtimestampcreation"); }
	set { this.SetPropertyValue<bool?>("msdyn_preventtimestampcreation", value, "PreventTimestampCreation"); }
}
///<summary>
///<para>Logical Name: processid</para>
///</summary>
[AttributeLogicalNameAttribute("processid")]
public Guid Process
{
	get { return this.GetPropertyValue<Guid>("processid"); }
	set { this.SetPropertyValue<Guid>("processid", value, "Process"); }
}
///<summary>
///<para>Logical Name: stageid</para>
///</summary>
[AttributeLogicalNameAttribute("stageid")]
public Guid ProcessStage
{
	get { return this.GetPropertyValue<Guid>("stageid"); }
	set { this.SetPropertyValue<Guid>("stageid", value, "ProcessStage"); }
}
///<summary>
///<para>Logical Name: msdyn_projectid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_projectid")]
public EntityReference Project
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_projectid"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_projectid", value, "Project"); }
}
///<summary>
///<para>Logical Name: msdyn_projectteamid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_projectteamid")]
public EntityReference ProjectTeamMember
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_projectteamid"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_projectteamid", value, "ProjectTeamMember"); }
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? RecordCreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "RecordCreatedOn"); }
}
///<summary>
///<para>Logical Name: resource</para>
///</summary>
[AttributeLogicalNameAttribute("resource")]
public EntityReference Resource
{
	get { return this.GetPropertyValue<EntityReference>("resource"); }
	set { this.SetPropertyValue<EntityReference>("resource", value, "Resource"); }
}
///<summary>
///<para>Logical Name: msdyn_resourcecategoryid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_resourcecategoryid")]
public EntityReference ResourceCategory
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_resourcecategoryid"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_resourcecategoryid", value, "ResourceCategory"); }
}
///<summary>
///<para>Logical Name: msdyn_resourcegroup</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_resourcegroup")]
public EntityReference ResourceGroup
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_resourcegroup"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_resourcegroup", value, "ResourceGroup"); }
}
///<summary>
///<para>Logical Name: msdyn_resourcerequirement</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_resourcerequirement")]
public EntityReference ResourceRequirement
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_resourcerequirement"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_resourcerequirement", value, "ResourceRequirement"); }
}
///<summary>
///<para>Logical Name: msdyn_signature</para>
///<para>Max Length: 15000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_signature")]
public string Signature
{
	get { return this.GetPropertyValue<string>("msdyn_signature"); }
	set { this.SetPropertyValue("msdyn_signature", value, 15000, "Signature"); }
}
///<summary>
///<para>Logical Name: msdyn_slottext</para>
///<para>Max Length: 8000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_slottext")]
public string SlotText
{
	get { return this.GetPropertyValue<string>("msdyn_slottext"); }
	set { this.SetPropertyValue("msdyn_slottext", value, 8000, "SlotText"); }
}
///<summary>
///<para>Logical Name: starttime</para>
///</summary>
[AttributeLogicalNameAttribute("starttime")]
public DateTime? StartTime
{
	get { return this.GetPropertyValue<DateTime?>("starttime"); }
	set { this.SetPropertyValue<DateTime?>("starttime", value, "StartTime"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eStatus? Status
{
	get
	{
		if (Status_OptionSetValue != null) { return (eStatus)Status_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Status_OptionSetValue = new OptionSetValue((int)value); }
		else this.Status_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue Status_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
	set { this.SetPropertyValue<OptionSetValue>("statecode", value, "Status_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Status_Text(IOrganizationService Service)
{
	return this.Status_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Status_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Status_OptionSetValue.Value);
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? StatusReason
{
	get
	{
		if (StatusReason_OptionSetValue != null) { return (eStatusReason)StatusReason_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StatusReason_OptionSetValue = new OptionSetValue((int)value); }
		else this.StatusReason_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue StatusReason_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "StatusReason_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string StatusReason_Text(IOrganizationService Service)
{
	return this.StatusReason_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string StatusReason_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.StatusReason_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_timegroupdetailselected</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_timegroupdetailselected")]
public EntityReference TimeGroupDetailSelected
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_timegroupdetailselected"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_timegroupdetailselected", value, "TimeGroupDetailSelected"); }
}
///<summary>
///<para>Logical Name: timezoneruleversionnumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("timezoneruleversionnumber")]
public int? TimeZoneRuleVersionNumber
{
	get { return this.GetPropertyValue<int?>("timezoneruleversionnumber"); }
	set { this.SetPropertyValue("timezoneruleversionnumber", (int?)value, (int)-1, (int)2147483647, "TimeZoneRuleVersionNumber"); }
}
///<summary>
///<para>Logical Name: msdyn_totalbillableduration</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totalbillableduration")]
public int? TotalBillableDuration
{
	get { return this.GetPropertyValue<int?>("msdyn_totalbillableduration"); }
	set { this.SetPropertyValue("msdyn_totalbillableduration", (int?)value, (int)0, (int)2147483647, "TotalBillableDuration"); }
}
///<summary>
///<para>Logical Name: msdyn_totalbreakduration</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totalbreakduration")]
public int? TotalBreakDuration
{
	get { return this.GetPropertyValue<int?>("msdyn_totalbreakduration"); }
	set { this.SetPropertyValue("msdyn_totalbreakduration", (int?)value, (int)0, (int)2147483647, "TotalBreakDuration"); }
}
///<summary>
///<para>Logical Name: msdyn_totalcost</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalCost
{
	get
	{
		if (TotalCostMoney != null) { return TotalCostMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.TotalCostMoney = new Money(value.Value); }
		else this.TotalCostMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_totalcost</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totalcost")]
public Money TotalCostMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_totalcost"); }
	set { this.SetPropertyValue("msdyn_totalcost", (Money)value, (decimal)0, (decimal)1000000000, "TotalCostMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_totalcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalCost_Base
{
	get
	{
		if (TotalCost_BaseMoney != null) { return TotalCost_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_totalcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totalcost_base")]
public Money TotalCost_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_totalcost_base"); }
}
///<summary>
///<para>Logical Name: msdyn_totaldurationinprogress</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totaldurationinprogress")]
public int? TotalDurationInProgress
{
	get { return this.GetPropertyValue<int?>("msdyn_totaldurationinprogress"); }
	set { this.SetPropertyValue("msdyn_totaldurationinprogress", (int?)value, (int)0, (int)2147483647, "TotalDurationInProgress"); }
}
///<summary>
///<para>Logical Name: msdyn_traveltimerescheduling</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_traveltimerescheduling")]
public bool? TravelTimeRescheduling_Deprecated
{
	get { return this.GetPropertyValue<bool?>("msdyn_traveltimerescheduling"); }
	set { this.SetPropertyValue<bool?>("msdyn_traveltimerescheduling", value, "TravelTimeRescheduling_Deprecated"); }
}
///<summary>
///<para>Logical Name: traversedpath</para>
///<para>Max Length: 1250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("traversedpath")]
public string TraversedPath
{
	get { return this.GetPropertyValue<string>("traversedpath"); }
	set { this.SetPropertyValue("traversedpath", value, 1250, "TraversedPath"); }
}
///<summary>
///<para>Logical Name: utcconversiontimezonecode</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utcconversiontimezonecode")]
public int? UTCConversionTimeZoneCode
{
	get { return this.GetPropertyValue<int?>("utcconversiontimezonecode"); }
	set { this.SetPropertyValue("utcconversiontimezonecode", (int?)value, (int)-1, (int)2147483647, "UTCConversionTimeZoneCode"); }
}
///<summary>
///<para>Logical Name: msdyn_workorder</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workorder")]
public EntityReference WorkOrder
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_workorder"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_workorder", value, "WorkOrder"); }
}


        /// <summary>
/// <para><b>Activity (Regarding)</b></para>
/// <para>Schema Name: bookableresourcebooking_ActivityPointers</para>
/// </summary>
public List<Activity> GetActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Activity>(Service, this.Id, "activitypointer", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Activity (Regarding)</b></para>
/// <para>Schema Name: bookableresourcebooking_ActivityPointers</para>
/// </summary>
public List<Activity> GetActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Activity>(Service, this.Id, "activitypointer", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: bookableresourcebooking_Annotations</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: bookableresourcebooking_Annotations</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Appointment (Regarding)</b></para>
/// <para>Schema Name: bookableresourcebooking_Appointments</para>
/// </summary>
public List<Appointment> GetAppointments_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Appointment>(Service, this.Id, "appointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Appointment (Regarding)</b></para>
/// <para>Schema Name: bookableresourcebooking_Appointments</para>
/// </summary>
public List<Appointment> GetAppointments_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Appointment>(Service, this.Id, "appointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: bookableresourcebooking_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: bookableresourcebooking_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: bookableresourcebooking_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: bookableresourcebooking_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: bookableresourcebooking_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: bookableresourcebooking_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: bookableresourcebooking_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: bookableresourcebooking_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>Email (Regarding)</b></para>
/// <para>Schema Name: bookableresourcebooking_Emails</para>
/// </summary>
public List<Email> GetEmailMessages_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Email (Regarding)</b></para>
/// <para>Schema Name: bookableresourcebooking_Emails</para>
/// </summary>
public List<Email> GetEmailMessages_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Fax (Regarding)</b></para>
/// <para>Schema Name: bookableresourcebooking_Faxes</para>
/// </summary>
public List<Fax> GetFaxes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fax>(Service, this.Id, "fax", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Fax (Regarding)</b></para>
/// <para>Schema Name: bookableresourcebooking_Faxes</para>
/// </summary>
public List<Fax> GetFaxes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fax>(Service, this.Id, "fax", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Letter (Regarding)</b></para>
/// <para>Schema Name: bookableresourcebooking_Letters</para>
/// </summary>
public List<Letter> GetLetters_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Letter>(Service, this.Id, "letter", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Letter (Regarding)</b></para>
/// <para>Schema Name: bookableresourcebooking_Letters</para>
/// </summary>
public List<Letter> GetLetters_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Letter>(Service, this.Id, "letter", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: bookableresourcebooking_MailboxTrackingFolders</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: bookableresourcebooking_MailboxTrackingFolders</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Approval (Regarding)</b></para>
/// <para>Schema Name: bookableresourcebooking_msdyn_approvals</para>
/// </summary>
public List<Approval> GetApprovals_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Approval>(Service, this.Id, "msdyn_approval", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Approval (Regarding)</b></para>
/// <para>Schema Name: bookableresourcebooking_msdyn_approvals</para>
/// </summary>
public List<Approval> GetApprovals_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Approval>(Service, this.Id, "msdyn_approval", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BookingAlert (Regarding)</b></para>
/// <para>Schema Name: bookableresourcebooking_msdyn_bookingalerts</para>
/// </summary>
public List<BookingAlert> GetBookingAlerts_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlert>(Service, this.Id, "msdyn_bookingalert", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BookingAlert (Regarding)</b></para>
/// <para>Schema Name: bookableresourcebooking_msdyn_bookingalerts</para>
/// </summary>
public List<BookingAlert> GetBookingAlerts_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlert>(Service, this.Id, "msdyn_bookingalert", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BookingJournal (Booking)</b></para>
/// <para>Schema Name: msdyn_bookableresourcebooking_msdyn_bookingjournal_Booking</para>
/// </summary>
public List<BookingJournal> GetBookingJournal_Booking (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingJournal>(Service, this.Id, "msdyn_bookingjournal", "msdyn_booking", Columns); }
/// <summary>
/// <para><b>BookingJournal (Booking)</b></para>
/// <para>Schema Name: msdyn_bookableresourcebooking_msdyn_bookingjournal_Booking</para>
/// </summary>
public List<BookingJournal> GetBookingJournal_Booking (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingJournal>(Service, this.Id, "msdyn_bookingjournal", "msdyn_booking", Columns); }
/// <summary>
/// <para><b>BookingTimestamp (Booking)</b></para>
/// <para>Schema Name: msdyn_bookableresourcebooking_msdyn_bookingtimestamp_Booking</para>
/// </summary>
public List<BookingTimestamp> GetBookingTimestamps_Booking (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingTimestamp>(Service, this.Id, "msdyn_bookingtimestamp", "msdyn_booking", Columns); }
/// <summary>
/// <para><b>BookingTimestamp (Booking)</b></para>
/// <para>Schema Name: msdyn_bookableresourcebooking_msdyn_bookingtimestamp_Booking</para>
/// </summary>
public List<BookingTimestamp> GetBookingTimestamps_Booking (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingTimestamp>(Service, this.Id, "msdyn_bookingtimestamp", "msdyn_booking", Columns); }
/// <summary>
/// <para><b>PurchaseOrder (Booking)</b></para>
/// <para>Schema Name: msdyn_bookableresourcebooking_msdyn_purchaseorder_Booking</para>
/// </summary>
public List<PurchaseOrder> GetPurchaseOrders_Booking (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrder>(Service, this.Id, "msdyn_purchaseorder", "msdyn_booking", Columns); }
/// <summary>
/// <para><b>PurchaseOrder (Booking)</b></para>
/// <para>Schema Name: msdyn_bookableresourcebooking_msdyn_purchaseorder_Booking</para>
/// </summary>
public List<PurchaseOrder> GetPurchaseOrders_Booking (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrder>(Service, this.Id, "msdyn_purchaseorder", "msdyn_booking", Columns); }
/// <summary>
/// <para><b>PurchaseOrderProduct (Associate To Booking)</b></para>
/// <para>Schema Name: msdyn_bookableresourcebooking_msdyn_purchaseorderproduct_AssociateToBooking</para>
/// </summary>
public List<PurchaseOrderProduct> GetPurchaseOrderProducts_AssociateToBooking (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderProduct>(Service, this.Id, "msdyn_purchaseorderproduct", "msdyn_associatetobooking", Columns); }
/// <summary>
/// <para><b>PurchaseOrderProduct (Associate To Booking)</b></para>
/// <para>Schema Name: msdyn_bookableresourcebooking_msdyn_purchaseorderproduct_AssociateToBooking</para>
/// </summary>
public List<PurchaseOrderProduct> GetPurchaseOrderProducts_AssociateToBooking (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderProduct>(Service, this.Id, "msdyn_purchaseorderproduct", "msdyn_associatetobooking", Columns); }
/// <summary>
/// <para><b>PurchaseOrderReceiptProduct (Associate To Booking)</b></para>
/// <para>Schema Name: msdyn_bookableresourcebooking_msdyn_purchaseorderreceiptproduct_AssociateToBooking</para>
/// </summary>
public List<PurchaseOrderReceiptProduct> GetPurchaseOrderReceiptProducts_AssociateToBooking (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderReceiptProduct>(Service, this.Id, "msdyn_purchaseorderreceiptproduct", "msdyn_associatetobooking", Columns); }
/// <summary>
/// <para><b>PurchaseOrderReceiptProduct (Associate To Booking)</b></para>
/// <para>Schema Name: msdyn_bookableresourcebooking_msdyn_purchaseorderreceiptproduct_AssociateToBooking</para>
/// </summary>
public List<PurchaseOrderReceiptProduct> GetPurchaseOrderReceiptProducts_AssociateToBooking (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderReceiptProduct>(Service, this.Id, "msdyn_purchaseorderreceiptproduct", "msdyn_associatetobooking", Columns); }
/// <summary>
/// <para><b>RTV (Booking)</b></para>
/// <para>Schema Name: msdyn_bookableresourcebooking_msdyn_rtv_Booking</para>
/// </summary>
public List<RTV> GetRTVs_Booking (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTV>(Service, this.Id, "msdyn_rtv", "msdyn_booking", Columns); }
/// <summary>
/// <para><b>RTV (Booking)</b></para>
/// <para>Schema Name: msdyn_bookableresourcebooking_msdyn_rtv_Booking</para>
/// </summary>
public List<RTV> GetRTVs_Booking (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTV>(Service, this.Id, "msdyn_rtv", "msdyn_booking", Columns); }
/// <summary>
/// <para><b>WorkOrderProduct (Booking)</b></para>
/// <para>Schema Name: msdyn_bookableresourcebooking_msdyn_workorderproduct_Booking</para>
/// </summary>
public List<WorkOrderProduct> GetWorkOrderProducts_Booking (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderProduct>(Service, this.Id, "msdyn_workorderproduct", "msdyn_booking", Columns); }
/// <summary>
/// <para><b>WorkOrderProduct (Booking)</b></para>
/// <para>Schema Name: msdyn_bookableresourcebooking_msdyn_workorderproduct_Booking</para>
/// </summary>
public List<WorkOrderProduct> GetWorkOrderProducts_Booking (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderProduct>(Service, this.Id, "msdyn_workorderproduct", "msdyn_booking", Columns); }
/// <summary>
/// <para><b>WorkOrderService (Booking)</b></para>
/// <para>Schema Name: msdyn_bookableresourcebooking_msdyn_workorderservice_Booking</para>
/// </summary>
public List<WorkOrderService> GetWorkOrderServices_Booking (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderService>(Service, this.Id, "msdyn_workorderservice", "msdyn_booking", Columns); }
/// <summary>
/// <para><b>WorkOrderService (Booking)</b></para>
/// <para>Schema Name: msdyn_bookableresourcebooking_msdyn_workorderservice_Booking</para>
/// </summary>
public List<WorkOrderService> GetWorkOrderServices_Booking (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderService>(Service, this.Id, "msdyn_workorderservice", "msdyn_booking", Columns); }
/// <summary>
/// <para><b>WorkOrderServiceTask (Booking)</b></para>
/// <para>Schema Name: msdyn_bookableresourcebooking_msdyn_workorderservicetask_Booking</para>
/// </summary>
public List<WorkOrderServiceTask> GetWorkOrderServiceTasks_Booking (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderServiceTask>(Service, this.Id, "msdyn_workorderservicetask", "msdyn_booking", Columns); }
/// <summary>
/// <para><b>WorkOrderServiceTask (Booking)</b></para>
/// <para>Schema Name: msdyn_bookableresourcebooking_msdyn_workorderservicetask_Booking</para>
/// </summary>
public List<WorkOrderServiceTask> GetWorkOrderServiceTasks_Booking (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderServiceTask>(Service, this.Id, "msdyn_workorderservicetask", "msdyn_booking", Columns); }
/// <summary>
/// <para><b>PhoneCall (Regarding)</b></para>
/// <para>Schema Name: bookableresourcebooking_PhoneCalls</para>
/// </summary>
public List<PhoneCall> GetPhoneCalls_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneCall>(Service, this.Id, "phonecall", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PhoneCall (Regarding)</b></para>
/// <para>Schema Name: bookableresourcebooking_PhoneCalls</para>
/// </summary>
public List<PhoneCall> GetPhoneCalls_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneCall>(Service, this.Id, "phonecall", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: bookableresourcebooking_PrincipalObjectAttributeAccess</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: bookableresourcebooking_PrincipalObjectAttributeAccess</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: bookableresourcebooking_ProcessSession</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: bookableresourcebooking_ProcessSession</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>RecurringAppointment (Regarding)</b></para>
/// <para>Schema Name: bookableresourcebooking_RecurringAppointmentMasters</para>
/// </summary>
public List<RecurringAppointment> GetRecurringAppointments_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecurringAppointment>(Service, this.Id, "recurringappointmentmaster", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>RecurringAppointment (Regarding)</b></para>
/// <para>Schema Name: bookableresourcebooking_RecurringAppointmentMasters</para>
/// </summary>
public List<RecurringAppointment> GetRecurringAppointments_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecurringAppointment>(Service, this.Id, "recurringappointmentmaster", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ServiceActivity (Regarding)</b></para>
/// <para>Schema Name: bookableresourcebooking_ServiceAppointments</para>
/// </summary>
public List<ServiceActivity> GetServiceActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceActivity>(Service, this.Id, "serviceappointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ServiceActivity (Regarding)</b></para>
/// <para>Schema Name: bookableresourcebooking_ServiceAppointments</para>
/// </summary>
public List<ServiceActivity> GetServiceActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceActivity>(Service, this.Id, "serviceappointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SocialActivity (Regarding)</b></para>
/// <para>Schema Name: bookableresourcebooking_SocialActivities</para>
/// </summary>
public List<SocialActivity> GetSocialActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialActivity>(Service, this.Id, "socialactivity", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SocialActivity (Regarding)</b></para>
/// <para>Schema Name: bookableresourcebooking_SocialActivities</para>
/// </summary>
public List<SocialActivity> GetSocialActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialActivity>(Service, this.Id, "socialactivity", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: BookableResourceBooking_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: BookableResourceBooking_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Task (Regarding)</b></para>
/// <para>Schema Name: bookableresourcebooking_Tasks</para>
/// </summary>
public List<Task> GetTasks_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Task>(Service, this.Id, "task", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Task (Regarding)</b></para>
/// <para>Schema Name: bookableresourcebooking_Tasks</para>
/// </summary>
public List<Task> GetTasks_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Task>(Service, this.Id, "task", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: bookableresourcebooking_UserEntityInstanceDatas</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: bookableresourcebooking_UserEntityInstanceDatas</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        

        

        public enum eResourceScheduleSource
{
	///<summary><para>System - Agreement Schedule</para>
	///<para>Value = 690970005</para></summary>
	[Description("System - Agreement Schedule")]
	System_AgreementSchedule = 690970005, 
	///<summary><para>Schedule Board</para>
	///<para>Value = 690970001</para></summary>
	[Description("Schedule Board")]
	ScheduleBoard = 690970001, 
	///<summary><para>Mobile</para>
	///<para>Value = 690970002</para></summary>
	[Description("Mobile")]
	Mobile = 690970002, 
	///<summary><para>Manual</para>
	///<para>Value = 690970003</para></summary>
	[Description("Manual")]
	Manual = 690970003, 
	///<summary><para>Schedule Assistant</para>
	///<para>Value = 690970004</para></summary>
	[Description("Schedule Assistant")]
	ScheduleAssistant = 690970004
}
public enum eBookingType
{
	///<summary><para>Liquid</para>
	///<para>Value = 2</para></summary>
	[Description("Liquid")]
	Liquid = 2, 
	///<summary><para>Solid</para>
	///<para>Value = 1</para></summary>
	[Description("Solid")]
	Solid = 1
}
public enum eStatus
{
	///<summary><para>Active</para>
	///<para>Value = 0</para></summary>
	[Description("Active")]
	Active = 0, 
	///<summary><para>Inactive</para>
	///<para>Value = 1</para></summary>
	[Description("Inactive")]
	Inactive = 1
}
public enum eStatusReason
{
	///<summary><para>Active</para>
	///<para>Value = 1</para></summary>
	[Description("Active")]
	Active_Active = 1, 
	///<summary><para>Inactive</para>
	///<para>Value = 2</para></summary>
	[Description("Inactive")]
	Inactive_Inactive = 2
}
public void SetState(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>versionnumber</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
	/// <summary><para>owneridtype</para>
	/// <para>owneridtype</para></summary>
	public const string OwnerIdType = "owneridtype";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>msdyn_projectidname</para>
	/// <para>msdyn_projectidname</para></summary>
	public const string Msdyn_projectidName = "msdyn_projectidname";
	/// <summary><para>owneridname</para>
	/// <para>owneridname</para></summary>
	public const string OwnerIdName = "owneridname";
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>msdyn_resourcerequirementname</para>
	/// <para>msdyn_resourcerequirementname</para></summary>
	public const string Msdyn_ResourceRequirementName = "msdyn_resourcerequirementname";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>msdyn_bookingsetupmetadataidname</para>
	/// <para>msdyn_bookingsetupmetadataidname</para></summary>
	public const string Msdyn_BookingSetupMetadataIdName = "msdyn_bookingsetupmetadataidname";
	/// <summary><para>headername</para>
	/// <para>headername</para></summary>
	public const string HeaderName = "headername";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>msdyn_projectteamidname</para>
	/// <para>msdyn_projectteamidname</para></summary>
	public const string Msdyn_projectteamidName = "msdyn_projectteamidname";
	/// <summary><para>owneridyominame</para>
	/// <para>owneridyominame</para></summary>
	public const string OwnerIdYomiName = "owneridyominame";
	/// <summary><para>msdyn_workordername</para>
	/// <para>msdyn_workordername</para></summary>
	public const string Msdyn_WorkOrderName = "msdyn_workordername";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>msdyn_agreementbookingdatename</para>
	/// <para>msdyn_agreementbookingdatename</para></summary>
	public const string Msdyn_AgreementBookingDateName = "msdyn_agreementbookingdatename";
	/// <summary><para>msdyn_timegroupdetailselectedname</para>
	/// <para>msdyn_timegroupdetailselectedname</para></summary>
	public const string Msdyn_TimeGroupDetailSelectedName = "msdyn_timegroupdetailselectedname";
	/// <summary><para>resourcename</para>
	/// <para>resourcename</para></summary>
	public const string ResourceName = "resourcename";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>transactioncurrencyidname</para>
	/// <para>transactioncurrencyidname</para></summary>
	public const string TransactionCurrencyIdName = "transactioncurrencyidname";
	/// <summary><para>bookingstatusname</para>
	/// <para>bookingstatusname</para></summary>
	public const string BookingStatusName = "bookingstatusname";
	/// <summary><para>msdyn_resourcecategoryidname</para>
	/// <para>msdyn_resourcecategoryidname</para></summary>
	public const string Msdyn_resourcecategoryidName = "msdyn_resourcecategoryidname";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>msdyn_resourcegroupname</para>
	/// <para>msdyn_resourcegroupname</para></summary>
	public const string Msdyn_ResourceGroupName = "msdyn_resourcegroupname";
	/// <summary><para>Actual Arrival Time</para>
	/// <para>msdyn_actualarrivaltime</para></summary>
	public const string ActualArrivalTime = "msdyn_actualarrivaltime";
	/// <summary><para>Actual Travel Duration</para>
	/// <para>msdyn_actualtravelduration</para></summary>
	public const string ActualTravelDuration = "msdyn_actualtravelduration";
	/// <summary><para>Agreement Booking Date</para>
	/// <para>msdyn_agreementbookingdate</para></summary>
	public const string AgreementBookingDate = "msdyn_agreementbookingdate";
	/// <summary><para>Allow Overlapping</para>
	/// <para>msdyn_allowoverlapping</para></summary>
	public const string AllowOverlapping = "msdyn_allowoverlapping";
	/// <summary><para>Bookable Resource Booking</para>
	/// <para>bookableresourcebookingid</para></summary>
	public const string BookableResourceBookingId = "bookableresourcebookingid";
	/// <summary><para>Booking Method</para>
	/// <para>msdyn_bookingmethod</para></summary>
	public const string BookingMethod = "msdyn_bookingmethod";
	/// <summary><para>Booking Setup Metadata</para>
	/// <para>msdyn_bookingsetupmetadataid</para></summary>
	public const string BookingSetupMetadata = "msdyn_bookingsetupmetadataid";
	/// <summary><para>Booking Status</para>
	/// <para>bookingstatus</para></summary>
	public const string BookingStatus = "bookingstatus";
	/// <summary><para>Booking Type</para>
	/// <para>bookingtype</para></summary>
	public const string BookingType = "bookingtype";
	/// <summary><para>Cascade Crew Changes</para>
	/// <para>msdyn_cascadecrewchanges</para></summary>
	public const string CascadeCrewChanges = "msdyn_cascadecrewchanges";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Currency</para>
	/// <para>transactioncurrencyid</para></summary>
	public const string Currency = "transactioncurrencyid";
	/// <summary><para>Duration</para>
	/// <para>duration</para></summary>
	public const string Duration = "duration";
	/// <summary><para>End Time</para>
	/// <para>endtime</para></summary>
	public const string EndTime = "endtime";
	/// <summary><para>Estimated Arrival Time</para>
	/// <para>msdyn_estimatedarrivaltime</para></summary>
	public const string EstimatedArrivalTime = "msdyn_estimatedarrivaltime";
	/// <summary><para>Estimated Travel Duration</para>
	/// <para>msdyn_estimatedtravelduration</para></summary>
	public const string EstimatedTravelDuration = "msdyn_estimatedtravelduration";
	/// <summary><para>ExchangeRate</para>
	/// <para>exchangerate</para></summary>
	public const string ExchangeRate = "exchangerate";
	/// <summary><para>Header</para>
	/// <para>header</para></summary>
	public const string Header = "header";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string ImportSequenceNumber = "importsequencenumber";
	/// <summary><para>Internal Flags</para>
	/// <para>msdyn_internalflags</para></summary>
	public const string InternalFlags = "msdyn_internalflags";
	/// <summary><para>Latitude</para>
	/// <para>msdyn_latitude</para></summary>
	public const string Latitude = "msdyn_latitude";
	/// <summary><para>Longitude</para>
	/// <para>msdyn_longitude</para></summary>
	public const string Longitude = "msdyn_longitude";
	/// <summary><para>Miles Traveled</para>
	/// <para>msdyn_milestraveled</para></summary>
	public const string MilesTraveled = "msdyn_milestraveled";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>Name</para>
	/// <para>name</para></summary>
	public const string Name = "name";
	/// <summary><para>Owner</para>
	/// <para>ownerid</para></summary>
	public const string Owner = "ownerid";
	/// <summary><para>Owning Business Unit</para>
	/// <para>owningbusinessunit</para></summary>
	public const string OwningBusinessUnit = "owningbusinessunit";
	/// <summary><para>Owning Team</para>
	/// <para>owningteam</para></summary>
	public const string OwningTeam = "owningteam";
	/// <summary><para>Owning User</para>
	/// <para>owninguser</para></summary>
	public const string OwningUser = "owninguser";
	/// <summary><para>Prevent Timestamp Creation</para>
	/// <para>msdyn_preventtimestampcreation</para></summary>
	public const string PreventTimestampCreation = "msdyn_preventtimestampcreation";
	/// <summary><para>Process</para>
	/// <para>processid</para></summary>
	public const string Process = "processid";
	/// <summary><para>Process Stage</para>
	/// <para>stageid</para></summary>
	public const string ProcessStage = "stageid";
	/// <summary><para>Project</para>
	/// <para>msdyn_projectid</para></summary>
	public const string Project = "msdyn_projectid";
	/// <summary><para>Project Team Member</para>
	/// <para>msdyn_projectteamid</para></summary>
	public const string ProjectTeamMember = "msdyn_projectteamid";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string RecordCreatedOn = "overriddencreatedon";
	/// <summary><para>Resource</para>
	/// <para>resource</para></summary>
	public const string Resource = "resource";
	/// <summary><para>Resource Category</para>
	/// <para>msdyn_resourcecategoryid</para></summary>
	public const string ResourceCategory = "msdyn_resourcecategoryid";
	/// <summary><para>Resource Group</para>
	/// <para>msdyn_resourcegroup</para></summary>
	public const string ResourceGroup = "msdyn_resourcegroup";
	/// <summary><para>Resource Requirement</para>
	/// <para>msdyn_resourcerequirement</para></summary>
	public const string ResourceRequirement = "msdyn_resourcerequirement";
	/// <summary><para>Signature</para>
	/// <para>msdyn_signature</para></summary>
	public const string Signature = "msdyn_signature";
	/// <summary><para>Slot Text</para>
	/// <para>msdyn_slottext</para></summary>
	public const string SlotText = "msdyn_slottext";
	/// <summary><para>Start Time</para>
	/// <para>starttime</para></summary>
	public const string StartTime = "starttime";
	/// <summary><para>Status</para>
	/// <para>statecode</para></summary>
	public const string Status = "statecode";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string StatusReason = "statuscode";
	/// <summary><para>Time Group Detail Selected</para>
	/// <para>msdyn_timegroupdetailselected</para></summary>
	public const string TimeGroupDetailSelected = "msdyn_timegroupdetailselected";
	/// <summary><para>Time Zone Rule Version Number</para>
	/// <para>timezoneruleversionnumber</para></summary>
	public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
	/// <summary><para>Total Billable Duration</para>
	/// <para>msdyn_totalbillableduration</para></summary>
	public const string TotalBillableDuration = "msdyn_totalbillableduration";
	/// <summary><para>Total Break Duration</para>
	/// <para>msdyn_totalbreakduration</para></summary>
	public const string TotalBreakDuration = "msdyn_totalbreakduration";
	/// <summary><para>Total Cost</para>
	/// <para>msdyn_totalcost</para></summary>
	public const string TotalCost = "msdyn_totalcost";
	/// <summary><para>Total Cost (Base)</para>
	/// <para>msdyn_totalcost_base</para></summary>
	public const string TotalCost_Base = "msdyn_totalcost_base";
	/// <summary><para>Total Duration In Progress</para>
	/// <para>msdyn_totaldurationinprogress</para></summary>
	public const string TotalDurationInProgress = "msdyn_totaldurationinprogress";
	/// <summary><para>Travel Time Rescheduling (Deprecated)</para>
	/// <para>msdyn_traveltimerescheduling</para></summary>
	public const string TravelTimeRescheduling_Deprecated = "msdyn_traveltimerescheduling";
	/// <summary><para>Traversed Path</para>
	/// <para>traversedpath</para></summary>
	public const string TraversedPath = "traversedpath";
	/// <summary><para>UTC Conversion Time Zone Code</para>
	/// <para>utcconversiontimezonecode</para></summary>
	public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
	/// <summary><para>Work Order</para>
	/// <para>msdyn_workorder</para></summary>
	public const string WorkOrder = "msdyn_workorder";
}

    }
}

// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("product")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class Product : BaseProxyClass
    {
        public new const string LogicalName = "product";
        public const int ObjectTypeCode = 1024;
        public const string PrimaryIdAttribute = "productid";
        public const string PrimaryNameAttribute = "name";
        public const string PrimaryImageAttribute = "entityimage";
        static Product()
        {
            BaseProxyClass.RegisterProxyType(typeof(Product), "product");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public Product() : base(new Entity("product")) { }
        public Product(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<Product>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: entityimage_timestamp</para>
///</summary>
[AttributeLogicalNameAttribute("entityimage_timestamp")]
public int? EntityImage_Timestamp
{
	get { return this.GetPropertyValue<int?>("entityimage_timestamp"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: parentproductidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("parentproductidname")]
public string ParentProductIdName
{
	get { return this.GetPropertyValue<string>("parentproductidname"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: defaultuomidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("defaultuomidname")]
public string DefaultUoMIdName
{
	get { return this.GetPropertyValue<string>("defaultuomidname"); }
}
///<summary>
///<para>Logical Name: modifiedbyexternalpartyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyexternalpartyname")]
public string ModifiedByExternalPartyName
{
	get { return this.GetPropertyValue<string>("modifiedbyexternalpartyname"); }
}
///<summary>
///<para>Logical Name: defaultuomscheduleidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("defaultuomscheduleidname")]
public string DefaultUoMScheduleIdName
{
	get { return this.GetPropertyValue<string>("defaultuomscheduleidname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedbyexternalpartyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyexternalpartyyominame")]
public string ModifiedByExternalPartyYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyexternalpartyyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_defaultvendoryominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_defaultvendoryominame")]
public string Msdyn_DefaultVendorYomiName
{
	get { return this.GetPropertyValue<string>("msdyn_defaultvendoryominame"); }
}
///<summary>
///<para>Logical Name: createdbyexternalpartyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyexternalpartyname")]
public string CreatedByExternalPartyName
{
	get { return this.GetPropertyValue<string>("createdbyexternalpartyname"); }
}
///<summary>
///<para>Logical Name: msdyn_defaultvendorname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_defaultvendorname")]
public string Msdyn_DefaultVendorName
{
	get { return this.GetPropertyValue<string>("msdyn_defaultvendorname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: subjectidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("subjectidname")]
public string SubjectIdName
{
	get { return this.GetPropertyValue<string>("subjectidname"); }
}
///<summary>
///<para>Logical Name: pricelevelidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("pricelevelidname")]
public string PriceLevelIdName
{
	get { return this.GetPropertyValue<string>("pricelevelidname"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyidname")]
public string TransactionCurrencyIdName
{
	get { return this.GetPropertyValue<string>("transactioncurrencyidname"); }
}
///<summary>
///<para>Logical Name: entityimage_url</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("entityimage_url")]
public string EntityImage_URL
{
	get { return this.GetPropertyValue<string>("entityimage_url"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: createdbyexternalpartyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyexternalpartyyominame")]
public string CreatedByExternalPartyYomiName
{
	get { return this.GetPropertyValue<string>("createdbyexternalpartyyominame"); }
}
///<summary>
///<para>Logical Name: organizationidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("organizationidname")]
public string OrganizationIdName
{
	get { return this.GetPropertyValue<string>("organizationidname"); }
}
///<summary>
///<para>Logical Name: msdyn_transactioncategoryname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_transactioncategoryname")]
public string Msdyn_TransactionCategoryName
{
	get { return this.GetPropertyValue<string>("msdyn_transactioncategoryname"); }
}
///<summary>
///<para>Logical Name: msdyn_converttocustomerasset</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_converttocustomerasset")]
public bool? ConvertToCustomerAsset
{
	get { return this.GetPropertyValue<bool?>("msdyn_converttocustomerasset"); }
	set { this.SetPropertyValue<bool?>("msdyn_converttocustomerasset", value, "ConvertToCustomerAsset"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdbyexternalparty</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyexternalparty")]
public EntityReference CreatedBy_ExternalParty
{
	get { return this.GetPropertyValue<EntityReference>("createdbyexternalparty"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyid</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyid")]
public EntityReference Currency
{
	get { return this.GetPropertyValue<EntityReference>("transactioncurrencyid"); }
	set { this.SetPropertyValue<EntityReference>("transactioncurrencyid", value, "Currency"); }
}
///<summary>
///<para>Logical Name: currentcost</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? CurrentCost
{
	get
	{
		if (CurrentCostMoney != null) { return CurrentCostMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.CurrentCostMoney = new Money(value.Value); }
		else this.CurrentCostMoney = null;
	}
}
///<summary>
///<para>Logical Name: currentcost</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("currentcost")]
public Money CurrentCostMoney
{
	get { return this.GetPropertyValue<Money>("currentcost"); }
	set { this.SetPropertyValue("currentcost", (Money)value, (decimal)0, (decimal)1000000000000, "CurrentCostMoney"); }
}
///<summary>
///<para>Logical Name: currentcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? CurrentCost_Base
{
	get
	{
		if (CurrentCost_BaseMoney != null) { return CurrentCost_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: currentcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("currentcost_base")]
public Money CurrentCost_BaseMoney
{
	get { return this.GetPropertyValue<Money>("currentcost_base"); }
}
///<summary>
///<para>Logical Name: quantitydecimal</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 5</para>
///</summary>
[AttributeLogicalNameAttribute("quantitydecimal")]
public int? DecimalsSupported
{
	get { return this.GetPropertyValue<int?>("quantitydecimal"); }
	set { this.SetPropertyValue("quantitydecimal", (int?)value, (int)0, (int)5, "DecimalsSupported"); }
}
///<summary>
///<para>Logical Name: pricelevelid</para>
///</summary>
[AttributeLogicalNameAttribute("pricelevelid")]
public EntityReference DefaultPriceList
{
	get { return this.GetPropertyValue<EntityReference>("pricelevelid"); }
	set { this.SetPropertyValue<EntityReference>("pricelevelid", value, "DefaultPriceList"); }
}
///<summary>
///<para>Logical Name: defaultuomid</para>
///</summary>
[AttributeLogicalNameAttribute("defaultuomid")]
public EntityReference DefaultUnit
{
	get { return this.GetPropertyValue<EntityReference>("defaultuomid"); }
	set { this.SetPropertyValue<EntityReference>("defaultuomid", value, "DefaultUnit"); }
}
///<summary>
///<para>Logical Name: msdyn_defaultvendor</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_defaultvendor")]
public EntityReference DefaultVendor
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_defaultvendor"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_defaultvendor", value, "DefaultVendor"); }
}
///<summary>
///<para>Logical Name: description</para>
///<para>Max Length: 2000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("description")]
public string Description
{
	get { return this.GetPropertyValue<string>("description"); }
	set { this.SetPropertyValue("description", value, 2000, "Description"); }
}
///<summary>
///<para>Logical Name: entityimageid</para>
///</summary>
[AttributeLogicalNameAttribute("entityimageid")]
public Guid EntityImageId
{
	get { return this.GetPropertyValue<Guid>("entityimageid"); }
}
///<summary>
///<para>Logical Name: exchangerate</para>
///<para>Minimum Value: 0.0000000001</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 10</para>
///</summary>
[AttributeLogicalNameAttribute("exchangerate")]
public decimal? ExchangeRate
{
	get { return this.GetPropertyValue<decimal?>("exchangerate"); }
}
/// <summary>
///Logical Name: msdyn_fieldserviceproducttype
/// </summary>
[AttributeLogicalNameAttribute("msdyn_fieldserviceproducttype")]
public eFieldServiceProductType? FieldServiceProductType
{
	get
	{
		if (FieldServiceProductType_OptionSetValue != null) { return (eFieldServiceProductType)FieldServiceProductType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.FieldServiceProductType_OptionSetValue = new OptionSetValue((int)value); }
		else this.FieldServiceProductType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_fieldserviceproducttype</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_fieldserviceproducttype")]
public OptionSetValue FieldServiceProductType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_fieldserviceproducttype"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_fieldserviceproducttype", value, "FieldServiceProductType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string FieldServiceProductType_Text(IOrganizationService Service)
{
	return this.FieldServiceProductType_OptionSetValue.GetOptionSetText(Service, this, "msdyn_fieldserviceproducttype");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string FieldServiceProductType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.FieldServiceProductType_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: hierarchypath</para>
///<para>Max Length: 450 characters</para>
///</summary>
[AttributeLogicalNameAttribute("hierarchypath")]
public string HierarchyPath
{
	get { return this.GetPropertyValue<string>("hierarchypath"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? ImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "ImportSequenceNumber"); }
}
///<summary>
///<para>Logical Name: dmtimportstate</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("dmtimportstate")]
public int? InternalUseOnly
{
	get { return this.GetPropertyValue<int?>("dmtimportstate"); }
	set { this.SetPropertyValue("dmtimportstate", (int?)value, (int)-2147483648, (int)2147483647, "InternalUseOnly"); }
}
///<summary>
///<para>Logical Name: iskit</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("iskit")]
public bool? IsKit
{
	get { return this.GetPropertyValue<bool?>("iskit"); }
	set { this.SetPropertyValue<bool?>("iskit", value, "IsKit"); }
}
///<summary>
///<para>Logical Name: price</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? ListPrice
{
	get
	{
		if (ListPriceMoney != null) { return ListPriceMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ListPriceMoney = new Money(value.Value); }
		else this.ListPriceMoney = null;
	}
}
///<summary>
///<para>Logical Name: price</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("price")]
public Money ListPriceMoney
{
	get { return this.GetPropertyValue<Money>("price"); }
	set { this.SetPropertyValue("price", (Money)value, (decimal)0, (decimal)1000000000000, "ListPriceMoney"); }
}
///<summary>
///<para>Logical Name: price_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? ListPrice_Base
{
	get
	{
		if (ListPrice_BaseMoney != null) { return ListPrice_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: price_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("price_base")]
public Money ListPrice_BaseMoney
{
	get { return this.GetPropertyValue<Money>("price_base"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedbyexternalparty</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyexternalparty")]
public EntityReference ModifiedBy_ExternalParty
{
	get { return this.GetPropertyValue<EntityReference>("modifiedbyexternalparty"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: name</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("name")]
public string Name
{
	get { return this.GetPropertyValue<string>("name"); }
	set { this.SetPropertyValue("name", value, 100, "Name"); }
}
///<summary>
///<para>Logical Name: organizationid</para>
///</summary>
[AttributeLogicalNameAttribute("organizationid")]
public EntityReference Organization
{
	get { return this.GetPropertyValue<EntityReference>("organizationid"); }
}
///<summary>
///<para>Logical Name: parentproductid</para>
///</summary>
[AttributeLogicalNameAttribute("parentproductid")]
public EntityReference Parent
{
	get { return this.GetPropertyValue<EntityReference>("parentproductid"); }
	set { this.SetPropertyValue<EntityReference>("parentproductid", value, "Parent"); }
}
///<summary>
///<para>Logical Name: processid</para>
///</summary>
[AttributeLogicalNameAttribute("processid")]
public Guid Process
{
	get { return this.GetPropertyValue<Guid>("processid"); }
	set { this.SetPropertyValue<Guid>("processid", value, "Process"); }
}
///<summary>
///<para>Logical Name: stageid</para>
///</summary>
[AttributeLogicalNameAttribute("stageid")]
public Guid ProcessStage
{
	get { return this.GetPropertyValue<Guid>("stageid"); }
	set { this.SetPropertyValue<Guid>("stageid", value, "ProcessStage"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: productid</para>
///</summary>
[AttributeLogicalNameAttribute("productid")]
public Guid ProductId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: productnumber</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("productnumber")]
public string ProductID
{
	get { return this.GetPropertyValue<string>("productnumber"); }
	set { this.SetPropertyValue("productnumber", value, 100, "ProductID"); }
}
/// <summary>
///Logical Name: productstructure
/// </summary>
[AttributeLogicalNameAttribute("productstructure")]
public eProductClassification? ProductStructure
{
	get
	{
		if (ProductStructure_OptionSetValue != null) { return (eProductClassification)ProductStructure_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ProductStructure_OptionSetValue = new OptionSetValue((int)value); }
		else this.ProductStructure_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: productstructure</para>
///</summary>
[AttributeLogicalNameAttribute("productstructure")]
public OptionSetValue ProductStructure_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("productstructure"); }
	set { this.SetPropertyValue<OptionSetValue>("productstructure", value, "ProductStructure_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ProductStructure_Text(IOrganizationService Service)
{
	return this.ProductStructure_OptionSetValue.GetOptionSetText(Service, this, "productstructure");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ProductStructure_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ProductStructure_OptionSetValue.Value);
}
/// <summary>
///Logical Name: producttypecode
/// </summary>
[AttributeLogicalNameAttribute("producttypecode")]
public eProductType? ProductType
{
	get
	{
		if (ProductType_OptionSetValue != null) { return (eProductType)ProductType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ProductType_OptionSetValue = new OptionSetValue((int)value); }
		else this.ProductType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: producttypecode</para>
///</summary>
[AttributeLogicalNameAttribute("producttypecode")]
public OptionSetValue ProductType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("producttypecode"); }
	set { this.SetPropertyValue<OptionSetValue>("producttypecode", value, "ProductType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ProductType_Text(IOrganizationService Service)
{
	return this.ProductType_OptionSetValue.GetOptionSetText(Service, this, "producttypecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ProductType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ProductType_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_purchasename</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_purchasename")]
public string PurchaseName
{
	get { return this.GetPropertyValue<string>("msdyn_purchasename"); }
	set { this.SetPropertyValue("msdyn_purchasename", value, 100, "PurchaseName"); }
}
///<summary>
///<para>Logical Name: quantityonhand</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("quantityonhand")]
public decimal? QuantityOnHand
{
	get { return this.GetPropertyValue<decimal?>("quantityonhand"); }
	set { this.SetPropertyValue("quantityonhand", (decimal?)value, (decimal)0, (decimal)1000000000, "QuantityOnHand"); }
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? RecordCreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "RecordCreatedOn"); }
}
///<summary>
///<para>Logical Name: size</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("size")]
public string Size
{
	get { return this.GetPropertyValue<string>("size"); }
	set { this.SetPropertyValue("size", value, 200, "Size"); }
}
///<summary>
///<para>Logical Name: standardcost</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? StandardCost
{
	get
	{
		if (StandardCostMoney != null) { return StandardCostMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StandardCostMoney = new Money(value.Value); }
		else this.StandardCostMoney = null;
	}
}
///<summary>
///<para>Logical Name: standardcost</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("standardcost")]
public Money StandardCostMoney
{
	get { return this.GetPropertyValue<Money>("standardcost"); }
	set { this.SetPropertyValue("standardcost", (Money)value, (decimal)0, (decimal)1000000000000, "StandardCostMoney"); }
}
///<summary>
///<para>Logical Name: standardcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? StandardCost_Base
{
	get
	{
		if (StandardCost_BaseMoney != null) { return StandardCost_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: standardcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("standardcost_base")]
public Money StandardCost_BaseMoney
{
	get { return this.GetPropertyValue<Money>("standardcost_base"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eStatus? Status
{
	get
	{
		if (Status_OptionSetValue != null) { return (eStatus)Status_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Status_OptionSetValue = new OptionSetValue((int)value); }
		else this.Status_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue Status_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
	set { this.SetPropertyValue<OptionSetValue>("statecode", value, "Status_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Status_Text(IOrganizationService Service)
{
	return this.Status_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Status_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Status_OptionSetValue.Value);
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? StatusReason
{
	get
	{
		if (StatusReason_OptionSetValue != null) { return (eStatusReason)StatusReason_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StatusReason_OptionSetValue = new OptionSetValue((int)value); }
		else this.StatusReason_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue StatusReason_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "StatusReason_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string StatusReason_Text(IOrganizationService Service)
{
	return this.StatusReason_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string StatusReason_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.StatusReason_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: isstockitem</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isstockitem")]
public bool? StockItem
{
	get { return this.GetPropertyValue<bool?>("isstockitem"); }
	set { this.SetPropertyValue<bool?>("isstockitem", value, "StockItem"); }
}
///<summary>
///<para>Logical Name: stockvolume</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("stockvolume")]
public decimal? StockVolume
{
	get { return this.GetPropertyValue<decimal?>("stockvolume"); }
	set { this.SetPropertyValue("stockvolume", (decimal?)value, (decimal)0, (decimal)1000000000, "StockVolume"); }
}
///<summary>
///<para>Logical Name: stockweight</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("stockweight")]
public decimal? StockWeight
{
	get { return this.GetPropertyValue<decimal?>("stockweight"); }
	set { this.SetPropertyValue("stockweight", (decimal?)value, (decimal)0, (decimal)1000000000, "StockWeight"); }
}
///<summary>
///<para>Logical Name: subjectid</para>
///</summary>
[AttributeLogicalNameAttribute("subjectid")]
public EntityReference Subject
{
	get { return this.GetPropertyValue<EntityReference>("subjectid"); }
	set { this.SetPropertyValue<EntityReference>("subjectid", value, "Subject"); }
}
///<summary>
///<para>Logical Name: suppliername</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("suppliername")]
public string SupplierName
{
	get { return this.GetPropertyValue<string>("suppliername"); }
	set { this.SetPropertyValue("suppliername", value, 100, "SupplierName"); }
}
///<summary>
///<para>Logical Name: msdyn_taxable</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_taxable")]
public bool? Taxable
{
	get { return this.GetPropertyValue<bool?>("msdyn_taxable"); }
	set { this.SetPropertyValue<bool?>("msdyn_taxable", value, "Taxable"); }
}
///<summary>
///<para>Logical Name: timezoneruleversionnumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("timezoneruleversionnumber")]
public int? TimeZoneRuleVersionNumber
{
	get { return this.GetPropertyValue<int?>("timezoneruleversionnumber"); }
	set { this.SetPropertyValue("timezoneruleversionnumber", (int?)value, (int)-1, (int)2147483647, "TimeZoneRuleVersionNumber"); }
}
///<summary>
///<para>Logical Name: msdyn_transactioncategory</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_transactioncategory")]
public EntityReference TransactionCategory
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_transactioncategory"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_transactioncategory", value, "TransactionCategory"); }
}
///<summary>
///<para>Logical Name: traversedpath</para>
///<para>Max Length: 1250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("traversedpath")]
public string TraversedPath
{
	get { return this.GetPropertyValue<string>("traversedpath"); }
	set { this.SetPropertyValue("traversedpath", value, 1250, "TraversedPath"); }
}
///<summary>
///<para>Logical Name: defaultuomscheduleid</para>
///</summary>
[AttributeLogicalNameAttribute("defaultuomscheduleid")]
public EntityReference UnitGroup
{
	get { return this.GetPropertyValue<EntityReference>("defaultuomscheduleid"); }
	set { this.SetPropertyValue<EntityReference>("defaultuomscheduleid", value, "UnitGroup"); }
}
///<summary>
///<para>Logical Name: msdyn_upccode</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_upccode")]
public string UPCCode
{
	get { return this.GetPropertyValue<string>("msdyn_upccode"); }
	set { this.SetPropertyValue("msdyn_upccode", value, 50, "UPCCode"); }
}
///<summary>
///<para>Logical Name: producturl</para>
///<para>Max Length: 255 characters</para>
///</summary>
[AttributeLogicalNameAttribute("producturl")]
public string URL
{
	get { return this.GetPropertyValue<string>("producturl"); }
	set { this.SetPropertyValue("producturl", value, 255, "URL"); }
}
///<summary>
///<para>Logical Name: utcconversiontimezonecode</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utcconversiontimezonecode")]
public int? UTCConversionTimeZoneCode
{
	get { return this.GetPropertyValue<int?>("utcconversiontimezonecode"); }
	set { this.SetPropertyValue("utcconversiontimezonecode", (int?)value, (int)-1, (int)2147483647, "UTCConversionTimeZoneCode"); }
}
///<summary>
///<para>Logical Name: validfromdate</para>
///</summary>
[AttributeLogicalNameAttribute("validfromdate")]
public DateTime? ValidFrom
{
	get { return this.GetPropertyValue<DateTime?>("validfromdate"); }
	set { this.SetPropertyValue<DateTime?>("validfromdate", value, "ValidFrom"); }
}
///<summary>
///<para>Logical Name: validtodate</para>
///</summary>
[AttributeLogicalNameAttribute("validtodate")]
public DateTime? ValidTo
{
	get { return this.GetPropertyValue<DateTime?>("validtodate"); }
	set { this.SetPropertyValue<DateTime?>("validtodate", value, "ValidTo"); }
}
///<summary>
///<para>Logical Name: vendorname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("vendorname")]
public string Vendor
{
	get { return this.GetPropertyValue<string>("vendorname"); }
	set { this.SetPropertyValue("vendorname", value, 100, "Vendor"); }
}
///<summary>
///<para>Logical Name: vendorid</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("vendorid")]
public string VendorID
{
	get { return this.GetPropertyValue<string>("vendorid"); }
	set { this.SetPropertyValue("vendorid", value, 100, "VendorID"); }
}
///<summary>
///<para>Logical Name: vendorpartnumber</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("vendorpartnumber")]
public string VendorName
{
	get { return this.GetPropertyValue<string>("vendorpartnumber"); }
	set { this.SetPropertyValue("vendorpartnumber", value, 100, "VendorName"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}


        /// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: Product_Annotation</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: Product_Annotation</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: Product_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: Product_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: Product_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: Product_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: product_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: product_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: product_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: product_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>ContractLine (Product)</b></para>
/// <para>Schema Name: product_contract_line_items</para>
/// </summary>
public List<ContractLine> GetContractLines_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ContractLine>(Service, this.Id, "contractdetail", "productid", Columns); }
/// <summary>
/// <para><b>ContractLine (Product)</b></para>
/// <para>Schema Name: product_contract_line_items</para>
/// </summary>
public List<ContractLine> GetContractLines_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ContractLine>(Service, this.Id, "contractdetail", "productid", Columns); }
/// <summary>
/// <para><b>Property (Regarding)</b></para>
/// <para>Schema Name: Product_DynamicProperty</para>
/// </summary>
public List<Property> GetProperties_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Property>(Service, this.Id, "dynamicproperty", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Property (Regarding)</b></para>
/// <para>Schema Name: Product_DynamicProperty</para>
/// </summary>
public List<Property> GetProperties_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Property>(Service, this.Id, "dynamicproperty", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PropertyAssociation (Regarding)</b></para>
/// <para>Schema Name: Product_DynamicPropertyAssociation</para>
/// </summary>
public List<PropertyAssociation> GetPropertyAssociations_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PropertyAssociation>(Service, this.Id, "dynamicpropertyassociation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PropertyAssociation (Regarding)</b></para>
/// <para>Schema Name: Product_DynamicPropertyAssociation</para>
/// </summary>
public List<PropertyAssociation> GetPropertyAssociations_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PropertyAssociation>(Service, this.Id, "dynamicpropertyassociation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>@Case (Product)</b></para>
/// <para>Schema Name: product_incidents</para>
/// </summary>
public List<@Case> GetCases_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<@Case>(Service, this.Id, "incident", "productid", Columns); }
/// <summary>
/// <para><b>@Case (Product)</b></para>
/// <para>Schema Name: product_incidents</para>
/// </summary>
public List<@Case> GetCases_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<@Case>(Service, this.Id, "incident", "productid", Columns); }
/// <summary>
/// <para><b>InvoiceLine (Existing Product)</b></para>
/// <para>Schema Name: product_invoice_details</para>
/// </summary>
public List<InvoiceLine> GetInvoiceLines_ExistingProduct (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceLine>(Service, this.Id, "invoicedetail", "productid", Columns); }
/// <summary>
/// <para><b>InvoiceLine (Existing Product)</b></para>
/// <para>Schema Name: product_invoice_details</para>
/// </summary>
public List<InvoiceLine> GetInvoiceLines_ExistingProduct (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceLine>(Service, this.Id, "invoicedetail", "productid", Columns); }
/// <summary>
/// <para><b>Actual (Product ID)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_actual_Product</para>
/// </summary>
public List<Actual> GetActuals_ProductID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Actual>(Service, this.Id, "msdyn_actual", "msdyn_product", Columns); }
/// <summary>
/// <para><b>Actual (Product ID)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_actual_Product</para>
/// </summary>
public List<Actual> GetActuals_ProductID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Actual>(Service, this.Id, "msdyn_actual", "msdyn_product", Columns); }
/// <summary>
/// <para>Product</para>
/// <para><b>AgreementBookingProduct (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_agreementbookingproduct_Product</para>
/// </summary>
public List<AgreementBookingProduct> GetProduct_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingProduct>(Service, this.Id, "msdyn_agreementbookingproduct", "msdyn_product", Columns); }
/// <summary>
/// <para>Product</para>
/// <para><b>AgreementBookingProduct (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_agreementbookingproduct_Product</para>
/// </summary>
public List<AgreementBookingProduct> GetProduct_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingProduct>(Service, this.Id, "msdyn_agreementbookingproduct", "msdyn_product", Columns); }
/// <summary>
/// <para>Service</para>
/// <para><b>AgreementBookingService (Service)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_agreementbookingservice_Service</para>
/// </summary>
public List<AgreementBookingService> GetService_Service (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingService>(Service, this.Id, "msdyn_agreementbookingservice", "msdyn_service", Columns); }
/// <summary>
/// <para>Service</para>
/// <para><b>AgreementBookingService (Service)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_agreementbookingservice_Service</para>
/// </summary>
public List<AgreementBookingService> GetService_Service (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementBookingService>(Service, this.Id, "msdyn_agreementbookingservice", "msdyn_service", Columns); }
/// <summary>
/// <para>Product</para>
/// <para><b>AgreementInvoiceProduct (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_agreementinvoiceproduct_Product</para>
/// </summary>
public List<AgreementInvoiceProduct> GetProduct_Product2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementInvoiceProduct>(Service, this.Id, "msdyn_agreementinvoiceproduct", "msdyn_product", Columns); }
/// <summary>
/// <para>Product</para>
/// <para><b>AgreementInvoiceProduct (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_agreementinvoiceproduct_Product</para>
/// </summary>
public List<AgreementInvoiceProduct> GetProduct_Product2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<AgreementInvoiceProduct>(Service, this.Id, "msdyn_agreementinvoiceproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>CustomerAsset (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_customerasset_Product</para>
/// </summary>
public List<CustomerAsset> GetCustomerAssets_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CustomerAsset>(Service, this.Id, "msdyn_customerasset", "msdyn_product", Columns); }
/// <summary>
/// <para><b>CustomerAsset (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_customerasset_Product</para>
/// </summary>
public List<CustomerAsset> GetCustomerAssets_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CustomerAsset>(Service, this.Id, "msdyn_customerasset", "msdyn_product", Columns); }
/// <summary>
/// <para><b>EstimateLine (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_estimateline_Product</para>
/// </summary>
public List<EstimateLine> GetEstimateLines_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EstimateLine>(Service, this.Id, "msdyn_estimateline", "msdyn_product", Columns); }
/// <summary>
/// <para><b>EstimateLine (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_estimateline_Product</para>
/// </summary>
public List<EstimateLine> GetEstimateLines_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<EstimateLine>(Service, this.Id, "msdyn_estimateline", "msdyn_product", Columns); }
/// <summary>
/// <para><b>Fact (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_fact_Product</para>
/// </summary>
public List<Fact> GetFacts_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fact>(Service, this.Id, "msdyn_fact", "msdyn_product", Columns); }
/// <summary>
/// <para><b>Fact (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_fact_Product</para>
/// </summary>
public List<Fact> GetFacts_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fact>(Service, this.Id, "msdyn_fact", "msdyn_product", Columns); }
/// <summary>
/// <para><b>FieldComputation (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_fieldcomputation_ProductId</para>
/// </summary>
public List<FieldComputation> GetFieldComputations_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldComputation>(Service, this.Id, "msdyn_fieldcomputation", "msdyn_productid", Columns); }
/// <summary>
/// <para><b>FieldComputation (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_fieldcomputation_ProductId</para>
/// </summary>
public List<FieldComputation> GetFieldComputations_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldComputation>(Service, this.Id, "msdyn_fieldcomputation", "msdyn_productid", Columns); }
/// <summary>
/// <para><b>FieldServicePriceListItem (Product / Service)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_fieldservicepricelistitem_ProductService</para>
/// </summary>
public List<FieldServicePriceListItem> GetFieldServicePriceListItems_Product_Service (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldServicePriceListItem>(Service, this.Id, "msdyn_fieldservicepricelistitem", "msdyn_productservice", Columns); }
/// <summary>
/// <para><b>FieldServicePriceListItem (Product / Service)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_fieldservicepricelistitem_ProductService</para>
/// </summary>
public List<FieldServicePriceListItem> GetFieldServicePriceListItems_Product_Service (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldServicePriceListItem>(Service, this.Id, "msdyn_fieldservicepricelistitem", "msdyn_productservice", Columns); }
/// <summary>
/// <para>Travel Charge Item</para>
/// <para><b>FieldServiceSetting (Travel Charge Item)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_fieldservicesetting</para>
/// </summary>
public List<FieldServiceSetting> GetTravelChargeItem_TravelChargeItem (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldServiceSetting>(Service, this.Id, "msdyn_fieldservicesetting", "msdyn_travelchargeitemid", Columns); }
/// <summary>
/// <para>Travel Charge Item</para>
/// <para><b>FieldServiceSetting (Travel Charge Item)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_fieldservicesetting</para>
/// </summary>
public List<FieldServiceSetting> GetTravelChargeItem_TravelChargeItem (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldServiceSetting>(Service, this.Id, "msdyn_fieldservicesetting", "msdyn_travelchargeitemid", Columns); }
/// <summary>
/// <para><b>IncidentTypeProduct (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_incidenttypeproduct_Product</para>
/// </summary>
public List<IncidentTypeProduct> GetIncidentTypeProducts_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IncidentTypeProduct>(Service, this.Id, "msdyn_incidenttypeproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>IncidentTypeProduct (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_incidenttypeproduct_Product</para>
/// </summary>
public List<IncidentTypeProduct> GetIncidentTypeProducts_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IncidentTypeProduct>(Service, this.Id, "msdyn_incidenttypeproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>IncidentTypeService (Service)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_incidenttypeservice_Service</para>
/// </summary>
public List<IncidentTypeService> GetIncidentTypeServices_Service (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IncidentTypeService>(Service, this.Id, "msdyn_incidenttypeservice", "msdyn_service", Columns); }
/// <summary>
/// <para><b>IncidentTypeService (Service)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_incidenttypeservice_Service</para>
/// </summary>
public List<IncidentTypeService> GetIncidentTypeServices_Service (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<IncidentTypeService>(Service, this.Id, "msdyn_incidenttypeservice", "msdyn_service", Columns); }
/// <summary>
/// <para><b>InventoryAdjustmentProduct (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_inventoryadjustmentproduct_Product</para>
/// </summary>
public List<InventoryAdjustmentProduct> GetInventoryAdjustmentProducts_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InventoryAdjustmentProduct>(Service, this.Id, "msdyn_inventoryadjustmentproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>InventoryAdjustmentProduct (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_inventoryadjustmentproduct_Product</para>
/// </summary>
public List<InventoryAdjustmentProduct> GetInventoryAdjustmentProducts_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InventoryAdjustmentProduct>(Service, this.Id, "msdyn_inventoryadjustmentproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>InventoryJournal (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_inventoryjournal_Product</para>
/// </summary>
public List<InventoryJournal> GetInventoryJournals_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InventoryJournal>(Service, this.Id, "msdyn_inventoryjournal", "msdyn_product", Columns); }
/// <summary>
/// <para><b>InventoryJournal (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_inventoryjournal_Product</para>
/// </summary>
public List<InventoryJournal> GetInventoryJournals_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InventoryJournal>(Service, this.Id, "msdyn_inventoryjournal", "msdyn_product", Columns); }
/// <summary>
/// <para><b>InvoiceLineDetail (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_invoicelinetransaction_Product</para>
/// </summary>
public List<InvoiceLineDetail> GetInvoiceLineDetails_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceLineDetail>(Service, this.Id, "msdyn_invoicelinetransaction", "msdyn_product", Columns); }
/// <summary>
/// <para><b>InvoiceLineDetail (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_invoicelinetransaction_Product</para>
/// </summary>
public List<InvoiceLineDetail> GetInvoiceLineDetails_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InvoiceLineDetail>(Service, this.Id, "msdyn_invoicelinetransaction", "msdyn_product", Columns); }
/// <summary>
/// <para><b>JournalLine (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_journalline_Product</para>
/// </summary>
public List<JournalLine> GetJournalLines_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<JournalLine>(Service, this.Id, "msdyn_journalline", "msdyn_product", Columns); }
/// <summary>
/// <para><b>JournalLine (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_journalline_Product</para>
/// </summary>
public List<JournalLine> GetJournalLines_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<JournalLine>(Service, this.Id, "msdyn_journalline", "msdyn_product", Columns); }
/// <summary>
/// <para><b>OpportunityLineDetail (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_opportunitylinetransaction_Product</para>
/// </summary>
public List<OpportunityLineDetail> GetOpportunityLineDetails_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLineDetail>(Service, this.Id, "msdyn_opportunitylinetransaction", "msdyn_product", Columns); }
/// <summary>
/// <para><b>OpportunityLineDetail (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_opportunitylinetransaction_Product</para>
/// </summary>
public List<OpportunityLineDetail> GetOpportunityLineDetails_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLineDetail>(Service, this.Id, "msdyn_opportunitylinetransaction", "msdyn_product", Columns); }
/// <summary>
/// <para><b>OrderInvoicingProduct (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_orderinvoicingproduct_Product</para>
/// </summary>
public List<OrderInvoicingProduct> GetOrderInvoicingProducts_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderInvoicingProduct>(Service, this.Id, "msdyn_orderinvoicingproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>OrderInvoicingProduct (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_orderinvoicingproduct_Product</para>
/// </summary>
public List<OrderInvoicingProduct> GetOrderInvoicingProducts_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderInvoicingProduct>(Service, this.Id, "msdyn_orderinvoicingproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>ProjectContractLineDetail (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_orderlinetransaction_Product</para>
/// </summary>
public List<ProjectContractLineDetail> GetProjectContractLineDetails_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineDetail>(Service, this.Id, "msdyn_orderlinetransaction", "msdyn_product", Columns); }
/// <summary>
/// <para><b>ProjectContractLineDetail (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_orderlinetransaction_Product</para>
/// </summary>
public List<ProjectContractLineDetail> GetProjectContractLineDetails_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProjectContractLineDetail>(Service, this.Id, "msdyn_orderlinetransaction", "msdyn_product", Columns); }
/// <summary>
/// <para><b>ProductInventory (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_productinventory_Product</para>
/// </summary>
public List<ProductInventory> GetProductInventory_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProductInventory>(Service, this.Id, "msdyn_productinventory", "msdyn_product", Columns); }
/// <summary>
/// <para><b>ProductInventory (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_productinventory_Product</para>
/// </summary>
public List<ProductInventory> GetProductInventory_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProductInventory>(Service, this.Id, "msdyn_productinventory", "msdyn_product", Columns); }
/// <summary>
/// <para>Product</para>
/// <para><b>PurchaseOrderProduct (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_purchaseorderproduct_Product</para>
/// </summary>
public List<PurchaseOrderProduct> GetProduct_Product3 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderProduct>(Service, this.Id, "msdyn_purchaseorderproduct", "msdyn_product", Columns); }
/// <summary>
/// <para>Product</para>
/// <para><b>PurchaseOrderProduct (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_purchaseorderproduct_Product</para>
/// </summary>
public List<PurchaseOrderProduct> GetProduct_Product3 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PurchaseOrderProduct>(Service, this.Id, "msdyn_purchaseorderproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>QuoteBookingProduct (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_quotebookingproduct_Product</para>
/// </summary>
public List<QuoteBookingProduct> GetQuoteBookingProducts_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingProduct>(Service, this.Id, "msdyn_quotebookingproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>QuoteBookingProduct (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_quotebookingproduct_Product</para>
/// </summary>
public List<QuoteBookingProduct> GetQuoteBookingProducts_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingProduct>(Service, this.Id, "msdyn_quotebookingproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>QuoteBookingService (Service)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_quotebookingservice_Service</para>
/// </summary>
public List<QuoteBookingService> GetQuoteBookingServices_Service (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingService>(Service, this.Id, "msdyn_quotebookingservice", "msdyn_service", Columns); }
/// <summary>
/// <para><b>QuoteBookingService (Service)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_quotebookingservice_Service</para>
/// </summary>
public List<QuoteBookingService> GetQuoteBookingServices_Service (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteBookingService>(Service, this.Id, "msdyn_quotebookingservice", "msdyn_service", Columns); }
/// <summary>
/// <para><b>QuoteInvoicingProduct (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_quoteinvoicingproduct_Product</para>
/// </summary>
public List<QuoteInvoicingProduct> GetQuoteInvoicingProducts_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteInvoicingProduct>(Service, this.Id, "msdyn_quoteinvoicingproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>QuoteInvoicingProduct (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_quoteinvoicingproduct_Product</para>
/// </summary>
public List<QuoteInvoicingProduct> GetQuoteInvoicingProducts_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteInvoicingProduct>(Service, this.Id, "msdyn_quoteinvoicingproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>QuoteLineDetail (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_quotelinetransaction_Product</para>
/// </summary>
public List<QuoteLineDetail> GetQuoteLineDetail_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineDetail>(Service, this.Id, "msdyn_quotelinetransaction", "msdyn_product", Columns); }
/// <summary>
/// <para><b>QuoteLineDetail (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_quotelinetransaction_Product</para>
/// </summary>
public List<QuoteLineDetail> GetQuoteLineDetail_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLineDetail>(Service, this.Id, "msdyn_quotelinetransaction", "msdyn_product", Columns); }
/// <summary>
/// <para><b>RMAProduct (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_rmaproduct_Product</para>
/// </summary>
public List<RMAProduct> GetRMAProducts_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMAProduct>(Service, this.Id, "msdyn_rmaproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>RMAProduct (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_rmaproduct_Product</para>
/// </summary>
public List<RMAProduct> GetRMAProducts_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMAProduct>(Service, this.Id, "msdyn_rmaproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>RTVProduct (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_rtvproduct_Product</para>
/// </summary>
public List<RTVProduct> GetRTVProducts_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTVProduct>(Service, this.Id, "msdyn_rtvproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>RTVProduct (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_rtvproduct_Product</para>
/// </summary>
public List<RTVProduct> GetRTVProducts_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTVProduct>(Service, this.Id, "msdyn_rtvproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>WorkOrderProduct (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_workorderproduct_Product</para>
/// </summary>
public List<WorkOrderProduct> GetWorkOrderProducts_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderProduct>(Service, this.Id, "msdyn_workorderproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>WorkOrderProduct (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_workorderproduct_Product</para>
/// </summary>
public List<WorkOrderProduct> GetWorkOrderProducts_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderProduct>(Service, this.Id, "msdyn_workorderproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>WorkOrderService (Service)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_workorderservice_Service</para>
/// </summary>
public List<WorkOrderService> GetWorkOrderServices_Service (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderService>(Service, this.Id, "msdyn_workorderservice", "msdyn_service", Columns); }
/// <summary>
/// <para><b>WorkOrderService (Service)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_workorderservice_Service</para>
/// </summary>
public List<WorkOrderService> GetWorkOrderServices_Service (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrderService>(Service, this.Id, "msdyn_workorderservice", "msdyn_service", Columns); }
/// <summary>
/// <para><b>OpportunityLine (Existing Product)</b></para>
/// <para>Schema Name: opportunity_products</para>
/// </summary>
public List<OpportunityLine> GetOpportunityLines_ExistingProduct (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLine>(Service, this.Id, "opportunityproduct", "productid", Columns); }
/// <summary>
/// <para><b>OpportunityLine (Existing Product)</b></para>
/// <para>Schema Name: opportunity_products</para>
/// </summary>
public List<OpportunityLine> GetOpportunityLines_ExistingProduct (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLine>(Service, this.Id, "opportunityproduct", "productid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: product_principalobjectattributeaccess</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: product_principalobjectattributeaccess</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: Product_ProcessSessions</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: Product_ProcessSessions</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Product (Parent)</b></para>
/// <para>Schema Name: product_parent_product</para>
/// </summary>
public List<Product> GetProducts_Parent (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Product>(Service, this.Id, "product", "parentproductid", Columns); }
/// <summary>
/// <para><b>Product (Parent)</b></para>
/// <para>Schema Name: product_parent_product</para>
/// </summary>
public List<Product> GetProducts_Parent (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Product>(Service, this.Id, "product", "parentproductid", Columns); }
/// <summary>
/// <para><b>ProductAssociation (Associated Product)</b></para>
/// <para>Schema Name: Product_ProductAssociation_AssocProd</para>
/// </summary>
public List<ProductAssociation> GetProductAssociations_AssociatedProduct (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProductAssociation>(Service, this.Id, "productassociation", "associatedproduct", Columns); }
/// <summary>
/// <para><b>ProductAssociation (Associated Product)</b></para>
/// <para>Schema Name: Product_ProductAssociation_AssocProd</para>
/// </summary>
public List<ProductAssociation> GetProductAssociations_AssociatedProduct (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProductAssociation>(Service, this.Id, "productassociation", "associatedproduct", Columns); }
/// <summary>
/// <para><b>ProductAssociation (Product)</b></para>
/// <para>Schema Name: Product_ProductAssociation_Prod</para>
/// </summary>
public List<ProductAssociation> GetProductAssociations_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProductAssociation>(Service, this.Id, "productassociation", "productid", Columns); }
/// <summary>
/// <para><b>ProductAssociation (Product)</b></para>
/// <para>Schema Name: Product_ProductAssociation_Prod</para>
/// </summary>
public List<ProductAssociation> GetProductAssociations_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProductAssociation>(Service, this.Id, "productassociation", "productid", Columns); }
/// <summary>
/// <para><b>PriceListItem (Product)</b></para>
/// <para>Schema Name: product_price_levels</para>
/// </summary>
public List<PriceListItem> GetPriceListItems_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PriceListItem>(Service, this.Id, "productpricelevel", "productid", Columns); }
/// <summary>
/// <para><b>PriceListItem (Product)</b></para>
/// <para>Schema Name: product_price_levels</para>
/// </summary>
public List<PriceListItem> GetPriceListItems_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PriceListItem>(Service, this.Id, "productpricelevel", "productid", Columns); }
/// <summary>
/// <para><b>ProductRelationship (Product)</b></para>
/// <para>Schema Name: product_ProductSubstitute_productid</para>
/// </summary>
public List<ProductRelationship> GetProductRelationships_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProductRelationship>(Service, this.Id, "productsubstitute", "productid", Columns); }
/// <summary>
/// <para><b>ProductRelationship (Product)</b></para>
/// <para>Schema Name: product_ProductSubstitute_productid</para>
/// </summary>
public List<ProductRelationship> GetProductRelationships_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProductRelationship>(Service, this.Id, "productsubstitute", "productid", Columns); }
/// <summary>
/// <para><b>ProductRelationship (Related Product)</b></para>
/// <para>Schema Name: product_ProductSubstitute_substitutedproductid</para>
/// </summary>
public List<ProductRelationship> GetProductRelationships_RelatedProduct (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProductRelationship>(Service, this.Id, "productsubstitute", "substitutedproductid", Columns); }
/// <summary>
/// <para><b>ProductRelationship (Related Product)</b></para>
/// <para>Schema Name: product_ProductSubstitute_substitutedproductid</para>
/// </summary>
public List<ProductRelationship> GetProductRelationships_RelatedProduct (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProductRelationship>(Service, this.Id, "productsubstitute", "substitutedproductid", Columns); }
/// <summary>
/// <para><b>QuoteLine (Existing Product)</b></para>
/// <para>Schema Name: product_quote_details</para>
/// </summary>
public List<QuoteLine> GetQuoteLines_ExistingProduct (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLine>(Service, this.Id, "quotedetail", "productid", Columns); }
/// <summary>
/// <para><b>QuoteLine (Existing Product)</b></para>
/// <para>Schema Name: product_quote_details</para>
/// </summary>
public List<QuoteLine> GetQuoteLines_ExistingProduct (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<QuoteLine>(Service, this.Id, "quotedetail", "productid", Columns); }
/// <summary>
/// <para><b>RecommendationCache (Product)</b></para>
/// <para>Schema Name: Product_RecommendationCache_ItemId</para>
/// </summary>
public List<RecommendationCache> GetRecommendationCaches_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecommendationCache>(Service, this.Id, "recommendationcache", "itemid", Columns); }
/// <summary>
/// <para><b>RecommendationCache (Product)</b></para>
/// <para>Schema Name: Product_RecommendationCache_ItemId</para>
/// </summary>
public List<RecommendationCache> GetRecommendationCaches_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecommendationCache>(Service, this.Id, "recommendationcache", "itemid", Columns); }
/// <summary>
/// <para><b>RecommendationCache (Recommended Product)</b></para>
/// <para>Schema Name: Product_RecommendationCache_RecommendedItemId</para>
/// </summary>
public List<RecommendationCache> GetRecommendationCaches_RecommendedProduct (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecommendationCache>(Service, this.Id, "recommendationcache", "recommendeditemid", Columns); }
/// <summary>
/// <para><b>RecommendationCache (Recommended Product)</b></para>
/// <para>Schema Name: Product_RecommendationCache_RecommendedItemId</para>
/// </summary>
public List<RecommendationCache> GetRecommendationCaches_RecommendedProduct (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecommendationCache>(Service, this.Id, "recommendationcache", "recommendeditemid", Columns); }
/// <summary>
/// <para><b>OrderLine (Existing Product)</b></para>
/// <para>Schema Name: product_order_details</para>
/// </summary>
public List<OrderLine> GetOrderLines_ExistingProduct (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderLine>(Service, this.Id, "salesorderdetail", "productid", Columns); }
/// <summary>
/// <para><b>OrderLine (Existing Product)</b></para>
/// <para>Schema Name: product_order_details</para>
/// </summary>
public List<OrderLine> GetOrderLines_ExistingProduct (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OrderLine>(Service, this.Id, "salesorderdetail", "productid", Columns); }
/// <summary>
/// <para><b>SharepointDocument (Regarding)</b></para>
/// <para>Schema Name: Product_SharepointDocument</para>
/// </summary>
public List<SharepointDocument> GetDocuments_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SharepointDocument>(Service, this.Id, "sharepointdocument", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SharepointDocument (Regarding)</b></para>
/// <para>Schema Name: Product_SharepointDocument</para>
/// </summary>
public List<SharepointDocument> GetDocuments_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SharepointDocument>(Service, this.Id, "sharepointdocument", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>DocumentLocation (Regarding)</b></para>
/// <para>Schema Name: Product_SharepointDocumentLocation</para>
/// </summary>
public List<DocumentLocation> GetDocumentLocations_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DocumentLocation>(Service, this.Id, "sharepointdocumentlocation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>DocumentLocation (Regarding)</b></para>
/// <para>Schema Name: Product_SharepointDocumentLocation</para>
/// </summary>
public List<DocumentLocation> GetDocumentLocations_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DocumentLocation>(Service, this.Id, "sharepointdocumentlocation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: Product_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: Product_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_product</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_product</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        /// <summary>
/// <para>Related Entity: <b>Campaign</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: campaignproduct_association</para>
/// </summary>
public List<Campaign> GetCampaigns (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<Campaign>(Service, this, "product", "productid", "campaign", "campaignid", "campaignitem", "entityid", "campaignid", Columns); }
public List<Campaign> GetCampaigns (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<Campaign>(Service, this, "product", "productid", "campaign", "campaignid", "campaignitem", "entityid", "campaignid", Columns); }
public void RelateCampaigns (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "campaignproduct_association", Items); }
public void RelateCampaigns (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "campaignproduct_association", Items); }
public void UnRelateCampaigns (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "campaignproduct_association", Items); }
public void UnRelateCampaigns (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "campaignproduct_association", Items); }
/// <summary>
/// <para>Related Entity: <b>Competitor</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: competitorproduct_association</para>
/// </summary>
public List<Competitor> GetCompetitors (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<Competitor>(Service, this, "product", "productid", "competitor", "competitorid", "competitorproduct", "productid", "competitorid", Columns); }
public List<Competitor> GetCompetitors (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<Competitor>(Service, this, "product", "productid", "competitor", "competitorid", "competitorproduct", "productid", "competitorid", Columns); }
public void RelateCompetitors (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "competitorproduct_association", Items); }
public void RelateCompetitors (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "competitorproduct_association", Items); }
public void UnRelateCompetitors (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "competitorproduct_association", Items); }
public void UnRelateCompetitors (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "competitorproduct_association", Items); }
/// <summary>
/// <para>Related Entity: <b>Lead</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: leadproduct_association</para>
/// </summary>
public List<Lead> GetLeads (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<Lead>(Service, this, "product", "productid", "lead", "leadid", "leadproduct", "productid", "leadid", Columns); }
public List<Lead> GetLeads (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<Lead>(Service, this, "product", "productid", "lead", "leadid", "leadproduct", "productid", "leadid", Columns); }
public void RelateLeads (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "leadproduct_association", Items); }
public void RelateLeads (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "leadproduct_association", Items); }
public void UnRelateLeads (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "leadproduct_association", Items); }
public void UnRelateLeads (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "leadproduct_association", Items); }
/// <summary>
/// <para>Related Entity: <b>Entitlement</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: product_entitlement_association</para>
/// </summary>
public List<Entitlement> GetEntitlements (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<Entitlement>(Service, this, "product", "productid", "entitlement", "entitlementid", "entitlementproducts", "productid", "entitlementid", Columns); }
public List<Entitlement> GetEntitlements (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<Entitlement>(Service, this, "product", "productid", "entitlement", "entitlementid", "entitlementproducts", "productid", "entitlementid", Columns); }
public void RelateEntitlements (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "product_entitlement_association", Items); }
public void RelateEntitlements (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "product_entitlement_association", Items); }
public void UnRelateEntitlements (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "product_entitlement_association", Items); }
public void UnRelateEntitlements (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "product_entitlement_association", Items); }
/// <summary>
/// <para>Related Entity: <b>Entitlement Template</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: product_entitlementtemplate_association</para>
/// </summary>
public List<EntitlementTemplate> GetEntitlementTemplates (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<EntitlementTemplate>(Service, this, "product", "productid", "entitlementtemplate", "entitlementtemplateid", "entitlementtemplateproducts", "productid", "entitlementtemplateid", Columns); }
public List<EntitlementTemplate> GetEntitlementTemplates (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<EntitlementTemplate>(Service, this, "product", "productid", "entitlementtemplate", "entitlementtemplateid", "entitlementtemplateproducts", "productid", "entitlementtemplateid", Columns); }
public void RelateEntitlementTemplates (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "product_entitlementtemplate_association", Items); }
public void RelateEntitlementTemplates (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "product_entitlementtemplate_association", Items); }
public void UnRelateEntitlementTemplates (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "product_entitlementtemplate_association", Items); }
public void UnRelateEntitlementTemplates (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "product_entitlementtemplate_association", Items); }
/// <summary>
/// <para>Related Entity: <b>Sales Literature</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: productsalesliterature_association</para>
/// </summary>
public List<SalesLiterature> GetSalesLiterature (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<SalesLiterature>(Service, this, "product", "productid", "salesliterature", "salesliteratureid", "productsalesliterature", "productid", "salesliteratureid", Columns); }
public List<SalesLiterature> GetSalesLiterature (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<SalesLiterature>(Service, this, "product", "productid", "salesliterature", "salesliteratureid", "productsalesliterature", "productid", "salesliteratureid", Columns); }
public void RelateSalesLiterature (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "productsalesliterature_association", Items); }
public void RelateSalesLiterature (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "productsalesliterature_association", Items); }
public void UnRelateSalesLiterature (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "productsalesliterature_association", Items); }
public void UnRelateSalesLiterature (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "productsalesliterature_association", Items); }


        

        public enum eFieldServiceProductType
{
	///<summary><para>Inventory</para>
	///<para>Value = 690970000</para></summary>
	[Description("Inventory")]
	Inventory = 690970000, 
	///<summary><para>Non-Inventory</para>
	///<para>Value = 690970001</para></summary>
	[Description("Non-Inventory")]
	Non_Inventory = 690970001, 
	///<summary><para>Service</para>
	///<para>Value = 690970002</para></summary>
	[Description("Service")]
	Service = 690970002
}
public enum eProductClassification
{
	///<summary><para>Product</para>
	///<para>Value = 1</para></summary>
	[Description("Product")]
	Product = 1, 
	///<summary><para>Product Family</para>
	///<para>Value = 2</para></summary>
	[Description("Product Family")]
	ProductFamily = 2, 
	///<summary><para>Product Bundle</para>
	///<para>Value = 3</para></summary>
	[Description("Product Bundle")]
	ProductBundle = 3
}
public enum eProductType
{
	///<summary><para>Sales Inventory</para>
	///<para>Value = 1</para></summary>
	[Description("Sales Inventory")]
	SalesInventory = 1, 
	///<summary><para>Miscellaneous Charges</para>
	///<para>Value = 2</para></summary>
	[Description("Miscellaneous Charges")]
	MiscellaneousCharges = 2, 
	///<summary><para>Services</para>
	///<para>Value = 3</para></summary>
	[Description("Services")]
	Services = 3, 
	///<summary><para>Flat Fees</para>
	///<para>Value = 4</para></summary>
	[Description("Flat Fees")]
	FlatFees = 4
}
public enum eStatus
{
	///<summary><para>Active</para>
	///<para>Value = 0</para></summary>
	[Description("Active")]
	Active = 0, 
	///<summary><para>Retired</para>
	///<para>Value = 1</para></summary>
	[Description("Retired")]
	Retired = 1, 
	///<summary><para>Draft</para>
	///<para>Value = 2</para></summary>
	[Description("Draft")]
	Draft = 2, 
	///<summary><para>Under Revision</para>
	///<para>Value = 3</para></summary>
	[Description("Under Revision")]
	UnderRevision = 3
}
public enum eStatusReason
{
	///<summary><para>Active</para>
	///<para>Value = 1</para></summary>
	[Description("Active")]
	Active_Active = 1, 
	///<summary><para>Retired</para>
	///<para>Value = 2</para></summary>
	[Description("Retired")]
	Retired_Retired = 2, 
	///<summary><para>Draft</para>
	///<para>Value = 0</para></summary>
	[Description("Draft")]
	Draft_Draft = 0, 
	///<summary><para>Under Revision</para>
	///<para>Value = 3</para></summary>
	[Description("Under Revision")]
	UnderRevision_UnderRevision = 3
}
public void SetState(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>entityimage_timestamp</para>
	/// <para>entityimage_timestamp</para></summary>
	public const string EntityImage_Timestamp = "entityimage_timestamp";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>parentproductidname</para>
	/// <para>parentproductidname</para></summary>
	public const string ParentProductIdName = "parentproductidname";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>defaultuomidname</para>
	/// <para>defaultuomidname</para></summary>
	public const string DefaultUoMIdName = "defaultuomidname";
	/// <summary><para>modifiedbyexternalpartyname</para>
	/// <para>modifiedbyexternalpartyname</para></summary>
	public const string ModifiedByExternalPartyName = "modifiedbyexternalpartyname";
	/// <summary><para>defaultuomscheduleidname</para>
	/// <para>defaultuomscheduleidname</para></summary>
	public const string DefaultUoMScheduleIdName = "defaultuomscheduleidname";
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>modifiedbyexternalpartyyominame</para>
	/// <para>modifiedbyexternalpartyyominame</para></summary>
	public const string ModifiedByExternalPartyYomiName = "modifiedbyexternalpartyyominame";
	/// <summary><para>msdyn_defaultvendoryominame</para>
	/// <para>msdyn_defaultvendoryominame</para></summary>
	public const string Msdyn_DefaultVendorYomiName = "msdyn_defaultvendoryominame";
	/// <summary><para>createdbyexternalpartyname</para>
	/// <para>createdbyexternalpartyname</para></summary>
	public const string CreatedByExternalPartyName = "createdbyexternalpartyname";
	/// <summary><para>msdyn_defaultvendorname</para>
	/// <para>msdyn_defaultvendorname</para></summary>
	public const string Msdyn_DefaultVendorName = "msdyn_defaultvendorname";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>subjectidname</para>
	/// <para>subjectidname</para></summary>
	public const string SubjectIdName = "subjectidname";
	/// <summary><para>pricelevelidname</para>
	/// <para>pricelevelidname</para></summary>
	public const string PriceLevelIdName = "pricelevelidname";
	/// <summary><para>transactioncurrencyidname</para>
	/// <para>transactioncurrencyidname</para></summary>
	public const string TransactionCurrencyIdName = "transactioncurrencyidname";
	/// <summary><para>entityimage_url</para>
	/// <para>entityimage_url</para></summary>
	public const string EntityImage_URL = "entityimage_url";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>createdbyexternalpartyyominame</para>
	/// <para>createdbyexternalpartyyominame</para></summary>
	public const string CreatedByExternalPartyYomiName = "createdbyexternalpartyyominame";
	/// <summary><para>organizationidname</para>
	/// <para>organizationidname</para></summary>
	public const string OrganizationIdName = "organizationidname";
	/// <summary><para>msdyn_transactioncategoryname</para>
	/// <para>msdyn_transactioncategoryname</para></summary>
	public const string Msdyn_TransactionCategoryName = "msdyn_transactioncategoryname";
	/// <summary><para>Convert to Customer Asset</para>
	/// <para>msdyn_converttocustomerasset</para></summary>
	public const string ConvertToCustomerAsset = "msdyn_converttocustomerasset";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created By (External Party)</para>
	/// <para>createdbyexternalparty</para></summary>
	public const string CreatedBy_ExternalParty = "createdbyexternalparty";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Currency</para>
	/// <para>transactioncurrencyid</para></summary>
	public const string Currency = "transactioncurrencyid";
	/// <summary><para>Current Cost</para>
	/// <para>currentcost</para></summary>
	public const string CurrentCost = "currentcost";
	/// <summary><para>Current Cost (Base)</para>
	/// <para>currentcost_base</para></summary>
	public const string CurrentCost_Base = "currentcost_base";
	/// <summary><para>Decimals Supported</para>
	/// <para>quantitydecimal</para></summary>
	public const string DecimalsSupported = "quantitydecimal";
	/// <summary><para>Default Price List</para>
	/// <para>pricelevelid</para></summary>
	public const string DefaultPriceList = "pricelevelid";
	/// <summary><para>Default Unit</para>
	/// <para>defaultuomid</para></summary>
	public const string DefaultUnit = "defaultuomid";
	/// <summary><para>Default Vendor</para>
	/// <para>msdyn_defaultvendor</para></summary>
	public const string DefaultVendor = "msdyn_defaultvendor";
	/// <summary><para>Description</para>
	/// <para>description</para></summary>
	public const string Description = "description";
	/// <summary><para>Entity Image Id</para>
	/// <para>entityimageid</para></summary>
	public const string EntityImageId = "entityimageid";
	/// <summary><para>Exchange Rate</para>
	/// <para>exchangerate</para></summary>
	public const string ExchangeRate = "exchangerate";
	/// <summary><para>Field Service Product Type</para>
	/// <para>msdyn_fieldserviceproducttype</para></summary>
	public const string FieldServiceProductType = "msdyn_fieldserviceproducttype";
	/// <summary><para>Hierarchy Path</para>
	/// <para>hierarchypath</para></summary>
	public const string HierarchyPath = "hierarchypath";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string ImportSequenceNumber = "importsequencenumber";
	/// <summary><para>Internal Use Only</para>
	/// <para>dmtimportstate</para></summary>
	public const string InternalUseOnly = "dmtimportstate";
	/// <summary><para>Is Kit</para>
	/// <para>iskit</para></summary>
	public const string IsKit = "iskit";
	/// <summary><para>List Price</para>
	/// <para>price</para></summary>
	public const string ListPrice = "price";
	/// <summary><para>List Price (Base)</para>
	/// <para>price_base</para></summary>
	public const string ListPrice_Base = "price_base";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified By (External Party)</para>
	/// <para>modifiedbyexternalparty</para></summary>
	public const string ModifiedBy_ExternalParty = "modifiedbyexternalparty";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>Name</para>
	/// <para>name</para></summary>
	public const string Name = "name";
	/// <summary><para>Organization</para>
	/// <para>organizationid</para></summary>
	public const string Organization = "organizationid";
	/// <summary><para>Parent</para>
	/// <para>parentproductid</para></summary>
	public const string Parent = "parentproductid";
	/// <summary><para>Process</para>
	/// <para>processid</para></summary>
	public const string Process = "processid";
	/// <summary><para>Process Stage</para>
	/// <para>stageid</para></summary>
	public const string ProcessStage = "stageid";
	/// <summary><para>Product</para>
	/// <para>productid</para></summary>
	public const string ProductId = "productid";
	/// <summary><para>Product ID</para>
	/// <para>productnumber</para></summary>
	public const string ProductID = "productnumber";
	/// <summary><para>Product Structure</para>
	/// <para>productstructure</para></summary>
	public const string ProductStructure = "productstructure";
	/// <summary><para>Product Type</para>
	/// <para>producttypecode</para></summary>
	public const string ProductType = "producttypecode";
	/// <summary><para>Purchase Name</para>
	/// <para>msdyn_purchasename</para></summary>
	public const string PurchaseName = "msdyn_purchasename";
	/// <summary><para>Quantity On Hand</para>
	/// <para>quantityonhand</para></summary>
	public const string QuantityOnHand = "quantityonhand";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string RecordCreatedOn = "overriddencreatedon";
	/// <summary><para>Size</para>
	/// <para>size</para></summary>
	public const string Size = "size";
	/// <summary><para>Standard Cost</para>
	/// <para>standardcost</para></summary>
	public const string StandardCost = "standardcost";
	/// <summary><para>Standard Cost (Base)</para>
	/// <para>standardcost_base</para></summary>
	public const string StandardCost_Base = "standardcost_base";
	/// <summary><para>Status</para>
	/// <para>statecode</para></summary>
	public const string Status = "statecode";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string StatusReason = "statuscode";
	/// <summary><para>Stock Item</para>
	/// <para>isstockitem</para></summary>
	public const string StockItem = "isstockitem";
	/// <summary><para>Stock Volume</para>
	/// <para>stockvolume</para></summary>
	public const string StockVolume = "stockvolume";
	/// <summary><para>Stock Weight</para>
	/// <para>stockweight</para></summary>
	public const string StockWeight = "stockweight";
	/// <summary><para>Subject</para>
	/// <para>subjectid</para></summary>
	public const string Subject = "subjectid";
	/// <summary><para>Supplier Name</para>
	/// <para>suppliername</para></summary>
	public const string SupplierName = "suppliername";
	/// <summary><para>Taxable</para>
	/// <para>msdyn_taxable</para></summary>
	public const string Taxable = "msdyn_taxable";
	/// <summary><para>Time Zone Rule Version Number</para>
	/// <para>timezoneruleversionnumber</para></summary>
	public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
	/// <summary><para>Transaction Category</para>
	/// <para>msdyn_transactioncategory</para></summary>
	public const string TransactionCategory = "msdyn_transactioncategory";
	/// <summary><para>Traversed Path</para>
	/// <para>traversedpath</para></summary>
	public const string TraversedPath = "traversedpath";
	/// <summary><para>Unit Group</para>
	/// <para>defaultuomscheduleid</para></summary>
	public const string UnitGroup = "defaultuomscheduleid";
	/// <summary><para>UPC Code</para>
	/// <para>msdyn_upccode</para></summary>
	public const string UPCCode = "msdyn_upccode";
	/// <summary><para>URL</para>
	/// <para>producturl</para></summary>
	public const string URL = "producturl";
	/// <summary><para>UTC Conversion Time Zone Code</para>
	/// <para>utcconversiontimezonecode</para></summary>
	public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
	/// <summary><para>Valid From</para>
	/// <para>validfromdate</para></summary>
	public const string ValidFrom = "validfromdate";
	/// <summary><para>Valid To</para>
	/// <para>validtodate</para></summary>
	public const string ValidTo = "validtodate";
	/// <summary><para>Vendor</para>
	/// <para>vendorname</para></summary>
	public const string Vendor = "vendorname";
	/// <summary><para>Vendor ID</para>
	/// <para>vendorid</para></summary>
	public const string VendorID = "vendorid";
	/// <summary><para>Vendor Name</para>
	/// <para>vendorpartnumber</para></summary>
	public const string VendorName = "vendorpartnumber";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
}

    }
}

// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("opportunity")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class Opportunity : BaseProxyClass
    {
        public new const string LogicalName = "opportunity";
        public const int ObjectTypeCode = 3;
        public const string PrimaryIdAttribute = "opportunityid";
        public const string PrimaryNameAttribute = "name";
        
        static Opportunity()
        {
            BaseProxyClass.RegisterProxyType(typeof(Opportunity), "opportunity");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public Opportunity() : base(new Entity("opportunity")) { }
        public Opportunity(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<Opportunity>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: contactidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("contactidname")]
public string ContactIdName
{
	get { return this.GetPropertyValue<string>("contactidname"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyidname")]
public string TransactionCurrencyIdName
{
	get { return this.GetPropertyValue<string>("transactioncurrencyidname"); }
}
///<summary>
///<para>Logical Name: campaignidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("campaignidname")]
public string CampaignIdName
{
	get { return this.GetPropertyValue<string>("campaignidname"); }
}
///<summary>
///<para>Logical Name: owneridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridyominame")]
public string OwnerIdYomiName
{
	get { return this.GetPropertyValue<string>("owneridyominame"); }
}
///<summary>
///<para>Logical Name: accountidyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("accountidyominame")]
public string AccountIdYomiName
{
	get { return this.GetPropertyValue<string>("accountidyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_accountmanageridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_accountmanageridyominame")]
public string Msdyn_AccountManagerIdYomiName
{
	get { return this.GetPropertyValue<string>("msdyn_accountmanageridyominame"); }
}
///<summary>
///<para>Logical Name: parentaccountidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("parentaccountidname")]
public string ParentAccountIdName
{
	get { return this.GetPropertyValue<string>("parentaccountidname"); }
}
///<summary>
///<para>Logical Name: originatingleadidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("originatingleadidname")]
public string OriginatingLeadIdName
{
	get { return this.GetPropertyValue<string>("originatingleadidname"); }
}
///<summary>
///<para>Logical Name: contactidyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("contactidyominame")]
public string ContactIdYomiName
{
	get { return this.GetPropertyValue<string>("contactidyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_workordertypename</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workordertypename")]
public string Msdyn_WorkOrderTypeName
{
	get { return this.GetPropertyValue<string>("msdyn_workordertypename"); }
}
///<summary>
///<para>Logical Name: customeridyominame</para>
///<para>Max Length: 450 characters</para>
///</summary>
[AttributeLogicalNameAttribute("customeridyominame")]
public string CustomerIdYomiName
{
	get { return this.GetPropertyValue<string>("customeridyominame"); }
}
///<summary>
///<para>Logical Name: parentcontactidyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("parentcontactidyominame")]
public string ParentContactIdYomiName
{
	get { return this.GetPropertyValue<string>("parentcontactidyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_accountmanageridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_accountmanageridname")]
public string Msdyn_AccountManagerIdName
{
	get { return this.GetPropertyValue<string>("msdyn_accountmanageridname"); }
}
///<summary>
///<para>Logical Name: accountidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("accountidname")]
public string AccountIdName
{
	get { return this.GetPropertyValue<string>("accountidname"); }
}
///<summary>
///<para>Logical Name: originatingleadidyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("originatingleadidyominame")]
public string OriginatingLeadIdYomiName
{
	get { return this.GetPropertyValue<string>("originatingleadidyominame"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: slainvokedidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("slainvokedidname")]
public string SLAInvokedIdName
{
	get { return this.GetPropertyValue<string>("slainvokedidname"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: owneridtype</para>
///</summary>
[AttributeLogicalNameAttribute("owneridtype")]
public string OwnerIdType
{
	get { return this.GetPropertyValue<string>("owneridtype"); }
	set { this.SetPropertyValue<string>("owneridtype", value, "OwnerIdType"); }
}
///<summary>
///<para>Logical Name: msdyn_contractorganizationalunitidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_contractorganizationalunitidname")]
public string Msdyn_ContractOrganizationalUnitIdName
{
	get { return this.GetPropertyValue<string>("msdyn_contractorganizationalunitidname"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: customeridname</para>
///<para>Max Length: 160 characters</para>
///</summary>
[AttributeLogicalNameAttribute("customeridname")]
public string CustomerIdName
{
	get { return this.GetPropertyValue<string>("customeridname"); }
}
///<summary>
///<para>Logical Name: pricelevelidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("pricelevelidname")]
public string PriceLevelIdName
{
	get { return this.GetPropertyValue<string>("pricelevelidname"); }
}
///<summary>
///<para>Logical Name: parentcontactidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("parentcontactidname")]
public string ParentContactIdName
{
	get { return this.GetPropertyValue<string>("parentcontactidname"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: owneridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridname")]
public string OwnerIdName
{
	get { return this.GetPropertyValue<string>("owneridname"); }
}
///<summary>
///<para>Logical Name: slaname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("slaname")]
public string SLAName
{
	get { return this.GetPropertyValue<string>("slaname"); }
}
///<summary>
///<para>Logical Name: parentaccountidyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("parentaccountidyominame")]
public string ParentAccountIdYomiName
{
	get { return this.GetPropertyValue<string>("parentaccountidyominame"); }
}
///<summary>
///<para>Logical Name: contactid</para>
///</summary>
[AttributeLogicalNameAttribute("contactid")]
public EntityReference ContactId
{
	get { return this.GetPropertyValue<EntityReference>("contactid"); }
}
///<summary>
///<para>Logical Name: accountid</para>
///</summary>
[AttributeLogicalNameAttribute("accountid")]
public EntityReference AccountId
{
	get { return this.GetPropertyValue<EntityReference>("accountid"); }
}
///<summary>
///<para>Logical Name: parentaccountid</para>
///</summary>
[AttributeLogicalNameAttribute("parentaccountid")]
public EntityReference Account
{
	get { return this.GetPropertyValue<EntityReference>("parentaccountid"); }
	set { this.SetPropertyValue<EntityReference>("parentaccountid", value, "Account"); }
}
///<summary>
///<para>Logical Name: msdyn_accountmanagerid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_accountmanagerid")]
public EntityReference AccountManager
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_accountmanagerid"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_accountmanagerid", value, "AccountManager"); }
}
///<summary>
///<para>Logical Name: actualclosedate</para>
///</summary>
[AttributeLogicalNameAttribute("actualclosedate")]
public DateTime? ActualCloseDate
{
	get { return this.GetPropertyValue<DateTime?>("actualclosedate"); }
	set { this.SetPropertyValue<DateTime?>("actualclosedate", value, "ActualCloseDate"); }
}
///<summary>
///<para>Logical Name: actualvalue</para>
///<para>Minimum Value: -1000000000000</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? ActualRevenue
{
	get
	{
		if (ActualRevenueMoney != null) { return ActualRevenueMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ActualRevenueMoney = new Money(value.Value); }
		else this.ActualRevenueMoney = null;
	}
}
///<summary>
///<para>Logical Name: actualvalue</para>
///<para>Minimum Value: -1000000000000</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("actualvalue")]
public Money ActualRevenueMoney
{
	get { return this.GetPropertyValue<Money>("actualvalue"); }
	set { this.SetPropertyValue("actualvalue", (Money)value, (decimal)-1000000000000, (decimal)1000000000000, "ActualRevenueMoney"); }
}
///<summary>
///<para>Logical Name: actualvalue_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? ActualRevenue_Base
{
	get
	{
		if (ActualRevenue_BaseMoney != null) { return ActualRevenue_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: actualvalue_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("actualvalue_base")]
public Money ActualRevenue_BaseMoney
{
	get { return this.GetPropertyValue<Money>("actualvalue_base"); }
}
///<summary>
///<para>Logical Name: int_addtoforecast</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("int_addtoforecast")]
public bool? AddToForecast
{
	get { return this.GetPropertyValue<bool?>("int_addtoforecast"); }
	set { this.SetPropertyValue<bool?>("int_addtoforecast", value, "AddToForecast"); }
}
///<summary>
///<para>Logical Name: new_addtoforecast</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("new_addtoforecast")]
public bool? AddToForecast_old
{
	get { return this.GetPropertyValue<bool?>("new_addtoforecast"); }
	set { this.SetPropertyValue<bool?>("new_addtoforecast", value, "AddToForecast_old"); }
}
/// <summary>
///Logical Name: budgetstatus
/// </summary>
[AttributeLogicalNameAttribute("budgetstatus")]
public eBudget? Budget
{
	get
	{
		if (Budget_OptionSetValue != null) { return (eBudget)Budget_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Budget_OptionSetValue = new OptionSetValue((int)value); }
		else this.Budget_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: budgetstatus</para>
///</summary>
[AttributeLogicalNameAttribute("budgetstatus")]
public OptionSetValue Budget_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("budgetstatus"); }
	set { this.SetPropertyValue<OptionSetValue>("budgetstatus", value, "Budget_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Budget_Text(IOrganizationService Service)
{
	return this.Budget_OptionSetValue.GetOptionSetText(Service, this, "budgetstatus");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Budget_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Budget_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: budgetamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? BudgetAmount
{
	get
	{
		if (BudgetAmountMoney != null) { return BudgetAmountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.BudgetAmountMoney = new Money(value.Value); }
		else this.BudgetAmountMoney = null;
	}
}
///<summary>
///<para>Logical Name: budgetamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("budgetamount")]
public Money BudgetAmountMoney
{
	get { return this.GetPropertyValue<Money>("budgetamount"); }
	set { this.SetPropertyValue("budgetamount", (Money)value, (decimal)0, (decimal)1000000000000, "BudgetAmountMoney"); }
}
///<summary>
///<para>Logical Name: budgetamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? BudgetAmount_Base
{
	get
	{
		if (BudgetAmount_BaseMoney != null) { return BudgetAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: budgetamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("budgetamount_base")]
public Money BudgetAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("budgetamount_base"); }
}
///<summary>
///<para>Logical Name: completeinternalreview</para>
///<para>True = completed</para>
///<para>False = mark complete</para>
///</summary>
[AttributeLogicalNameAttribute("completeinternalreview")]
public bool? CompleteInternalReview
{
	get { return this.GetPropertyValue<bool?>("completeinternalreview"); }
	set { this.SetPropertyValue<bool?>("completeinternalreview", value, "CompleteInternalReview"); }
}
///<summary>
///<para>Logical Name: confirminterest</para>
///<para>True = No</para>
///<para>False = Yes</para>
///</summary>
[AttributeLogicalNameAttribute("confirminterest")]
public bool? ConfirmInterest
{
	get { return this.GetPropertyValue<bool?>("confirminterest"); }
	set { this.SetPropertyValue<bool?>("confirminterest", value, "ConfirmInterest"); }
}
///<summary>
///<para>Logical Name: parentcontactid</para>
///</summary>
[AttributeLogicalNameAttribute("parentcontactid")]
public EntityReference Contact
{
	get { return this.GetPropertyValue<EntityReference>("parentcontactid"); }
	set { this.SetPropertyValue<EntityReference>("parentcontactid", value, "Contact"); }
}
///<summary>
///<para>Logical Name: msdyn_contractorganizationalunitid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_contractorganizationalunitid")]
public EntityReference ContractingUnit
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_contractorganizationalunitid"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_contractorganizationalunitid", value, "ContractingUnit"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyid</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyid")]
public EntityReference Currency
{
	get { return this.GetPropertyValue<EntityReference>("transactioncurrencyid"); }
	set { this.SetPropertyValue<EntityReference>("transactioncurrencyid", value, "Currency"); }
}
///<summary>
///<para>Logical Name: currentsituation</para>
///<para>Max Length: 2000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("currentsituation")]
public string CurrentSituation
{
	get { return this.GetPropertyValue<string>("currentsituation"); }
	set { this.SetPropertyValue("currentsituation", value, 2000, "CurrentSituation"); }
}
///<summary>
///<para>Logical Name: customerneed</para>
///<para>Max Length: 2000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("customerneed")]
public string CustomerNeed
{
	get { return this.GetPropertyValue<string>("customerneed"); }
	set { this.SetPropertyValue("customerneed", value, 2000, "CustomerNeed"); }
}
///<summary>
///<para>Logical Name: customerpainpoints</para>
///<para>Max Length: 2000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("customerpainpoints")]
public string CustomerPainPoints
{
	get { return this.GetPropertyValue<string>("customerpainpoints"); }
	set { this.SetPropertyValue("customerpainpoints", value, 2000, "CustomerPainPoints"); }
}
///<summary>
///<para>Logical Name: pursuitdecision</para>
///<para>True = No</para>
///<para>False = Yes</para>
///</summary>
[AttributeLogicalNameAttribute("pursuitdecision")]
public bool? DecideGo_No_Go
{
	get { return this.GetPropertyValue<bool?>("pursuitdecision"); }
	set { this.SetPropertyValue<bool?>("pursuitdecision", value, "DecideGo_No_Go"); }
}
///<summary>
///<para>Logical Name: decisionmaker</para>
///<para>True = completed</para>
///<para>False = mark complete</para>
///</summary>
[AttributeLogicalNameAttribute("decisionmaker")]
public bool? DecisionMaker
{
	get { return this.GetPropertyValue<bool?>("decisionmaker"); }
	set { this.SetPropertyValue<bool?>("decisionmaker", value, "DecisionMaker"); }
}
///<summary>
///<para>Logical Name: description</para>
///<para>Max Length: 2000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("description")]
public string Description
{
	get { return this.GetPropertyValue<string>("description"); }
	set { this.SetPropertyValue("description", value, 2000, "Description"); }
}
///<summary>
///<para>Logical Name: developproposal</para>
///<para>True = completed</para>
///<para>False = mark complete</para>
///</summary>
[AttributeLogicalNameAttribute("developproposal")]
public bool? DevelopProposal
{
	get { return this.GetPropertyValue<bool?>("developproposal"); }
	set { this.SetPropertyValue<bool?>("developproposal", value, "DevelopProposal"); }
}
///<summary>
///<para>Logical Name: int_discountapproved</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("int_discountapproved")]
public bool? DiscountApproved
{
	get { return this.GetPropertyValue<bool?>("int_discountapproved"); }
	set { this.SetPropertyValue<bool?>("int_discountapproved", value, "DiscountApproved"); }
}
///<summary>
///<para>Logical Name: estimatedclosedate</para>
///</summary>
[AttributeLogicalNameAttribute("estimatedclosedate")]
public DateTime? Est_CloseDate
{
	get { return this.GetPropertyValue<DateTime?>("estimatedclosedate"); }
	set { this.SetPropertyValue<DateTime?>("estimatedclosedate", value, "Est_CloseDate"); }
}
///<summary>
///<para>Logical Name: estimatedvalue</para>
///<para>Minimum Value: -1000000000000</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? Est_Revenue
{
	get
	{
		if (Est_RevenueMoney != null) { return Est_RevenueMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Est_RevenueMoney = new Money(value.Value); }
		else this.Est_RevenueMoney = null;
	}
}
///<summary>
///<para>Logical Name: estimatedvalue</para>
///<para>Minimum Value: -1000000000000</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("estimatedvalue")]
public Money Est_RevenueMoney
{
	get { return this.GetPropertyValue<Money>("estimatedvalue"); }
	set { this.SetPropertyValue("estimatedvalue", (Money)value, (decimal)-1000000000000, (decimal)1000000000000, "Est_RevenueMoney"); }
}
///<summary>
///<para>Logical Name: estimatedvalue_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? Est_Revenue_Base
{
	get
	{
		if (Est_Revenue_BaseMoney != null) { return Est_Revenue_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: estimatedvalue_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("estimatedvalue_base")]
public Money Est_Revenue_BaseMoney
{
	get { return this.GetPropertyValue<Money>("estimatedvalue_base"); }
}
///<summary>
///<para>Logical Name: evaluatefit</para>
///<para>True = No</para>
///<para>False = Yes</para>
///</summary>
[AttributeLogicalNameAttribute("evaluatefit")]
public bool? EvaluateFit
{
	get { return this.GetPropertyValue<bool?>("evaluatefit"); }
	set { this.SetPropertyValue<bool?>("evaluatefit", value, "EvaluateFit"); }
}
///<summary>
///<para>Logical Name: exchangerate</para>
///<para>Minimum Value: 0.0000000001</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 10</para>
///</summary>
[AttributeLogicalNameAttribute("exchangerate")]
public decimal? ExchangeRate
{
	get { return this.GetPropertyValue<decimal?>("exchangerate"); }
}
///<summary>
///<para>Logical Name: resolvefeedback</para>
///<para>True = No</para>
///<para>False = Yes</para>
///</summary>
[AttributeLogicalNameAttribute("resolvefeedback")]
public bool? FeedbackResolved
{
	get { return this.GetPropertyValue<bool?>("resolvefeedback"); }
	set { this.SetPropertyValue<bool?>("resolvefeedback", value, "FeedbackResolved"); }
}
///<summary>
///<para>Logical Name: filedebrief</para>
///<para>True = completed</para>
///<para>False = mark complete</para>
///</summary>
[AttributeLogicalNameAttribute("filedebrief")]
public bool? FileDebrief
{
	get { return this.GetPropertyValue<bool?>("filedebrief"); }
	set { this.SetPropertyValue<bool?>("filedebrief", value, "FileDebrief"); }
}
///<summary>
///<para>Logical Name: finaldecisiondate</para>
///</summary>
[AttributeLogicalNameAttribute("finaldecisiondate")]
public DateTime? FinalDecisionDate
{
	get { return this.GetPropertyValue<DateTime?>("finaldecisiondate"); }
	set { this.SetPropertyValue<DateTime?>("finaldecisiondate", value, "FinalDecisionDate"); }
}
///<summary>
///<para>Logical Name: completefinalproposal</para>
///<para>True = completed</para>
///<para>False = mark complete</para>
///</summary>
[AttributeLogicalNameAttribute("completefinalproposal")]
public bool? FinalProposalReady
{
	get { return this.GetPropertyValue<bool?>("completefinalproposal"); }
	set { this.SetPropertyValue<bool?>("completefinalproposal", value, "FinalProposalReady"); }
}
///<summary>
///<para>Logical Name: int_forecast</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? Forecast
{
	get
	{
		if (ForecastMoney != null) { return ForecastMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ForecastMoney = new Money(value.Value); }
		else this.ForecastMoney = null;
	}
}
///<summary>
///<para>Logical Name: int_forecast</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("int_forecast")]
public Money ForecastMoney
{
	get { return this.GetPropertyValue<Money>("int_forecast"); }
	set { this.SetPropertyValue("int_forecast", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "ForecastMoney"); }
}
///<summary>
///<para>Logical Name: int_forecast_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? Forecast_Base
{
	get
	{
		if (Forecast_BaseMoney != null) { return Forecast_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: int_forecast_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("int_forecast_base")]
public Money Forecast_BaseMoney
{
	get { return this.GetPropertyValue<Money>("int_forecast_base"); }
}
///<summary>
///<para>Logical Name: new_forecast</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 4</para>
///</summary>
public decimal? Forecast_old
{
	get
	{
		if (Forecast_oldMoney != null) { return Forecast_oldMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Forecast_oldMoney = new Money(value.Value); }
		else this.Forecast_oldMoney = null;
	}
}
///<summary>
///<para>Logical Name: new_forecast</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("new_forecast")]
public Money Forecast_oldMoney
{
	get { return this.GetPropertyValue<Money>("new_forecast"); }
	set { this.SetPropertyValue("new_forecast", (Money)value, (decimal)0, (decimal)1000000000, "Forecast_oldMoney"); }
}
///<summary>
///<para>Logical Name: new_forecast_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? Forecast_old_Base
{
	get
	{
		if (Forecast_old_BaseMoney != null) { return Forecast_old_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: new_forecast_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("new_forecast_base")]
public Money Forecast_old_BaseMoney
{
	get { return this.GetPropertyValue<Money>("new_forecast_base"); }
}
///<summary>
///<para>Logical Name: freightamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? FreightAmount
{
	get
	{
		if (FreightAmountMoney != null) { return FreightAmountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.FreightAmountMoney = new Money(value.Value); }
		else this.FreightAmountMoney = null;
	}
}
///<summary>
///<para>Logical Name: freightamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("freightamount")]
public Money FreightAmountMoney
{
	get { return this.GetPropertyValue<Money>("freightamount"); }
	set { this.SetPropertyValue("freightamount", (Money)value, (decimal)0, (decimal)1000000000000, "FreightAmountMoney"); }
}
///<summary>
///<para>Logical Name: freightamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? FreightAmount_Base
{
	get
	{
		if (FreightAmount_BaseMoney != null) { return FreightAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: freightamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("freightamount_base")]
public Money FreightAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("freightamount_base"); }
}
///<summary>
///<para>Logical Name: identifycompetitors</para>
///<para>True = completed</para>
///<para>False = mark complete</para>
///</summary>
[AttributeLogicalNameAttribute("identifycompetitors")]
public bool? IdentifyCompetitors
{
	get { return this.GetPropertyValue<bool?>("identifycompetitors"); }
	set { this.SetPropertyValue<bool?>("identifycompetitors", value, "IdentifyCompetitors"); }
}
///<summary>
///<para>Logical Name: identifycustomercontacts</para>
///<para>True = completed</para>
///<para>False = mark complete</para>
///</summary>
[AttributeLogicalNameAttribute("identifycustomercontacts")]
public bool? IdentifyCustomerContacts
{
	get { return this.GetPropertyValue<bool?>("identifycustomercontacts"); }
	set { this.SetPropertyValue<bool?>("identifycustomercontacts", value, "IdentifyCustomerContacts"); }
}
///<summary>
///<para>Logical Name: identifypursuitteam</para>
///<para>True = completed</para>
///<para>False = mark complete</para>
///</summary>
[AttributeLogicalNameAttribute("identifypursuitteam")]
public bool? IdentifySalesTeam
{
	get { return this.GetPropertyValue<bool?>("identifypursuitteam"); }
	set { this.SetPropertyValue<bool?>("identifypursuitteam", value, "IdentifySalesTeam"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? ImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "ImportSequenceNumber"); }
}
/// <summary>
///Logical Name: initialcommunication
/// </summary>
[AttributeLogicalNameAttribute("initialcommunication")]
public eInitialCommunication? InitialCommunication
{
	get
	{
		if (InitialCommunication_OptionSetValue != null) { return (eInitialCommunication)InitialCommunication_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.InitialCommunication_OptionSetValue = new OptionSetValue((int)value); }
		else this.InitialCommunication_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: initialcommunication</para>
///</summary>
[AttributeLogicalNameAttribute("initialcommunication")]
public OptionSetValue InitialCommunication_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("initialcommunication"); }
	set { this.SetPropertyValue<OptionSetValue>("initialcommunication", value, "InitialCommunication_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string InitialCommunication_Text(IOrganizationService Service)
{
	return this.InitialCommunication_OptionSetValue.GetOptionSetText(Service, this, "initialcommunication");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string InitialCommunication_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.InitialCommunication_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: isprivate</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isprivate")]
public bool? IsPrivate
{
	get { return this.GetPropertyValue<bool?>("isprivate"); }
}
///<summary>
///<para>Logical Name: lastonholdtime</para>
///</summary>
[AttributeLogicalNameAttribute("lastonholdtime")]
public DateTime? LastOnHoldTime
{
	get { return this.GetPropertyValue<DateTime?>("lastonholdtime"); }
	set { this.SetPropertyValue<DateTime?>("lastonholdtime", value, "LastOnHoldTime"); }
}
///<summary>
///<para>Logical Name: slainvokedid</para>
///</summary>
[AttributeLogicalNameAttribute("slainvokedid")]
public EntityReference LastSLAApplied
{
	get { return this.GetPropertyValue<EntityReference>("slainvokedid"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
/// <summary>
///Logical Name: need
/// </summary>
[AttributeLogicalNameAttribute("need")]
public eNeed? Need
{
	get
	{
		if (Need_OptionSetValue != null) { return (eNeed)Need_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Need_OptionSetValue = new OptionSetValue((int)value); }
		else this.Need_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: need</para>
///</summary>
[AttributeLogicalNameAttribute("need")]
public OptionSetValue Need_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("need"); }
	set { this.SetPropertyValue<OptionSetValue>("need", value, "Need_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Need_Text(IOrganizationService Service)
{
	return this.Need_OptionSetValue.GetOptionSetText(Service, this, "need");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Need_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Need_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: onholdtime</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("onholdtime")]
public int? OnHoldTime_Minutes
{
	get { return this.GetPropertyValue<int?>("onholdtime"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: opportunityid</para>
///</summary>
[AttributeLogicalNameAttribute("opportunityid")]
public Guid OpportunityId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: discountpercentage</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("discountpercentage")]
public decimal? OpportunityDiscount
{
	get { return this.GetPropertyValue<decimal?>("discountpercentage"); }
	set { this.SetPropertyValue("discountpercentage", (decimal?)value, (decimal)0, (decimal)100, "OpportunityDiscount"); }
}
///<summary>
///<para>Logical Name: discountamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? OpportunityDiscountAmount
{
	get
	{
		if (OpportunityDiscountAmountMoney != null) { return OpportunityDiscountAmountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.OpportunityDiscountAmountMoney = new Money(value.Value); }
		else this.OpportunityDiscountAmountMoney = null;
	}
}
///<summary>
///<para>Logical Name: discountamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("discountamount")]
public Money OpportunityDiscountAmountMoney
{
	get { return this.GetPropertyValue<Money>("discountamount"); }
	set { this.SetPropertyValue("discountamount", (Money)value, (decimal)0, (decimal)1000000000000, "OpportunityDiscountAmountMoney"); }
}
///<summary>
///<para>Logical Name: discountamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? OpportunityDiscountAmount_Base
{
	get
	{
		if (OpportunityDiscountAmount_BaseMoney != null) { return OpportunityDiscountAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: discountamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("discountamount_base")]
public Money OpportunityDiscountAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("discountamount_base"); }
}
/// <summary>
///Logical Name: msdyn_ordertype
/// </summary>
[AttributeLogicalNameAttribute("msdyn_ordertype")]
public eType? OrderType
{
	get
	{
		if (OrderType_OptionSetValue != null) { return (eType)OrderType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.OrderType_OptionSetValue = new OptionSetValue((int)value); }
		else this.OrderType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_ordertype</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_ordertype")]
public OptionSetValue OrderType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_ordertype"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_ordertype", value, "OrderType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string OrderType_Text(IOrganizationService Service)
{
	return this.OrderType_OptionSetValue.GetOptionSetText(Service, this, "msdyn_ordertype");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string OrderType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.OrderType_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: originatingleadid</para>
///</summary>
[AttributeLogicalNameAttribute("originatingleadid")]
public EntityReference OriginatingLead
{
	get { return this.GetPropertyValue<EntityReference>("originatingleadid"); }
	set { this.SetPropertyValue<EntityReference>("originatingleadid", value, "OriginatingLead"); }
}
///<summary>
///<para>Logical Name: ownerid</para>
///</summary>
[AttributeLogicalNameAttribute("ownerid")]
public EntityReference Owner
{
	get { return this.GetPropertyValue<EntityReference>("ownerid"); }
	set { this.SetPropertyValue<EntityReference>("ownerid", value, "Owner"); }
}
///<summary>
///<para>Logical Name: owningbusinessunit</para>
///</summary>
[AttributeLogicalNameAttribute("owningbusinessunit")]
public EntityReference OwningBusinessUnit
{
	get { return this.GetPropertyValue<EntityReference>("owningbusinessunit"); }
}
///<summary>
///<para>Logical Name: owningteam</para>
///</summary>
[AttributeLogicalNameAttribute("owningteam")]
public EntityReference OwningTeam
{
	get { return this.GetPropertyValue<EntityReference>("owningteam"); }
}
///<summary>
///<para>Logical Name: owninguser</para>
///</summary>
[AttributeLogicalNameAttribute("owninguser")]
public EntityReference OwningUser
{
	get { return this.GetPropertyValue<EntityReference>("owninguser"); }
}
///<summary>
///<para>Logical Name: participatesinworkflow</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("participatesinworkflow")]
public bool? ParticipatesInWorkflow
{
	get { return this.GetPropertyValue<bool?>("participatesinworkflow"); }
	set { this.SetPropertyValue<bool?>("participatesinworkflow", value, "ParticipatesInWorkflow"); }
}
///<summary>
///<para>Logical Name: stepname</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("stepname")]
public string PipelinePhase
{
	get { return this.GetPropertyValue<string>("stepname"); }
	set { this.SetPropertyValue("stepname", value, 200, "PipelinePhase"); }
}
///<summary>
///<para>Logical Name: customerid</para>
///</summary>
[AttributeLogicalNameAttribute("customerid")]
public EntityReference PotentialCustomer
{
	get { return this.GetPropertyValue<EntityReference>("customerid"); }
	set { this.SetPropertyValue<EntityReference>("customerid", value, "PotentialCustomer"); }
}
///<summary>
///<para>Logical Name: customeridtype</para>
///</summary>
[AttributeLogicalNameAttribute("customeridtype")]
public string PotentialCustomerType
{
	get { return this.GetPropertyValue<string>("customeridtype"); }
	set { this.SetPropertyValue<string>("customeridtype", value, "PotentialCustomerType"); }
}
///<summary>
///<para>Logical Name: presentfinalproposal</para>
///<para>True = completed</para>
///<para>False = mark complete</para>
///</summary>
[AttributeLogicalNameAttribute("presentfinalproposal")]
public bool? PresentFinalProposal
{
	get { return this.GetPropertyValue<bool?>("presentfinalproposal"); }
	set { this.SetPropertyValue<bool?>("presentfinalproposal", value, "PresentFinalProposal"); }
}
///<summary>
///<para>Logical Name: presentproposal</para>
///<para>True = completed</para>
///<para>False = mark complete</para>
///</summary>
[AttributeLogicalNameAttribute("presentproposal")]
public bool? PresentedProposal
{
	get { return this.GetPropertyValue<bool?>("presentproposal"); }
	set { this.SetPropertyValue<bool?>("presentproposal", value, "PresentedProposal"); }
}
///<summary>
///<para>Logical Name: pricelevelid</para>
///</summary>
[AttributeLogicalNameAttribute("pricelevelid")]
public EntityReference PriceList
{
	get { return this.GetPropertyValue<EntityReference>("pricelevelid"); }
	set { this.SetPropertyValue<EntityReference>("pricelevelid", value, "PriceList"); }
}
/// <summary>
///Logical Name: pricingerrorcode
/// </summary>
[AttributeLogicalNameAttribute("pricingerrorcode")]
public ePricingError? PricingError
{
	get
	{
		if (PricingError_OptionSetValue != null) { return (ePricingError)PricingError_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.PricingError_OptionSetValue = new OptionSetValue((int)value); }
		else this.PricingError_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: pricingerrorcode</para>
///</summary>
[AttributeLogicalNameAttribute("pricingerrorcode")]
public OptionSetValue PricingError_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("pricingerrorcode"); }
	set { this.SetPropertyValue<OptionSetValue>("pricingerrorcode", value, "PricingError_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string PricingError_Text(IOrganizationService Service)
{
	return this.PricingError_OptionSetValue.GetOptionSetText(Service, this, "pricingerrorcode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string PricingError_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.PricingError_OptionSetValue.Value);
}
/// <summary>
///Logical Name: prioritycode
/// </summary>
[AttributeLogicalNameAttribute("prioritycode")]
public ePriority? Priority
{
	get
	{
		if (Priority_OptionSetValue != null) { return (ePriority)Priority_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Priority_OptionSetValue = new OptionSetValue((int)value); }
		else this.Priority_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: prioritycode</para>
///</summary>
[AttributeLogicalNameAttribute("prioritycode")]
public OptionSetValue Priority_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("prioritycode"); }
	set { this.SetPropertyValue<OptionSetValue>("prioritycode", value, "Priority_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Priority_Text(IOrganizationService Service)
{
	return this.Priority_OptionSetValue.GetOptionSetText(Service, this, "prioritycode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Priority_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Priority_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: closeprobability</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100</para>
///</summary>
[AttributeLogicalNameAttribute("closeprobability")]
public int? Probability
{
	get { return this.GetPropertyValue<int?>("closeprobability"); }
	set { this.SetPropertyValue("closeprobability", (int?)value, (int)0, (int)100, "Probability"); }
}
///<summary>
///<para>Logical Name: processid</para>
///</summary>
[AttributeLogicalNameAttribute("processid")]
public Guid Process
{
	get { return this.GetPropertyValue<Guid>("processid"); }
	set { this.SetPropertyValue<Guid>("processid", value, "Process"); }
}
/// <summary>
///Logical Name: salesstagecode
/// </summary>
[AttributeLogicalNameAttribute("salesstagecode")]
public eProcessCode? ProcessCode
{
	get
	{
		if (ProcessCode_OptionSetValue != null) { return (eProcessCode)ProcessCode_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ProcessCode_OptionSetValue = new OptionSetValue((int)value); }
		else this.ProcessCode_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: salesstagecode</para>
///</summary>
[AttributeLogicalNameAttribute("salesstagecode")]
public OptionSetValue ProcessCode_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("salesstagecode"); }
	set { this.SetPropertyValue<OptionSetValue>("salesstagecode", value, "ProcessCode_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ProcessCode_Text(IOrganizationService Service)
{
	return this.ProcessCode_OptionSetValue.GetOptionSetText(Service, this, "salesstagecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ProcessCode_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ProcessCode_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: stageid</para>
///</summary>
[AttributeLogicalNameAttribute("stageid")]
public Guid ProcessStage
{
	get { return this.GetPropertyValue<Guid>("stageid"); }
	set { this.SetPropertyValue<Guid>("stageid", value, "ProcessStage"); }
}
///<summary>
///<para>Logical Name: captureproposalfeedback</para>
///<para>True = No</para>
///<para>False = Yes</para>
///</summary>
[AttributeLogicalNameAttribute("captureproposalfeedback")]
public bool? ProposalFeedbackCaptured
{
	get { return this.GetPropertyValue<bool?>("captureproposalfeedback"); }
	set { this.SetPropertyValue<bool?>("captureproposalfeedback", value, "ProposalFeedbackCaptured"); }
}
///<summary>
///<para>Logical Name: proposedsolution</para>
///<para>Max Length: 2000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("proposedsolution")]
public string ProposedSolution
{
	get { return this.GetPropertyValue<string>("proposedsolution"); }
	set { this.SetPropertyValue("proposedsolution", value, 2000, "ProposedSolution"); }
}
/// <summary>
///Logical Name: purchaseprocess
/// </summary>
[AttributeLogicalNameAttribute("purchaseprocess")]
public ePurchaseProcess? PurchaseProcess
{
	get
	{
		if (PurchaseProcess_OptionSetValue != null) { return (ePurchaseProcess)PurchaseProcess_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.PurchaseProcess_OptionSetValue = new OptionSetValue((int)value); }
		else this.PurchaseProcess_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: purchaseprocess</para>
///</summary>
[AttributeLogicalNameAttribute("purchaseprocess")]
public OptionSetValue PurchaseProcess_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("purchaseprocess"); }
	set { this.SetPropertyValue<OptionSetValue>("purchaseprocess", value, "PurchaseProcess_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string PurchaseProcess_Text(IOrganizationService Service)
{
	return this.PurchaseProcess_OptionSetValue.GetOptionSetText(Service, this, "purchaseprocess");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string PurchaseProcess_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.PurchaseProcess_OptionSetValue.Value);
}
/// <summary>
///Logical Name: purchasetimeframe
/// </summary>
[AttributeLogicalNameAttribute("purchasetimeframe")]
public ePurchaseTimeframe? PurchaseTimeframe
{
	get
	{
		if (PurchaseTimeframe_OptionSetValue != null) { return (ePurchaseTimeframe)PurchaseTimeframe_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.PurchaseTimeframe_OptionSetValue = new OptionSetValue((int)value); }
		else this.PurchaseTimeframe_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: purchasetimeframe</para>
///</summary>
[AttributeLogicalNameAttribute("purchasetimeframe")]
public OptionSetValue PurchaseTimeframe_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("purchasetimeframe"); }
	set { this.SetPropertyValue<OptionSetValue>("purchasetimeframe", value, "PurchaseTimeframe_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string PurchaseTimeframe_Text(IOrganizationService Service)
{
	return this.PurchaseTimeframe_OptionSetValue.GetOptionSetText(Service, this, "purchasetimeframe");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string PurchaseTimeframe_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.PurchaseTimeframe_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: qualificationcomments</para>
///<para>Max Length: 2000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("qualificationcomments")]
public string QualificationComments
{
	get { return this.GetPropertyValue<string>("qualificationcomments"); }
	set { this.SetPropertyValue("qualificationcomments", value, 2000, "QualificationComments"); }
}
///<summary>
///<para>Logical Name: quotecomments</para>
///<para>Max Length: 2000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("quotecomments")]
public string QuoteComments
{
	get { return this.GetPropertyValue<string>("quotecomments"); }
	set { this.SetPropertyValue("quotecomments", value, 2000, "QuoteComments"); }
}
/// <summary>
///Logical Name: opportunityratingcode
/// </summary>
[AttributeLogicalNameAttribute("opportunityratingcode")]
public eRating? Rating
{
	get
	{
		if (Rating_OptionSetValue != null) { return (eRating)Rating_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Rating_OptionSetValue = new OptionSetValue((int)value); }
		else this.Rating_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: opportunityratingcode</para>
///</summary>
[AttributeLogicalNameAttribute("opportunityratingcode")]
public OptionSetValue Rating_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("opportunityratingcode"); }
	set { this.SetPropertyValue<OptionSetValue>("opportunityratingcode", value, "Rating_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Rating_Text(IOrganizationService Service)
{
	return this.Rating_OptionSetValue.GetOptionSetText(Service, this, "opportunityratingcode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Rating_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Rating_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? RecordCreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "RecordCreatedOn"); }
}
///<summary>
///<para>Logical Name: isrevenuesystemcalculated</para>
///<para>True = System Calculated</para>
///<para>False = User Provided</para>
///</summary>
[AttributeLogicalNameAttribute("isrevenuesystemcalculated")]
public bool? Revenue
{
	get { return this.GetPropertyValue<bool?>("isrevenuesystemcalculated"); }
	set { this.SetPropertyValue<bool?>("isrevenuesystemcalculated", value, "Revenue"); }
}
/// <summary>
///Logical Name: salesstage
/// </summary>
[AttributeLogicalNameAttribute("salesstage")]
public eOpportunitySalesStage? SalesStage
{
	get
	{
		if (SalesStage_OptionSetValue != null) { return (eOpportunitySalesStage)SalesStage_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.SalesStage_OptionSetValue = new OptionSetValue((int)value); }
		else this.SalesStage_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: salesstage</para>
///</summary>
[AttributeLogicalNameAttribute("salesstage")]
public OptionSetValue SalesStage_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("salesstage"); }
	set { this.SetPropertyValue<OptionSetValue>("salesstage", value, "SalesStage_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string SalesStage_Text(IOrganizationService Service)
{
	return this.SalesStage_OptionSetValue.GetOptionSetText(Service, this, "salesstage");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string SalesStage_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.SalesStage_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: scheduleproposalmeeting</para>
///</summary>
[AttributeLogicalNameAttribute("scheduleproposalmeeting")]
public DateTime? ScheduleProposalMeeting
{
	get { return this.GetPropertyValue<DateTime?>("scheduleproposalmeeting"); }
	set { this.SetPropertyValue<DateTime?>("scheduleproposalmeeting", value, "ScheduleProposalMeeting"); }
}
///<summary>
///<para>Logical Name: schedulefollowup_prospect</para>
///</summary>
[AttributeLogicalNameAttribute("schedulefollowup_prospect")]
public DateTime? ScheduledFollowUp_Prospect
{
	get { return this.GetPropertyValue<DateTime?>("schedulefollowup_prospect"); }
	set { this.SetPropertyValue<DateTime?>("schedulefollowup_prospect", value, "ScheduledFollowUp_Prospect"); }
}
///<summary>
///<para>Logical Name: schedulefollowup_qualify</para>
///</summary>
[AttributeLogicalNameAttribute("schedulefollowup_qualify")]
public DateTime? ScheduledFollowUp_Qualify
{
	get { return this.GetPropertyValue<DateTime?>("schedulefollowup_qualify"); }
	set { this.SetPropertyValue<DateTime?>("schedulefollowup_qualify", value, "ScheduledFollowUp_Qualify"); }
}
///<summary>
///<para>Logical Name: sendthankyounote</para>
///<para>True = completed</para>
///<para>False = mark complete</para>
///</summary>
[AttributeLogicalNameAttribute("sendthankyounote")]
public bool? SendThankYouNote
{
	get { return this.GetPropertyValue<bool?>("sendthankyounote"); }
	set { this.SetPropertyValue<bool?>("sendthankyounote", value, "SendThankYouNote"); }
}
///<summary>
///<para>Logical Name: slaid</para>
///</summary>
[AttributeLogicalNameAttribute("slaid")]
public EntityReference SLA
{
	get { return this.GetPropertyValue<EntityReference>("slaid"); }
	set { this.SetPropertyValue<EntityReference>("slaid", value, "SLA"); }
}
///<summary>
///<para>Logical Name: campaignid</para>
///</summary>
[AttributeLogicalNameAttribute("campaignid")]
public EntityReference SourceCampaign
{
	get { return this.GetPropertyValue<EntityReference>("campaignid"); }
	set { this.SetPropertyValue<EntityReference>("campaignid", value, "SourceCampaign"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eStatus? Status
{
	get
	{
		if (Status_OptionSetValue != null) { return (eStatus)Status_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Status_OptionSetValue = new OptionSetValue((int)value); }
		else this.Status_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue Status_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
	set { this.SetPropertyValue<OptionSetValue>("statecode", value, "Status_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Status_Text(IOrganizationService Service)
{
	return this.Status_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Status_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Status_OptionSetValue.Value);
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? StatusReason
{
	get
	{
		if (StatusReason_OptionSetValue != null) { return (eStatusReason)StatusReason_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StatusReason_OptionSetValue = new OptionSetValue((int)value); }
		else this.StatusReason_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue StatusReason_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "StatusReason_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string StatusReason_Text(IOrganizationService Service)
{
	return this.StatusReason_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string StatusReason_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.StatusReason_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: stepid</para>
///</summary>
[AttributeLogicalNameAttribute("stepid")]
public Guid Step
{
	get { return this.GetPropertyValue<Guid>("stepid"); }
	set { this.SetPropertyValue<Guid>("stepid", value, "Step"); }
}
///<summary>
///<para>Logical Name: timespentbymeonemailandmeetings</para>
///<para>Max Length: 1250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("timespentbymeonemailandmeetings")]
public string TimeSpentByMe
{
	get { return this.GetPropertyValue<string>("timespentbymeonemailandmeetings"); }
}
///<summary>
///<para>Logical Name: timezoneruleversionnumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("timezoneruleversionnumber")]
public int? TimeZoneRuleVersionNumber
{
	get { return this.GetPropertyValue<int?>("timezoneruleversionnumber"); }
	set { this.SetPropertyValue("timezoneruleversionnumber", (int?)value, (int)-1, (int)2147483647, "TimeZoneRuleVersionNumber"); }
}
/// <summary>
///Logical Name: timeline
/// </summary>
[AttributeLogicalNameAttribute("timeline")]
public eTimeline? Timeline
{
	get
	{
		if (Timeline_OptionSetValue != null) { return (eTimeline)Timeline_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Timeline_OptionSetValue = new OptionSetValue((int)value); }
		else this.Timeline_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: timeline</para>
///</summary>
[AttributeLogicalNameAttribute("timeline")]
public OptionSetValue Timeline_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("timeline"); }
	set { this.SetPropertyValue<OptionSetValue>("timeline", value, "Timeline_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Timeline_Text(IOrganizationService Service)
{
	return this.Timeline_OptionSetValue.GetOptionSetText(Service, this, "timeline");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Timeline_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Timeline_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: name</para>
///<para>Max Length: 300 characters</para>
///</summary>
[AttributeLogicalNameAttribute("name")]
public string Topic
{
	get { return this.GetPropertyValue<string>("name"); }
	set { this.SetPropertyValue("name", value, 300, "Topic"); }
}
///<summary>
///<para>Logical Name: totalamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalAmount
{
	get
	{
		if (TotalAmountMoney != null) { return TotalAmountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.TotalAmountMoney = new Money(value.Value); }
		else this.TotalAmountMoney = null;
	}
}
///<summary>
///<para>Logical Name: totalamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("totalamount")]
public Money TotalAmountMoney
{
	get { return this.GetPropertyValue<Money>("totalamount"); }
	set { this.SetPropertyValue("totalamount", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "TotalAmountMoney"); }
}
///<summary>
///<para>Logical Name: totalamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? TotalAmount_Base
{
	get
	{
		if (TotalAmount_BaseMoney != null) { return TotalAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: totalamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("totalamount_base")]
public Money TotalAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("totalamount_base"); }
}
///<summary>
///<para>Logical Name: totallineitemamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalDetailAmount
{
	get
	{
		if (TotalDetailAmountMoney != null) { return TotalDetailAmountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.TotalDetailAmountMoney = new Money(value.Value); }
		else this.TotalDetailAmountMoney = null;
	}
}
///<summary>
///<para>Logical Name: totallineitemamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("totallineitemamount")]
public Money TotalDetailAmountMoney
{
	get { return this.GetPropertyValue<Money>("totallineitemamount"); }
	set { this.SetPropertyValue("totallineitemamount", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "TotalDetailAmountMoney"); }
}
///<summary>
///<para>Logical Name: totallineitemamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? TotalDetailAmount_Base
{
	get
	{
		if (TotalDetailAmount_BaseMoney != null) { return TotalDetailAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: totallineitemamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("totallineitemamount_base")]
public Money TotalDetailAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("totallineitemamount_base"); }
}
///<summary>
///<para>Logical Name: totaldiscountamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalDiscountAmount
{
	get
	{
		if (TotalDiscountAmountMoney != null) { return TotalDiscountAmountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.TotalDiscountAmountMoney = new Money(value.Value); }
		else this.TotalDiscountAmountMoney = null;
	}
}
///<summary>
///<para>Logical Name: totaldiscountamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("totaldiscountamount")]
public Money TotalDiscountAmountMoney
{
	get { return this.GetPropertyValue<Money>("totaldiscountamount"); }
	set { this.SetPropertyValue("totaldiscountamount", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "TotalDiscountAmountMoney"); }
}
///<summary>
///<para>Logical Name: totaldiscountamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? TotalDiscountAmount_Base
{
	get
	{
		if (TotalDiscountAmount_BaseMoney != null) { return TotalDiscountAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: totaldiscountamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("totaldiscountamount_base")]
public Money TotalDiscountAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("totaldiscountamount_base"); }
}
///<summary>
///<para>Logical Name: totallineitemdiscountamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalLineItemDiscountAmount
{
	get
	{
		if (TotalLineItemDiscountAmountMoney != null) { return TotalLineItemDiscountAmountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.TotalLineItemDiscountAmountMoney = new Money(value.Value); }
		else this.TotalLineItemDiscountAmountMoney = null;
	}
}
///<summary>
///<para>Logical Name: totallineitemdiscountamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("totallineitemdiscountamount")]
public Money TotalLineItemDiscountAmountMoney
{
	get { return this.GetPropertyValue<Money>("totallineitemdiscountamount"); }
	set { this.SetPropertyValue("totallineitemdiscountamount", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "TotalLineItemDiscountAmountMoney"); }
}
///<summary>
///<para>Logical Name: totallineitemdiscountamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? TotalLineItemDiscountAmount_Base
{
	get
	{
		if (TotalLineItemDiscountAmount_BaseMoney != null) { return TotalLineItemDiscountAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: totallineitemdiscountamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("totallineitemdiscountamount_base")]
public Money TotalLineItemDiscountAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("totallineitemdiscountamount_base"); }
}
///<summary>
///<para>Logical Name: totalamountlessfreight</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalPre_FreightAmount
{
	get
	{
		if (TotalPre_FreightAmountMoney != null) { return TotalPre_FreightAmountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.TotalPre_FreightAmountMoney = new Money(value.Value); }
		else this.TotalPre_FreightAmountMoney = null;
	}
}
///<summary>
///<para>Logical Name: totalamountlessfreight</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("totalamountlessfreight")]
public Money TotalPre_FreightAmountMoney
{
	get { return this.GetPropertyValue<Money>("totalamountlessfreight"); }
	set { this.SetPropertyValue("totalamountlessfreight", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "TotalPre_FreightAmountMoney"); }
}
///<summary>
///<para>Logical Name: totalamountlessfreight_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? TotalPre_FreightAmount_Base
{
	get
	{
		if (TotalPre_FreightAmount_BaseMoney != null) { return TotalPre_FreightAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: totalamountlessfreight_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("totalamountlessfreight_base")]
public Money TotalPre_FreightAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("totalamountlessfreight_base"); }
}
///<summary>
///<para>Logical Name: totaltax</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalTax
{
	get
	{
		if (TotalTaxMoney != null) { return TotalTaxMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.TotalTaxMoney = new Money(value.Value); }
		else this.TotalTaxMoney = null;
	}
}
///<summary>
///<para>Logical Name: totaltax</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("totaltax")]
public Money TotalTaxMoney
{
	get { return this.GetPropertyValue<Money>("totaltax"); }
	set { this.SetPropertyValue("totaltax", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "TotalTaxMoney"); }
}
///<summary>
///<para>Logical Name: totaltax_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? TotalTax_Base
{
	get
	{
		if (TotalTax_BaseMoney != null) { return TotalTax_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: totaltax_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("totaltax_base")]
public Money TotalTax_BaseMoney
{
	get { return this.GetPropertyValue<Money>("totaltax_base"); }
}
///<summary>
///<para>Logical Name: traversedpath</para>
///<para>Max Length: 1250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("traversedpath")]
public string TraversedPath
{
	get { return this.GetPropertyValue<string>("traversedpath"); }
	set { this.SetPropertyValue("traversedpath", value, 1250, "TraversedPath"); }
}
///<summary>
///<para>Logical Name: utcconversiontimezonecode</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utcconversiontimezonecode")]
public int? UTCConversionTimeZoneCode
{
	get { return this.GetPropertyValue<int?>("utcconversiontimezonecode"); }
	set { this.SetPropertyValue("utcconversiontimezonecode", (int?)value, (int)-1, (int)2147483647, "UTCConversionTimeZoneCode"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}
///<summary>
///<para>Logical Name: msdyn_workordertype</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workordertype")]
public EntityReference WorkOrderType
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_workordertype"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_workordertype", value, "WorkOrderType"); }
}


        /// <summary>
/// <para><b>ActionCard (Regarding)</b></para>
/// <para>Schema Name: opportunity_actioncard</para>
/// </summary>
public List<ActionCard> GetActionCards_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActionCard>(Service, this.Id, "actioncard", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ActionCard (Regarding)</b></para>
/// <para>Schema Name: opportunity_actioncard</para>
/// </summary>
public List<ActionCard> GetActionCards_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActionCard>(Service, this.Id, "actioncard", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ActivityParty (Party)</b></para>
/// <para>Schema Name: opportunity_activity_parties</para>
/// </summary>
public List<ActivityParty> GetActivityParties_Party (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActivityParty>(Service, this.Id, "activityparty", "partyid", Columns); }
/// <summary>
/// <para><b>ActivityParty (Party)</b></para>
/// <para>Schema Name: opportunity_activity_parties</para>
/// </summary>
public List<ActivityParty> GetActivityParties_Party (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ActivityParty>(Service, this.Id, "activityparty", "partyid", Columns); }
/// <summary>
/// <para><b>Activity (Regarding)</b></para>
/// <para>Schema Name: Opportunity_ActivityPointers</para>
/// </summary>
public List<Activity> GetActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Activity>(Service, this.Id, "activitypointer", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Activity (Regarding)</b></para>
/// <para>Schema Name: Opportunity_ActivityPointers</para>
/// </summary>
public List<Activity> GetActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Activity>(Service, this.Id, "activitypointer", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: Opportunity_Annotation</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: Opportunity_Annotation</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Appointment (Regarding)</b></para>
/// <para>Schema Name: Opportunity_Appointments</para>
/// </summary>
public List<Appointment> GetAppointments_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Appointment>(Service, this.Id, "appointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Appointment (Regarding)</b></para>
/// <para>Schema Name: Opportunity_Appointments</para>
/// </summary>
public List<Appointment> GetAppointments_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Appointment>(Service, this.Id, "appointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: Opportunity_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: Opportunity_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: Opportunity_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: Opportunity_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkOperationLog (Created Object)</b></para>
/// <para>Schema Name: CreatedOpportunity_BulkOperationLogs</para>
/// </summary>
public List<BulkOperationLog> GetBulkOperationLogs_CreatedObject (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkOperationLog>(Service, this.Id, "bulkoperationlog", "createdobjectid", Columns); }
/// <summary>
/// <para><b>BulkOperationLog (Created Object)</b></para>
/// <para>Schema Name: CreatedOpportunity_BulkOperationLogs</para>
/// </summary>
public List<BulkOperationLog> GetBulkOperationLogs_CreatedObject (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkOperationLog>(Service, this.Id, "bulkoperationlog", "createdobjectid", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: opportunity_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: opportunity_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: opportunity_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: opportunity_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>OpportunityRelationship (Opportunity)</b></para>
/// <para>Schema Name: opportunity_customer_opportunity_roles</para>
/// </summary>
public List<OpportunityRelationship> GetOpportunityRelationships_Opportunity (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityRelationship>(Service, this.Id, "customeropportunityrole", "opportunityid", Columns); }
/// <summary>
/// <para><b>OpportunityRelationship (Opportunity)</b></para>
/// <para>Schema Name: opportunity_customer_opportunity_roles</para>
/// </summary>
public List<OpportunityRelationship> GetOpportunityRelationships_Opportunity (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityRelationship>(Service, this.Id, "customeropportunityrole", "opportunityid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: Opportunity_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: Opportunity_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: Opportunity_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: Opportunity_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>Email (Regarding)</b></para>
/// <para>Schema Name: Opportunity_Emails</para>
/// </summary>
public List<Email> GetEmailMessages_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Email (Regarding)</b></para>
/// <para>Schema Name: Opportunity_Emails</para>
/// </summary>
public List<Email> GetEmailMessages_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Fax (Regarding)</b></para>
/// <para>Schema Name: Opportunity_Faxes</para>
/// </summary>
public List<Fax> GetFaxes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fax>(Service, this.Id, "fax", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Fax (Regarding)</b></para>
/// <para>Schema Name: Opportunity_Faxes</para>
/// </summary>
public List<Fax> GetFaxes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fax>(Service, this.Id, "fax", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Invoice (Opportunity)</b></para>
/// <para>Schema Name: opportunity_invoices</para>
/// </summary>
public List<Invoice> GetInvoices_Opportunity (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Invoice>(Service, this.Id, "invoice", "opportunityid", Columns); }
/// <summary>
/// <para><b>Invoice (Opportunity)</b></para>
/// <para>Schema Name: opportunity_invoices</para>
/// </summary>
public List<Invoice> GetInvoices_Opportunity (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Invoice>(Service, this.Id, "invoice", "opportunityid", Columns); }
/// <summary>
/// <para><b>Lead (Qualifying Opportunity)</b></para>
/// <para>Schema Name: lead_qualifying_opportunity</para>
/// </summary>
public List<Lead> GetLeads_QualifyingOpportunity (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Lead>(Service, this.Id, "lead", "qualifyingopportunityid", Columns); }
/// <summary>
/// <para><b>Lead (Qualifying Opportunity)</b></para>
/// <para>Schema Name: lead_qualifying_opportunity</para>
/// </summary>
public List<Lead> GetLeads_QualifyingOpportunity (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Lead>(Service, this.Id, "lead", "qualifyingopportunityid", Columns); }
/// <summary>
/// <para><b>LeadToOpportunitySalesProcess (Opportunity Id)</b></para>
/// <para>Schema Name: lk_leadtoopportunitysalesprocess_opportunityid</para>
/// </summary>
public List<LeadToOpportunitySalesProcess> GetLeadToOpportunitySalesProcess_OpportunityId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<LeadToOpportunitySalesProcess>(Service, this.Id, "leadtoopportunitysalesprocess", "opportunityid", Columns); }
/// <summary>
/// <para><b>LeadToOpportunitySalesProcess (Opportunity Id)</b></para>
/// <para>Schema Name: lk_leadtoopportunitysalesprocess_opportunityid</para>
/// </summary>
public List<LeadToOpportunitySalesProcess> GetLeadToOpportunitySalesProcess_OpportunityId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<LeadToOpportunitySalesProcess>(Service, this.Id, "leadtoopportunitysalesprocess", "opportunityid", Columns); }
/// <summary>
/// <para><b>Letter (Regarding)</b></para>
/// <para>Schema Name: Opportunity_Letters</para>
/// </summary>
public List<Letter> GetLetters_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Letter>(Service, this.Id, "letter", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Letter (Regarding)</b></para>
/// <para>Schema Name: Opportunity_Letters</para>
/// </summary>
public List<Letter> GetLetters_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Letter>(Service, this.Id, "letter", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: Opportunity_MailboxTrackingFolder</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: Opportunity_MailboxTrackingFolder</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Approval (Regarding)</b></para>
/// <para>Schema Name: opportunity_msdyn_approvals</para>
/// </summary>
public List<Approval> GetApprovals_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Approval>(Service, this.Id, "msdyn_approval", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Approval (Regarding)</b></para>
/// <para>Schema Name: opportunity_msdyn_approvals</para>
/// </summary>
public List<Approval> GetApprovals_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Approval>(Service, this.Id, "msdyn_approval", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BookingAlert (Regarding)</b></para>
/// <para>Schema Name: opportunity_msdyn_bookingalerts</para>
/// </summary>
public List<BookingAlert> GetBookingAlerts_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlert>(Service, this.Id, "msdyn_bookingalert", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BookingAlert (Regarding)</b></para>
/// <para>Schema Name: opportunity_msdyn_bookingalerts</para>
/// </summary>
public List<BookingAlert> GetBookingAlerts_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlert>(Service, this.Id, "msdyn_bookingalert", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>OpportunityProjectPriceList (Opportunity)</b></para>
/// <para>Schema Name: msdyn_opportunity_msdyn_opportunitypricelist_Opportunity</para>
/// </summary>
public List<OpportunityProjectPriceList> GetProjectPriceLists_Opportunity (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityProjectPriceList>(Service, this.Id, "msdyn_opportunitypricelist", "msdyn_opportunity", Columns); }
/// <summary>
/// <para><b>OpportunityProjectPriceList (Opportunity)</b></para>
/// <para>Schema Name: msdyn_opportunity_msdyn_opportunitypricelist_Opportunity</para>
/// </summary>
public List<OpportunityProjectPriceList> GetProjectPriceLists_Opportunity (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityProjectPriceList>(Service, this.Id, "msdyn_opportunitypricelist", "msdyn_opportunity", Columns); }
/// <summary>
/// <para><b>WorkOrder (Opportunity)</b></para>
/// <para>Schema Name: msdyn_opportunity_msdyn_workorder</para>
/// </summary>
public List<WorkOrder> GetWorkOrders_Opportunity (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrder>(Service, this.Id, "msdyn_workorder", "msdyn_opportunityid", Columns); }
/// <summary>
/// <para><b>WorkOrder (Opportunity)</b></para>
/// <para>Schema Name: msdyn_opportunity_msdyn_workorder</para>
/// </summary>
public List<WorkOrder> GetWorkOrders_Opportunity (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<WorkOrder>(Service, this.Id, "msdyn_workorder", "msdyn_opportunityid", Columns); }
/// <summary>
/// <para><b>OpportunityClose (Opportunity)</b></para>
/// <para>Schema Name: Opportunity_OpportunityClose</para>
/// </summary>
public List<OpportunityClose> GetOpportunityCloseActivities_Opportunity (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityClose>(Service, this.Id, "opportunityclose", "opportunityid", Columns); }
/// <summary>
/// <para><b>OpportunityClose (Opportunity)</b></para>
/// <para>Schema Name: Opportunity_OpportunityClose</para>
/// </summary>
public List<OpportunityClose> GetOpportunityCloseActivities_Opportunity (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityClose>(Service, this.Id, "opportunityclose", "opportunityid", Columns); }
/// <summary>
/// <para><b>OpportunityLine (Opportunity)</b></para>
/// <para>Schema Name: product_opportunities</para>
/// </summary>
public List<OpportunityLine> GetOpportunityLines_Opportunity (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLine>(Service, this.Id, "opportunityproduct", "opportunityid", Columns); }
/// <summary>
/// <para><b>OpportunityLine (Opportunity)</b></para>
/// <para>Schema Name: product_opportunities</para>
/// </summary>
public List<OpportunityLine> GetOpportunityLines_Opportunity (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunityLine>(Service, this.Id, "opportunityproduct", "opportunityid", Columns); }
/// <summary>
/// <para><b>OpportunitySalesProcess (Related Opportunity)</b></para>
/// <para>Schema Name: lk_opportunitysalesprocess_opportunityid</para>
/// </summary>
public List<OpportunitySalesProcess> GetOpportunitySalesProcess_RelatedOpportunity (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunitySalesProcess>(Service, this.Id, "opportunitysalesprocess", "opportunityid", Columns); }
/// <summary>
/// <para><b>OpportunitySalesProcess (Related Opportunity)</b></para>
/// <para>Schema Name: lk_opportunitysalesprocess_opportunityid</para>
/// </summary>
public List<OpportunitySalesProcess> GetOpportunitySalesProcess_RelatedOpportunity (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<OpportunitySalesProcess>(Service, this.Id, "opportunitysalesprocess", "opportunityid", Columns); }
/// <summary>
/// <para><b>PhoneCall (Regarding)</b></para>
/// <para>Schema Name: Opportunity_Phonecalls</para>
/// </summary>
public List<PhoneCall> GetPhoneCalls_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneCall>(Service, this.Id, "phonecall", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PhoneCall (Regarding)</b></para>
/// <para>Schema Name: Opportunity_Phonecalls</para>
/// </summary>
public List<PhoneCall> GetPhoneCalls_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneCall>(Service, this.Id, "phonecall", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Follow (Regarding)</b></para>
/// <para>Schema Name: opportunity_PostFollows</para>
/// </summary>
public List<Follow> GetFollows_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Follow>(Service, this.Id, "postfollow", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Follow (Regarding)</b></para>
/// <para>Schema Name: opportunity_PostFollows</para>
/// </summary>
public List<Follow> GetFollows_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Follow>(Service, this.Id, "postfollow", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PostRegarding (RegardingObjectId)</b></para>
/// <para>Schema Name: opportunity_PostRegardings</para>
/// </summary>
public List<PostRegarding> GetPostRegarding_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostRegarding>(Service, this.Id, "postregarding", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PostRegarding (RegardingObjectId)</b></para>
/// <para>Schema Name: opportunity_PostRegardings</para>
/// </summary>
public List<PostRegarding> GetPostRegarding_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostRegarding>(Service, this.Id, "postregarding", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PostRole (RegardingObjectId)</b></para>
/// <para>Schema Name: opportunity_PostRoles</para>
/// </summary>
public List<PostRole> GetPostRoles_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostRole>(Service, this.Id, "postrole", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PostRole (RegardingObjectId)</b></para>
/// <para>Schema Name: opportunity_PostRoles</para>
/// </summary>
public List<PostRole> GetPostRoles_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PostRole>(Service, this.Id, "postrole", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: opportunity_principalobjectattributeaccess</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: opportunity_principalobjectattributeaccess</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: Opportunity_ProcessSessions</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: Opportunity_ProcessSessions</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Quote (Opportunity)</b></para>
/// <para>Schema Name: opportunity_quotes</para>
/// </summary>
public List<Quote> GetQuotes_Opportunity (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Quote>(Service, this.Id, "quote", "opportunityid", Columns); }
/// <summary>
/// <para><b>Quote (Opportunity)</b></para>
/// <para>Schema Name: opportunity_quotes</para>
/// </summary>
public List<Quote> GetQuotes_Opportunity (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Quote>(Service, this.Id, "quote", "opportunityid", Columns); }
/// <summary>
/// <para><b>RecurringAppointment (Regarding)</b></para>
/// <para>Schema Name: Opportunity_RecurringAppointmentMasters</para>
/// </summary>
public List<RecurringAppointment> GetRecurringAppointments_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecurringAppointment>(Service, this.Id, "recurringappointmentmaster", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>RecurringAppointment (Regarding)</b></para>
/// <para>Schema Name: Opportunity_RecurringAppointmentMasters</para>
/// </summary>
public List<RecurringAppointment> GetRecurringAppointments_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecurringAppointment>(Service, this.Id, "recurringappointmentmaster", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Order (Opportunity)</b></para>
/// <para>Schema Name: opportunity_sales_orders</para>
/// </summary>
public List<Order> GetOrders_Opportunity (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Order>(Service, this.Id, "salesorder", "opportunityid", Columns); }
/// <summary>
/// <para><b>Order (Opportunity)</b></para>
/// <para>Schema Name: opportunity_sales_orders</para>
/// </summary>
public List<Order> GetOrders_Opportunity (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Order>(Service, this.Id, "salesorder", "opportunityid", Columns); }
/// <summary>
/// <para><b>ServiceActivity (Regarding)</b></para>
/// <para>Schema Name: Opportunity_ServiceAppointments</para>
/// </summary>
public List<ServiceActivity> GetServiceActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceActivity>(Service, this.Id, "serviceappointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ServiceActivity (Regarding)</b></para>
/// <para>Schema Name: Opportunity_ServiceAppointments</para>
/// </summary>
public List<ServiceActivity> GetServiceActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceActivity>(Service, this.Id, "serviceappointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SharepointDocument (Regarding)</b></para>
/// <para>Schema Name: Opportunity_SharepointDocument</para>
/// </summary>
public List<SharepointDocument> GetDocuments_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SharepointDocument>(Service, this.Id, "sharepointdocument", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SharepointDocument (Regarding)</b></para>
/// <para>Schema Name: Opportunity_SharepointDocument</para>
/// </summary>
public List<SharepointDocument> GetDocuments_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SharepointDocument>(Service, this.Id, "sharepointdocument", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>DocumentLocation (Regarding)</b></para>
/// <para>Schema Name: Opportunity_SharepointDocumentLocation</para>
/// </summary>
public List<DocumentLocation> GetDocumentLocations_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DocumentLocation>(Service, this.Id, "sharepointdocumentlocation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>DocumentLocation (Regarding)</b></para>
/// <para>Schema Name: Opportunity_SharepointDocumentLocation</para>
/// </summary>
public List<DocumentLocation> GetDocumentLocations_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DocumentLocation>(Service, this.Id, "sharepointdocumentlocation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SLAKPIInstance (Regarding)</b></para>
/// <para>Schema Name: slakpiinstance_opportunity</para>
/// </summary>
public List<SLAKPIInstance> GetSLAKPIInstances_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SLAKPIInstance>(Service, this.Id, "slakpiinstance", "regarding", Columns); }
/// <summary>
/// <para><b>SLAKPIInstance (Regarding)</b></para>
/// <para>Schema Name: slakpiinstance_opportunity</para>
/// </summary>
public List<SLAKPIInstance> GetSLAKPIInstances_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SLAKPIInstance>(Service, this.Id, "slakpiinstance", "regarding", Columns); }
/// <summary>
/// <para><b>SocialActivity (Regarding)</b></para>
/// <para>Schema Name: Opportunity_SocialActivities</para>
/// </summary>
public List<SocialActivity> GetSocialActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialActivity>(Service, this.Id, "socialactivity", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SocialActivity (Regarding)</b></para>
/// <para>Schema Name: Opportunity_SocialActivities</para>
/// </summary>
public List<SocialActivity> GetSocialActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialActivity>(Service, this.Id, "socialactivity", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: Opportunity_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: Opportunity_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Task (Regarding)</b></para>
/// <para>Schema Name: Opportunity_Tasks</para>
/// </summary>
public List<Task> GetTasks_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Task>(Service, this.Id, "task", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Task (Regarding)</b></para>
/// <para>Schema Name: Opportunity_Tasks</para>
/// </summary>
public List<Task> GetTasks_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Task>(Service, this.Id, "task", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Team (Regarding Object Id)</b></para>
/// <para>Schema Name: opportunity_Teams</para>
/// </summary>
public List<Team> GetTeams_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Team>(Service, this.Id, "team", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Team (Regarding Object Id)</b></para>
/// <para>Schema Name: opportunity_Teams</para>
/// </summary>
public List<Team> GetTeams_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Team>(Service, this.Id, "team", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_opportunity</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_opportunity</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        /// <summary>
/// <para>Related Entity: <b>Competitor</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: opportunitycompetitors_association</para>
/// </summary>
public List<Competitor> GetCompetitors (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<Competitor>(Service, this, "opportunity", "opportunityid", "competitor", "competitorid", "opportunitycompetitors", "opportunityid", "competitorid", Columns); }
public List<Competitor> GetCompetitors (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<Competitor>(Service, this, "opportunity", "opportunityid", "competitor", "competitorid", "opportunitycompetitors", "opportunityid", "competitorid", Columns); }
public void RelateCompetitors (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "opportunitycompetitors_association", Items); }
public void RelateCompetitors (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "opportunitycompetitors_association", Items); }
public void UnRelateCompetitors (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "opportunitycompetitors_association", Items); }
public void UnRelateCompetitors (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "opportunitycompetitors_association", Items); }


        

        public enum eBudget
{
	///<summary><para>No Committed Budget</para>
	///<para>Value = 0</para></summary>
	[Description("No Committed Budget")]
	NoCommittedBudget = 0, 
	///<summary><para>May Buy</para>
	///<para>Value = 1</para></summary>
	[Description("May Buy")]
	MayBuy = 1, 
	///<summary><para>Can Buy</para>
	///<para>Value = 2</para></summary>
	[Description("Can Buy")]
	CanBuy = 2, 
	///<summary><para>Will Buy</para>
	///<para>Value = 3</para></summary>
	[Description("Will Buy")]
	WillBuy = 3
}
public enum eInitialCommunication
{
	///<summary><para>Contacted</para>
	///<para>Value = 0</para></summary>
	[Description("Contacted")]
	Contacted = 0, 
	///<summary><para>Not Contacted</para>
	///<para>Value = 1</para></summary>
	[Description("Not Contacted")]
	NotContacted = 1
}
public enum eNeed
{
	///<summary><para>Must have</para>
	///<para>Value = 0</para></summary>
	[Description("Must have")]
	MustHave = 0, 
	///<summary><para>Should have</para>
	///<para>Value = 1</para></summary>
	[Description("Should have")]
	ShouldHave = 1, 
	///<summary><para>Good to have</para>
	///<para>Value = 2</para></summary>
	[Description("Good to have")]
	GoodToHave = 2, 
	///<summary><para>No need</para>
	///<para>Value = 3</para></summary>
	[Description("No need")]
	NoNeed = 3
}
public enum eType
{
	///<summary><para>Work based</para>
	///<para>Value = 192350001</para></summary>
	[Description("Work based")]
	WorkBased = 192350001, 
	///<summary><para>Item based</para>
	///<para>Value = 192350000</para></summary>
	[Description("Item based")]
	ItemBased = 192350000, 
	///<summary><para>Service-Maintenance Based</para>
	///<para>Value = 690970002</para></summary>
	[Description("Service-Maintenance Based")]
	Service_MaintenanceBased = 690970002
}
public enum ePricingError
{
	///<summary><para>None</para>
	///<para>Value = 0</para></summary>
	[Description("None")]
	None = 0, 
	///<summary><para>Detail Error</para>
	///<para>Value = 1</para></summary>
	[Description("Detail Error")]
	DetailError = 1, 
	///<summary><para>Missing Price Level</para>
	///<para>Value = 2</para></summary>
	[Description("Missing Price Level")]
	MissingPriceLevel = 2, 
	///<summary><para>Inactive Price Level</para>
	///<para>Value = 3</para></summary>
	[Description("Inactive Price Level")]
	InactivePriceLevel = 3, 
	///<summary><para>Missing Quantity</para>
	///<para>Value = 4</para></summary>
	[Description("Missing Quantity")]
	MissingQuantity = 4, 
	///<summary><para>Missing Unit Price</para>
	///<para>Value = 5</para></summary>
	[Description("Missing Unit Price")]
	MissingUnitPrice = 5, 
	///<summary><para>Missing Product</para>
	///<para>Value = 6</para></summary>
	[Description("Missing Product")]
	MissingProduct = 6, 
	///<summary><para>Invalid Product</para>
	///<para>Value = 7</para></summary>
	[Description("Invalid Product")]
	InvalidProduct = 7, 
	///<summary><para>Missing Pricing Code</para>
	///<para>Value = 8</para></summary>
	[Description("Missing Pricing Code")]
	MissingPricingCode = 8, 
	///<summary><para>Invalid Pricing Code</para>
	///<para>Value = 9</para></summary>
	[Description("Invalid Pricing Code")]
	InvalidPricingCode = 9, 
	///<summary><para>Missing UOM</para>
	///<para>Value = 10</para></summary>
	[Description("Missing UOM")]
	MissingUOM = 10, 
	///<summary><para>Product Not In Price Level</para>
	///<para>Value = 11</para></summary>
	[Description("Product Not In Price Level")]
	ProductNotInPriceLevel = 11, 
	///<summary><para>Missing Price Level Amount</para>
	///<para>Value = 12</para></summary>
	[Description("Missing Price Level Amount")]
	MissingPriceLevelAmount = 12, 
	///<summary><para>Missing Price Level Percentage</para>
	///<para>Value = 13</para></summary>
	[Description("Missing Price Level Percentage")]
	MissingPriceLevelPercentage = 13, 
	///<summary><para>Missing Price</para>
	///<para>Value = 14</para></summary>
	[Description("Missing Price")]
	MissingPrice = 14, 
	///<summary><para>Missing Current Cost</para>
	///<para>Value = 15</para></summary>
	[Description("Missing Current Cost")]
	MissingCurrentCost = 15, 
	///<summary><para>Missing Standard Cost</para>
	///<para>Value = 16</para></summary>
	[Description("Missing Standard Cost")]
	MissingStandardCost = 16, 
	///<summary><para>Invalid Price Level Amount</para>
	///<para>Value = 17</para></summary>
	[Description("Invalid Price Level Amount")]
	InvalidPriceLevelAmount = 17, 
	///<summary><para>Invalid Price Level Percentage</para>
	///<para>Value = 18</para></summary>
	[Description("Invalid Price Level Percentage")]
	InvalidPriceLevelPercentage = 18, 
	///<summary><para>Invalid Price</para>
	///<para>Value = 19</para></summary>
	[Description("Invalid Price")]
	InvalidPrice = 19, 
	///<summary><para>Invalid Current Cost</para>
	///<para>Value = 20</para></summary>
	[Description("Invalid Current Cost")]
	InvalidCurrentCost = 20, 
	///<summary><para>Invalid Standard Cost</para>
	///<para>Value = 21</para></summary>
	[Description("Invalid Standard Cost")]
	InvalidStandardCost = 21, 
	///<summary><para>Invalid Rounding Policy</para>
	///<para>Value = 22</para></summary>
	[Description("Invalid Rounding Policy")]
	InvalidRoundingPolicy = 22, 
	///<summary><para>Invalid Rounding Option</para>
	///<para>Value = 23</para></summary>
	[Description("Invalid Rounding Option")]
	InvalidRoundingOption = 23, 
	///<summary><para>Invalid Rounding Amount</para>
	///<para>Value = 24</para></summary>
	[Description("Invalid Rounding Amount")]
	InvalidRoundingAmount = 24, 
	///<summary><para>Price Calculation Error</para>
	///<para>Value = 25</para></summary>
	[Description("Price Calculation Error")]
	PriceCalculationError = 25, 
	///<summary><para>Invalid Discount Type</para>
	///<para>Value = 26</para></summary>
	[Description("Invalid Discount Type")]
	InvalidDiscountType = 26, 
	///<summary><para>Discount Type Invalid State</para>
	///<para>Value = 27</para></summary>
	[Description("Discount Type Invalid State")]
	DiscountTypeInvalidState = 27, 
	///<summary><para>Invalid Discount</para>
	///<para>Value = 28</para></summary>
	[Description("Invalid Discount")]
	InvalidDiscount = 28, 
	///<summary><para>Invalid Quantity</para>
	///<para>Value = 29</para></summary>
	[Description("Invalid Quantity")]
	InvalidQuantity = 29, 
	///<summary><para>Invalid Pricing Precision</para>
	///<para>Value = 30</para></summary>
	[Description("Invalid Pricing Precision")]
	InvalidPricingPrecision = 30, 
	///<summary><para>Missing Product Default UOM</para>
	///<para>Value = 31</para></summary>
	[Description("Missing Product Default UOM")]
	MissingProductDefaultUOM = 31, 
	///<summary><para>Missing Product UOM Schedule </para>
	///<para>Value = 32</para></summary>
	[Description("Missing Product UOM Schedule ")]
	MissingProductUOMSchedule = 32, 
	///<summary><para>Inactive Discount Type</para>
	///<para>Value = 33</para></summary>
	[Description("Inactive Discount Type")]
	InactiveDiscountType = 33, 
	///<summary><para>Invalid Price Level Currency</para>
	///<para>Value = 34</para></summary>
	[Description("Invalid Price Level Currency")]
	InvalidPriceLevelCurrency = 34, 
	///<summary><para>Price Attribute Out Of Range</para>
	///<para>Value = 35</para></summary>
	[Description("Price Attribute Out Of Range")]
	PriceAttributeOutOfRange = 35, 
	///<summary><para>Base Currency Attribute Overflow</para>
	///<para>Value = 36</para></summary>
	[Description("Base Currency Attribute Overflow")]
	BaseCurrencyAttributeOverflow = 36, 
	///<summary><para>Base Currency Attribute Underflow</para>
	///<para>Value = 37</para></summary>
	[Description("Base Currency Attribute Underflow")]
	BaseCurrencyAttributeUnderflow = 37
}
public enum ePriority
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eProcessCode
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum ePurchaseProcess
{
	///<summary><para>Individual</para>
	///<para>Value = 0</para></summary>
	[Description("Individual")]
	Individual = 0, 
	///<summary><para>Committee</para>
	///<para>Value = 1</para></summary>
	[Description("Committee")]
	Committee = 1, 
	///<summary><para>Unknown</para>
	///<para>Value = 2</para></summary>
	[Description("Unknown")]
	Unknown = 2
}
public enum ePurchaseTimeframe
{
	///<summary><para>Immediate</para>
	///<para>Value = 0</para></summary>
	[Description("Immediate")]
	Immediate = 0, 
	///<summary><para>This Quarter</para>
	///<para>Value = 1</para></summary>
	[Description("This Quarter")]
	ThisQuarter = 1, 
	///<summary><para>Next Quarter</para>
	///<para>Value = 2</para></summary>
	[Description("Next Quarter")]
	NextQuarter = 2, 
	///<summary><para>This Year</para>
	///<para>Value = 3</para></summary>
	[Description("This Year")]
	ThisYear = 3, 
	///<summary><para>Unknown</para>
	///<para>Value = 4</para></summary>
	[Description("Unknown")]
	Unknown = 4
}
public enum eRating
{
	///<summary><para>Hot</para>
	///<para>Value = 1</para></summary>
	[Description("Hot")]
	Hot = 1, 
	///<summary><para>Warm</para>
	///<para>Value = 2</para></summary>
	[Description("Warm")]
	Warm = 2, 
	///<summary><para>Cold</para>
	///<para>Value = 3</para></summary>
	[Description("Cold")]
	Cold = 3
}
public enum eOpportunitySalesStage
{
	///<summary><para>Qualify</para>
	///<para>Value = 0</para></summary>
	[Description("Qualify")]
	Qualify = 0, 
	///<summary><para>Develop</para>
	///<para>Value = 1</para></summary>
	[Description("Develop")]
	Develop = 1, 
	///<summary><para>Propose</para>
	///<para>Value = 2</para></summary>
	[Description("Propose")]
	Propose = 2, 
	///<summary><para>Close</para>
	///<para>Value = 3</para></summary>
	[Description("Close")]
	Close = 3
}
public enum eStatus
{
	///<summary><para>Open</para>
	///<para>Value = 0</para></summary>
	[Description("Open")]
	Open = 0, 
	///<summary><para>Won</para>
	///<para>Value = 1</para></summary>
	[Description("Won")]
	Won = 1, 
	///<summary><para>Lost</para>
	///<para>Value = 2</para></summary>
	[Description("Lost")]
	Lost = 2
}
public enum eStatusReason
{
	///<summary><para>In Progress</para>
	///<para>Value = 1</para></summary>
	[Description("In Progress")]
	InProgress_Open = 1, 
	///<summary><para>On Hold</para>
	///<para>Value = 2</para></summary>
	[Description("On Hold")]
	OnHold_Open = 2, 
	///<summary><para>Won</para>
	///<para>Value = 3</para></summary>
	[Description("Won")]
	Won_Won = 3, 
	///<summary><para>Canceled</para>
	///<para>Value = 4</para></summary>
	[Description("Canceled")]
	Canceled_Lost = 4, 
	///<summary><para>Out-Sold</para>
	///<para>Value = 5</para></summary>
	[Description("Out-Sold")]
	Out_Sold_Lost = 5
}
public enum eTimeline
{
	///<summary><para>Immediate</para>
	///<para>Value = 0</para></summary>
	[Description("Immediate")]
	Immediate = 0, 
	///<summary><para>This Quarter</para>
	///<para>Value = 1</para></summary>
	[Description("This Quarter")]
	ThisQuarter = 1, 
	///<summary><para>Next Quarter</para>
	///<para>Value = 2</para></summary>
	[Description("Next Quarter")]
	NextQuarter = 2, 
	///<summary><para>This Year</para>
	///<para>Value = 3</para></summary>
	[Description("This Year")]
	ThisYear = 3, 
	///<summary><para>Not known</para>
	///<para>Value = 4</para></summary>
	[Description("Not known")]
	NotKnown = 4
}
public void SetState(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>contactidname</para>
	/// <para>contactidname</para></summary>
	public const string ContactIdName = "contactidname";
	/// <summary><para>transactioncurrencyidname</para>
	/// <para>transactioncurrencyidname</para></summary>
	public const string TransactionCurrencyIdName = "transactioncurrencyidname";
	/// <summary><para>campaignidname</para>
	/// <para>campaignidname</para></summary>
	public const string CampaignIdName = "campaignidname";
	/// <summary><para>owneridyominame</para>
	/// <para>owneridyominame</para></summary>
	public const string OwnerIdYomiName = "owneridyominame";
	/// <summary><para>accountidyominame</para>
	/// <para>accountidyominame</para></summary>
	public const string AccountIdYomiName = "accountidyominame";
	/// <summary><para>msdyn_accountmanageridyominame</para>
	/// <para>msdyn_accountmanageridyominame</para></summary>
	public const string Msdyn_AccountManagerIdYomiName = "msdyn_accountmanageridyominame";
	/// <summary><para>parentaccountidname</para>
	/// <para>parentaccountidname</para></summary>
	public const string ParentAccountIdName = "parentaccountidname";
	/// <summary><para>originatingleadidname</para>
	/// <para>originatingleadidname</para></summary>
	public const string OriginatingLeadIdName = "originatingleadidname";
	/// <summary><para>contactidyominame</para>
	/// <para>contactidyominame</para></summary>
	public const string ContactIdYomiName = "contactidyominame";
	/// <summary><para>msdyn_workordertypename</para>
	/// <para>msdyn_workordertypename</para></summary>
	public const string Msdyn_WorkOrderTypeName = "msdyn_workordertypename";
	/// <summary><para>customeridyominame</para>
	/// <para>customeridyominame</para></summary>
	public const string CustomerIdYomiName = "customeridyominame";
	/// <summary><para>parentcontactidyominame</para>
	/// <para>parentcontactidyominame</para></summary>
	public const string ParentContactIdYomiName = "parentcontactidyominame";
	/// <summary><para>msdyn_accountmanageridname</para>
	/// <para>msdyn_accountmanageridname</para></summary>
	public const string Msdyn_AccountManagerIdName = "msdyn_accountmanageridname";
	/// <summary><para>accountidname</para>
	/// <para>accountidname</para></summary>
	public const string AccountIdName = "accountidname";
	/// <summary><para>originatingleadidyominame</para>
	/// <para>originatingleadidyominame</para></summary>
	public const string OriginatingLeadIdYomiName = "originatingleadidyominame";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>slainvokedidname</para>
	/// <para>slainvokedidname</para></summary>
	public const string SLAInvokedIdName = "slainvokedidname";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>owneridtype</para>
	/// <para>owneridtype</para></summary>
	public const string OwnerIdType = "owneridtype";
	/// <summary><para>msdyn_contractorganizationalunitidname</para>
	/// <para>msdyn_contractorganizationalunitidname</para></summary>
	public const string Msdyn_ContractOrganizationalUnitIdName = "msdyn_contractorganizationalunitidname";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>customeridname</para>
	/// <para>customeridname</para></summary>
	public const string CustomerIdName = "customeridname";
	/// <summary><para>pricelevelidname</para>
	/// <para>pricelevelidname</para></summary>
	public const string PriceLevelIdName = "pricelevelidname";
	/// <summary><para>parentcontactidname</para>
	/// <para>parentcontactidname</para></summary>
	public const string ParentContactIdName = "parentcontactidname";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>owneridname</para>
	/// <para>owneridname</para></summary>
	public const string OwnerIdName = "owneridname";
	/// <summary><para>slaname</para>
	/// <para>slaname</para></summary>
	public const string SLAName = "slaname";
	/// <summary><para>parentaccountidyominame</para>
	/// <para>parentaccountidyominame</para></summary>
	public const string ParentAccountIdYomiName = "parentaccountidyominame";
	/// <summary><para></para>
	/// <para>contactid</para></summary>
	public const string ContactId = "contactid";
	/// <summary><para></para>
	/// <para>accountid</para></summary>
	public const string AccountId = "accountid";
	/// <summary><para>Account</para>
	/// <para>parentaccountid</para></summary>
	public const string Account = "parentaccountid";
	/// <summary><para>Account Manager</para>
	/// <para>msdyn_accountmanagerid</para></summary>
	public const string AccountManager = "msdyn_accountmanagerid";
	/// <summary><para>Actual Close Date</para>
	/// <para>actualclosedate</para></summary>
	public const string ActualCloseDate = "actualclosedate";
	/// <summary><para>Actual Revenue</para>
	/// <para>actualvalue</para></summary>
	public const string ActualRevenue = "actualvalue";
	/// <summary><para>Actual Revenue (Base)</para>
	/// <para>actualvalue_base</para></summary>
	public const string ActualRevenue_Base = "actualvalue_base";
	/// <summary><para>Add to Forecast</para>
	/// <para>int_addtoforecast</para></summary>
	public const string AddToForecast = "int_addtoforecast";
	/// <summary><para>Add to Forecast (old)</para>
	/// <para>new_addtoforecast</para></summary>
	public const string AddToForecast_old = "new_addtoforecast";
	/// <summary><para>Budget</para>
	/// <para>budgetstatus</para></summary>
	public const string Budget = "budgetstatus";
	/// <summary><para>Budget Amount</para>
	/// <para>budgetamount</para></summary>
	public const string BudgetAmount = "budgetamount";
	/// <summary><para>Budget Amount (Base)</para>
	/// <para>budgetamount_base</para></summary>
	public const string BudgetAmount_Base = "budgetamount_base";
	/// <summary><para>Complete Internal Review</para>
	/// <para>completeinternalreview</para></summary>
	public const string CompleteInternalReview = "completeinternalreview";
	/// <summary><para>Confirm Interest</para>
	/// <para>confirminterest</para></summary>
	public const string ConfirmInterest = "confirminterest";
	/// <summary><para>Contact</para>
	/// <para>parentcontactid</para></summary>
	public const string Contact = "parentcontactid";
	/// <summary><para>Contracting Unit</para>
	/// <para>msdyn_contractorganizationalunitid</para></summary>
	public const string ContractingUnit = "msdyn_contractorganizationalunitid";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Currency</para>
	/// <para>transactioncurrencyid</para></summary>
	public const string Currency = "transactioncurrencyid";
	/// <summary><para>Current Situation</para>
	/// <para>currentsituation</para></summary>
	public const string CurrentSituation = "currentsituation";
	/// <summary><para>Customer Need</para>
	/// <para>customerneed</para></summary>
	public const string CustomerNeed = "customerneed";
	/// <summary><para>Customer Pain Points</para>
	/// <para>customerpainpoints</para></summary>
	public const string CustomerPainPoints = "customerpainpoints";
	/// <summary><para>Decide Go/No-Go</para>
	/// <para>pursuitdecision</para></summary>
	public const string DecideGo_No_Go = "pursuitdecision";
	/// <summary><para>Decision Maker?</para>
	/// <para>decisionmaker</para></summary>
	public const string DecisionMaker = "decisionmaker";
	/// <summary><para>Description</para>
	/// <para>description</para></summary>
	public const string Description = "description";
	/// <summary><para>Develop Proposal</para>
	/// <para>developproposal</para></summary>
	public const string DevelopProposal = "developproposal";
	/// <summary><para>Discount Approved?</para>
	/// <para>int_discountapproved</para></summary>
	public const string DiscountApproved = "int_discountapproved";
	/// <summary><para>Est. Close Date</para>
	/// <para>estimatedclosedate</para></summary>
	public const string Est_CloseDate = "estimatedclosedate";
	/// <summary><para>Est. Revenue</para>
	/// <para>estimatedvalue</para></summary>
	public const string Est_Revenue = "estimatedvalue";
	/// <summary><para>Est. Revenue (Base)</para>
	/// <para>estimatedvalue_base</para></summary>
	public const string Est_Revenue_Base = "estimatedvalue_base";
	/// <summary><para>Evaluate Fit</para>
	/// <para>evaluatefit</para></summary>
	public const string EvaluateFit = "evaluatefit";
	/// <summary><para>Exchange Rate</para>
	/// <para>exchangerate</para></summary>
	public const string ExchangeRate = "exchangerate";
	/// <summary><para>Feedback Resolved</para>
	/// <para>resolvefeedback</para></summary>
	public const string FeedbackResolved = "resolvefeedback";
	/// <summary><para>File Debrief</para>
	/// <para>filedebrief</para></summary>
	public const string FileDebrief = "filedebrief";
	/// <summary><para>Final Decision Date</para>
	/// <para>finaldecisiondate</para></summary>
	public const string FinalDecisionDate = "finaldecisiondate";
	/// <summary><para>Final Proposal Ready</para>
	/// <para>completefinalproposal</para></summary>
	public const string FinalProposalReady = "completefinalproposal";
	/// <summary><para>Forecast</para>
	/// <para>int_forecast</para></summary>
	public const string Forecast = "int_forecast";
	/// <summary><para>Forecast (Base)</para>
	/// <para>int_forecast_base</para></summary>
	public const string Forecast_Base = "int_forecast_base";
	/// <summary><para>Forecast (old)</para>
	/// <para>new_forecast</para></summary>
	public const string Forecast_old = "new_forecast";
	/// <summary><para>Forecast (old) (Base)</para>
	/// <para>new_forecast_base</para></summary>
	public const string Forecast_old_Base = "new_forecast_base";
	/// <summary><para>Freight Amount</para>
	/// <para>freightamount</para></summary>
	public const string FreightAmount = "freightamount";
	/// <summary><para>Freight Amount (Base)</para>
	/// <para>freightamount_base</para></summary>
	public const string FreightAmount_Base = "freightamount_base";
	/// <summary><para>Identify Competitors</para>
	/// <para>identifycompetitors</para></summary>
	public const string IdentifyCompetitors = "identifycompetitors";
	/// <summary><para>Identify Customer Contacts</para>
	/// <para>identifycustomercontacts</para></summary>
	public const string IdentifyCustomerContacts = "identifycustomercontacts";
	/// <summary><para>Identify Sales Team</para>
	/// <para>identifypursuitteam</para></summary>
	public const string IdentifySalesTeam = "identifypursuitteam";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string ImportSequenceNumber = "importsequencenumber";
	/// <summary><para>Initial Communication</para>
	/// <para>initialcommunication</para></summary>
	public const string InitialCommunication = "initialcommunication";
	/// <summary><para>Is Private</para>
	/// <para>isprivate</para></summary>
	public const string IsPrivate = "isprivate";
	/// <summary><para>Last On Hold Time</para>
	/// <para>lastonholdtime</para></summary>
	public const string LastOnHoldTime = "lastonholdtime";
	/// <summary><para>Last SLA applied</para>
	/// <para>slainvokedid</para></summary>
	public const string LastSLAApplied = "slainvokedid";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>Need</para>
	/// <para>need</para></summary>
	public const string Need = "need";
	/// <summary><para>On Hold Time (Minutes)</para>
	/// <para>onholdtime</para></summary>
	public const string OnHoldTime_Minutes = "onholdtime";
	/// <summary><para>Opportunity</para>
	/// <para>opportunityid</para></summary>
	public const string OpportunityId = "opportunityid";
	/// <summary><para>Opportunity Discount (%)</para>
	/// <para>discountpercentage</para></summary>
	public const string OpportunityDiscount = "discountpercentage";
	/// <summary><para>Opportunity Discount Amount</para>
	/// <para>discountamount</para></summary>
	public const string OpportunityDiscountAmount = "discountamount";
	/// <summary><para>Opportunity Discount Amount (Base)</para>
	/// <para>discountamount_base</para></summary>
	public const string OpportunityDiscountAmount_Base = "discountamount_base";
	/// <summary><para>Order Type</para>
	/// <para>msdyn_ordertype</para></summary>
	public const string OrderType = "msdyn_ordertype";
	/// <summary><para>Originating Lead</para>
	/// <para>originatingleadid</para></summary>
	public const string OriginatingLead = "originatingleadid";
	/// <summary><para>Owner</para>
	/// <para>ownerid</para></summary>
	public const string Owner = "ownerid";
	/// <summary><para>Owning Business Unit</para>
	/// <para>owningbusinessunit</para></summary>
	public const string OwningBusinessUnit = "owningbusinessunit";
	/// <summary><para>Owning Team</para>
	/// <para>owningteam</para></summary>
	public const string OwningTeam = "owningteam";
	/// <summary><para>Owning User</para>
	/// <para>owninguser</para></summary>
	public const string OwningUser = "owninguser";
	/// <summary><para>Participates in Workflow</para>
	/// <para>participatesinworkflow</para></summary>
	public const string ParticipatesInWorkflow = "participatesinworkflow";
	/// <summary><para>Pipeline Phase</para>
	/// <para>stepname</para></summary>
	public const string PipelinePhase = "stepname";
	/// <summary><para>Potential Customer</para>
	/// <para>customerid</para></summary>
	public const string PotentialCustomer = "customerid";
	/// <summary><para>Potential Customer Type</para>
	/// <para>customeridtype</para></summary>
	public const string PotentialCustomerType = "customeridtype";
	/// <summary><para>Present Final Proposal</para>
	/// <para>presentfinalproposal</para></summary>
	public const string PresentFinalProposal = "presentfinalproposal";
	/// <summary><para>Presented Proposal</para>
	/// <para>presentproposal</para></summary>
	public const string PresentedProposal = "presentproposal";
	/// <summary><para>Price List</para>
	/// <para>pricelevelid</para></summary>
	public const string PriceList = "pricelevelid";
	/// <summary><para>Pricing Error </para>
	/// <para>pricingerrorcode</para></summary>
	public const string PricingError = "pricingerrorcode";
	/// <summary><para>Priority</para>
	/// <para>prioritycode</para></summary>
	public const string Priority = "prioritycode";
	/// <summary><para>Probability</para>
	/// <para>closeprobability</para></summary>
	public const string Probability = "closeprobability";
	/// <summary><para>Process</para>
	/// <para>processid</para></summary>
	public const string Process = "processid";
	/// <summary><para>Process Code</para>
	/// <para>salesstagecode</para></summary>
	public const string ProcessCode = "salesstagecode";
	/// <summary><para>Process Stage</para>
	/// <para>stageid</para></summary>
	public const string ProcessStage = "stageid";
	/// <summary><para>Proposal Feedback Captured</para>
	/// <para>captureproposalfeedback</para></summary>
	public const string ProposalFeedbackCaptured = "captureproposalfeedback";
	/// <summary><para>Proposed Solution</para>
	/// <para>proposedsolution</para></summary>
	public const string ProposedSolution = "proposedsolution";
	/// <summary><para>Purchase Process</para>
	/// <para>purchaseprocess</para></summary>
	public const string PurchaseProcess = "purchaseprocess";
	/// <summary><para>Purchase Timeframe</para>
	/// <para>purchasetimeframe</para></summary>
	public const string PurchaseTimeframe = "purchasetimeframe";
	/// <summary><para>Qualification Comments</para>
	/// <para>qualificationcomments</para></summary>
	public const string QualificationComments = "qualificationcomments";
	/// <summary><para>Quote Comments</para>
	/// <para>quotecomments</para></summary>
	public const string QuoteComments = "quotecomments";
	/// <summary><para>Rating</para>
	/// <para>opportunityratingcode</para></summary>
	public const string Rating = "opportunityratingcode";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string RecordCreatedOn = "overriddencreatedon";
	/// <summary><para>Revenue</para>
	/// <para>isrevenuesystemcalculated</para></summary>
	public const string Revenue = "isrevenuesystemcalculated";
	/// <summary><para>Sales Stage</para>
	/// <para>salesstage</para></summary>
	public const string SalesStage = "salesstage";
	/// <summary><para>Schedule Proposal Meeting</para>
	/// <para>scheduleproposalmeeting</para></summary>
	public const string ScheduleProposalMeeting = "scheduleproposalmeeting";
	/// <summary><para>Scheduled Follow up (Prospect)</para>
	/// <para>schedulefollowup_prospect</para></summary>
	public const string ScheduledFollowUp_Prospect = "schedulefollowup_prospect";
	/// <summary><para>Scheduled Follow up (Qualify)</para>
	/// <para>schedulefollowup_qualify</para></summary>
	public const string ScheduledFollowUp_Qualify = "schedulefollowup_qualify";
	/// <summary><para>Send Thank You Note</para>
	/// <para>sendthankyounote</para></summary>
	public const string SendThankYouNote = "sendthankyounote";
	/// <summary><para>SLA</para>
	/// <para>slaid</para></summary>
	public const string SLA = "slaid";
	/// <summary><para>Source Campaign</para>
	/// <para>campaignid</para></summary>
	public const string SourceCampaign = "campaignid";
	/// <summary><para>Status</para>
	/// <para>statecode</para></summary>
	public const string Status = "statecode";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string StatusReason = "statuscode";
	/// <summary><para>Step</para>
	/// <para>stepid</para></summary>
	public const string Step = "stepid";
	/// <summary><para>Time Spent by me</para>
	/// <para>timespentbymeonemailandmeetings</para></summary>
	public const string TimeSpentByMe = "timespentbymeonemailandmeetings";
	/// <summary><para>Time Zone Rule Version Number</para>
	/// <para>timezoneruleversionnumber</para></summary>
	public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
	/// <summary><para>Timeline</para>
	/// <para>timeline</para></summary>
	public const string Timeline = "timeline";
	/// <summary><para>Topic</para>
	/// <para>name</para></summary>
	public const string Topic = "name";
	/// <summary><para>Total Amount</para>
	/// <para>totalamount</para></summary>
	public const string TotalAmount = "totalamount";
	/// <summary><para>Total Amount (Base)</para>
	/// <para>totalamount_base</para></summary>
	public const string TotalAmount_Base = "totalamount_base";
	/// <summary><para>Total Detail Amount</para>
	/// <para>totallineitemamount</para></summary>
	public const string TotalDetailAmount = "totallineitemamount";
	/// <summary><para>Total Detail Amount (Base)</para>
	/// <para>totallineitemamount_base</para></summary>
	public const string TotalDetailAmount_Base = "totallineitemamount_base";
	/// <summary><para>Total Discount Amount</para>
	/// <para>totaldiscountamount</para></summary>
	public const string TotalDiscountAmount = "totaldiscountamount";
	/// <summary><para>Total Discount Amount (Base)</para>
	/// <para>totaldiscountamount_base</para></summary>
	public const string TotalDiscountAmount_Base = "totaldiscountamount_base";
	/// <summary><para>Total Line Item Discount Amount</para>
	/// <para>totallineitemdiscountamount</para></summary>
	public const string TotalLineItemDiscountAmount = "totallineitemdiscountamount";
	/// <summary><para>Total Line Item Discount Amount (Base)</para>
	/// <para>totallineitemdiscountamount_base</para></summary>
	public const string TotalLineItemDiscountAmount_Base = "totallineitemdiscountamount_base";
	/// <summary><para>Total Pre-Freight Amount</para>
	/// <para>totalamountlessfreight</para></summary>
	public const string TotalPre_FreightAmount = "totalamountlessfreight";
	/// <summary><para>Total Pre-Freight Amount (Base)</para>
	/// <para>totalamountlessfreight_base</para></summary>
	public const string TotalPre_FreightAmount_Base = "totalamountlessfreight_base";
	/// <summary><para>Total Tax</para>
	/// <para>totaltax</para></summary>
	public const string TotalTax = "totaltax";
	/// <summary><para>Total Tax (Base)</para>
	/// <para>totaltax_base</para></summary>
	public const string TotalTax_Base = "totaltax_base";
	/// <summary><para>Traversed Path</para>
	/// <para>traversedpath</para></summary>
	public const string TraversedPath = "traversedpath";
	/// <summary><para>UTC Conversion Time Zone Code</para>
	/// <para>utcconversiontimezonecode</para></summary>
	public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
	/// <summary><para>Work Order Type</para>
	/// <para>msdyn_workordertype</para></summary>
	public const string WorkOrderType = "msdyn_workordertype";
}

    }
}

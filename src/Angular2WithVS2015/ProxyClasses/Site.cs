// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("site")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class Site : BaseProxyClass
    {
        public new const string LogicalName = "site";
        public const int ObjectTypeCode = 4009;
        public const string PrimaryIdAttribute = "siteid";
        public const string PrimaryNameAttribute = "name";
        
        static Site()
        {
            BaseProxyClass.RegisterProxyType(typeof(Site), "site");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public Site() : base(new Entity("site")) { }
        public Site(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<Site>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
/// <summary>
///Logical Name: address1_addresstypecode
/// </summary>
[AttributeLogicalNameAttribute("address1_addresstypecode")]
public eAddress1_AddressType? Address1_AddressType
{
	get
	{
		if (Address1_AddressType_OptionSetValue != null) { return (eAddress1_AddressType)Address1_AddressType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Address1_AddressType_OptionSetValue = new OptionSetValue((int)value); }
		else this.Address1_AddressType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: address1_addresstypecode</para>
///</summary>
[AttributeLogicalNameAttribute("address1_addresstypecode")]
public OptionSetValue Address1_AddressType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("address1_addresstypecode"); }
	set { this.SetPropertyValue<OptionSetValue>("address1_addresstypecode", value, "Address1_AddressType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Address1_AddressType_Text(IOrganizationService Service)
{
	return this.Address1_AddressType_OptionSetValue.GetOptionSetText(Service, this, "address1_addresstypecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Address1_AddressType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Address1_AddressType_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: address1_county</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_county")]
public string Address1_County
{
	get { return this.GetPropertyValue<string>("address1_county"); }
	set { this.SetPropertyValue("address1_county", value, 50, "Address1_County"); }
}
///<summary>
///<para>Logical Name: address1_addressid</para>
///</summary>
[AttributeLogicalNameAttribute("address1_addressid")]
public Guid Address1_ID
{
	get { return this.GetPropertyValue<Guid>("address1_addressid"); }
	set { this.SetPropertyValue<Guid>("address1_addressid", value, "Address1_ID"); }
}
///<summary>
///<para>Logical Name: address1_latitude</para>
///<para>Minimum Value: -90</para>
///<para>Maximum Value: 90</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("address1_latitude")]
public double? Address1_Latitude
{
	get { return this.GetPropertyValue<double?>("address1_latitude"); }
	set { this.SetPropertyValue("address1_latitude", (double?)value, (double)-90, (double)90, "Address1_Latitude"); }
}
///<summary>
///<para>Logical Name: address1_longitude</para>
///<para>Minimum Value: -180</para>
///<para>Maximum Value: 180</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("address1_longitude")]
public double? Address1_Longitude
{
	get { return this.GetPropertyValue<double?>("address1_longitude"); }
	set { this.SetPropertyValue("address1_longitude", (double?)value, (double)-180, (double)180, "Address1_Longitude"); }
}
///<summary>
///<para>Logical Name: address1_name</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_name")]
public string Address1_Name
{
	get { return this.GetPropertyValue<string>("address1_name"); }
	set { this.SetPropertyValue("address1_name", value, 100, "Address1_Name"); }
}
///<summary>
///<para>Logical Name: address1_postofficebox</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_postofficebox")]
public string Address1_PostOfficeBox
{
	get { return this.GetPropertyValue<string>("address1_postofficebox"); }
	set { this.SetPropertyValue("address1_postofficebox", value, 20, "Address1_PostOfficeBox"); }
}
/// <summary>
///Logical Name: address1_shippingmethodcode
/// </summary>
[AttributeLogicalNameAttribute("address1_shippingmethodcode")]
public eAddress1_ShippingMethod? Address1_ShippingMethod
{
	get
	{
		if (Address1_ShippingMethod_OptionSetValue != null) { return (eAddress1_ShippingMethod)Address1_ShippingMethod_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Address1_ShippingMethod_OptionSetValue = new OptionSetValue((int)value); }
		else this.Address1_ShippingMethod_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: address1_shippingmethodcode</para>
///</summary>
[AttributeLogicalNameAttribute("address1_shippingmethodcode")]
public OptionSetValue Address1_ShippingMethod_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("address1_shippingmethodcode"); }
	set { this.SetPropertyValue<OptionSetValue>("address1_shippingmethodcode", value, "Address1_ShippingMethod_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Address1_ShippingMethod_Text(IOrganizationService Service)
{
	return this.Address1_ShippingMethod_OptionSetValue.GetOptionSetText(Service, this, "address1_shippingmethodcode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Address1_ShippingMethod_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Address1_ShippingMethod_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: address1_telephone3</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_telephone3")]
public string Address1_Telephone3
{
	get { return this.GetPropertyValue<string>("address1_telephone3"); }
	set { this.SetPropertyValue("address1_telephone3", value, 50, "Address1_Telephone3"); }
}
///<summary>
///<para>Logical Name: address1_upszone</para>
///<para>Max Length: 4 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_upszone")]
public string Address1_UPSZone
{
	get { return this.GetPropertyValue<string>("address1_upszone"); }
	set { this.SetPropertyValue("address1_upszone", value, 4, "Address1_UPSZone"); }
}
///<summary>
///<para>Logical Name: address1_utcoffset</para>
///<para>Minimum Value: -1500</para>
///<para>Maximum Value: 1500</para>
///</summary>
[AttributeLogicalNameAttribute("address1_utcoffset")]
public int? Address1_UTCOffset
{
	get { return this.GetPropertyValue<int?>("address1_utcoffset"); }
	set { this.SetPropertyValue("address1_utcoffset", (int?)value, (int)-1500, (int)1500, "Address1_UTCOffset"); }
}
/// <summary>
///Logical Name: address2_addresstypecode
/// </summary>
[AttributeLogicalNameAttribute("address2_addresstypecode")]
public eAddress2_AddressType? Address2_AddressType
{
	get
	{
		if (Address2_AddressType_OptionSetValue != null) { return (eAddress2_AddressType)Address2_AddressType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Address2_AddressType_OptionSetValue = new OptionSetValue((int)value); }
		else this.Address2_AddressType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: address2_addresstypecode</para>
///</summary>
[AttributeLogicalNameAttribute("address2_addresstypecode")]
public OptionSetValue Address2_AddressType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("address2_addresstypecode"); }
	set { this.SetPropertyValue<OptionSetValue>("address2_addresstypecode", value, "Address2_AddressType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Address2_AddressType_Text(IOrganizationService Service)
{
	return this.Address2_AddressType_OptionSetValue.GetOptionSetText(Service, this, "address2_addresstypecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Address2_AddressType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Address2_AddressType_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: address2_city</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_city")]
public string Address2_City
{
	get { return this.GetPropertyValue<string>("address2_city"); }
	set { this.SetPropertyValue("address2_city", value, 80, "Address2_City"); }
}
///<summary>
///<para>Logical Name: address2_country</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_country")]
public string Address2_Country_Region
{
	get { return this.GetPropertyValue<string>("address2_country"); }
	set { this.SetPropertyValue("address2_country", value, 80, "Address2_Country_Region"); }
}
///<summary>
///<para>Logical Name: address2_county</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_county")]
public string Address2_County
{
	get { return this.GetPropertyValue<string>("address2_county"); }
	set { this.SetPropertyValue("address2_county", value, 50, "Address2_County"); }
}
///<summary>
///<para>Logical Name: address2_fax</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_fax")]
public string Address2_Fax
{
	get { return this.GetPropertyValue<string>("address2_fax"); }
	set { this.SetPropertyValue("address2_fax", value, 50, "Address2_Fax"); }
}
///<summary>
///<para>Logical Name: address2_addressid</para>
///</summary>
[AttributeLogicalNameAttribute("address2_addressid")]
public Guid Address2_ID
{
	get { return this.GetPropertyValue<Guid>("address2_addressid"); }
	set { this.SetPropertyValue<Guid>("address2_addressid", value, "Address2_ID"); }
}
///<summary>
///<para>Logical Name: address2_latitude</para>
///<para>Minimum Value: -90</para>
///<para>Maximum Value: 90</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("address2_latitude")]
public double? Address2_Latitude
{
	get { return this.GetPropertyValue<double?>("address2_latitude"); }
	set { this.SetPropertyValue("address2_latitude", (double?)value, (double)-90, (double)90, "Address2_Latitude"); }
}
///<summary>
///<para>Logical Name: address2_longitude</para>
///<para>Minimum Value: -180</para>
///<para>Maximum Value: 180</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("address2_longitude")]
public double? Address2_Longitude
{
	get { return this.GetPropertyValue<double?>("address2_longitude"); }
	set { this.SetPropertyValue("address2_longitude", (double?)value, (double)-180, (double)180, "Address2_Longitude"); }
}
///<summary>
///<para>Logical Name: address2_name</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_name")]
public string Address2_Name
{
	get { return this.GetPropertyValue<string>("address2_name"); }
	set { this.SetPropertyValue("address2_name", value, 100, "Address2_Name"); }
}
///<summary>
///<para>Logical Name: address2_postofficebox</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_postofficebox")]
public string Address2_PostOfficeBox
{
	get { return this.GetPropertyValue<string>("address2_postofficebox"); }
	set { this.SetPropertyValue("address2_postofficebox", value, 20, "Address2_PostOfficeBox"); }
}
/// <summary>
///Logical Name: address2_shippingmethodcode
/// </summary>
[AttributeLogicalNameAttribute("address2_shippingmethodcode")]
public eAddress2_ShippingMethod? Address2_ShippingMethod
{
	get
	{
		if (Address2_ShippingMethod_OptionSetValue != null) { return (eAddress2_ShippingMethod)Address2_ShippingMethod_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Address2_ShippingMethod_OptionSetValue = new OptionSetValue((int)value); }
		else this.Address2_ShippingMethod_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: address2_shippingmethodcode</para>
///</summary>
[AttributeLogicalNameAttribute("address2_shippingmethodcode")]
public OptionSetValue Address2_ShippingMethod_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("address2_shippingmethodcode"); }
	set { this.SetPropertyValue<OptionSetValue>("address2_shippingmethodcode", value, "Address2_ShippingMethod_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Address2_ShippingMethod_Text(IOrganizationService Service)
{
	return this.Address2_ShippingMethod_OptionSetValue.GetOptionSetText(Service, this, "address2_shippingmethodcode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Address2_ShippingMethod_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Address2_ShippingMethod_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: address2_stateorprovince</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_stateorprovince")]
public string Address2_State_Province
{
	get { return this.GetPropertyValue<string>("address2_stateorprovince"); }
	set { this.SetPropertyValue("address2_stateorprovince", value, 50, "Address2_State_Province"); }
}
///<summary>
///<para>Logical Name: address2_line1</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_line1")]
public string Address2_Street1
{
	get { return this.GetPropertyValue<string>("address2_line1"); }
	set { this.SetPropertyValue("address2_line1", value, 250, "Address2_Street1"); }
}
///<summary>
///<para>Logical Name: address2_line2</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_line2")]
public string Address2_Street2
{
	get { return this.GetPropertyValue<string>("address2_line2"); }
	set { this.SetPropertyValue("address2_line2", value, 250, "Address2_Street2"); }
}
///<summary>
///<para>Logical Name: address2_line3</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_line3")]
public string Address2_Street3
{
	get { return this.GetPropertyValue<string>("address2_line3"); }
	set { this.SetPropertyValue("address2_line3", value, 250, "Address2_Street3"); }
}
///<summary>
///<para>Logical Name: address2_telephone1</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_telephone1")]
public string Address2_Telephone1
{
	get { return this.GetPropertyValue<string>("address2_telephone1"); }
	set { this.SetPropertyValue("address2_telephone1", value, 50, "Address2_Telephone1"); }
}
///<summary>
///<para>Logical Name: address2_telephone2</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_telephone2")]
public string Address2_Telephone2
{
	get { return this.GetPropertyValue<string>("address2_telephone2"); }
	set { this.SetPropertyValue("address2_telephone2", value, 50, "Address2_Telephone2"); }
}
///<summary>
///<para>Logical Name: address2_telephone3</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_telephone3")]
public string Address2_Telephone3
{
	get { return this.GetPropertyValue<string>("address2_telephone3"); }
	set { this.SetPropertyValue("address2_telephone3", value, 50, "Address2_Telephone3"); }
}
///<summary>
///<para>Logical Name: address2_upszone</para>
///<para>Max Length: 4 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_upszone")]
public string Address2_UPSZone
{
	get { return this.GetPropertyValue<string>("address2_upszone"); }
	set { this.SetPropertyValue("address2_upszone", value, 4, "Address2_UPSZone"); }
}
///<summary>
///<para>Logical Name: address2_utcoffset</para>
///<para>Minimum Value: -1500</para>
///<para>Maximum Value: 1500</para>
///</summary>
[AttributeLogicalNameAttribute("address2_utcoffset")]
public int? Address2_UTCOffset
{
	get { return this.GetPropertyValue<int?>("address2_utcoffset"); }
	set { this.SetPropertyValue("address2_utcoffset", (int?)value, (int)-1500, (int)1500, "Address2_UTCOffset"); }
}
///<summary>
///<para>Logical Name: address2_postalcode</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_postalcode")]
public string Address2_ZIP_PostalCode
{
	get { return this.GetPropertyValue<string>("address2_postalcode"); }
	set { this.SetPropertyValue("address2_postalcode", value, 20, "Address2_ZIP_PostalCode"); }
}
///<summary>
///<para>Logical Name: address1_city</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_city")]
public string City
{
	get { return this.GetPropertyValue<string>("address1_city"); }
	set { this.SetPropertyValue("address1_city", value, 80, "City"); }
}
///<summary>
///<para>Logical Name: address1_country</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_country")]
public string Country_Region
{
	get { return this.GetPropertyValue<string>("address1_country"); }
	set { this.SetPropertyValue("address1_country", value, 80, "Country_Region"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: emailaddress</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("emailaddress")]
public string Email
{
	get { return this.GetPropertyValue<string>("emailaddress"); }
	set { this.SetPropertyValue("emailaddress", value, 100, "Email"); }
}
///<summary>
///<para>Logical Name: address1_fax</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_fax")]
public string Fax
{
	get { return this.GetPropertyValue<string>("address1_fax"); }
	set { this.SetPropertyValue("address1_fax", value, 50, "Fax"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? ImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "ImportSequenceNumber"); }
}
///<summary>
///<para>Logical Name: address1_telephone1</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_telephone1")]
public string MainPhone
{
	get { return this.GetPropertyValue<string>("address1_telephone1"); }
	set { this.SetPropertyValue("address1_telephone1", value, 50, "MainPhone"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: name</para>
///<para>Max Length: 160 characters</para>
///</summary>
[AttributeLogicalNameAttribute("name")]
public string Name
{
	get { return this.GetPropertyValue<string>("name"); }
	set { this.SetPropertyValue("name", value, 160, "Name"); }
}
///<summary>
///<para>Logical Name: organizationid</para>
///</summary>
[AttributeLogicalNameAttribute("organizationid")]
public Guid Organization
{
	get { return this.GetPropertyValue<Guid>("organizationid"); }
}
///<summary>
///<para>Logical Name: address1_telephone2</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_telephone2")]
public string OtherPhone
{
	get { return this.GetPropertyValue<string>("address1_telephone2"); }
	set { this.SetPropertyValue("address1_telephone2", value, 50, "OtherPhone"); }
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? RecordCreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "RecordCreatedOn"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: siteid</para>
///</summary>
[AttributeLogicalNameAttribute("siteid")]
public Guid SiteId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: address1_stateorprovince</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_stateorprovince")]
public string State_Province
{
	get { return this.GetPropertyValue<string>("address1_stateorprovince"); }
	set { this.SetPropertyValue("address1_stateorprovince", value, 50, "State_Province"); }
}
///<summary>
///<para>Logical Name: address1_line1</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_line1")]
public string Street1
{
	get { return this.GetPropertyValue<string>("address1_line1"); }
	set { this.SetPropertyValue("address1_line1", value, 250, "Street1"); }
}
///<summary>
///<para>Logical Name: address1_line2</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_line2")]
public string Street2
{
	get { return this.GetPropertyValue<string>("address1_line2"); }
	set { this.SetPropertyValue("address1_line2", value, 250, "Street2"); }
}
///<summary>
///<para>Logical Name: address1_line3</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_line3")]
public string Street3
{
	get { return this.GetPropertyValue<string>("address1_line3"); }
	set { this.SetPropertyValue("address1_line3", value, 250, "Street3"); }
}
///<summary>
///<para>Logical Name: timezonecode</para>
///<para>Minimum Value: -1500</para>
///<para>Maximum Value: 1500</para>
///</summary>
[AttributeLogicalNameAttribute("timezonecode")]
public int? TimeZone
{
	get { return this.GetPropertyValue<int?>("timezonecode"); }
	set { this.SetPropertyValue("timezonecode", (int?)value, (int)-1500, (int)1500, "TimeZone"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}
///<summary>
///<para>Logical Name: address1_postalcode</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_postalcode")]
public string ZIP_PostalCode
{
	get { return this.GetPropertyValue<string>("address1_postalcode"); }
	set { this.SetPropertyValue("address1_postalcode", value, 20, "ZIP_PostalCode"); }
}


        /// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: Site_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: Site_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: Site_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: Site_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Facility_Equipment (Site)</b></para>
/// <para>Schema Name: site_equipment</para>
/// </summary>
public List<Facility_Equipment> GetFacilities_Equipment_Site (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Facility_Equipment>(Service, this.Id, "equipment", "siteid", Columns); }
/// <summary>
/// <para><b>Facility_Equipment (Site)</b></para>
/// <para>Schema Name: site_equipment</para>
/// </summary>
public List<Facility_Equipment> GetFacilities_Equipment_Site (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Facility_Equipment>(Service, this.Id, "equipment", "siteid", Columns); }
/// <summary>
/// <para><b>InternalAddress (Parent)</b></para>
/// <para>Schema Name: site_internal_addresses</para>
/// </summary>
public List<InternalAddress> GetInternalAddresses_Parent (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InternalAddress>(Service, this.Id, "internaladdress", "parentid", Columns); }
/// <summary>
/// <para><b>InternalAddress (Parent)</b></para>
/// <para>Schema Name: site_internal_addresses</para>
/// </summary>
public List<InternalAddress> GetInternalAddresses_Parent (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<InternalAddress>(Service, this.Id, "internaladdress", "parentid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: Site_ProcessSessions</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: Site_ProcessSessions</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Resource (Site)</b></para>
/// <para>Schema Name: site_resources</para>
/// </summary>
public List<Resource> GetResources_Site (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Resource>(Service, this.Id, "resource", "siteid", Columns); }
/// <summary>
/// <para><b>Resource (Site)</b></para>
/// <para>Schema Name: site_resources</para>
/// </summary>
public List<Resource> GetResources_Site (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Resource>(Service, this.Id, "resource", "siteid", Columns); }
/// <summary>
/// <para><b>ServiceActivity (Site)</b></para>
/// <para>Schema Name: site_service_appointments</para>
/// </summary>
public List<ServiceActivity> GetServiceActivities_Site (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceActivity>(Service, this.Id, "serviceappointment", "siteid", Columns); }
/// <summary>
/// <para><b>ServiceActivity (Site)</b></para>
/// <para>Schema Name: site_service_appointments</para>
/// </summary>
public List<ServiceActivity> GetServiceActivities_Site (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceActivity>(Service, this.Id, "serviceappointment", "siteid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: Site_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: Site_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>User (Site)</b></para>
/// <para>Schema Name: site_system_users</para>
/// </summary>
public List<User> GetUsers_Site (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<User>(Service, this.Id, "systemuser", "siteid", Columns); }
/// <summary>
/// <para><b>User (Site)</b></para>
/// <para>Schema Name: site_system_users</para>
/// </summary>
public List<User> GetUsers_Site (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<User>(Service, this.Id, "systemuser", "siteid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_site</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: userentityinstancedata_site</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        

        

        public enum eAddress1_AddressType
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eAddress1_ShippingMethod
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eAddress2_AddressType
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eAddress2_ShippingMethod
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}


        public static class Properties
{
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>Address 1: Address Type</para>
	/// <para>address1_addresstypecode</para></summary>
	public const string Address1_AddressType = "address1_addresstypecode";
	/// <summary><para>Address 1: County</para>
	/// <para>address1_county</para></summary>
	public const string Address1_County = "address1_county";
	/// <summary><para>Address 1: ID</para>
	/// <para>address1_addressid</para></summary>
	public const string Address1_ID = "address1_addressid";
	/// <summary><para>Address 1: Latitude</para>
	/// <para>address1_latitude</para></summary>
	public const string Address1_Latitude = "address1_latitude";
	/// <summary><para>Address 1: Longitude</para>
	/// <para>address1_longitude</para></summary>
	public const string Address1_Longitude = "address1_longitude";
	/// <summary><para>Address 1: Name</para>
	/// <para>address1_name</para></summary>
	public const string Address1_Name = "address1_name";
	/// <summary><para>Address 1: Post Office Box</para>
	/// <para>address1_postofficebox</para></summary>
	public const string Address1_PostOfficeBox = "address1_postofficebox";
	/// <summary><para>Address 1: Shipping Method</para>
	/// <para>address1_shippingmethodcode</para></summary>
	public const string Address1_ShippingMethod = "address1_shippingmethodcode";
	/// <summary><para>Address 1: Telephone 3</para>
	/// <para>address1_telephone3</para></summary>
	public const string Address1_Telephone3 = "address1_telephone3";
	/// <summary><para>Address 1: UPS Zone</para>
	/// <para>address1_upszone</para></summary>
	public const string Address1_UPSZone = "address1_upszone";
	/// <summary><para>Address 1: UTC Offset</para>
	/// <para>address1_utcoffset</para></summary>
	public const string Address1_UTCOffset = "address1_utcoffset";
	/// <summary><para>Address 2: Address Type</para>
	/// <para>address2_addresstypecode</para></summary>
	public const string Address2_AddressType = "address2_addresstypecode";
	/// <summary><para>Address 2: City</para>
	/// <para>address2_city</para></summary>
	public const string Address2_City = "address2_city";
	/// <summary><para>Address 2: Country/Region</para>
	/// <para>address2_country</para></summary>
	public const string Address2_Country_Region = "address2_country";
	/// <summary><para>Address 2: County</para>
	/// <para>address2_county</para></summary>
	public const string Address2_County = "address2_county";
	/// <summary><para>Address 2: Fax</para>
	/// <para>address2_fax</para></summary>
	public const string Address2_Fax = "address2_fax";
	/// <summary><para>Address 2: ID</para>
	/// <para>address2_addressid</para></summary>
	public const string Address2_ID = "address2_addressid";
	/// <summary><para>Address 2: Latitude</para>
	/// <para>address2_latitude</para></summary>
	public const string Address2_Latitude = "address2_latitude";
	/// <summary><para>Address 2: Longitude</para>
	/// <para>address2_longitude</para></summary>
	public const string Address2_Longitude = "address2_longitude";
	/// <summary><para>Address 2: Name</para>
	/// <para>address2_name</para></summary>
	public const string Address2_Name = "address2_name";
	/// <summary><para>Address 2: Post Office Box</para>
	/// <para>address2_postofficebox</para></summary>
	public const string Address2_PostOfficeBox = "address2_postofficebox";
	/// <summary><para>Address 2: Shipping Method</para>
	/// <para>address2_shippingmethodcode</para></summary>
	public const string Address2_ShippingMethod = "address2_shippingmethodcode";
	/// <summary><para>Address 2: State/Province</para>
	/// <para>address2_stateorprovince</para></summary>
	public const string Address2_State_Province = "address2_stateorprovince";
	/// <summary><para>Address 2: Street 1</para>
	/// <para>address2_line1</para></summary>
	public const string Address2_Street1 = "address2_line1";
	/// <summary><para>Address 2: Street 2</para>
	/// <para>address2_line2</para></summary>
	public const string Address2_Street2 = "address2_line2";
	/// <summary><para>Address 2: Street 3</para>
	/// <para>address2_line3</para></summary>
	public const string Address2_Street3 = "address2_line3";
	/// <summary><para>Address 2: Telephone 1</para>
	/// <para>address2_telephone1</para></summary>
	public const string Address2_Telephone1 = "address2_telephone1";
	/// <summary><para>Address 2: Telephone 2</para>
	/// <para>address2_telephone2</para></summary>
	public const string Address2_Telephone2 = "address2_telephone2";
	/// <summary><para>Address 2: Telephone 3</para>
	/// <para>address2_telephone3</para></summary>
	public const string Address2_Telephone3 = "address2_telephone3";
	/// <summary><para>Address 2: UPS Zone</para>
	/// <para>address2_upszone</para></summary>
	public const string Address2_UPSZone = "address2_upszone";
	/// <summary><para>Address 2: UTC Offset</para>
	/// <para>address2_utcoffset</para></summary>
	public const string Address2_UTCOffset = "address2_utcoffset";
	/// <summary><para>Address 2: ZIP/Postal Code</para>
	/// <para>address2_postalcode</para></summary>
	public const string Address2_ZIP_PostalCode = "address2_postalcode";
	/// <summary><para>City</para>
	/// <para>address1_city</para></summary>
	public const string City = "address1_city";
	/// <summary><para>Country/Region</para>
	/// <para>address1_country</para></summary>
	public const string Country_Region = "address1_country";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Email</para>
	/// <para>emailaddress</para></summary>
	public const string Email = "emailaddress";
	/// <summary><para>Fax</para>
	/// <para>address1_fax</para></summary>
	public const string Fax = "address1_fax";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string ImportSequenceNumber = "importsequencenumber";
	/// <summary><para>Main Phone</para>
	/// <para>address1_telephone1</para></summary>
	public const string MainPhone = "address1_telephone1";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>Name</para>
	/// <para>name</para></summary>
	public const string Name = "name";
	/// <summary><para>Organization </para>
	/// <para>organizationid</para></summary>
	public const string Organization = "organizationid";
	/// <summary><para>Other Phone</para>
	/// <para>address1_telephone2</para></summary>
	public const string OtherPhone = "address1_telephone2";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string RecordCreatedOn = "overriddencreatedon";
	/// <summary><para>Site</para>
	/// <para>siteid</para></summary>
	public const string SiteId = "siteid";
	/// <summary><para>State/Province</para>
	/// <para>address1_stateorprovince</para></summary>
	public const string State_Province = "address1_stateorprovince";
	/// <summary><para>Street 1</para>
	/// <para>address1_line1</para></summary>
	public const string Street1 = "address1_line1";
	/// <summary><para>Street 2</para>
	/// <para>address1_line2</para></summary>
	public const string Street2 = "address1_line2";
	/// <summary><para>Street 3</para>
	/// <para>address1_line3</para></summary>
	public const string Street3 = "address1_line3";
	/// <summary><para>Time Zone</para>
	/// <para>timezonecode</para></summary>
	public const string TimeZone = "timezonecode";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
	/// <summary><para>ZIP/Postal Code</para>
	/// <para>address1_postalcode</para></summary>
	public const string ZIP_PostalCode = "address1_postalcode";
}

    }
}

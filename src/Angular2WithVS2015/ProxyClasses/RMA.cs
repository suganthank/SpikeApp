// <auto-generated />
using .ProxyClasses;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace ProxyClasses
{
    [EntityLogicalNameAttribute("msdyn_rma")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class RMA : BaseProxyClass
    {
        public new const string LogicalName = "msdyn_rma";
        public const int ObjectTypeCode = 10158;
        public const string PrimaryIdAttribute = "msdyn_rmaid";
        public const string PrimaryNameAttribute = "msdyn_name";
        
        static RMA()
        {
            BaseProxyClass.RegisterProxyType(typeof(RMA), "msdyn_rma");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public RMA() : base(new Entity("msdyn_rma")) { }
        public RMA(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<RMA>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: msdyn_serviceaccountname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_serviceaccountname")]
public string Msdyn_ServiceAccountName
{
	get { return this.GetPropertyValue<string>("msdyn_serviceaccountname"); }
}
///<summary>
///<para>Logical Name: msdyn_serviceaccountyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_serviceaccountyominame")]
public string Msdyn_ServiceAccountYomiName
{
	get { return this.GetPropertyValue<string>("msdyn_serviceaccountyominame"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: owneridtype</para>
///</summary>
[AttributeLogicalNameAttribute("owneridtype")]
public string OwnerIdType
{
	get { return this.GetPropertyValue<string>("owneridtype"); }
	set { this.SetPropertyValue<string>("owneridtype", value, "OwnerIdType"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_requestedbycontactyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_requestedbycontactyominame")]
public string Msdyn_RequestedByContactYomiName
{
	get { return this.GetPropertyValue<string>("msdyn_requestedbycontactyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_approvedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_approvedbyyominame")]
public string Msdyn_ApprovedByYomiName
{
	get { return this.GetPropertyValue<string>("msdyn_approvedbyyominame"); }
}
///<summary>
///<para>Logical Name: owneridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridname")]
public string OwnerIdName
{
	get { return this.GetPropertyValue<string>("owneridname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_billingaccountname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_billingaccountname")]
public string Msdyn_BillingAccountName
{
	get { return this.GetPropertyValue<string>("msdyn_billingaccountname"); }
}
///<summary>
///<para>Logical Name: msdyn_billingaccountyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_billingaccountyominame")]
public string Msdyn_BillingAccountYomiName
{
	get { return this.GetPropertyValue<string>("msdyn_billingaccountyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_approvedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_approvedbyname")]
public string Msdyn_ApprovedByName
{
	get { return this.GetPropertyValue<string>("msdyn_approvedbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_taxcodename</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_taxcodename")]
public string Msdyn_TaxCodeName
{
	get { return this.GetPropertyValue<string>("msdyn_taxcodename"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: owneridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridyominame")]
public string OwnerIdYomiName
{
	get { return this.GetPropertyValue<string>("owneridyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_shipvianame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_shipvianame")]
public string Msdyn_ShipViaName
{
	get { return this.GetPropertyValue<string>("msdyn_shipvianame"); }
}
///<summary>
///<para>Logical Name: msdyn_workordername</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workordername")]
public string Msdyn_WorkOrderName
{
	get { return this.GetPropertyValue<string>("msdyn_workordername"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_requestedbycontactname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_requestedbycontactname")]
public string Msdyn_RequestedByContactName
{
	get { return this.GetPropertyValue<string>("msdyn_requestedbycontactname"); }
}
///<summary>
///<para>Logical Name: msdyn_pricelistname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_pricelistname")]
public string Msdyn_PriceListName
{
	get { return this.GetPropertyValue<string>("msdyn_pricelistname"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyidname")]
public string TransactionCurrencyIdName
{
	get { return this.GetPropertyValue<string>("transactioncurrencyidname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_substatusname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_substatusname")]
public string Msdyn_SubStatusName
{
	get { return this.GetPropertyValue<string>("msdyn_substatusname"); }
}
///<summary>
///<para>Logical Name: msdyn_approvedby</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_approvedby")]
public EntityReference ApprovedBy
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_approvedby"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_approvedby", value, "ApprovedBy"); }
}
///<summary>
///<para>Logical Name: msdyn_billingaccount</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_billingaccount")]
public EntityReference BillingAccount
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_billingaccount"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_billingaccount", value, "BillingAccount"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyid</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyid")]
public EntityReference Currency
{
	get { return this.GetPropertyValue<EntityReference>("transactioncurrencyid"); }
	set { this.SetPropertyValue<EntityReference>("transactioncurrencyid", value, "Currency"); }
}
///<summary>
///<para>Logical Name: msdyn_daterequested</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_daterequested")]
public DateTime? DateRequested
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_daterequested"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_daterequested", value, "DateRequested"); }
}
///<summary>
///<para>Logical Name: msdyn_description</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_description")]
public string Description
{
	get { return this.GetPropertyValue<string>("msdyn_description"); }
	set { this.SetPropertyValue("msdyn_description", value, 100, "Description"); }
}
///<summary>
///<para>Logical Name: msdyn_eta</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_eta")]
public DateTime? ETA
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_eta"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_eta", value, "ETA"); }
}
///<summary>
///<para>Logical Name: exchangerate</para>
///<para>Minimum Value: 0.0000000001</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 10</para>
///</summary>
[AttributeLogicalNameAttribute("exchangerate")]
public decimal? ExchangeRate
{
	get { return this.GetPropertyValue<decimal?>("exchangerate"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? ImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "ImportSequenceNumber"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: ownerid</para>
///</summary>
[AttributeLogicalNameAttribute("ownerid")]
public EntityReference Owner
{
	get { return this.GetPropertyValue<EntityReference>("ownerid"); }
	set { this.SetPropertyValue<EntityReference>("ownerid", value, "Owner"); }
}
///<summary>
///<para>Logical Name: owningbusinessunit</para>
///</summary>
[AttributeLogicalNameAttribute("owningbusinessunit")]
public EntityReference OwningBusinessUnit
{
	get { return this.GetPropertyValue<EntityReference>("owningbusinessunit"); }
}
///<summary>
///<para>Logical Name: owningteam</para>
///</summary>
[AttributeLogicalNameAttribute("owningteam")]
public EntityReference OwningTeam
{
	get { return this.GetPropertyValue<EntityReference>("owningteam"); }
}
///<summary>
///<para>Logical Name: owninguser</para>
///</summary>
[AttributeLogicalNameAttribute("owninguser")]
public EntityReference OwningUser
{
	get { return this.GetPropertyValue<EntityReference>("owninguser"); }
}
///<summary>
///<para>Logical Name: msdyn_packagingtrackingno</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_packagingtrackingno")]
public string PackagingTrackingNo
{
	get { return this.GetPropertyValue<string>("msdyn_packagingtrackingno"); }
	set { this.SetPropertyValue("msdyn_packagingtrackingno", value, 100, "PackagingTrackingNo"); }
}
///<summary>
///<para>Logical Name: msdyn_pricelist</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_pricelist")]
public EntityReference PriceList
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_pricelist"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_pricelist", value, "PriceList"); }
}
/// <summary>
///Logical Name: msdyn_processingaction
/// </summary>
[AttributeLogicalNameAttribute("msdyn_processingaction")]
public eRMAProcessingAction? ProcessingAction
{
	get
	{
		if (ProcessingAction_OptionSetValue != null) { return (eRMAProcessingAction)ProcessingAction_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ProcessingAction_OptionSetValue = new OptionSetValue((int)value); }
		else this.ProcessingAction_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_processingaction</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_processingaction")]
public OptionSetValue ProcessingAction_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_processingaction"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_processingaction", value, "ProcessingAction_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ProcessingAction_Text(IOrganizationService Service)
{
	return this.ProcessingAction_OptionSetValue.GetOptionSetText(Service, this, "msdyn_processingaction");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ProcessingAction_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ProcessingAction_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? RecordCreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "RecordCreatedOn"); }
}
///<summary>
///<para>Logical Name: msdyn_referenceno</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_referenceno")]
public string ReferenceNo
{
	get { return this.GetPropertyValue<string>("msdyn_referenceno"); }
	set { this.SetPropertyValue("msdyn_referenceno", value, 100, "ReferenceNo"); }
}
///<summary>
///<para>Logical Name: msdyn_requestedbycontact</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_requestedbycontact")]
public EntityReference RequestedByContact
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_requestedbycontact"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_requestedbycontact", value, "RequestedByContact"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: msdyn_rmaid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_rmaid")]
public Guid RMAId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: msdyn_name</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_name")]
public string RMANumber
{
	get { return this.GetPropertyValue<string>("msdyn_name"); }
	set { this.SetPropertyValue("msdyn_name", value, 100, "RMANumber"); }
}
///<summary>
///<para>Logical Name: msdyn_serviceaccount</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_serviceaccount")]
public EntityReference ServiceAccount
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_serviceaccount"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_serviceaccount", value, "ServiceAccount"); }
}
///<summary>
///<para>Logical Name: msdyn_shipvia</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_shipvia")]
public EntityReference ShipVia
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_shipvia"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_shipvia", value, "ShipVia"); }
}
///<summary>
///<para>Logical Name: msdyn_shippingtrackingno</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_shippingtrackingno")]
public string ShippingTrackingNo
{
	get { return this.GetPropertyValue<string>("msdyn_shippingtrackingno"); }
	set { this.SetPropertyValue("msdyn_shippingtrackingno", value, 100, "ShippingTrackingNo"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eStatus? Status
{
	get
	{
		if (Status_OptionSetValue != null) { return (eStatus)Status_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Status_OptionSetValue = new OptionSetValue((int)value); }
		else this.Status_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue Status_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
	set { this.SetPropertyValue<OptionSetValue>("statecode", value, "Status_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Status_Text(IOrganizationService Service)
{
	return this.Status_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Status_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Status_OptionSetValue.Value);
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? StatusReason
{
	get
	{
		if (StatusReason_OptionSetValue != null) { return (eStatusReason)StatusReason_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StatusReason_OptionSetValue = new OptionSetValue((int)value); }
		else this.StatusReason_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue StatusReason_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "StatusReason_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string StatusReason_Text(IOrganizationService Service)
{
	return this.StatusReason_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string StatusReason_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.StatusReason_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_substatus</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_substatus")]
public EntityReference Sub_Status
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_substatus"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_substatus", value, "Sub_Status"); }
}
/// <summary>
///Logical Name: msdyn_systemstatus
/// </summary>
[AttributeLogicalNameAttribute("msdyn_systemstatus")]
public eRMASystemStatus? SystemStatus
{
	get
	{
		if (SystemStatus_OptionSetValue != null) { return (eRMASystemStatus)SystemStatus_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.SystemStatus_OptionSetValue = new OptionSetValue((int)value); }
		else this.SystemStatus_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_systemstatus</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_systemstatus")]
public OptionSetValue SystemStatus_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_systemstatus"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_systemstatus", value, "SystemStatus_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string SystemStatus_Text(IOrganizationService Service)
{
	return this.SystemStatus_OptionSetValue.GetOptionSetText(Service, this, "msdyn_systemstatus");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string SystemStatus_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.SystemStatus_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_taxcode</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_taxcode")]
public EntityReference TaxCode
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_taxcode"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_taxcode", value, "TaxCode"); }
}
///<summary>
///<para>Logical Name: msdyn_taxable</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_taxable")]
public bool? Taxable
{
	get { return this.GetPropertyValue<bool?>("msdyn_taxable"); }
	set { this.SetPropertyValue<bool?>("msdyn_taxable", value, "Taxable"); }
}
///<summary>
///<para>Logical Name: timezoneruleversionnumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("timezoneruleversionnumber")]
public int? TimeZoneRuleVersionNumber
{
	get { return this.GetPropertyValue<int?>("timezoneruleversionnumber"); }
	set { this.SetPropertyValue("timezoneruleversionnumber", (int?)value, (int)-1, (int)2147483647, "TimeZoneRuleVersionNumber"); }
}
///<summary>
///<para>Logical Name: msdyn_totalamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalAmount
{
	get
	{
		if (TotalAmountMoney != null) { return TotalAmountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.TotalAmountMoney = new Money(value.Value); }
		else this.TotalAmountMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_totalamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totalamount")]
public Money TotalAmountMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_totalamount"); }
	set { this.SetPropertyValue("msdyn_totalamount", (Money)value, (decimal)0, (decimal)1000000000, "TotalAmountMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_totalamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? TotalAmount_Base
{
	get
	{
		if (TotalAmount_BaseMoney != null) { return TotalAmount_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_totalamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totalamount_base")]
public Money TotalAmount_BaseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_totalamount_base"); }
}
///<summary>
///<para>Logical Name: utcconversiontimezonecode</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utcconversiontimezonecode")]
public int? UTCConversionTimeZoneCode
{
	get { return this.GetPropertyValue<int?>("utcconversiontimezonecode"); }
	set { this.SetPropertyValue("utcconversiontimezonecode", (int?)value, (int)-1, (int)2147483647, "UTCConversionTimeZoneCode"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}
///<summary>
///<para>Logical Name: msdyn_workorder</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workorder")]
public EntityReference WorkOrder
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_workorder"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_workorder", value, "WorkOrder"); }
}


        /// <summary>
/// <para><b>Activity (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_ActivityPointers</para>
/// </summary>
public List<Activity> GetActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Activity>(Service, this.Id, "activitypointer", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Activity (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_ActivityPointers</para>
/// </summary>
public List<Activity> GetActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Activity>(Service, this.Id, "activitypointer", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_Annotations</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Note (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_Annotations</para>
/// </summary>
public List<Note> GetNotes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Note>(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Appointment (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_Appointments</para>
/// </summary>
public List<Appointment> GetAppointments_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Appointment>(Service, this.Id, "appointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Appointment (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_Appointments</para>
/// </summary>
public List<Appointment> GetAppointments_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Appointment>(Service, this.Id, "appointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SystemJob (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_AsyncOperations</para>
/// </summary>
public List<SystemJob> GetSystemJobs_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SystemJob>(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: msdyn_rma_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BulkDeleteFailure (Name)</b></para>
/// <para>Schema Name: msdyn_rma_BulkDeleteFailures</para>
/// </summary>
public List<BulkDeleteFailure> GetBulkDeleteFailures_Name (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BulkDeleteFailure>(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: msdyn_rma_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected From)</b></para>
/// <para>Schema Name: msdyn_rma_connections1</para>
/// </summary>
public List<Connection> GetConnections_ConnectedFrom (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: msdyn_rma_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>Connection (Connected To)</b></para>
/// <para>Schema Name: msdyn_rma_connections2</para>
/// </summary>
public List<Connection> GetConnections_ConnectedTo (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Connection>(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: msdyn_rma_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Base Record ID)</b></para>
/// <para>Schema Name: msdyn_rma_DuplicateBaseRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_BaseRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: msdyn_rma_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>DuplicateRecord (Duplicate Record ID)</b></para>
/// <para>Schema Name: msdyn_rma_DuplicateMatchingRecord</para>
/// </summary>
public List<DuplicateRecord> GetDuplicateRecords_DuplicateRecordID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DuplicateRecord>(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>Email (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_Emails</para>
/// </summary>
public List<Email> GetEmailMessages_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Email (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_Emails</para>
/// </summary>
public List<Email> GetEmailMessages_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Email>(Service, this.Id, "email", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Fax (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_Faxes</para>
/// </summary>
public List<Fax> GetFaxes_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fax>(Service, this.Id, "fax", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Fax (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_Faxes</para>
/// </summary>
public List<Fax> GetFaxes_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Fax>(Service, this.Id, "fax", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Letter (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_Letters</para>
/// </summary>
public List<Letter> GetLetters_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Letter>(Service, this.Id, "letter", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Letter (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_Letters</para>
/// </summary>
public List<Letter> GetLetters_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Letter>(Service, this.Id, "letter", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: msdyn_rma_MailboxTrackingFolders</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>MailboxAutoTrackingFolder (Regarding Object Id)</b></para>
/// <para>Schema Name: msdyn_rma_MailboxTrackingFolders</para>
/// </summary>
public List<MailboxAutoTrackingFolder> GetMailboxAutoTrackingFolders_RegardingObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<MailboxAutoTrackingFolder>(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Approval (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_msdyn_approvals</para>
/// </summary>
public List<Approval> GetApprovals_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Approval>(Service, this.Id, "msdyn_approval", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Approval (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_msdyn_approvals</para>
/// </summary>
public List<Approval> GetApprovals_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Approval>(Service, this.Id, "msdyn_approval", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BookingAlert (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_msdyn_bookingalerts</para>
/// </summary>
public List<BookingAlert> GetBookingAlerts_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlert>(Service, this.Id, "msdyn_bookingalert", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>BookingAlert (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_msdyn_bookingalerts</para>
/// </summary>
public List<BookingAlert> GetBookingAlerts_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<BookingAlert>(Service, this.Id, "msdyn_bookingalert", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>RMAProduct (RMA)</b></para>
/// <para>Schema Name: msdyn_msdyn_rma_msdyn_rmaproduct_RMA</para>
/// </summary>
public List<RMAProduct> GetRMAProducts_RMA (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMAProduct>(Service, this.Id, "msdyn_rmaproduct", "msdyn_rma", Columns); }
/// <summary>
/// <para><b>RMAProduct (RMA)</b></para>
/// <para>Schema Name: msdyn_msdyn_rma_msdyn_rmaproduct_RMA</para>
/// </summary>
public List<RMAProduct> GetRMAProducts_RMA (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMAProduct>(Service, this.Id, "msdyn_rmaproduct", "msdyn_rma", Columns); }
/// <summary>
/// <para><b>RMAReceipt (RMA)</b></para>
/// <para>Schema Name: msdyn_msdyn_rma_msdyn_rmareceipt_RMA</para>
/// </summary>
public List<RMAReceipt> GetRMAReceipts_RMA (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMAReceipt>(Service, this.Id, "msdyn_rmareceipt", "msdyn_rma", Columns); }
/// <summary>
/// <para><b>RMAReceipt (RMA)</b></para>
/// <para>Schema Name: msdyn_msdyn_rma_msdyn_rmareceipt_RMA</para>
/// </summary>
public List<RMAReceipt> GetRMAReceipts_RMA (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMAReceipt>(Service, this.Id, "msdyn_rmareceipt", "msdyn_rma", Columns); }
/// <summary>
/// <para><b>RMAReceiptProduct (RMA)</b></para>
/// <para>Schema Name: msdyn_msdyn_rma_msdyn_rmareceiptproduct_RMA</para>
/// </summary>
public List<RMAReceiptProduct> GetRMAReceiptProducts_RMA (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMAReceiptProduct>(Service, this.Id, "msdyn_rmareceiptproduct", "msdyn_rma", Columns); }
/// <summary>
/// <para><b>RMAReceiptProduct (RMA)</b></para>
/// <para>Schema Name: msdyn_msdyn_rma_msdyn_rmareceiptproduct_RMA</para>
/// </summary>
public List<RMAReceiptProduct> GetRMAReceiptProducts_RMA (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RMAReceiptProduct>(Service, this.Id, "msdyn_rmareceiptproduct", "msdyn_rma", Columns); }
/// <summary>
/// <para>Originating RMA</para>
/// <para><b>RTV (Originating RMA)</b></para>
/// <para>Schema Name: msdyn_msdyn_rma_msdyn_rtv_OriginatingRMA</para>
/// </summary>
public List<RTV> GetOriginatingRMA_OriginatingRMA (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTV>(Service, this.Id, "msdyn_rtv", "msdyn_originatingrma", Columns); }
/// <summary>
/// <para>Originating RMA</para>
/// <para><b>RTV (Originating RMA)</b></para>
/// <para>Schema Name: msdyn_msdyn_rma_msdyn_rtv_OriginatingRMA</para>
/// </summary>
public List<RTV> GetOriginatingRMA_OriginatingRMA (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTV>(Service, this.Id, "msdyn_rtv", "msdyn_originatingrma", Columns); }
/// <summary>
/// <para><b>RTVProduct (RMA)</b></para>
/// <para>Schema Name: msdyn_msdyn_rma_msdyn_rtvproduct_RMA</para>
/// </summary>
public List<RTVProduct> GetRTVProducts_RMA (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTVProduct>(Service, this.Id, "msdyn_rtvproduct", "msdyn_rma", Columns); }
/// <summary>
/// <para><b>RTVProduct (RMA)</b></para>
/// <para>Schema Name: msdyn_msdyn_rma_msdyn_rtvproduct_RMA</para>
/// </summary>
public List<RTVProduct> GetRTVProducts_RMA (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RTVProduct>(Service, this.Id, "msdyn_rtvproduct", "msdyn_rma", Columns); }
/// <summary>
/// <para><b>PhoneCall (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_PhoneCalls</para>
/// </summary>
public List<PhoneCall> GetPhoneCalls_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneCall>(Service, this.Id, "phonecall", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>PhoneCall (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_PhoneCalls</para>
/// </summary>
public List<PhoneCall> GetPhoneCalls_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<PhoneCall>(Service, this.Id, "phonecall", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: msdyn_rma_PrincipalObjectAttributeAccesses</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>FieldSharing (Entity instance)</b></para>
/// <para>Schema Name: msdyn_rma_PrincipalObjectAttributeAccesses</para>
/// </summary>
public List<FieldSharing> GetFieldSharing_EntityInstance (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<FieldSharing>(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_ProcessSession</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ProcessSession (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_ProcessSession</para>
/// </summary>
public List<ProcessSession> GetProcessSessions_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ProcessSession>(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>RecurringAppointment (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_RecurringAppointmentMasters</para>
/// </summary>
public List<RecurringAppointment> GetRecurringAppointments_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecurringAppointment>(Service, this.Id, "recurringappointmentmaster", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>RecurringAppointment (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_RecurringAppointmentMasters</para>
/// </summary>
public List<RecurringAppointment> GetRecurringAppointments_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RecurringAppointment>(Service, this.Id, "recurringappointmentmaster", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ServiceActivity (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_ServiceAppointments</para>
/// </summary>
public List<ServiceActivity> GetServiceActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceActivity>(Service, this.Id, "serviceappointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>ServiceActivity (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_ServiceAppointments</para>
/// </summary>
public List<ServiceActivity> GetServiceActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<ServiceActivity>(Service, this.Id, "serviceappointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>DocumentLocation (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_SharePointDocumentLocations</para>
/// </summary>
public List<DocumentLocation> GetDocumentLocations_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DocumentLocation>(Service, this.Id, "sharepointdocumentlocation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>DocumentLocation (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_SharePointDocumentLocations</para>
/// </summary>
public List<DocumentLocation> GetDocumentLocations_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<DocumentLocation>(Service, this.Id, "sharepointdocumentlocation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SocialActivity (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_SocialActivities</para>
/// </summary>
public List<SocialActivity> GetSocialActivities_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialActivity>(Service, this.Id, "socialactivity", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SocialActivity (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_SocialActivities</para>
/// </summary>
public List<SocialActivity> GetSocialActivities_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SocialActivity>(Service, this.Id, "socialactivity", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: msdyn_rma_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>SyncError (Record)</b></para>
/// <para>Schema Name: msdyn_rma_SyncErrors</para>
/// </summary>
public List<SyncError> GetSyncErrors_Record (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<SyncError>(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Task (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_Tasks</para>
/// </summary>
public List<Task> GetTasks_Regarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Task>(Service, this.Id, "task", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Task (Regarding)</b></para>
/// <para>Schema Name: msdyn_rma_Tasks</para>
/// </summary>
public List<Task> GetTasks_Regarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Task>(Service, this.Id, "task", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: msdyn_rma_UserEntityInstanceDatas</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>UserEntityInstanceData (Object Id)</b></para>
/// <para>Schema Name: msdyn_rma_UserEntityInstanceDatas</para>
/// </summary>
public List<UserEntityInstanceData> GetUserEntityInstanceData_ObjectId (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<UserEntityInstanceData>(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        

        

        public enum eRMAProcessingAction
{
	///<summary><para>Create RTV</para>
	///<para>Value = 690970000</para></summary>
	[Description("Create RTV")]
	CreateRTV = 690970000, 
	///<summary><para>Return to Warehouse</para>
	///<para>Value = 690970001</para></summary>
	[Description("Return to Warehouse")]
	ReturnToWarehouse = 690970001, 
	///<summary><para>Change Asset Ownership</para>
	///<para>Value = 690970002</para></summary>
	[Description("Change Asset Ownership")]
	ChangeAssetOwnership = 690970002
}
public enum eStatus
{
	///<summary><para>Active</para>
	///<para>Value = 0</para></summary>
	[Description("Active")]
	Active = 0, 
	///<summary><para>Inactive</para>
	///<para>Value = 1</para></summary>
	[Description("Inactive")]
	Inactive = 1
}
public enum eStatusReason
{
	///<summary><para>Active</para>
	///<para>Value = 1</para></summary>
	[Description("Active")]
	Active_Active = 1, 
	///<summary><para>Inactive</para>
	///<para>Value = 2</para></summary>
	[Description("Inactive")]
	Inactive_Inactive = 2
}
public enum eRMASystemStatus
{
	///<summary><para>Pending</para>
	///<para>Value = 690970000</para></summary>
	[Description("Pending")]
	Pending = 690970000, 
	///<summary><para>Canceled</para>
	///<para>Value = 690970001</para></summary>
	[Description("Canceled")]
	Canceled = 690970001, 
	///<summary><para>Products Received</para>
	///<para>Value = 690970002</para></summary>
	[Description("Products Received")]
	ProductsReceived = 690970002
}
public void SetState(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>msdyn_serviceaccountname</para>
	/// <para>msdyn_serviceaccountname</para></summary>
	public const string Msdyn_ServiceAccountName = "msdyn_serviceaccountname";
	/// <summary><para>msdyn_serviceaccountyominame</para>
	/// <para>msdyn_serviceaccountyominame</para></summary>
	public const string Msdyn_ServiceAccountYomiName = "msdyn_serviceaccountyominame";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>owneridtype</para>
	/// <para>owneridtype</para></summary>
	public const string OwnerIdType = "owneridtype";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>msdyn_requestedbycontactyominame</para>
	/// <para>msdyn_requestedbycontactyominame</para></summary>
	public const string Msdyn_RequestedByContactYomiName = "msdyn_requestedbycontactyominame";
	/// <summary><para>msdyn_approvedbyyominame</para>
	/// <para>msdyn_approvedbyyominame</para></summary>
	public const string Msdyn_ApprovedByYomiName = "msdyn_approvedbyyominame";
	/// <summary><para>owneridname</para>
	/// <para>owneridname</para></summary>
	public const string OwnerIdName = "owneridname";
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>msdyn_billingaccountname</para>
	/// <para>msdyn_billingaccountname</para></summary>
	public const string Msdyn_BillingAccountName = "msdyn_billingaccountname";
	/// <summary><para>msdyn_billingaccountyominame</para>
	/// <para>msdyn_billingaccountyominame</para></summary>
	public const string Msdyn_BillingAccountYomiName = "msdyn_billingaccountyominame";
	/// <summary><para>msdyn_approvedbyname</para>
	/// <para>msdyn_approvedbyname</para></summary>
	public const string Msdyn_ApprovedByName = "msdyn_approvedbyname";
	/// <summary><para>msdyn_taxcodename</para>
	/// <para>msdyn_taxcodename</para></summary>
	public const string Msdyn_TaxCodeName = "msdyn_taxcodename";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>owneridyominame</para>
	/// <para>owneridyominame</para></summary>
	public const string OwnerIdYomiName = "owneridyominame";
	/// <summary><para>msdyn_shipvianame</para>
	/// <para>msdyn_shipvianame</para></summary>
	public const string Msdyn_ShipViaName = "msdyn_shipvianame";
	/// <summary><para>msdyn_workordername</para>
	/// <para>msdyn_workordername</para></summary>
	public const string Msdyn_WorkOrderName = "msdyn_workordername";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>msdyn_requestedbycontactname</para>
	/// <para>msdyn_requestedbycontactname</para></summary>
	public const string Msdyn_RequestedByContactName = "msdyn_requestedbycontactname";
	/// <summary><para>msdyn_pricelistname</para>
	/// <para>msdyn_pricelistname</para></summary>
	public const string Msdyn_PriceListName = "msdyn_pricelistname";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>transactioncurrencyidname</para>
	/// <para>transactioncurrencyidname</para></summary>
	public const string TransactionCurrencyIdName = "transactioncurrencyidname";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>msdyn_substatusname</para>
	/// <para>msdyn_substatusname</para></summary>
	public const string Msdyn_SubStatusName = "msdyn_substatusname";
	/// <summary><para>Approved By</para>
	/// <para>msdyn_approvedby</para></summary>
	public const string ApprovedBy = "msdyn_approvedby";
	/// <summary><para>Billing Account</para>
	/// <para>msdyn_billingaccount</para></summary>
	public const string BillingAccount = "msdyn_billingaccount";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Currency</para>
	/// <para>transactioncurrencyid</para></summary>
	public const string Currency = "transactioncurrencyid";
	/// <summary><para>Date Requested</para>
	/// <para>msdyn_daterequested</para></summary>
	public const string DateRequested = "msdyn_daterequested";
	/// <summary><para>Description</para>
	/// <para>msdyn_description</para></summary>
	public const string Description = "msdyn_description";
	/// <summary><para>ETA</para>
	/// <para>msdyn_eta</para></summary>
	public const string ETA = "msdyn_eta";
	/// <summary><para>Exchange Rate</para>
	/// <para>exchangerate</para></summary>
	public const string ExchangeRate = "exchangerate";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string ImportSequenceNumber = "importsequencenumber";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>Owner</para>
	/// <para>ownerid</para></summary>
	public const string Owner = "ownerid";
	/// <summary><para>Owning Business Unit</para>
	/// <para>owningbusinessunit</para></summary>
	public const string OwningBusinessUnit = "owningbusinessunit";
	/// <summary><para>Owning Team</para>
	/// <para>owningteam</para></summary>
	public const string OwningTeam = "owningteam";
	/// <summary><para>Owning User</para>
	/// <para>owninguser</para></summary>
	public const string OwningUser = "owninguser";
	/// <summary><para>Packaging Tracking No</para>
	/// <para>msdyn_packagingtrackingno</para></summary>
	public const string PackagingTrackingNo = "msdyn_packagingtrackingno";
	/// <summary><para>Price List</para>
	/// <para>msdyn_pricelist</para></summary>
	public const string PriceList = "msdyn_pricelist";
	/// <summary><para>Processing Action</para>
	/// <para>msdyn_processingaction</para></summary>
	public const string ProcessingAction = "msdyn_processingaction";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string RecordCreatedOn = "overriddencreatedon";
	/// <summary><para>Reference No</para>
	/// <para>msdyn_referenceno</para></summary>
	public const string ReferenceNo = "msdyn_referenceno";
	/// <summary><para>Requested By Contact</para>
	/// <para>msdyn_requestedbycontact</para></summary>
	public const string RequestedByContact = "msdyn_requestedbycontact";
	/// <summary><para>RMA</para>
	/// <para>msdyn_rmaid</para></summary>
	public const string RMAId = "msdyn_rmaid";
	/// <summary><para>RMA Number</para>
	/// <para>msdyn_name</para></summary>
	public const string RMANumber = "msdyn_name";
	/// <summary><para>Service Account</para>
	/// <para>msdyn_serviceaccount</para></summary>
	public const string ServiceAccount = "msdyn_serviceaccount";
	/// <summary><para>Ship Via</para>
	/// <para>msdyn_shipvia</para></summary>
	public const string ShipVia = "msdyn_shipvia";
	/// <summary><para>Shipping Tracking No</para>
	/// <para>msdyn_shippingtrackingno</para></summary>
	public const string ShippingTrackingNo = "msdyn_shippingtrackingno";
	/// <summary><para>Status</para>
	/// <para>statecode</para></summary>
	public const string Status = "statecode";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string StatusReason = "statuscode";
	/// <summary><para>Sub-Status</para>
	/// <para>msdyn_substatus</para></summary>
	public const string Sub_Status = "msdyn_substatus";
	/// <summary><para>System Status</para>
	/// <para>msdyn_systemstatus</para></summary>
	public const string SystemStatus = "msdyn_systemstatus";
	/// <summary><para>Tax Code</para>
	/// <para>msdyn_taxcode</para></summary>
	public const string TaxCode = "msdyn_taxcode";
	/// <summary><para>Taxable</para>
	/// <para>msdyn_taxable</para></summary>
	public const string Taxable = "msdyn_taxable";
	/// <summary><para>Time Zone Rule Version Number</para>
	/// <para>timezoneruleversionnumber</para></summary>
	public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
	/// <summary><para>Total Amount</para>
	/// <para>msdyn_totalamount</para></summary>
	public const string TotalAmount = "msdyn_totalamount";
	/// <summary><para>Total Amount (Base)</para>
	/// <para>msdyn_totalamount_base</para></summary>
	public const string TotalAmount_Base = "msdyn_totalamount_base";
	/// <summary><para>UTC Conversion Time Zone Code</para>
	/// <para>utcconversiontimezonecode</para></summary>
	public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
	/// <summary><para>Work Order</para>
	/// <para>msdyn_workorder</para></summary>
	public const string WorkOrder = "msdyn_workorder";
}

    }
}
